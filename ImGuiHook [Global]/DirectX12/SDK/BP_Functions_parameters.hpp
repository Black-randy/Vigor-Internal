#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Functions

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "LoadingScreen_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "InputIconWindows_structs.hpp"
#include "FlameUI_structs.hpp"
#include "EBooster_structs.hpp"
#include "S_TemporarySellingPointTimeInfo_structs.hpp"
#include "E_WeaponCheckResult_structs.hpp"
#include "S_ActorTagVisibilityMapWrap_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_AchievementsTableRow_structs.hpp"


namespace SDK::Params
{

// Function BP_Functions.BP_Functions_C.FormatTimeFloatMMSS
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Functions_C_FormatTimeFloatMMSS final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TimeText;                                          // 0x0010(0x0018)(Parm, OutParm)
	class FString                                 SecondFillingZero;                                 // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MinuteFillingZero;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
};
static_assert(alignof(BP_Functions_C_FormatTimeFloatMMSS) == 0x000008, "Wrong alignment on BP_Functions_C_FormatTimeFloatMMSS");
static_assert(sizeof(BP_Functions_C_FormatTimeFloatMMSS) == 0x0000E8, "Wrong size on BP_Functions_C_FormatTimeFloatMMSS");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, Time) == 0x000000, "Member 'BP_Functions_C_FormatTimeFloatMMSS::Time' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, __WorldContext) == 0x000008, "Member 'BP_Functions_C_FormatTimeFloatMMSS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, TimeText) == 0x000010, "Member 'BP_Functions_C_FormatTimeFloatMMSS::TimeText' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, SecondFillingZero) == 0x000028, "Member 'BP_Functions_C_FormatTimeFloatMMSS::SecondFillingZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, MinuteFillingZero) == 0x000038, "Member 'BP_Functions_C_FormatTimeFloatMMSS::MinuteFillingZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_MakeTimespan_ReturnValue) == 0x000050, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_GetSeconds_ReturnValue) == 0x000058, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_GetMinutes_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Len_ReturnValue) == 0x000074, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSS, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'BP_Functions_C_FormatTimeFloatMMSS::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.TimeTickToZero
// 0x0028 (0x0028 - 0x0000)
struct BP_Functions_C_TimeTickToZero final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandler;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewTime;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpTime;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_TimeTickToZero) == 0x000008, "Wrong alignment on BP_Functions_C_TimeTickToZero");
static_assert(sizeof(BP_Functions_C_TimeTickToZero) == 0x000028, "Wrong size on BP_Functions_C_TimeTickToZero");
static_assert(offsetof(BP_Functions_C_TimeTickToZero, Time) == 0x000000, "Member 'BP_Functions_C_TimeTickToZero::Time' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_TimeTickToZero, TimerHandler) == 0x000008, "Member 'BP_Functions_C_TimeTickToZero::TimerHandler' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_TimeTickToZero, __WorldContext) == 0x000010, "Member 'BP_Functions_C_TimeTickToZero::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_TimeTickToZero, NewTime) == 0x000018, "Member 'BP_Functions_C_TimeTickToZero::NewTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_TimeTickToZero, TmpTime) == 0x00001C, "Member 'BP_Functions_C_TimeTickToZero::TmpTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_TimeTickToZero, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_Functions_C_TimeTickToZero::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_TimeTickToZero, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_Functions_C_TimeTickToZero::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.RandomLocationFromInterval
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_RandomLocationFromInterval final
{
public:
	struct FVector                                MinLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MaxLocation;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RandomLocation;                                    // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_RandomLocationFromInterval) == 0x000008, "Wrong alignment on BP_Functions_C_RandomLocationFromInterval");
static_assert(sizeof(BP_Functions_C_RandomLocationFromInterval) == 0x000060, "Wrong size on BP_Functions_C_RandomLocationFromInterval");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, MinLocation) == 0x000000, "Member 'BP_Functions_C_RandomLocationFromInterval::MinLocation' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, MaxLocation) == 0x00000C, "Member 'BP_Functions_C_RandomLocationFromInterval::MaxLocation' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, __WorldContext) == 0x000018, "Member 'BP_Functions_C_RandomLocationFromInterval::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, RandomLocation) == 0x000020, "Member 'BP_Functions_C_RandomLocationFromInterval::RandomLocation' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_BreakVector_X_1) == 0x000038, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_BreakVector_Y_1) == 0x00003C, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_RandomFloatInRange_ReturnValue) == 0x000044, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00004C, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RandomLocationFromInterval, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_Functions_C_RandomLocationFromInterval::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.FormatTimeFloatMMSSmm
// 0x01A8 (0x01A8 - 0x0000)
struct BP_Functions_C_FormatTimeFloatMMSSmm final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 SecondFillingZero;                                 // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MinuteFillingZero;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0190(0x0018)()
};
static_assert(alignof(BP_Functions_C_FormatTimeFloatMMSSmm) == 0x000008, "Wrong alignment on BP_Functions_C_FormatTimeFloatMMSSmm");
static_assert(sizeof(BP_Functions_C_FormatTimeFloatMMSSmm) == 0x0001A8, "Wrong size on BP_Functions_C_FormatTimeFloatMMSSmm");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, Time) == 0x000000, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::Time' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, __WorldContext) == 0x000008, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, ReturnValue) == 0x000010, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, SecondFillingZero) == 0x000028, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::SecondFillingZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, MinuteFillingZero) == 0x000038, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::MinuteFillingZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, Temp_bool_Variable) == 0x000048, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_FFloor_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000054, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_FFloor_ReturnValue_1) == 0x000058, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_FFloor_ReturnValue_2) == 0x000078, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000A8, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_FFloor_ReturnValue_3) == 0x0000D0, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, Temp_bool_Variable_1) == 0x0000D4, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000D5, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0000D8, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0000E8, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, Temp_bool_Variable_2) == 0x0000F8, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000100, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, K2Node_Select_Default) == 0x000110, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, K2Node_Select_Default_1) == 0x000120, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000130, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, K2Node_Select_Default_2) == 0x000140, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000150, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000160, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000170, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000180, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimeFloatMMSSmm, CallFunc_Conv_StringToText_ReturnValue) == 0x000190, "Member 'BP_Functions_C_FormatTimeFloatMMSSmm::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetAmmo
// 0x0048 (0x0048 - 0x0000)
struct BP_Functions_C_GetAmmo final
{
public:
	class AWeapon*                                Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_GetCurrentAmmoCount_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(BP_Functions_C_GetAmmo) == 0x000008, "Wrong alignment on BP_Functions_C_GetAmmo");
static_assert(sizeof(BP_Functions_C_GetAmmo) == 0x000048, "Wrong size on BP_Functions_C_GetAmmo");
static_assert(offsetof(BP_Functions_C_GetAmmo, Weapon) == 0x000000, "Member 'BP_Functions_C_GetAmmo::Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAmmo, __WorldContext) == 0x000008, "Member 'BP_Functions_C_GetAmmo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAmmo, ReturnValue) == 0x000010, "Member 'BP_Functions_C_GetAmmo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAmmo, CallFunc_GetCurrentAmmoCount_ReturnValue) == 0x000028, "Member 'BP_Functions_C_GetAmmo::CallFunc_GetCurrentAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAmmo, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_Functions_C_GetAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAmmo, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'BP_Functions_C_GetAmmo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetPlayerVisibility
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_SetPlayerVisibility final
{
public:
	bool                                          NoSee;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        HumanCharacter;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SetPlayerVisibility) == 0x000008, "Wrong alignment on BP_Functions_C_SetPlayerVisibility");
static_assert(sizeof(BP_Functions_C_SetPlayerVisibility) == 0x000060, "Wrong size on BP_Functions_C_SetPlayerVisibility");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, NoSee) == 0x000000, "Member 'BP_Functions_C_SetPlayerVisibility::NoSee' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, HumanCharacter) == 0x000008, "Member 'BP_Functions_C_SetPlayerVisibility::HumanCharacter' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, __WorldContext) == 0x000010, "Member 'BP_Functions_C_SetPlayerVisibility::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, CallFunc_GetChildrenComponents_Children) == 0x000018, "Member 'BP_Functions_C_SetPlayerVisibility::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, K2Node_DynamicCast_AsWeapon) == 0x000028, "Member 'BP_Functions_C_SetPlayerVisibility::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Functions_C_SetPlayerVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_Functions_C_SetPlayerVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_Functions_C_SetPlayerVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_Functions_C_SetPlayerVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_Functions_C_SetPlayerVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_SetPlayerVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, K2Node_DynamicCast_AsMesh_Component) == 0x000050, "Member 'BP_Functions_C_SetPlayerVisibility::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Functions_C_SetPlayerVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_Functions_C_SetPlayerVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetPlayerVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_SetPlayerVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.IsChildOf
// 0x0050 (0x0050 - 0x0000)
struct BP_Functions_C_IsChildOf final
{
public:
	class UWidget*                                Child;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Parent;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxIterations;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChildOf_0;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                TmpChild;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Iteration;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_IsChildOf) == 0x000008, "Wrong alignment on BP_Functions_C_IsChildOf");
static_assert(sizeof(BP_Functions_C_IsChildOf) == 0x000050, "Wrong size on BP_Functions_C_IsChildOf");
static_assert(offsetof(BP_Functions_C_IsChildOf, Child) == 0x000000, "Member 'BP_Functions_C_IsChildOf::Child' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, Parent) == 0x000008, "Member 'BP_Functions_C_IsChildOf::Parent' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, MaxIterations) == 0x000010, "Member 'BP_Functions_C_IsChildOf::MaxIterations' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, __WorldContext) == 0x000018, "Member 'BP_Functions_C_IsChildOf::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, IsChildOf_0) == 0x000020, "Member 'BP_Functions_C_IsChildOf::IsChildOf_0' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, TmpChild) == 0x000028, "Member 'BP_Functions_C_IsChildOf::TmpChild' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, Iteration) == 0x000030, "Member 'BP_Functions_C_IsChildOf::Iteration' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, Temp_int_Variable) == 0x000034, "Member 'BP_Functions_C_IsChildOf::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_Functions_C_IsChildOf::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_Functions_C_IsChildOf::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, CallFunc_GetParent_ReturnValue) == 0x000040, "Member 'BP_Functions_C_IsChildOf::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_Functions_C_IsChildOf::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_IsChildOf::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsChildOf, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004D, "Member 'BP_Functions_C_IsChildOf::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.FindGridCoordinatesVector
// 0x0110 (0x0110 - 0x0000)
struct BP_Functions_C_FindGridCoordinatesVector final
{
public:
	struct FVector                                ZeroPilar;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MaxPilar;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_precision;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_Precision;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ObjectWorldLocation;                               // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_offset;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_offset;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Coordinates;                                       // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 X;                                                 // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Y;                                                 // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Alphabet;                                          // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	float                                         CallFunc_GetRationForGridCoordinatesVector_XZero;  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRationForGridCoordinatesVector_YZero;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRationForGridCoordinatesVector_XRatio; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRationForGridCoordinatesVector_YRation; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder_1;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_1;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_FindGridCoordinatesVector) == 0x000008, "Wrong alignment on BP_Functions_C_FindGridCoordinatesVector");
static_assert(sizeof(BP_Functions_C_FindGridCoordinatesVector) == 0x000110, "Wrong size on BP_Functions_C_FindGridCoordinatesVector");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, ZeroPilar) == 0x000000, "Member 'BP_Functions_C_FindGridCoordinatesVector::ZeroPilar' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, MaxPilar) == 0x00000C, "Member 'BP_Functions_C_FindGridCoordinatesVector::MaxPilar' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, X_precision) == 0x000018, "Member 'BP_Functions_C_FindGridCoordinatesVector::X_precision' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, Y_Precision) == 0x00001C, "Member 'BP_Functions_C_FindGridCoordinatesVector::Y_Precision' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, ObjectWorldLocation) == 0x000020, "Member 'BP_Functions_C_FindGridCoordinatesVector::ObjectWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, X_offset) == 0x00002C, "Member 'BP_Functions_C_FindGridCoordinatesVector::X_offset' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, Y_offset) == 0x000030, "Member 'BP_Functions_C_FindGridCoordinatesVector::Y_offset' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, __WorldContext) == 0x000038, "Member 'BP_Functions_C_FindGridCoordinatesVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, Coordinates) == 0x000040, "Member 'BP_Functions_C_FindGridCoordinatesVector::Coordinates' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, X) == 0x000050, "Member 'BP_Functions_C_FindGridCoordinatesVector::X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, Y) == 0x000060, "Member 'BP_Functions_C_FindGridCoordinatesVector::Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, Alphabet) == 0x000070, "Member 'BP_Functions_C_FindGridCoordinatesVector::Alphabet' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_Functions_C_FindGridCoordinatesVector::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_GetRationForGridCoordinatesVector_XZero) == 0x000090, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_GetRationForGridCoordinatesVector_XZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_GetRationForGridCoordinatesVector_YZero) == 0x000094, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_GetRationForGridCoordinatesVector_YZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_GetRationForGridCoordinatesVector_XRatio) == 0x000098, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_GetRationForGridCoordinatesVector_XRatio' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_GetRationForGridCoordinatesVector_YRation) == 0x00009C, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_GetRationForGridCoordinatesVector_YRation' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_FMod_Remainder) == 0x0000B4, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_FMod_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_FMod_Remainder_1) == 0x0000C4, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_FMod_Remainder_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_FMod_ReturnValue_1) == 0x0000C8, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_FMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D0, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Conv_IntToString_ReturnValue) == 0x0000D8, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindGridCoordinatesVector, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000100, "Member 'BP_Functions_C_FindGridCoordinatesVector::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetRationForGridCoordinatesVector
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_GetRationForGridCoordinatesVector final
{
public:
	struct FVector                                Min;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Max;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_precision;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_Precision;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XZero;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YZero;                                             // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XRatio;                                            // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YRation;                                           // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_GetRationForGridCoordinatesVector) == 0x000008, "Wrong alignment on BP_Functions_C_GetRationForGridCoordinatesVector");
static_assert(sizeof(BP_Functions_C_GetRationForGridCoordinatesVector) == 0x000070, "Wrong size on BP_Functions_C_GetRationForGridCoordinatesVector");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, Min) == 0x000000, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::Min' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, Max) == 0x00000C, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::Max' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, X_precision) == 0x000018, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::X_precision' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, Y_Precision) == 0x00001C, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::Y_Precision' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, __WorldContext) == 0x000020, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, XZero) == 0x000028, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::XZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, YZero) == 0x00002C, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::YZero' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, XRatio) == 0x000030, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::XRatio' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, YRation) == 0x000034, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::YRation' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000044, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_BreakVector_X_1) == 0x00004C, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_BreakVector_Z_1) == 0x000054, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Abs_ReturnValue_1) == 0x000064, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetRationForGridCoordinatesVector, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'BP_Functions_C_GetRationForGridCoordinatesVector::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Item Names from Item Array
// 0x0080 (0x0080 - 0x0000)
struct BP_Functions_C_Get_Item_Names_from_Item_Array final
{
public:
	TArray<class UClass*>                         Items_List;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           Names_List;                                        // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FText>                           Names_Array;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0060(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Item_Names_from_Item_Array) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Item_Names_from_Item_Array");
static_assert(sizeof(BP_Functions_C_Get_Item_Names_from_Item_Array) == 0x000080, "Wrong size on BP_Functions_C_Get_Item_Names_from_Item_Array");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, Items_List) == 0x000000, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::Items_List' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, Names_List) == 0x000018, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::Names_List' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, Names_Array) == 0x000028, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::Names_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, CallFunc_GetItemName_ReturnValue) == 0x000060, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Names_from_Item_Array, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_Functions_C_Get_Item_Names_from_Item_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Normalized Map Coordinates
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Functions_C_Get_Normalized_Map_Coordinates final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Normalized_Coordinates;                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameState_C>      K2Node_DynamicCast_AsBPI_Game_State;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_GetMapCorners_bValid;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_BPI_GetMapCorners_MapCorners;             // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_Normalized_Map_Coordinates) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Normalized_Map_Coordinates");
static_assert(sizeof(BP_Functions_C_Get_Normalized_Map_Coordinates) == 0x0000E8, "Wrong size on BP_Functions_C_Get_Normalized_Map_Coordinates");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, Actor) == 0x000000, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::Actor' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, Normalized_Coordinates) == 0x000010, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::Normalized_Coordinates' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, K2Node_DynamicCast_AsBPI_Game_State) == 0x000030, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::K2Node_DynamicCast_AsBPI_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BPI_GetMapCorners_bValid) == 0x000050, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BPI_GetMapCorners_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BPI_GetMapCorners_MapCorners) == 0x000058, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BPI_GetMapCorners_MapCorners' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00008C, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_X_1) == 0x000098, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_Y_1) == 0x00009C, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_X_2) == 0x0000A4, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_Y_2) == 0x0000A8, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BreakVector_Z_2) == 0x0000AC, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_FMax_ReturnValue) == 0x0000B4, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_FMin_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_FMax_ReturnValue_1) == 0x0000BC, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_NormalizeToRange_ReturnValue) == 0x0000C0, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_FMin_ReturnValue_1) == 0x0000C4, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_IsValid_ReturnValue_2) == 0x0000C8, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0000CC, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_MakeVector2D_ReturnValue) == 0x0000D4, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Normalized_Map_Coordinates, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_Functions_C_Get_Normalized_Map_Coordinates::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.MaxBoundsToDrawDistance
// 0x0160 (0x0160 - 0x0000)
struct BP_Functions_C_MaxBoundsToDrawDistance final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawDistanceMultiplier;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle_Debug;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawDistance;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UDestructibleComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleComponent*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue_1;            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_MaxBoundsToDrawDistance) == 0x000008, "Wrong alignment on BP_Functions_C_MaxBoundsToDrawDistance");
static_assert(sizeof(BP_Functions_C_MaxBoundsToDrawDistance) == 0x000160, "Wrong size on BP_Functions_C_MaxBoundsToDrawDistance");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, Actor) == 0x000000, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::Actor' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, DrawDistanceMultiplier) == 0x000008, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::DrawDistanceMultiplier' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, Toggle_Debug) == 0x00000C, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::Toggle_Debug' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, __WorldContext) == 0x000010, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, DrawDistance) == 0x000018, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::DrawDistance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000030, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_ComponentHasTag_ReturnValue) == 0x000054, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_GetActorBounds_Origin) == 0x000058, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_GetActorBounds_BoxExtent) == 0x000064, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_BreakVector_X) == 0x000070, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_BreakVector_Y) == 0x000074, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_BreakVector_Z) == 0x000078, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_FMax_ReturnValue) == 0x00007C, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_FMax_ReturnValue_1) == 0x000084, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Conv_FloatToString_ReturnValue) == 0x000090, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C8, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, Temp_int_Array_Index_Variable_1) == 0x0000D8, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_ComponentHasTag_ReturnValue_1) == 0x0000EC, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_ComponentHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000F0, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000100, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000110, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000120, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000130, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000140, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, Temp_int_Loop_Counter_Variable_1) == 0x000150, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Less_IntInt_ReturnValue_1) == 0x000154, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_MaxBoundsToDrawDistance, CallFunc_Add_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_Functions_C_MaxBoundsToDrawDistance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Find Most 2D-Distant Object from Object
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object final
{
public:
	class AActor*                                 Origin;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Candidates;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Most_Distant_Object;                               // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Distance;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Distance;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Max_Distance_Object;                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object) == 0x000008, "Wrong alignment on BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object");
static_assert(sizeof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object) == 0x0000B0, "Wrong size on BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Origin) == 0x000000, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Origin' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Candidates) == 0x000008, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Candidates' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, __WorldContext) == 0x000018, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Most_Distant_Object) == 0x000020, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Most_Distant_Object' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Distance) == 0x000028, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Current_Distance) == 0x00002C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Current_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Max_Distance) == 0x000030, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Max_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Max_Distance_Object) == 0x000038, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Max_Distance_Object' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_Sqrt_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_X) == 0x00005C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Z) == 0x000064, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_X_1) == 0x000088, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Y_1) == 0x00008C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_MakeVector2D_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_VSize2DSquared_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Object::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Convert from World to Game
// 0x0068 (0x0068 - 0x0000)
struct BP_Functions_C_Convert_from_World_to_Game final
{
public:
	struct FRotator                               Rotator_in_World_Space;                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator_in_Game_Space;                             // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameState_C>      K2Node_DynamicCast_AsBPI_Game_State;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetCompassRotator_bValid;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_BPI_GetCompassRotator_CompasRotator;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Convert_from_World_to_Game) == 0x000008, "Wrong alignment on BP_Functions_C_Convert_from_World_to_Game");
static_assert(sizeof(BP_Functions_C_Convert_from_World_to_Game) == 0x000068, "Wrong size on BP_Functions_C_Convert_from_World_to_Game");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, Rotator_in_World_Space) == 0x000000, "Member 'BP_Functions_C_Convert_from_World_to_Game::Rotator_in_World_Space' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Convert_from_World_to_Game::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, Rotator_in_Game_Space) == 0x000018, "Member 'BP_Functions_C_Convert_from_World_to_Game::Rotator_in_Game_Space' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BP_Functions_C_Convert_from_World_to_Game::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, K2Node_DynamicCast_AsBPI_Game_State) == 0x000030, "Member 'BP_Functions_C_Convert_from_World_to_Game::K2Node_DynamicCast_AsBPI_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Functions_C_Convert_from_World_to_Game::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, CallFunc_BPI_GetCompassRotator_bValid) == 0x000041, "Member 'BP_Functions_C_Convert_from_World_to_Game::CallFunc_BPI_GetCompassRotator_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, CallFunc_BPI_GetCompassRotator_CompasRotator) == 0x000044, "Member 'BP_Functions_C_Convert_from_World_to_Game::CallFunc_BPI_GetCompassRotator_CompasRotator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, CallFunc_NegateRotator_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Convert_from_World_to_Game::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_World_to_Game, CallFunc_ComposeRotators_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_Convert_from_World_to_Game::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Convert from Game to World
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_Convert_from_Game_to_World final
{
public:
	struct FRotator                               Rotator_in_Game_Space;                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator_in_World_Space;                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameState_C>      K2Node_DynamicCast_AsBPI_Game_State;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetCompassRotator_bValid;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_BPI_GetCompassRotator_CompasRotator;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Convert_from_Game_to_World) == 0x000008, "Wrong alignment on BP_Functions_C_Convert_from_Game_to_World");
static_assert(sizeof(BP_Functions_C_Convert_from_Game_to_World) == 0x000060, "Wrong size on BP_Functions_C_Convert_from_Game_to_World");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, Rotator_in_Game_Space) == 0x000000, "Member 'BP_Functions_C_Convert_from_Game_to_World::Rotator_in_Game_Space' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Convert_from_Game_to_World::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, Rotator_in_World_Space) == 0x000018, "Member 'BP_Functions_C_Convert_from_Game_to_World::Rotator_in_World_Space' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BP_Functions_C_Convert_from_Game_to_World::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, K2Node_DynamicCast_AsBPI_Game_State) == 0x000030, "Member 'BP_Functions_C_Convert_from_Game_to_World::K2Node_DynamicCast_AsBPI_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Functions_C_Convert_from_Game_to_World::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, CallFunc_BPI_GetCompassRotator_bValid) == 0x000041, "Member 'BP_Functions_C_Convert_from_Game_to_World::CallFunc_BPI_GetCompassRotator_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, CallFunc_BPI_GetCompassRotator_CompasRotator) == 0x000044, "Member 'BP_Functions_C_Convert_from_Game_to_World::CallFunc_BPI_GetCompassRotator_CompasRotator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_from_Game_to_World, CallFunc_ComposeRotators_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Convert_from_Game_to_World::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Find Most 2D-Distant Object from Location
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Candidates;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Most_Distant_Object;                               // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Distance;                                  // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Distance;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Max_Distance_Object;                               // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location) == 0x000008, "Wrong alignment on BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location");
static_assert(sizeof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location) == 0x0000B0, "Wrong size on BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Location) == 0x000000, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Location' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Candidates) == 0x000010, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Candidates' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, __WorldContext) == 0x000020, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Most_Distant_Object) == 0x000028, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Most_Distant_Object' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Distance) == 0x000030, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Current_Distance) == 0x000034, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Current_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Max_Distance) == 0x000038, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Max_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Max_Distance_Object) == 0x000040, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Max_Distance_Object' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_Sqrt_ReturnValue) == 0x000054, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_BreakVector_X_1) == 0x00008C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_BreakVector_Z_1) == 0x000094, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_MakeVector2D_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_VSize2DSquared_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Object_from_Location::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Find Most 2D-Distant Location from Location
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Candidates;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Most_Distant_Location;                             // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Distance;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Distance;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Max_Distance_Location;                             // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location) == 0x000008, "Wrong alignment on BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location");
static_assert(sizeof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location) == 0x0000A8, "Wrong size on BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Location) == 0x000000, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Location' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Candidates) == 0x000010, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Candidates' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, __WorldContext) == 0x000020, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Most_Distant_Location) == 0x000028, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Most_Distant_Location' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Distance) == 0x000034, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Current_Distance) == 0x000038, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Current_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Max_Distance) == 0x00003C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Max_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Max_Distance_Location) == 0x000040, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Max_Distance_Location' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_Sqrt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_Array_Get_Item) == 0x00005C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_BreakVector_X) == 0x000068, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_BreakVector_Y) == 0x00006C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_BreakVector_Z) == 0x000070, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_MakeVector2D_ReturnValue) == 0x000074, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_BreakVector_X_1) == 0x00007C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_BreakVector_Z_1) == 0x000084, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_MakeVector2D_ReturnValue_1) == 0x00008C, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_VSize2DSquared_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_Functions_C_Find_Most_2DMinusDistant_Location_from_Location::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Handle Valid and Timer Exists
// 0x0018 (0x0018 - 0x0000)
struct BP_Functions_C_Handle_Valid_and_Timer_Exists final
{
public:
	struct FTimerHandle                           Handle;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Handle_Valid_and_Timer_Exists) == 0x000008, "Wrong alignment on BP_Functions_C_Handle_Valid_and_Timer_Exists");
static_assert(sizeof(BP_Functions_C_Handle_Valid_and_Timer_Exists) == 0x000018, "Wrong size on BP_Functions_C_Handle_Valid_and_Timer_Exists");
static_assert(offsetof(BP_Functions_C_Handle_Valid_and_Timer_Exists, Handle) == 0x000000, "Member 'BP_Functions_C_Handle_Valid_and_Timer_Exists::Handle' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Handle_Valid_and_Timer_Exists, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Handle_Valid_and_Timer_Exists::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Handle_Valid_and_Timer_Exists, Return_Value) == 0x000010, "Member 'BP_Functions_C_Handle_Valid_and_Timer_Exists::Return_Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Handle_Valid_and_Timer_Exists, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000011, "Member 'BP_Functions_C_Handle_Valid_and_Timer_Exists::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Handle_Valid_and_Timer_Exists, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000012, "Member 'BP_Functions_C_Handle_Valid_and_Timer_Exists::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Center of Map
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_Get_Center_of_Map final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Output_Valid;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameState_C>      K2Node_DynamicCast_AsBPI_Game_State;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetMapCorners_bValid;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_BPI_GetMapCorners_MapCorners;             // 0x0038(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Center_of_Map) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Center_of_Map");
static_assert(sizeof(BP_Functions_C_Get_Center_of_Map) == 0x0000B0, "Wrong size on BP_Functions_C_Get_Center_of_Map");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, __WorldContext) == 0x000000, "Member 'BP_Functions_C_Get_Center_of_Map::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, Location) == 0x000008, "Member 'BP_Functions_C_Get_Center_of_Map::Location' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, Output_Valid) == 0x000010, "Member 'BP_Functions_C_Get_Center_of_Map::Output_Valid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, K2Node_DynamicCast_AsBPI_Game_State) == 0x000020, "Member 'BP_Functions_C_Get_Center_of_Map::K2Node_DynamicCast_AsBPI_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Functions_C_Get_Center_of_Map::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BPI_GetMapCorners_bValid) == 0x000031, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BPI_GetMapCorners_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BPI_GetMapCorners_MapCorners) == 0x000038, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BPI_GetMapCorners_MapCorners' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BreakVector_X) == 0x00006C, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BreakVector_Y) == 0x000070, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BreakVector_Z) == 0x000074, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BreakVector_X_1) == 0x000088, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BreakVector_Y_1) == 0x00008C, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Center_of_Map, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_Get_Center_of_Map::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Find Least 2D-Distant Object from Object
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object final
{
public:
	class AActor*                                 Origin;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Candidates;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Least_Distant_Object;                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Distance;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_Distance;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Min_Distance_Object;                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object) == 0x000008, "Wrong alignment on BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object");
static_assert(sizeof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object) == 0x0000B0, "Wrong size on BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Origin) == 0x000000, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Origin' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Candidates) == 0x000008, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Candidates' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, __WorldContext) == 0x000018, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Least_Distant_Object) == 0x000020, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Least_Distant_Object' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Distance) == 0x000028, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Current_Distance) == 0x00002C, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Current_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Min_Distance) == 0x000030, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Min_Distance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Min_Distance_Object) == 0x000038, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Min_Distance_Object' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_Sqrt_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_X) == 0x00005C, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Z) == 0x000064, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_X_1) == 0x000088, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Y_1) == 0x00008C, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_MakeVector2D_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_VSize2DSquared_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_Functions_C_Find_Least_2DMinusDistant_Object_from_Object::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Game Azimuth
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_Get_Game_Azimuth final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Convert_from_World_to_Game_Rotator_in_Game_Space; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Game_Azimuth) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Game_Azimuth");
static_assert(sizeof(BP_Functions_C_Get_Game_Azimuth) == 0x000070, "Wrong size on BP_Functions_C_Get_Game_Azimuth");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, Start) == 0x000000, "Member 'BP_Functions_C_Get_Game_Azimuth::Start' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, Target) == 0x00000C, "Member 'BP_Functions_C_Get_Game_Azimuth::Target' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, __WorldContext) == 0x000018, "Member 'BP_Functions_C_Get_Game_Azimuth::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, ReturnValue) == 0x000020, "Member 'BP_Functions_C_Get_Game_Azimuth::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, Temp_bool_Variable) == 0x000024, "Member 'BP_Functions_C_Get_Game_Azimuth::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_FindLookAtRotation_ReturnValue) == 0x000028, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_Convert_from_World_to_Game_Rotator_in_Game_Space) == 0x00004C, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_Convert_from_World_to_Game_Rotator_in_Game_Space' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_BreakRotator_Roll_1) == 0x000058, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_BreakRotator_Pitch_1) == 0x00005C, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_BreakRotator_Yaw_1) == 0x000060, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Get_Game_Azimuth::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Game_Azimuth, K2Node_Select_Default) == 0x00006C, "Member 'BP_Functions_C_Get_Game_Azimuth::K2Node_Select_Default' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get All Weapons Count
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_Get_All_Weapons_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Weapons;                                 // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_All_Weapons_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_All_Weapons_Count");
static_assert(sizeof(BP_Functions_C_Get_All_Weapons_Count) == 0x000060, "Wrong size on BP_Functions_C_Get_All_Weapons_Count");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_All_Weapons_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_All_Weapons_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Number_of_Weapons) == 0x000010, "Member 'BP_Functions_C_Get_All_Weapons_Count::Number_of_Weapons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Count) == 0x000014, "Member 'BP_Functions_C_Get_All_Weapons_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Functions_C_Get_All_Weapons_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Temp_bool_Variable) == 0x000024, "Member 'BP_Functions_C_Get_All_Weapons_Count::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Functions_C_Get_All_Weapons_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Temp_int_Variable) == 0x00002C, "Member 'BP_Functions_C_Get_All_Weapons_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Temp_int_Variable_1) == 0x000030, "Member 'BP_Functions_C_Get_All_Weapons_Count::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, Temp_int_Variable_2) == 0x000034, "Member 'BP_Functions_C_Get_All_Weapons_Count::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, K2Node_Select_Default) == 0x000054, "Member 'BP_Functions_C_Get_All_Weapons_Count::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Weapons_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_Functions_C_Get_All_Weapons_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Primary Weapons Count
// 0x0040 (0x0040 - 0x0000)
struct BP_Functions_C_Get_Primary_Weapons_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Primary_Weapons;                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPrimaryWeapon_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_Primary_Weapons_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Primary_Weapons_Count");
static_assert(sizeof(BP_Functions_C_Get_Primary_Weapons_Count) == 0x000040, "Wrong size on BP_Functions_C_Get_Primary_Weapons_Count");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, Number_of_Primary_Weapons) == 0x000010, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::Number_of_Primary_Weapons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, Count) == 0x000014, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_IsPrimaryWeapon_ReturnValue) == 0x000035, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_IsPrimaryWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Primary_Weapons_Count, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_Get_Primary_Weapons_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Secondary Weapons Count
// 0x0040 (0x0040 - 0x0000)
struct BP_Functions_C_Get_Secondary_Weapons_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Secondary_Weapons;                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSecondaryWeapon_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_Secondary_Weapons_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Secondary_Weapons_Count");
static_assert(sizeof(BP_Functions_C_Get_Secondary_Weapons_Count) == 0x000040, "Wrong size on BP_Functions_C_Get_Secondary_Weapons_Count");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, Number_of_Secondary_Weapons) == 0x000010, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::Number_of_Secondary_Weapons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, Count) == 0x000014, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_IsSecondaryWeapon_ReturnValue) == 0x000035, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_IsSecondaryWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Secondary_Weapons_Count, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_Get_Secondary_Weapons_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Firearms Count
// 0x0058 (0x0058 - 0x0000)
struct BP_Functions_C_Get_Firearms_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Firearms;                                // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APrimaryWeapon*                         K2Node_DynamicCast_AsPrimary_Weapon;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASideArmWeapon*                         K2Node_DynamicCast_AsSide_Arm_Weapon;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Firearms_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Firearms_Count");
static_assert(sizeof(BP_Functions_C_Get_Firearms_Count) == 0x000058, "Wrong size on BP_Functions_C_Get_Firearms_Count");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_Firearms_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_Firearms_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, Number_of_Firearms) == 0x000010, "Member 'BP_Functions_C_Get_Firearms_Count::Number_of_Firearms' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, Count) == 0x000014, "Member 'BP_Functions_C_Get_Firearms_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_Firearms_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Functions_C_Get_Firearms_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Functions_C_Get_Firearms_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Functions_C_Get_Firearms_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Functions_C_Get_Firearms_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Functions_C_Get_Firearms_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, K2Node_DynamicCast_AsPrimary_Weapon) == 0x000038, "Member 'BP_Functions_C_Get_Firearms_Count::K2Node_DynamicCast_AsPrimary_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Functions_C_Get_Firearms_Count::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_Functions_C_Get_Firearms_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, K2Node_DynamicCast_AsSide_Arm_Weapon) == 0x000048, "Member 'BP_Functions_C_Get_Firearms_Count::K2Node_DynamicCast_AsSide_Arm_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Functions_C_Get_Firearms_Count::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Firearms_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_Functions_C_Get_Firearms_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Melee Weapons Count
// 0x0050 (0x0050 - 0x0000)
struct BP_Functions_C_Get_Melee_Weapons_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Melee_Weapons;                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMeleeWeapon*                           K2Node_DynamicCast_AsMelee_Weapon;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Melee_Weapons_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Melee_Weapons_Count");
static_assert(sizeof(BP_Functions_C_Get_Melee_Weapons_Count) == 0x000050, "Wrong size on BP_Functions_C_Get_Melee_Weapons_Count");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, Number_of_Melee_Weapons) == 0x000010, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::Number_of_Melee_Weapons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, Count) == 0x000014, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, K2Node_DynamicCast_AsMelee_Weapon) == 0x000030, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::K2Node_DynamicCast_AsMelee_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Melee_Weapons_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_Get_Melee_Weapons_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Throwable Weapons Count
// 0x0050 (0x0050 - 0x0000)
struct BP_Functions_C_Get_Throwable_Weapons_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Throwable_Weapons;                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AThrowable*                             K2Node_DynamicCast_AsThrowable;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_Throwable_Weapons_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Throwable_Weapons_Count");
static_assert(sizeof(BP_Functions_C_Get_Throwable_Weapons_Count) == 0x000050, "Wrong size on BP_Functions_C_Get_Throwable_Weapons_Count");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, Number_of_Throwable_Weapons) == 0x000010, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::Number_of_Throwable_Weapons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, Count) == 0x000014, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, K2Node_DynamicCast_AsThrowable) == 0x000038, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::K2Node_DynamicCast_AsThrowable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Throwable_Weapons_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Get_Throwable_Weapons_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get All Ammo Count
// 0x0090 (0x0090 - 0x0000)
struct BP_Functions_C_Get_All_Ammo_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount_of_Ammunition;                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBackpackItemSlot>              CallFunc_GetSlotsClassesConst_ReturnValue;         // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FBackpackItemSlot                      CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(NoDestructor)
	class AWeapon*                                CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentAmmoCount_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsAmmo_Item;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_All_Ammo_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_All_Ammo_Count");
static_assert(sizeof(BP_Functions_C_Get_All_Ammo_Count) == 0x000090, "Wrong size on BP_Functions_C_Get_All_Ammo_Count");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_All_Ammo_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_All_Ammo_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, Amount_of_Ammunition) == 0x000010, "Member 'BP_Functions_C_Get_All_Ammo_Count::Amount_of_Ammunition' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, Count) == 0x000014, "Member 'BP_Functions_C_Get_All_Ammo_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Functions_C_Get_All_Ammo_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Functions_C_Get_All_Ammo_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_Functions_C_Get_All_Ammo_Count::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_Functions_C_Get_All_Ammo_Count::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_GetSlotsClassesConst_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_GetSlotsClassesConst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_GetCurrentAmmoCount_ReturnValue) == 0x000060, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_GetCurrentAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, K2Node_ClassDynamicCast_AsAmmo_Item) == 0x000068, "Member 'BP_Functions_C_Get_All_Ammo_Count::K2Node_ClassDynamicCast_AsAmmo_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, K2Node_ClassDynamicCast_bSuccess) == 0x000070, "Member 'BP_Functions_C_Get_All_Ammo_Count::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_All_Ammo_Count, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'BP_Functions_C_Get_All_Ammo_Count::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Item Count
// 0x0150 (0x0150 - 0x0000)
struct BP_Functions_C_Get_Item_Count final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item_Type;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sum_of_Items_Found;                                // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Types_of_Items_Found;                              // 0x0020(0x0010)(Parm, OutParm)
	TArray<class UClass*>                         Item_List;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Count;                                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectileWeapon*                      K2Node_DynamicCast_AsProjectile_Weapon;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AAmmoItem>                  CallFunc_GetSupportedAmmoType_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_GetChamberLoadedAmmo_ReturnValue;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentAmmoCount_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBackpackItemSlot>              CallFunc_GetSlotsClassesConst_ReturnValue;         // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBackpackItemSlot                      CallFunc_Array_Get_Item_2;                         // 0x0100(0x0010)(NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_3;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsItem_for_Backpack;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_3;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_4;             // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_5;             // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_6;             // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Item_Count) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Item_Count");
static_assert(sizeof(BP_Functions_C_Get_Item_Count) == 0x000150, "Wrong size on BP_Functions_C_Get_Item_Count");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Get_Item_Count::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Item_Type) == 0x000008, "Member 'BP_Functions_C_Get_Item_Count::Item_Type' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Get_Item_Count::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Sum_of_Items_Found) == 0x000018, "Member 'BP_Functions_C_Get_Item_Count::Sum_of_Items_Found' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Types_of_Items_Found) == 0x000020, "Member 'BP_Functions_C_Get_Item_Count::Types_of_Items_Found' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Item_List) == 0x000030, "Member 'BP_Functions_C_Get_Item_Count::Item_List' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Count) == 0x000040, "Member 'BP_Functions_C_Get_Item_Count::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Loop_Counter_Variable_2) == 0x00005C, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Loop_Counter_Variable_3) == 0x000068, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue_3) == 0x00006C, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, K2Node_DynamicCast_AsProjectile_Weapon) == 0x000080, "Member 'BP_Functions_C_Get_Item_Count::K2Node_DynamicCast_AsProjectile_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_Functions_C_Get_Item_Count::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_GetSupportedAmmoType_ReturnValue) == 0x000090, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_GetSupportedAmmoType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_GetChamberLoadedAmmo_ReturnValue) == 0x000098, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_GetChamberLoadedAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_IsValidClass_ReturnValue) == 0x00009C, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_GetCurrentAmmoCount_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_GetCurrentAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A4, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Less_IntInt_ReturnValue) == 0x0000AD, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_GetSlotsClassesConst_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_GetSlotsClassesConst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_GetObjectClass_ReturnValue) == 0x0000D8, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Length_ReturnValue_2) == 0x0000E0, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E4, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E8, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000EC, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_ClassIsChildOf_ReturnValue) == 0x0000F0, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000F4, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x0000F8, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, Temp_int_Array_Index_Variable_3) == 0x0000FC, "Member 'BP_Functions_C_Get_Item_Count::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000110, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Get_Item_3) == 0x000118, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000120, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, K2Node_ClassDynamicCast_AsItem_for_Backpack) == 0x000128, "Member 'BP_Functions_C_Get_Item_Count::K2Node_ClassDynamicCast_AsItem_for_Backpack' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, K2Node_ClassDynamicCast_bSuccess) == 0x000130, "Member 'BP_Functions_C_Get_Item_Count::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Array_Length_ReturnValue_3) == 0x000134, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_CountOfResource_ReturnValue) == 0x000138, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Less_IntInt_ReturnValue_3) == 0x00013C, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue_6) == 0x000140, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_ClassIsChildOf_ReturnValue_3) == 0x000144, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_ClassIsChildOf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_ClassIsChildOf_ReturnValue_4) == 0x000145, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_ClassIsChildOf_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_ClassIsChildOf_ReturnValue_5) == 0x000146, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_ClassIsChildOf_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_ClassIsChildOf_ReturnValue_6) == 0x000147, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_ClassIsChildOf_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Item_Count, CallFunc_Add_IntInt_ReturnValue_7) == 0x000148, "Member 'BP_Functions_C_Get_Item_Count::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Convert Damage Type to Cause of Death
// 0x0020 (0x0020 - 0x0000)
struct BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death final
{
public:
	EDamageType                                   Damage_Type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Cause_of_Death;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death) == 0x000008, "Wrong alignment on BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death");
static_assert(sizeof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death) == 0x000020, "Wrong size on BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Damage_Type) == 0x000000, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Damage_Type' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Cause_of_Death) == 0x000010, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Cause_of_Death' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable) == 0x000011, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_1) == 0x000012, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_2) == 0x000013, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_3) == 0x000014, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_4) == 0x000015, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_5) == 0x000016, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_6) == 0x000017, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_7) == 0x000018, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_8) == 0x000019, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_9) == 0x00001A, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_10) == 0x00001B, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, Temp_byte_Variable_11) == 0x00001C, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death, K2Node_Select_Default) == 0x00001D, "Member 'BP_Functions_C_Convert_Damage_Type_to_Cause_of_Death::K2Node_Select_Default' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Full Customization Name
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Functions_C_Get_Full_Customization_Name final
{
public:
	struct FCustomizationPair                     Customization_pair;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class ACustomization*                         CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizationVariant*                  CallFunc_GetClassDefaultObject_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0038(0x0018)()
	class FText                                   CallFunc_GetItemName_ReturnValue_1;                // 0x0050(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_Full_Customization_Name) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Full_Customization_Name");
static_assert(sizeof(BP_Functions_C_Get_Full_Customization_Name) == 0x0000D0, "Wrong size on BP_Functions_C_Get_Full_Customization_Name");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, Customization_pair) == 0x000000, "Member 'BP_Functions_C_Get_Full_Customization_Name::Customization_pair' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Get_Full_Customization_Name::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, Name_0) == 0x000018, "Member 'BP_Functions_C_Get_Full_Customization_Name::Name_0' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000028, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_GetClassDefaultObject_ReturnValue_1) == 0x000030, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_GetClassDefaultObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_GetItemName_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_GetItemName_ReturnValue_1) == 0x000050, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_GetItemName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Len_ReturnValue) == 0x000098, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B8, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Len_ReturnValue_1) == 0x0000C8, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Name, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_Functions_C_Get_Full_Customization_Name::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Full Customization Class Name
// 0x0080 (0x0080 - 0x0000)
struct BP_Functions_C_Get_Full_Customization_Class_Name final
{
public:
	struct FCustomizationPair                     Customization_pair;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_1;        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_Full_Customization_Class_Name) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Full_Customization_Class_Name");
static_assert(sizeof(BP_Functions_C_Get_Full_Customization_Class_Name) == 0x000080, "Wrong size on BP_Functions_C_Get_Full_Customization_Class_Name");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, Customization_pair) == 0x000000, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::Customization_pair' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, Name_0) == 0x000018, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::Name_0' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_GetClassDisplayName_ReturnValue) == 0x000028, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_GetClassDisplayName_ReturnValue_1) == 0x000038, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_GetClassDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_Len_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_Len_ReturnValue_1) == 0x000074, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Full_Customization_Class_Name, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_Get_Full_Customization_Class_Name::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Convert Cause of Death to Damage Type
// 0x0020 (0x0020 - 0x0000)
struct BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type final
{
public:
	ECloudDeathCauseType                          Cause_of_Death;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Damage_Type;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Temp_byte_Variable_12;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   K2Node_Select_Default;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type) == 0x000008, "Wrong alignment on BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type");
static_assert(sizeof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type) == 0x000020, "Wrong size on BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Cause_of_Death) == 0x000000, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Cause_of_Death' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Damage_Type) == 0x000010, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Damage_Type' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable) == 0x000011, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_1) == 0x000012, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_2) == 0x000013, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_3) == 0x000014, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_4) == 0x000015, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_5) == 0x000016, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_6) == 0x000017, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_7) == 0x000018, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_8) == 0x000019, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_9) == 0x00001A, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_10) == 0x00001B, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_11) == 0x00001C, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, Temp_byte_Variable_12) == 0x00001D, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type, K2Node_Select_Default) == 0x00001E, "Member 'BP_Functions_C_Convert_Cause_of_Death_to_Damage_Type::K2Node_Select_Default' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Actor Locations
// 0x0088 (0x0088 - 0x0000)
struct BP_Functions_C_Get_Actor_Locations final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Skip_Invalid;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Locations;                                         // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        Actor_Locations;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0048(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Actor_Locations) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Actor_Locations");
static_assert(sizeof(BP_Functions_C_Get_Actor_Locations) == 0x000088, "Wrong size on BP_Functions_C_Get_Actor_Locations");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, Actors) == 0x000000, "Member 'BP_Functions_C_Get_Actor_Locations::Actors' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, Skip_Invalid) == 0x000010, "Member 'BP_Functions_C_Get_Actor_Locations::Skip_Invalid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, __WorldContext) == 0x000018, "Member 'BP_Functions_C_Get_Actor_Locations::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, Locations) == 0x000020, "Member 'BP_Functions_C_Get_Actor_Locations::Locations' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, Actor_Locations) == 0x000030, "Member 'BP_Functions_C_Get_Actor_Locations::Actor_Locations' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_Functions_C_Get_Actor_Locations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, Temp_struct_Variable) == 0x000048, "Member 'BP_Functions_C_Get_Actor_Locations::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_Functions_C_Get_Actor_Locations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Actor_Locations, CallFunc_Array_Add_ReturnValue_1) == 0x000080, "Member 'BP_Functions_C_Get_Actor_Locations::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.PlayerUserMessage
// 0x0088 (0x0088 - 0x0000)
struct BP_Functions_C_PlayerUserMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AController*                            Controller;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeDeadChars;                                  // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              Optional2D_Sound;                                  // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_PlayerUserMessage) == 0x000008, "Wrong alignment on BP_Functions_C_PlayerUserMessage");
static_assert(sizeof(BP_Functions_C_PlayerUserMessage) == 0x000088, "Wrong size on BP_Functions_C_PlayerUserMessage");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, Message) == 0x000000, "Member 'BP_Functions_C_PlayerUserMessage::Message' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, Controller) == 0x000018, "Member 'BP_Functions_C_PlayerUserMessage::Controller' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, IncludeDeadChars) == 0x000020, "Member 'BP_Functions_C_PlayerUserMessage::IncludeDeadChars' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, Optional2D_Sound) == 0x000028, "Member 'BP_Functions_C_PlayerUserMessage::Optional2D_Sound' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, __WorldContext) == 0x000050, "Member 'BP_Functions_C_PlayerUserMessage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000058, "Member 'BP_Functions_C_PlayerUserMessage::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_Functions_C_PlayerUserMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, CallFunc_GetHumanCharacter_ReturnValue) == 0x000068, "Member 'BP_Functions_C_PlayerUserMessage::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000070, "Member 'BP_Functions_C_PlayerUserMessage::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_Functions_C_PlayerUserMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, CallFunc_GetIsDead_ReturnValue) == 0x000081, "Member 'BP_Functions_C_PlayerUserMessage::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'BP_Functions_C_PlayerUserMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerUserMessage, CallFunc_BooleanOR_ReturnValue) == 0x000083, "Member 'BP_Functions_C_PlayerUserMessage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.PlayerCharacterUserMessage
// 0x0038 (0x0038 - 0x0000)
struct BP_Functions_C_PlayerCharacterUserMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class ACharacter*                             Character;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_PlayerCharacterUserMessage) == 0x000008, "Wrong alignment on BP_Functions_C_PlayerCharacterUserMessage");
static_assert(sizeof(BP_Functions_C_PlayerCharacterUserMessage) == 0x000038, "Wrong size on BP_Functions_C_PlayerCharacterUserMessage");
static_assert(offsetof(BP_Functions_C_PlayerCharacterUserMessage, Message) == 0x000000, "Member 'BP_Functions_C_PlayerCharacterUserMessage::Message' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerCharacterUserMessage, Character) == 0x000018, "Member 'BP_Functions_C_PlayerCharacterUserMessage::Character' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerCharacterUserMessage, __WorldContext) == 0x000020, "Member 'BP_Functions_C_PlayerCharacterUserMessage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerCharacterUserMessage, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'BP_Functions_C_PlayerCharacterUserMessage::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerCharacterUserMessage, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Functions_C_PlayerCharacterUserMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.PrintAllTimes
// 0x0238 (0x0238 - 0x0000)
struct BP_Functions_C_PrintAllTimes final
{
public:
	class AHumanPlayerController*                 PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ElapsedTime;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnpausedTimeSeconds_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateFlame*                        K2Node_DynamicCast_AsGame_State_Flame;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_4;         // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_5;         // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAccurateRealTime_Seconds;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccurateRealTime_PartialSeconds;       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_6;         // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_PrintAllTimes) == 0x000008, "Wrong alignment on BP_Functions_C_PrintAllTimes");
static_assert(sizeof(BP_Functions_C_PrintAllTimes) == 0x000238, "Wrong size on BP_Functions_C_PrintAllTimes");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, PlayerController) == 0x000000, "Member 'BP_Functions_C_PrintAllTimes::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, TextColor) == 0x000008, "Member 'BP_Functions_C_PrintAllTimes::TextColor' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, Duration) == 0x000018, "Member 'BP_Functions_C_PrintAllTimes::Duration' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, __WorldContext) == 0x000020, "Member 'BP_Functions_C_PrintAllTimes::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, ElapsedTime) == 0x000028, "Member 'BP_Functions_C_PrintAllTimes::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetUnpausedTimeSeconds_ReturnValue) == 0x000040, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetUnpausedTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, K2Node_DynamicCast_AsGame_State_Flame) == 0x000048, "Member 'BP_Functions_C_PrintAllTimes::K2Node_DynamicCast_AsGame_State_Flame' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Functions_C_PrintAllTimes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_FloatToString_ReturnValue) == 0x000058, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetTimeSeconds_ReturnValue) == 0x000068, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000080, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000090, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000094, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000098, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x0000A8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x0000BC, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_FloatToString_ReturnValue_4) == 0x0000C0, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_FloatToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_FloatToString_ReturnValue_5) == 0x0000D0, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_FloatToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetObjectName_ReturnValue) == 0x0000E0, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetAccurateRealTime_Seconds) == 0x000100, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetAccurateRealTime_Seconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_GetAccurateRealTime_PartialSeconds) == 0x000104, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_GetAccurateRealTime_PartialSeconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000108, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Conv_FloatToString_ReturnValue_6) == 0x000118, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Conv_FloatToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000128, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000138, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000158, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000168, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000178, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000188, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000198, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001A8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001B8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001C8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001D8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0001E8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0001F8, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000208, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000218, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintAllTimes, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000228, "Member 'BP_Functions_C_PrintAllTimes::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.PrintDebugMessage
// 0x0098 (0x0098 - 0x0000)
struct BP_Functions_C_PrintDebugMessage final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Category;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrintToLog;                                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PrintToScreen;                                     // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_PrintDebugMessage) == 0x000008, "Wrong alignment on BP_Functions_C_PrintDebugMessage");
static_assert(sizeof(BP_Functions_C_PrintDebugMessage) == 0x000098, "Wrong size on BP_Functions_C_PrintDebugMessage");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, InString) == 0x000000, "Member 'BP_Functions_C_PrintDebugMessage::InString' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, TextColor) == 0x000010, "Member 'BP_Functions_C_PrintDebugMessage::TextColor' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, Category) == 0x000020, "Member 'BP_Functions_C_PrintDebugMessage::Category' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, Duration) == 0x000028, "Member 'BP_Functions_C_PrintDebugMessage::Duration' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, __WorldContext) == 0x000030, "Member 'BP_Functions_C_PrintDebugMessage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, PrintToLog) == 0x000038, "Member 'BP_Functions_C_PrintDebugMessage::PrintToLog' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, PrintToScreen) == 0x000039, "Member 'BP_Functions_C_PrintDebugMessage::PrintToScreen' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'BP_Functions_C_PrintDebugMessage::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'BP_Functions_C_PrintDebugMessage::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, K2Node_SwitchName_CmpSuccess) == 0x000058, "Member 'BP_Functions_C_PrintDebugMessage::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_Functions_C_PrintDebugMessage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, K2Node_SwitchName_CmpSuccess_1) == 0x000070, "Member 'BP_Functions_C_PrintDebugMessage::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_PrintDebugMessage::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PrintDebugMessage, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'BP_Functions_C_PrintDebugMessage::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.RotationBetweenVectors
// 0x0078 (0x0078 - 0x0000)
struct BP_Functions_C_RotationBetweenVectors final
{
public:
	struct FVector                                A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                B;                                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Axis;                                              // 0x002C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_RotationBetweenVectors) == 0x000008, "Wrong alignment on BP_Functions_C_RotationBetweenVectors");
static_assert(sizeof(BP_Functions_C_RotationBetweenVectors) == 0x000078, "Wrong size on BP_Functions_C_RotationBetweenVectors");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, A) == 0x000000, "Member 'BP_Functions_C_RotationBetweenVectors::A' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, B) == 0x00000C, "Member 'BP_Functions_C_RotationBetweenVectors::B' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, __WorldContext) == 0x000018, "Member 'BP_Functions_C_RotationBetweenVectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, Rotator) == 0x000020, "Member 'BP_Functions_C_RotationBetweenVectors::Rotator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, Axis) == 0x00002C, "Member 'BP_Functions_C_RotationBetweenVectors::Axis' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, Angle) == 0x000038, "Member 'BP_Functions_C_RotationBetweenVectors::Angle' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, CallFunc_Normal_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_RotationBetweenVectors::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, CallFunc_Normal_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_RotationBetweenVectors::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, CallFunc_Cross_VectorVector_ReturnValue) == 0x000054, "Member 'BP_Functions_C_RotationBetweenVectors::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, CallFunc_Dot_VectorVector_ReturnValue) == 0x000060, "Member 'BP_Functions_C_RotationBetweenVectors::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, CallFunc_DegAcos_ReturnValue) == 0x000064, "Member 'BP_Functions_C_RotationBetweenVectors::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_RotationBetweenVectors, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000068, "Member 'BP_Functions_C_RotationBetweenVectors::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetBoosterCount
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_GetBoosterCount final
{
public:
	TArray<struct FCloudUserLobbyInfo>            PlayersBoosters;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 BoosterSKU;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountL;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudUserLobbyInfo                    CallFunc_Array_Get_Item;                           // 0x0058(0x0030)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_GetBoosterCount) == 0x000008, "Wrong alignment on BP_Functions_C_GetBoosterCount");
static_assert(sizeof(BP_Functions_C_GetBoosterCount) == 0x0000B0, "Wrong size on BP_Functions_C_GetBoosterCount");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, PlayersBoosters) == 0x000000, "Member 'BP_Functions_C_GetBoosterCount::PlayersBoosters' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, BoosterSKU) == 0x000010, "Member 'BP_Functions_C_GetBoosterCount::BoosterSKU' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, __WorldContext) == 0x000020, "Member 'BP_Functions_C_GetBoosterCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, Count) == 0x000028, "Member 'BP_Functions_C_GetBoosterCount::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CountL) == 0x00002C, "Member 'BP_Functions_C_GetBoosterCount::CountL' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_Functions_C_GetBoosterCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_Functions_C_GetBoosterCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, Temp_int_Variable) == 0x000040, "Member 'BP_Functions_C_GetBoosterCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_Functions_C_GetBoosterCount::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_Functions_C_GetBoosterCount::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterCount, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_Functions_C_GetBoosterCount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get First Occupied Weapon Slot
// 0x0058 (0x0058 - 0x0000)
struct BP_Functions_C_Get_First_Occupied_Weapon_Slot final
{
public:
	class UInventoryComponent*                    Inventory;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponSlotType                               Slot;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULinkedWeapons*                         CallFunc_GetWeapons_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWeaponSlotType>                       K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	EWeaponSlotType                               CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_First_Occupied_Weapon_Slot) == 0x000008, "Wrong alignment on BP_Functions_C_Get_First_Occupied_Weapon_Slot");
static_assert(sizeof(BP_Functions_C_Get_First_Occupied_Weapon_Slot) == 0x000058, "Wrong size on BP_Functions_C_Get_First_Occupied_Weapon_Slot");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, Inventory) == 0x000000, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::Inventory' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, Slot) == 0x000010, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::Slot' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_GetWeapons_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_GetWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_GetWeapon_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_First_Occupied_Weapon_Slot, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_Functions_C_Get_First_Occupied_Weapon_Slot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Join Text Array
// 0x0170 (0x0170 - 0x0000)
struct BP_Functions_C_Join_Text_Array final
{
public:
	TArray<class FText>                           SourceArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Separator;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   JoinedText;                                        // 0x0048(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Join_Text_Array) == 0x000008, "Wrong alignment on BP_Functions_C_Join_Text_Array");
static_assert(sizeof(BP_Functions_C_Join_Text_Array) == 0x000170, "Wrong size on BP_Functions_C_Join_Text_Array");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, SourceArray) == 0x000000, "Member 'BP_Functions_C_Join_Text_Array::SourceArray' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, Separator) == 0x000010, "Member 'BP_Functions_C_Join_Text_Array::Separator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, __WorldContext) == 0x000028, "Member 'BP_Functions_C_Join_Text_Array::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, ReturnValue) == 0x000030, "Member 'BP_Functions_C_Join_Text_Array::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, JoinedText) == 0x000048, "Member 'BP_Functions_C_Join_Text_Array::JoinedText' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, CallFunc_Array_LastIndex_ReturnValue) == 0x000060, "Member 'BP_Functions_C_Join_Text_Array::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_Functions_C_Join_Text_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Join_Text_Array::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_Functions_C_Join_Text_Array::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_Functions_C_Join_Text_Array::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BP_Functions_C_Join_Text_Array::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, Temp_int_Variable) == 0x0000F0, "Member 'BP_Functions_C_Join_Text_Array::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'BP_Functions_C_Join_Text_Array::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000138, "Member 'BP_Functions_C_Join_Text_Array::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_Functions_C_Join_Text_Array::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, CallFunc_Format_ReturnValue) == 0x000150, "Member 'BP_Functions_C_Join_Text_Array::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Text_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BP_Functions_C_Join_Text_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Increase Achievement Progress
// 0x0210 (0x0210 - 0x0000)
struct BP_Functions_C_Increase_Achievement_Progress final
{
public:
	class FName                                   Achievement_Name;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Increase_Progress_By;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result_Code;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameAchievementsSystem*               CallFunc_GetAchievementsSystem_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAchievementSystemValid_ReturnValue;     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameAchievementsSystem*               CallFunc_GetAchievementsSystem_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_1;          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckForValidGameInstance_bValid;     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_2;          // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_3;          // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_4;          // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_5;          // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_AchievementsNotification_C*         CallFunc_Create_ReturnValue;                       // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_2;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WriteAchievementProgress_ReturnValue;     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid; // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid_1; // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress_1; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AchievementsTableRow                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0150(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNotificationParams                    K2Node_MakeStruct_NotificationParams;              // 0x01CC(0x000C)(NoDestructor)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Has_Achievement_Already_Been_Achieved_Already_Achieved; // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Increase_Achievement_Progress) == 0x000008, "Wrong alignment on BP_Functions_C_Increase_Achievement_Progress");
static_assert(sizeof(BP_Functions_C_Increase_Achievement_Progress) == 0x000210, "Wrong size on BP_Functions_C_Increase_Achievement_Progress");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, Achievement_Name) == 0x000000, "Member 'BP_Functions_C_Increase_Achievement_Progress::Achievement_Name' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, Increase_Progress_By) == 0x000008, "Member 'BP_Functions_C_Increase_Achievement_Progress::Increase_Progress_By' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Increase_Achievement_Progress::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, Result_Code) == 0x000018, "Member 'BP_Functions_C_Increase_Achievement_Progress::Result_Code' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x00001C, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetAchievementsSystem_ReturnValue) == 0x000020, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetAchievementsSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetUserControllerId_ReturnValue) == 0x000028, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_IsAchievementSystemValid_ReturnValue) == 0x00002C, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_IsAchievementSystemValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000030, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetAchievementsSystem_ReturnValue_1) == 0x000040, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetAchievementsSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetGameInstance_ReturnValue_1) == 0x000050, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_AsBPI_Game_Instance) == 0x000058, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_AsBPI_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_AsBPI_Game_Instance_1) == 0x000070, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_AsBPI_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_BPI_CheckForValidGameInstance_bValid) == 0x000081, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_BPI_CheckForValidGameInstance_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetGameInstance_ReturnValue_2) == 0x000088, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_AsBPI_Game_Instance_2) == 0x000090, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_AsBPI_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_AsBPI_Game_Instance_3) == 0x0000A8, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_AsBPI_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetGameInstance_ReturnValue_3) == 0x0000C0, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetGameInstance_ReturnValue_4) == 0x0000C8, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_AsBPI_Game_Instance_4) == 0x0000D0, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_AsBPI_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_AsBPI_Game_Instance_5) == 0x0000E8, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_AsBPI_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_DynamicCast_bSuccess_5) == 0x0000F8, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetNotificationSystem_ReturnValue) == 0x000100, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000108, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_IsValid_ReturnValue) == 0x00010C, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000110, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_Create_ReturnValue) == 0x000118, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetUserControllerId_ReturnValue_2) == 0x000124, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetUserControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_IsDedicatedServer_ReturnValue) == 0x000128, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2) == 0x000130, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_WriteAchievementProgress_ReturnValue) == 0x000138, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_WriteAchievementProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid) == 0x000139, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress) == 0x00013C, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_BooleanAND_ReturnValue_1) == 0x000141, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid_1) == 0x000142, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress_1) == 0x000144, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_Add_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00014C, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetDataTableRowFromName_OutRow) == 0x000150, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001C8, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_MakeStruct_NotificationParams) == 0x0001CC, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_MakeStruct_NotificationParams' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_GetCurrentPlatform_ReturnValue) == 0x0001D8, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, K2Node_SwitchEnum_CmpSuccess) == 0x0001D9, "Member 'BP_Functions_C_Increase_Achievement_Progress::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_Has_Achievement_Already_Been_Achieved_Already_Achieved) == 0x0001DA, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_Has_Achievement_Already_Been_Achieved_Already_Achieved' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_Conv_NameToString_ReturnValue) == 0x0001E0, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_Concat_StrStr_ReturnValue) == 0x0001F0, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000200, "Member 'BP_Functions_C_Increase_Achievement_Progress::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Has Achievement Already Been Achieved
// 0x0140 (0x0140 - 0x0000)
struct BP_Functions_C_Has_Achievement_Already_Been_Achieved final
{
public:
	class FName                                   Achievement_Name;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Already_Achieved;                                  // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_1;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckForValidGameInstance_bValid;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_2;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_3;          // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AchievementsTableRow                CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgress_ValidOutput;   // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate; // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BPI_GetAchievementProgress_AchievementProgress; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid; // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgress_ValidOutput_1; // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate_1; // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BPI_GetAchievementProgress_AchievementProgress_1; // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Has_Achievement_Already_Been_Achieved) == 0x000008, "Wrong alignment on BP_Functions_C_Has_Achievement_Already_Been_Achieved");
static_assert(sizeof(BP_Functions_C_Has_Achievement_Already_Been_Achieved) == 0x000140, "Wrong size on BP_Functions_C_Has_Achievement_Already_Been_Achieved");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, Achievement_Name) == 0x000000, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::Achievement_Name' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, Already_Achieved) == 0x000010, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::Already_Achieved' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetGameInstance_ReturnValue_1) == 0x000020, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_AsBPI_Game_Instance) == 0x000028, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_AsBPI_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_AsBPI_Game_Instance_1) == 0x000040, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_AsBPI_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_CheckForValidGameInstance_bValid) == 0x000051, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_CheckForValidGameInstance_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetGameInstance_ReturnValue_2) == 0x000058, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_AsBPI_Game_Instance_2) == 0x000060, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_AsBPI_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_AsBPI_Game_Instance_3) == 0x000078, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_AsBPI_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetUserControllerId_ReturnValue) == 0x00008C, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_IsDedicatedServer_ReturnValue) == 0x000090, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000098, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetCurrentPlatform_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, K2Node_SwitchEnum_CmpSuccess) == 0x000121, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgress_ValidOutput) == 0x000122, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgress_ValidOutput' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate) == 0x000123, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgress_AchievementProgress) == 0x000124, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgress_AchievementProgress' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid) == 0x000128, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress) == 0x00012C, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000130, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_Less_FloatFloat_ReturnValue) == 0x000131, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgress_ValidOutput_1) == 0x000132, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgress_ValidOutput_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate_1) == 0x000133, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_BPI_GetAchievementProgress_AchievementProgress_1) == 0x000134, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_BPI_GetAchievementProgress_AchievementProgress_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Has_Achievement_Already_Been_Achieved, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000138, "Member 'BP_Functions_C_Has_Achievement_Already_Been_Achieved::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.FormatTimespanDHMS
// 0x0560 (0x0560 - 0x0000)
struct BP_Functions_C_FormatTimespanDHMS final
{
public:
	struct FTimespan                              TimespanIn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TimespanDHMSOut;                                   // 0x0010(0x0018)(Parm, OutParm)
	bool                                          HideSeconds;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Seconds;                                           // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   Minutes;                                           // 0x0048(0x0018)(Edit, BlueprintVisible)
	class FText                                   Hours;                                             // 0x0060(0x0018)(Edit, BlueprintVisible)
	class FText                                   Days;                                              // 0x0078(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0160(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0178(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01F8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0218(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0230(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0250(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0290(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x02A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0300(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0340(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0350(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0360(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0378(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0390(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x03D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x03E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0400(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0440(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0480(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x04C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_8;                          // 0x0500(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_8;                     // 0x0510(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0538(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0548(0x0018)()
};
static_assert(alignof(BP_Functions_C_FormatTimespanDHMS) == 0x000008, "Wrong alignment on BP_Functions_C_FormatTimespanDHMS");
static_assert(sizeof(BP_Functions_C_FormatTimespanDHMS) == 0x000560, "Wrong size on BP_Functions_C_FormatTimespanDHMS");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, TimespanIn) == 0x000000, "Member 'BP_Functions_C_FormatTimespanDHMS::TimespanIn' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, __WorldContext) == 0x000008, "Member 'BP_Functions_C_FormatTimespanDHMS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, TimespanDHMSOut) == 0x000010, "Member 'BP_Functions_C_FormatTimespanDHMS::TimespanDHMSOut' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, HideSeconds) == 0x000028, "Member 'BP_Functions_C_FormatTimespanDHMS::HideSeconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, Seconds) == 0x000030, "Member 'BP_Functions_C_FormatTimespanDHMS::Seconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, Minutes) == 0x000048, "Member 'BP_Functions_C_FormatTimespanDHMS::Minutes' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, Hours) == 0x000060, "Member 'BP_Functions_C_FormatTimespanDHMS::Hours' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, Days) == 0x000078, "Member 'BP_Functions_C_FormatTimespanDHMS::Days' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_BreakTimespan_Days) == 0x000090, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_BreakTimespan_Hours) == 0x000094, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_BreakTimespan_Minutes) == 0x000098, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_BreakTimespan_Seconds) == 0x00009C, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_BreakTimespan_Milliseconds) == 0x0000A0, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_1) == 0x000138, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue) == 0x000148, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_1) == 0x000160, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_2) == 0x000178, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B8, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_2) == 0x0001F8, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_3) == 0x000208, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_2) == 0x000218, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_3) == 0x000230, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Greater_IntInt_ReturnValue) == 0x000248, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_4) == 0x000250, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_4) == 0x000290, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002A0, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_4) == 0x0002A8, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002C0, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_6) == 0x000300, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_5) == 0x000340, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_6) == 0x000350, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_5) == 0x000360, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_6) == 0x000378, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_7) == 0x000390, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0003D0, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_7) == 0x0003D8, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_7) == 0x0003E8, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_8) == 0x000400, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_9) == 0x000440, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_10) == 0x000480, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeStruct_FormatArgumentData_11) == 0x0004C0, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, K2Node_MakeArray_Array_8) == 0x000500, "Member 'BP_Functions_C_FormatTimespanDHMS::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Format_ReturnValue_8) == 0x000510, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Format_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Conv_TextToString_ReturnValue) == 0x000528, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_LeftChop_ReturnValue) == 0x000538, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS, CallFunc_Conv_StringToText_ReturnValue) == 0x000548, "Member 'BP_Functions_C_FormatTimespanDHMS::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Lerp (vector2D)
// 0x0048 (0x0048 - 0x0000)
struct BP_Functions_C_Lerp__vector2D_ final
{
public:
	struct FVector2D                              A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Lerp__vector2D_) == 0x000008, "Wrong alignment on BP_Functions_C_Lerp__vector2D_");
static_assert(sizeof(BP_Functions_C_Lerp__vector2D_) == 0x000048, "Wrong size on BP_Functions_C_Lerp__vector2D_");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, A) == 0x000000, "Member 'BP_Functions_C_Lerp__vector2D_::A' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, B) == 0x000008, "Member 'BP_Functions_C_Lerp__vector2D_::B' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, Alpha) == 0x000010, "Member 'BP_Functions_C_Lerp__vector2D_::Alpha' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, __WorldContext) == 0x000018, "Member 'BP_Functions_C_Lerp__vector2D_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, ReturnValue) == 0x000020, "Member 'BP_Functions_C_Lerp__vector2D_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, CallFunc_BreakVector2D_X) == 0x000028, "Member 'BP_Functions_C_Lerp__vector2D_::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'BP_Functions_C_Lerp__vector2D_::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, CallFunc_BreakVector2D_X_1) == 0x000030, "Member 'BP_Functions_C_Lerp__vector2D_::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, CallFunc_BreakVector2D_Y_1) == 0x000034, "Member 'BP_Functions_C_Lerp__vector2D_::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Lerp__vector2D_::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, CallFunc_Lerp_ReturnValue_1) == 0x00003C, "Member 'BP_Functions_C_Lerp__vector2D_::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Lerp__vector2D_, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'BP_Functions_C_Lerp__vector2D_::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ToString (DateTime)
// 0x0170 (0x0170 - 0x0000)
struct BP_Functions_C_ToString__DateTime_ final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ToString__DateTime_) == 0x000008, "Wrong alignment on BP_Functions_C_ToString__DateTime_");
static_assert(sizeof(BP_Functions_C_ToString__DateTime_) == 0x000170, "Wrong size on BP_Functions_C_ToString__DateTime_");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, DateTime) == 0x000000, "Member 'BP_Functions_C_ToString__DateTime_::DateTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, __WorldContext) == 0x000008, "Member 'BP_Functions_C_ToString__DateTime_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, String) == 0x000010, "Member 'BP_Functions_C_ToString__DateTime_::String' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_BreakDateTime_Year) == 0x000020, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_BreakDateTime_Month) == 0x000024, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_BreakDateTime_Day) == 0x000028, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_BreakDateTime_Hour) == 0x00002C, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_BreakDateTime_Minute) == 0x000030, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_BreakDateTime_Second) == 0x000034, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_BreakDateTime_Millisecond) == 0x000038, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000050, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000070, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000080, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000090, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0000A0, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0000B0, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E0, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000F0, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000100, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000110, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000120, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000130, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000140, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000150, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__DateTime_, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000160, "Member 'BP_Functions_C_ToString__DateTime_::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ToString (Timespan)
// 0x0108 (0x0108 - 0x0000)
struct BP_Functions_C_ToString__Timespan_ final
{
public:
	struct FTimespan                              DateTime;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ToString__Timespan_) == 0x000008, "Wrong alignment on BP_Functions_C_ToString__Timespan_");
static_assert(sizeof(BP_Functions_C_ToString__Timespan_) == 0x000108, "Wrong size on BP_Functions_C_ToString__Timespan_");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, DateTime) == 0x000000, "Member 'BP_Functions_C_ToString__Timespan_::DateTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, __WorldContext) == 0x000008, "Member 'BP_Functions_C_ToString__Timespan_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, String) == 0x000010, "Member 'BP_Functions_C_ToString__Timespan_::String' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_BreakTimespan_Days) == 0x000020, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_BreakTimespan_Hours) == 0x000024, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_BreakTimespan_Minutes) == 0x000028, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_BreakTimespan_Seconds) == 0x00002C, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_BreakTimespan_Milliseconds) == 0x000030, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000068, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000078, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000088, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C8, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D8, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E8, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__Timespan_, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000F8, "Member 'BP_Functions_C_ToString__Timespan_::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.IsPlanUnlocked
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_IsPlanUnlocked final
{
public:
	class UClass*                                 PlanClassIn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerControllerIn;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutputValid;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlanUnlocked;                                      // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 Stash;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Plan;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsumablePlanUnlocked_ReturnValue;     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon_Plan;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeaponPlanUnlocked_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_IsPlanUnlocked) == 0x000008, "Wrong alignment on BP_Functions_C_IsPlanUnlocked");
static_assert(sizeof(BP_Functions_C_IsPlanUnlocked) == 0x000070, "Wrong size on BP_Functions_C_IsPlanUnlocked");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, PlanClassIn) == 0x000000, "Member 'BP_Functions_C_IsPlanUnlocked::PlanClassIn' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, PlayerControllerIn) == 0x000008, "Member 'BP_Functions_C_IsPlanUnlocked::PlayerControllerIn' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, __WorldContext) == 0x000010, "Member 'BP_Functions_C_IsPlanUnlocked::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, OutputValid) == 0x000018, "Member 'BP_Functions_C_IsPlanUnlocked::OutputValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, PlanUnlocked) == 0x000019, "Member 'BP_Functions_C_IsPlanUnlocked::PlanUnlocked' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, Stash) == 0x000020, "Member 'BP_Functions_C_IsPlanUnlocked::Stash' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Functions_C_IsPlanUnlocked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, K2Node_DynamicCast_AsHuman_Player_State) == 0x000030, "Member 'BP_Functions_C_IsPlanUnlocked::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Functions_C_IsPlanUnlocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, CallFunc_GetStash_ReturnValue) == 0x000040, "Member 'BP_Functions_C_IsPlanUnlocked::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_IsPlanUnlocked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, K2Node_ClassDynamicCast_AsConsumable_Plan) == 0x000050, "Member 'BP_Functions_C_IsPlanUnlocked::K2Node_ClassDynamicCast_AsConsumable_Plan' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, K2Node_ClassDynamicCast_bSuccess) == 0x000058, "Member 'BP_Functions_C_IsPlanUnlocked::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, CallFunc_IsConsumablePlanUnlocked_ReturnValue) == 0x000059, "Member 'BP_Functions_C_IsPlanUnlocked::CallFunc_IsConsumablePlanUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, K2Node_ClassDynamicCast_AsWeapon_Plan) == 0x000060, "Member 'BP_Functions_C_IsPlanUnlocked::K2Node_ClassDynamicCast_AsWeapon_Plan' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, K2Node_ClassDynamicCast_bSuccess_1) == 0x000068, "Member 'BP_Functions_C_IsPlanUnlocked::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsPlanUnlocked, CallFunc_IsWeaponPlanUnlocked_ReturnValue) == 0x000069, "Member 'BP_Functions_C_IsPlanUnlocked::CallFunc_IsWeaponPlanUnlocked_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ChooseOpticBlur
// 0x1670 (0x1670 - 0x0000)
struct BP_Functions_C_ChooseOpticBlur final
{
public:
	EOpticsType                                   OpticType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       AimPoint;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   OpticsBlur;                                        // 0x0020(0x0590)(Edit, BlueprintVisible)
	struct FPostProcessSettings                   ReflectorBlur;                                     // 0x05B0(0x0590)(Edit, BlueprintVisible)
	struct FPostProcessSettings                   IronsightBlur;                                     // 0x0B40(0x0590)(Edit, BlueprintVisible)
	struct FPostProcessSettings                   NoneBlur;                                          // 0x10D0(0x0590)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x1660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_ChooseOpticBlur) == 0x000010, "Wrong alignment on BP_Functions_C_ChooseOpticBlur");
static_assert(sizeof(BP_Functions_C_ChooseOpticBlur) == 0x001670, "Wrong size on BP_Functions_C_ChooseOpticBlur");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, OpticType) == 0x000000, "Member 'BP_Functions_C_ChooseOpticBlur::OpticType' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, AimPoint) == 0x000008, "Member 'BP_Functions_C_ChooseOpticBlur::AimPoint' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, __WorldContext) == 0x000010, "Member 'BP_Functions_C_ChooseOpticBlur::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, OpticsBlur) == 0x000020, "Member 'BP_Functions_C_ChooseOpticBlur::OpticsBlur' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, ReflectorBlur) == 0x0005B0, "Member 'BP_Functions_C_ChooseOpticBlur::ReflectorBlur' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, IronsightBlur) == 0x000B40, "Member 'BP_Functions_C_ChooseOpticBlur::IronsightBlur' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, NoneBlur) == 0x0010D0, "Member 'BP_Functions_C_ChooseOpticBlur::NoneBlur' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ChooseOpticBlur, K2Node_SwitchEnum_CmpSuccess) == 0x001660, "Member 'BP_Functions_C_ChooseOpticBlur::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ApplyWeaponSkin
// 0x01D0 (0x01D0 - 0x0000)
struct BP_Functions_C_ApplyWeaponSkin final
{
public:
	class UClass*                                 WeaponSkin;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                Weaspon;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExtraMaterialSkinElementName;                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              Materials;                                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	class ABP_PrimaryWeapon_C*                    K2Node_DynamicCast_AsBP_Primary_Weapon;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSkin*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponSkin_C*                       K2Node_DynamicCast_AsBP_Weapon_Skin;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, TSoftObjectPtr<class UMaterialInstance>> CallFunc_GetMaterials_ReturnValue;                 // 0x00B0(0x0050)(ConstParm)
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Map_Find_Value;                           // 0x0100(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Map_Find_Value_1;                         // 0x0130(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_LoadSkinMaterialSynchronous_ReturnValue;  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_LoadSkinMaterialSynchronous_ReturnValue_1; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0178(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSkin*                              CallFunc_GetClassDefaultObject_ReturnValue_1;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetTexture_ReturnValue;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue_1;               // 0x01A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ApplyWeaponSkin) == 0x000008, "Wrong alignment on BP_Functions_C_ApplyWeaponSkin");
static_assert(sizeof(BP_Functions_C_ApplyWeaponSkin) == 0x0001D0, "Wrong size on BP_Functions_C_ApplyWeaponSkin");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, WeaponSkin) == 0x000000, "Member 'BP_Functions_C_ApplyWeaponSkin::WeaponSkin' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, Mesh) == 0x000008, "Member 'BP_Functions_C_ApplyWeaponSkin::Mesh' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, Weaspon) == 0x000010, "Member 'BP_Functions_C_ApplyWeaponSkin::Weaspon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, __WorldContext) == 0x000018, "Member 'BP_Functions_C_ApplyWeaponSkin::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, ExtraMaterialSkinElementName) == 0x000020, "Member 'BP_Functions_C_ApplyWeaponSkin::ExtraMaterialSkinElementName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, Materials) == 0x000028, "Member 'BP_Functions_C_ApplyWeaponSkin::Materials' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_Functions_C_ApplyWeaponSkin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, K2Node_DynamicCast_AsBP_Primary_Weapon) == 0x000048, "Member 'BP_Functions_C_ApplyWeaponSkin::K2Node_DynamicCast_AsBP_Primary_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Functions_C_ApplyWeaponSkin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_IsValidClass_ReturnValue) == 0x000058, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_Functions_C_ApplyWeaponSkin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_Functions_C_ApplyWeaponSkin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_Functions_C_ApplyWeaponSkin::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, K2Node_MakeArray_Array_1) == 0x000078, "Member 'BP_Functions_C_ApplyWeaponSkin::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'BP_Functions_C_ApplyWeaponSkin::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000098, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, K2Node_DynamicCast_AsBP_Weapon_Skin) == 0x0000A0, "Member 'BP_Functions_C_ApplyWeaponSkin::K2Node_DynamicCast_AsBP_Weapon_Skin' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_Functions_C_ApplyWeaponSkin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A9, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_GetMaterials_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Map_Find_Value) == 0x000100, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Map_Find_Value_1) == 0x000130, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Map_Find_ReturnValue_1) == 0x000158, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_LoadSkinMaterialSynchronous_ReturnValue) == 0x000160, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_LoadSkinMaterialSynchronous_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_LoadSkinMaterialSynchronous_ReturnValue_1) == 0x000168, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_LoadSkinMaterialSynchronous_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000170, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000171, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Map_Keys_Keys) == 0x000178, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Add_IntInt_ReturnValue_1) == 0x000188, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Array_Length_ReturnValue_2) == 0x00018C, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Greater_IntInt_ReturnValue) == 0x000190, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Not_PreBool_ReturnValue) == 0x000191, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_GetClassDefaultObject_ReturnValue_1) == 0x000198, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_GetClassDefaultObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_GetTexture_ReturnValue) == 0x0001A0, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_GetTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_GetMaterials_ReturnValue_1) == 0x0001A8, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_GetMaterialIndex_ReturnValue) == 0x0001B8, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001BC, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_GetMaterial_ReturnValue) == 0x0001C0, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ApplyWeaponSkin, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001C8, "Member 'BP_Functions_C_ApplyWeaponSkin::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ClearWeaponSkinVisual
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Functions_C_ClearWeaponSkinVisual final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                Weapon;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExtraMaterialSkinElementName;                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue_1;               // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaterialIndex_ReturnValue_1;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ClearWeaponSkinVisual) == 0x000008, "Wrong alignment on BP_Functions_C_ClearWeaponSkinVisual");
static_assert(sizeof(BP_Functions_C_ClearWeaponSkinVisual) == 0x0000A0, "Wrong size on BP_Functions_C_ClearWeaponSkinVisual");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, Mesh) == 0x000000, "Member 'BP_Functions_C_ClearWeaponSkinVisual::Mesh' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, Weapon) == 0x000008, "Member 'BP_Functions_C_ClearWeaponSkinVisual::Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, ExtraMaterialSkinElementName) == 0x000010, "Member 'BP_Functions_C_ClearWeaponSkinVisual::ExtraMaterialSkinElementName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, __WorldContext) == 0x000018, "Member 'BP_Functions_C_ClearWeaponSkinVisual::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Functions_C_ClearWeaponSkinVisual::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_GetMaterialIndex_ReturnValue) == 0x000024, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_GetMaterials_ReturnValue) == 0x000028, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_GetMaterials_ReturnValue_1) == 0x000038, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_Functions_C_ClearWeaponSkinVisual::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_GetMaterial_ReturnValue) == 0x000050, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000060, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_Functions_C_ClearWeaponSkinVisual::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_GetMaterialIndex_ReturnValue_1) == 0x000084, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_GetMaterialIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000089, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_GetMaterial_ReturnValue_1) == 0x000090, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ClearWeaponSkinVisual, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_ClearWeaponSkinVisual::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Cloud Request Result Equal To
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_Cloud_Request_Result_Equal_To final
{
public:
	struct FCloudRequestResult                    A;                                                 // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ECloudRequestResult                           B;                                                 // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Cloud_Request_Result_Equal_To) == 0x000008, "Wrong alignment on BP_Functions_C_Cloud_Request_Result_Equal_To");
static_assert(sizeof(BP_Functions_C_Cloud_Request_Result_Equal_To) == 0x000070, "Wrong size on BP_Functions_C_Cloud_Request_Result_Equal_To");
static_assert(offsetof(BP_Functions_C_Cloud_Request_Result_Equal_To, A) == 0x000000, "Member 'BP_Functions_C_Cloud_Request_Result_Equal_To::A' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Cloud_Request_Result_Equal_To, B) == 0x000058, "Member 'BP_Functions_C_Cloud_Request_Result_Equal_To::B' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Cloud_Request_Result_Equal_To, __WorldContext) == 0x000060, "Member 'BP_Functions_C_Cloud_Request_Result_Equal_To::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Cloud_Request_Result_Equal_To, ReturnValue) == 0x000068, "Member 'BP_Functions_C_Cloud_Request_Result_Equal_To::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Cloud_Request_Result_Equal_To, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000069, "Member 'BP_Functions_C_Cloud_Request_Result_Equal_To::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Are Characters in Group
// 0x0048 (0x0048 - 0x0000)
struct BP_Functions_C_Are_Characters_in_Group final
{
public:
	class AHumanCharacter*                        Character_A;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Character_B;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Are_in_Group;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Output_Valid;                                      // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Are_Characters_in_Group) == 0x000008, "Wrong alignment on BP_Functions_C_Are_Characters_in_Group");
static_assert(sizeof(BP_Functions_C_Are_Characters_in_Group) == 0x000048, "Wrong size on BP_Functions_C_Are_Characters_in_Group");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, Character_A) == 0x000000, "Member 'BP_Functions_C_Are_Characters_in_Group::Character_A' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, Character_B) == 0x000008, "Member 'BP_Functions_C_Are_Characters_in_Group::Character_B' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Are_Characters_in_Group::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, Are_in_Group) == 0x000018, "Member 'BP_Functions_C_Are_Characters_in_Group::Are_in_Group' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, Output_Valid) == 0x000019, "Member 'BP_Functions_C_Are_Characters_in_Group::Output_Valid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_Functions_C_Are_Characters_in_Group::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Functions_C_Are_Characters_in_Group::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_Len_ReturnValue) == 0x00002C, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, K2Node_DynamicCast_AsHuman_Player_State_1) == 0x000030, "Member 'BP_Functions_C_Are_Characters_in_Group::K2Node_DynamicCast_AsHuman_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_Functions_C_Are_Characters_in_Group::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_Len_ReturnValue_1) == 0x00003C, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000041, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Are_Characters_in_Group, CallFunc_BooleanAND_ReturnValue_1) == 0x000043, "Member 'BP_Functions_C_Are_Characters_in_Group::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.FormatTimespanDHMS(ZeroClamped)
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_FormatTimespanDHMS_ZeroClamped_ final
{
public:
	struct FTimespan                              TimespanIn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TimespanDHMSOut;                                   // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_TimespanTimespan_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_FormatTimespanDHMS_TimespanDHMSOut;       // 0x0048(0x0018)()
};
static_assert(alignof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_) == 0x000008, "Wrong alignment on BP_Functions_C_FormatTimespanDHMS_ZeroClamped_");
static_assert(sizeof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_) == 0x000060, "Wrong size on BP_Functions_C_FormatTimespanDHMS_ZeroClamped_");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, TimespanIn) == 0x000000, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::TimespanIn' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, __WorldContext) == 0x000008, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, TimespanDHMSOut) == 0x000010, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::TimespanDHMSOut' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, Temp_bool_Variable) == 0x000028, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, CallFunc_MakeTimespan_ReturnValue) == 0x000030, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, CallFunc_Less_TimespanTimespan_ReturnValue) == 0x000038, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::CallFunc_Less_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, K2Node_Select_Default) == 0x000040, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FormatTimespanDHMS_ZeroClamped_, CallFunc_FormatTimespanDHMS_TimespanDHMSOut) == 0x000048, "Member 'BP_Functions_C_FormatTimespanDHMS_ZeroClamped_::CallFunc_FormatTimespanDHMS_TimespanDHMSOut' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Count (String)
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_Count__String_ final
{
public:
	TArray<class FString>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Item;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountLoc;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Count__String_) == 0x000008, "Wrong alignment on BP_Functions_C_Count__String_");
static_assert(sizeof(BP_Functions_C_Count__String_) == 0x000060, "Wrong size on BP_Functions_C_Count__String_");
static_assert(offsetof(BP_Functions_C_Count__String_, Array) == 0x000000, "Member 'BP_Functions_C_Count__String_::Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, Item) == 0x000010, "Member 'BP_Functions_C_Count__String_::Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, __WorldContext) == 0x000020, "Member 'BP_Functions_C_Count__String_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, Count) == 0x000028, "Member 'BP_Functions_C_Count__String_::Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, CountLoc) == 0x00002C, "Member 'BP_Functions_C_Count__String_::CountLoc' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_Functions_C_Count__String_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_Functions_C_Count__String_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_Functions_C_Count__String_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_Count__String_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_Functions_C_Count__String_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, Temp_int_Variable) == 0x000044, "Member 'BP_Functions_C_Count__String_::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_Count__String_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Count__String_::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Count__String_, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_Functions_C_Count__String_::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ToString (CloudRequestResult)
// 0x01C0 (0x01C0 - 0x0000)
struct BP_Functions_C_ToString__CloudRequestResult_ final
{
public:
	struct FCloudRequestResult                    Cloud_Request_Result;                              // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Inline;                                            // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0068(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ToString__CloudRequestResult_) == 0x000008, "Wrong alignment on BP_Functions_C_ToString__CloudRequestResult_");
static_assert(sizeof(BP_Functions_C_ToString__CloudRequestResult_) == 0x0001C0, "Wrong size on BP_Functions_C_ToString__CloudRequestResult_");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, Cloud_Request_Result) == 0x000000, "Member 'BP_Functions_C_ToString__CloudRequestResult_::Cloud_Request_Result' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, Inline) == 0x000058, "Member 'BP_Functions_C_ToString__CloudRequestResult_::Inline' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, __WorldContext) == 0x000060, "Member 'BP_Functions_C_ToString__CloudRequestResult_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, String) == 0x000068, "Member 'BP_Functions_C_ToString__CloudRequestResult_::String' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, Temp_string_Variable) == 0x000078, "Member 'BP_Functions_C_ToString__CloudRequestResult_::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Conv_IntToString_ReturnValue) == 0x000088, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000A8, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, Temp_string_Variable_1) == 0x0000C8, "Member 'BP_Functions_C_ToString__CloudRequestResult_::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, Temp_bool_Variable) == 0x0000E8, "Member 'BP_Functions_C_ToString__CloudRequestResult_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, K2Node_Select_Default) == 0x0000F0, "Member 'BP_Functions_C_ToString__CloudRequestResult_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000100, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000110, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000120, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000130, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000140, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000150, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000160, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000170, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000180, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000190, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001A0, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ToString__CloudRequestResult_, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001B0, "Member 'BP_Functions_C_ToString__CloudRequestResult_::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SkinSetDefaultMaterial
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Functions_C_SkinSetDefaultMaterial final
{
public:
	class AWeapon*                                Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExtraSlot;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponMesh;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMeleeWeapon*                           K2Node_DynamicCast_AsMelee_Weapon;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASideArmWeapon*                         K2Node_DynamicCast_AsSide_Arm_Weapon;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PrimaryWeapon_C*                    K2Node_DynamicCast_AsBP_Primary_Weapon;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaterialSlotNameValid_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue_1;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SkinSetDefaultMaterial) == 0x000008, "Wrong alignment on BP_Functions_C_SkinSetDefaultMaterial");
static_assert(sizeof(BP_Functions_C_SkinSetDefaultMaterial) == 0x0000C8, "Wrong size on BP_Functions_C_SkinSetDefaultMaterial");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, Weapon) == 0x000000, "Member 'BP_Functions_C_SkinSetDefaultMaterial::Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, ExtraSlot) == 0x000008, "Member 'BP_Functions_C_SkinSetDefaultMaterial::ExtraSlot' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, __WorldContext) == 0x000010, "Member 'BP_Functions_C_SkinSetDefaultMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, WeaponMesh) == 0x000018, "Member 'BP_Functions_C_SkinSetDefaultMaterial::WeaponMesh' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Functions_C_SkinSetDefaultMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000030, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Functions_C_SkinSetDefaultMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, K2Node_DynamicCast_AsMelee_Weapon) == 0x000040, "Member 'BP_Functions_C_SkinSetDefaultMaterial::K2Node_DynamicCast_AsMelee_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Functions_C_SkinSetDefaultMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, K2Node_DynamicCast_AsSide_Arm_Weapon) == 0x000050, "Member 'BP_Functions_C_SkinSetDefaultMaterial::K2Node_DynamicCast_AsSide_Arm_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Functions_C_SkinSetDefaultMaterial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, K2Node_DynamicCast_AsBP_Primary_Weapon) == 0x000060, "Member 'BP_Functions_C_SkinSetDefaultMaterial::K2Node_DynamicCast_AsBP_Primary_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_Functions_C_SkinSetDefaultMaterial::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_GetMaterials_ReturnValue) == 0x000070, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_GetMaterialIndex_ReturnValue) == 0x000080, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_Functions_C_SkinSetDefaultMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000098, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_Array_Get_Item) == 0x00009C, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_IsMaterialSlotNameValid_ReturnValue) == 0x0000A4, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_IsMaterialSlotNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_GetMaterialIndex_ReturnValue_1) == 0x0000A8, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_GetMaterialIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_GetMaterial_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_IsValid_ReturnValue) == 0x0000BC, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x0000BD, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SkinSetDefaultMaterial, CallFunc_GetMaterial_ReturnValue_1) == 0x0000C0, "Member 'BP_Functions_C_SkinSetDefaultMaterial::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.PlayerAcquiredCrowns
// 0x0028 (0x0028 - 0x0000)
struct BP_Functions_C_PlayerAcquiredCrowns final
{
public:
	int32                                         Crown_Amount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Crown_Bonus_Amount;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CrownsAddedNotification_C*          CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_PlayerAcquiredCrowns) == 0x000008, "Wrong alignment on BP_Functions_C_PlayerAcquiredCrowns");
static_assert(sizeof(BP_Functions_C_PlayerAcquiredCrowns) == 0x000028, "Wrong size on BP_Functions_C_PlayerAcquiredCrowns");
static_assert(offsetof(BP_Functions_C_PlayerAcquiredCrowns, Crown_Amount) == 0x000000, "Member 'BP_Functions_C_PlayerAcquiredCrowns::Crown_Amount' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerAcquiredCrowns, Crown_Bonus_Amount) == 0x000004, "Member 'BP_Functions_C_PlayerAcquiredCrowns::Crown_Bonus_Amount' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerAcquiredCrowns, __WorldContext) == 0x000008, "Member 'BP_Functions_C_PlayerAcquiredCrowns::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerAcquiredCrowns, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_Functions_C_PlayerAcquiredCrowns::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerAcquiredCrowns, CallFunc_GetNotificationSystem_ReturnValue) == 0x000018, "Member 'BP_Functions_C_PlayerAcquiredCrowns::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayerAcquiredCrowns, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Functions_C_PlayerAcquiredCrowns::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ItemClassToTable
// 0x0310 (0x0310 - 0x0000)
struct BP_Functions_C_ItemClassToTable final
{
public:
	class UClass*                                 ItemClass;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             RelatedDataTable;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UDataTable>              DataTable_SoftRef;                                 // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Archetype; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsShelter_Slot;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsShelter_Improvement;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCollectible_Item;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsObjective_Item;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_4;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCurrency_Item;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_5;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Part;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_6;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Plan;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_7;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsShelter_Resource_Item;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_8;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_9;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Lootbox_Base;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_10;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsAmmo_Item;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_11;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon_Skin;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_12;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon_Part;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_13;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Gesture_Variant; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_14;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Variant;   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_15;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon_Plan;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_16;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCurrency;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_17;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Item;         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_18;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_3; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_4; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_5; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_6; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_7; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_8; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_9; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_10; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_11; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_12; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_13; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_14; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_15; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_16; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_17; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_18; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ItemClassToTable) == 0x000008, "Wrong alignment on BP_Functions_C_ItemClassToTable");
static_assert(sizeof(BP_Functions_C_ItemClassToTable) == 0x000310, "Wrong size on BP_Functions_C_ItemClassToTable");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, ItemClass) == 0x000000, "Member 'BP_Functions_C_ItemClassToTable::ItemClass' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, __WorldContext) == 0x000008, "Member 'BP_Functions_C_ItemClassToTable::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, RelatedDataTable) == 0x000010, "Member 'BP_Functions_C_ItemClassToTable::RelatedDataTable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, DataTable_SoftRef) == 0x000018, "Member 'BP_Functions_C_ItemClassToTable::DataTable_SoftRef' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, DataTable) == 0x000040, "Member 'BP_Functions_C_ItemClassToTable::DataTable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_struct_Variable) == 0x000048, "Member 'BP_Functions_C_ItemClassToTable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsCustomization_Archetype) == 0x000058, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsCustomization_Archetype' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsShelter_Slot) == 0x000068, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsShelter_Slot' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_1) == 0x000070, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsShelter_Improvement) == 0x000078, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsShelter_Improvement' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_2) == 0x000080, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsCollectible_Item) == 0x000088, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsCollectible_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_3) == 0x000090, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsObjective_Item) == 0x000098, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsObjective_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_4) == 0x0000A0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsCurrency_Item) == 0x0000A8, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsCurrency_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_5) == 0x0000B0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsConsumable_Part) == 0x0000B8, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsConsumable_Part' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_6) == 0x0000C0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_IsValidClass_ReturnValue) == 0x0000C1, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsConsumable_Plan) == 0x0000C8, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsConsumable_Plan' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_7) == 0x0000D0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsShelter_Resource_Item) == 0x0000D8, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsShelter_Resource_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_8) == 0x0000E0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsWeapon) == 0x0000E8, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_9) == 0x0000F0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsBP_Lootbox_Base) == 0x0000F8, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsBP_Lootbox_Base' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_10) == 0x000100, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsAmmo_Item) == 0x000108, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsAmmo_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_11) == 0x000110, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsWeapon_Skin) == 0x000118, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsWeapon_Skin' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_12) == 0x000120, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsWeapon_Part) == 0x000128, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsWeapon_Part' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_13) == 0x000130, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsCustomization_Gesture_Variant) == 0x000138, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsCustomization_Gesture_Variant' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_14) == 0x000140, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsCustomization_Variant) == 0x000148, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsCustomization_Variant' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_15) == 0x000150, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_GetClassDisplayName_ReturnValue) == 0x000158, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsWeapon_Plan) == 0x000168, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsWeapon_Plan' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_16) == 0x000170, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsCurrency) == 0x000178, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsCurrency' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_17) == 0x000180, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_AsConsumable_Item) == 0x000188, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_AsConsumable_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_ClassDynamicCast_bSuccess_18) == 0x000190, "Member 'BP_Functions_C_ItemClassToTable::K2Node_ClassDynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_struct_Variable_1) == 0x000194, "Member 'BP_Functions_C_ItemClassToTable::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_bool_Variable) == 0x0001A4, "Member 'BP_Functions_C_ItemClassToTable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_struct_Variable_2) == 0x0001A8, "Member 'BP_Functions_C_ItemClassToTable::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_struct_Variable_3) == 0x0001B8, "Member 'BP_Functions_C_ItemClassToTable::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_bool_Variable_1) == 0x0001C8, "Member 'BP_Functions_C_ItemClassToTable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_Select_Default) == 0x0001CC, "Member 'BP_Functions_C_ItemClassToTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_string_Variable) == 0x0001E0, "Member 'BP_Functions_C_ItemClassToTable::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_bool_Variable_2) == 0x0001F0, "Member 'BP_Functions_C_ItemClassToTable::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_string_Variable_1) == 0x0001F8, "Member 'BP_Functions_C_ItemClassToTable::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_Select_Default_1) == 0x000208, "Member 'BP_Functions_C_ItemClassToTable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, Temp_bool_Variable_3) == 0x000218, "Member 'BP_Functions_C_ItemClassToTable::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_IsValid_ReturnValue) == 0x000219, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000220, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1) == 0x000228, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2) == 0x000230, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_3) == 0x000238, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_4) == 0x000240, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_5) == 0x000248, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_6) == 0x000250, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_7) == 0x000258, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_8) == 0x000260, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_9) == 0x000268, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_10) == 0x000270, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_11) == 0x000278, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_12) == 0x000280, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_13) == 0x000288, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_14) == 0x000290, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_15) == 0x000298, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_16) == 0x0002A0, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_17) == 0x0002A8, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0002B0, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0002B8, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_DynamicCast_AsData_Table) == 0x0002C0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_DynamicCast_bSuccess) == 0x0002C8, "Member 'BP_Functions_C_ItemClassToTable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_18) == 0x0002D0, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_GetDisplayName_ReturnValue) == 0x0002D8, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, CallFunc_IsValid_ReturnValue_1) == 0x0002E8, "Member 'BP_Functions_C_ItemClassToTable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_Select_Default_2) == 0x0002F0, "Member 'BP_Functions_C_ItemClassToTable::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ItemClassToTable, K2Node_Select_Default_3) == 0x000300, "Member 'BP_Functions_C_ItemClassToTable::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.HasOwnedLabelInShop
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Functions_C_HasOwnedLabelInShop final
{
public:
	class UClass*                                 StoreItemClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 HumanPlayerController;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OwnedOut;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 StoreItemClass_Loc;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 HumanPlayerController_Loc;                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShelterCustomizationComponent*         CallFunc_GetWardrobeComponent_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Variant_Bundle; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon_Skin;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class ACustomizationVariant>> CallFunc_GetOwnedCustomizationVariants_ReturnValue; // 0x0058(0x0010)(ReferenceParm)
	TSubclassOf<class AWeapon>                    CallFunc_GetWeaponFromSkin_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSubclassOf<class AWeaponSkin>>        CallFunc_GetAllOwnedWeaponSkins_ReturnValue;       // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsPlan;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlanUnlocked_OutputValid;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlanUnlocked_PlanUnlocked;              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Variant;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_HasOwnedLabelInShop) == 0x000008, "Wrong alignment on BP_Functions_C_HasOwnedLabelInShop");
static_assert(sizeof(BP_Functions_C_HasOwnedLabelInShop) == 0x0000A8, "Wrong size on BP_Functions_C_HasOwnedLabelInShop");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, StoreItemClass) == 0x000000, "Member 'BP_Functions_C_HasOwnedLabelInShop::StoreItemClass' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, HumanPlayerController) == 0x000008, "Member 'BP_Functions_C_HasOwnedLabelInShop::HumanPlayerController' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, __WorldContext) == 0x000010, "Member 'BP_Functions_C_HasOwnedLabelInShop::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, OwnedOut) == 0x000018, "Member 'BP_Functions_C_HasOwnedLabelInShop::OwnedOut' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, StoreItemClass_Loc) == 0x000020, "Member 'BP_Functions_C_HasOwnedLabelInShop::StoreItemClass_Loc' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, HumanPlayerController_Loc) == 0x000028, "Member 'BP_Functions_C_HasOwnedLabelInShop::HumanPlayerController_Loc' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_GetWardrobeComponent_ReturnValue) == 0x000030, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_GetWardrobeComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_AsCustomization_Variant_Bundle) == 0x000038, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_AsCustomization_Variant_Bundle' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_bSuccess) == 0x000040, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_Array_Contains_ReturnValue) == 0x000041, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_AsWeapon_Skin) == 0x000048, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_AsWeapon_Skin' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_GetOwnedCustomizationVariants_ReturnValue) == 0x000058, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_GetOwnedCustomizationVariants_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_GetWeaponFromSkin_ReturnValue) == 0x000068, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_GetWeaponFromSkin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_GetAllOwnedWeaponSkins_ReturnValue) == 0x000070, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_GetAllOwnedWeaponSkins_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_Array_Contains_ReturnValue_1) == 0x000080, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_AsPlan) == 0x000088, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_AsPlan' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_bSuccess_2) == 0x000090, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_IsPlanUnlocked_OutputValid) == 0x000091, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_IsPlanUnlocked_OutputValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_IsPlanUnlocked_PlanUnlocked) == 0x000092, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_IsPlanUnlocked_PlanUnlocked' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_AsCustomization_Variant) == 0x000098, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_AsCustomization_Variant' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, K2Node_ClassDynamicCast_bSuccess_3) == 0x0000A0, "Member 'BP_Functions_C_HasOwnedLabelInShop::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasOwnedLabelInShop, CallFunc_Array_Contains_ReturnValue_2) == 0x0000A1, "Member 'BP_Functions_C_HasOwnedLabelInShop::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetExclusiveOffers
// 0x0120 (0x0120 - 0x0000)
struct BP_Functions_C_GetExclusiveOffers final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameStoreOfferInfo>            ExclusiveOffers;                                   // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FGameStoreOfferInfo>            Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FGameStoreInfo                         StoreInfo;                                         // 0x0028(0x0028)(Edit, BlueprintVisible)
	class UGameStoreSystem*                       CallFunc_GetGameStoreSystem_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameStoreOffers*                       CallFunc_GetGameStoreOffersManager_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameStoreSlotInfo_StoreFound;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreInfo                         CallFunc_GetGameStoreSlotInfo_ReturnValue;         // 0x0070(0x0028)(ConstParm)
	EGameStoreOffersState                         CallFunc_GetOffersManagerState_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreSlotInfo                     CallFunc_Array_Get_Item;                           // 0x00B0(0x0020)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindValidOffer_ValidOfferFound;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreOfferInfo                    CallFunc_FindValidOffer_ValidOffer;                // 0x00D8(0x0028)()
	struct FDateTime                              CallFunc_FindValidOffer_ValidUntil;                // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindValidOffer_RemainingSeconds;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindValidOffer_OfferIndex;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_GetExclusiveOffers) == 0x000008, "Wrong alignment on BP_Functions_C_GetExclusiveOffers");
static_assert(sizeof(BP_Functions_C_GetExclusiveOffers) == 0x000120, "Wrong size on BP_Functions_C_GetExclusiveOffers");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, __WorldContext) == 0x000000, "Member 'BP_Functions_C_GetExclusiveOffers::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, ExclusiveOffers) == 0x000008, "Member 'BP_Functions_C_GetExclusiveOffers::ExclusiveOffers' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, Result) == 0x000018, "Member 'BP_Functions_C_GetExclusiveOffers::Result' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, StoreInfo) == 0x000028, "Member 'BP_Functions_C_GetExclusiveOffers::StoreInfo' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_GetGameStoreSystem_ReturnValue) == 0x000050, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_GetGameStoreSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_GetGameStoreOffersManager_ReturnValue) == 0x000060, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_GetGameStoreOffersManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_GetGameStoreSlotInfo_StoreFound) == 0x000068, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_GetGameStoreSlotInfo_StoreFound' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_GetGameStoreSlotInfo_ReturnValue) == 0x000070, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_GetGameStoreSlotInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_GetOffersManagerState_ReturnValue) == 0x000098, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_GetOffersManagerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000099, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_IsValid_ReturnValue_1) == 0x00009A, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_GetCloudTime_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_GetCloudTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_Functions_C_GetExclusiveOffers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BP_Functions_C_GetExclusiveOffers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_FindValidOffer_ValidOfferFound) == 0x0000D4, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_FindValidOffer_ValidOfferFound' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_FindValidOffer_ValidOffer) == 0x0000D8, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_FindValidOffer_ValidOffer' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_FindValidOffer_ValidUntil) == 0x000100, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_FindValidOffer_ValidUntil' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_FindValidOffer_RemainingSeconds) == 0x000108, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_FindValidOffer_RemainingSeconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_FindValidOffer_OfferIndex) == 0x00010C, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_FindValidOffer_OfferIndex' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_Array_AddUnique_ReturnValue) == 0x000114, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetExclusiveOffers, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_Functions_C_GetExclusiveOffers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Weapon Ammo and Magazine Size
// 0x0480 (0x0480 - 0x0000)
struct BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size final
{
public:
	class UClass*                                 Weapon_Class;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Ammo_Item;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Magazine_Size;                                     // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirearmWeaponConfiguration            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0418)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size");
static_assert(sizeof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size) == 0x000480, "Wrong size on BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, Weapon_Class) == 0x000000, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::Weapon_Class' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, Ammo_Item) == 0x000010, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::Ammo_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, Magazine_Size) == 0x000018, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::Magazine_Size' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000020, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000468, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, Temp_int_Loop_Counter_Variable) == 0x00046C, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_Less_IntInt_ReturnValue) == 0x000470, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_Add_IntInt_ReturnValue) == 0x000474, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000478, "Member 'BP_Functions_C_Get_Weapon_Ammo_and_Magazine_Size::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetUserPawn
// 0x0030 (0x0030 - 0x0000)
struct BP_Functions_C_GetUserPawn final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Pawn;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_GetUserPawn) == 0x000008, "Wrong alignment on BP_Functions_C_GetUserPawn");
static_assert(sizeof(BP_Functions_C_GetUserPawn) == 0x000030, "Wrong size on BP_Functions_C_GetUserPawn");
static_assert(offsetof(BP_Functions_C_GetUserPawn, __WorldContext) == 0x000000, "Member 'BP_Functions_C_GetUserPawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetUserPawn, Pawn) == 0x000008, "Member 'BP_Functions_C_GetUserPawn::Pawn' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetUserPawn, CallFunc_GetUserControllerId_ReturnValue) == 0x000010, "Member 'BP_Functions_C_GetUserPawn::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetUserPawn, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000018, "Member 'BP_Functions_C_GetUserPawn::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetUserPawn, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_Functions_C_GetUserPawn::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetUserPawn, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Functions_C_GetUserPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetFlameController
// 0x0020 (0x0020 - 0x0000)
struct BP_Functions_C_GetFlameController final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_GetFlameController) == 0x000008, "Wrong alignment on BP_Functions_C_GetFlameController");
static_assert(sizeof(BP_Functions_C_GetFlameController) == 0x000020, "Wrong size on BP_Functions_C_GetFlameController");
static_assert(offsetof(BP_Functions_C_GetFlameController, __WorldContext) == 0x000000, "Member 'BP_Functions_C_GetFlameController::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetFlameController, ReturnValue) == 0x000008, "Member 'BP_Functions_C_GetFlameController::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetFlameController, CallFunc_GetUserControllerId_ReturnValue) == 0x000010, "Member 'BP_Functions_C_GetFlameController::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetFlameController, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000018, "Member 'BP_Functions_C_GetFlameController::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetBitwiseMask
// 0x0030 (0x0030 - 0x0000)
struct BP_Functions_C_GetBitwiseMask final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mask;                                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Not_Int_ReturnValue;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitwiseShiftLeft_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_GetBitwiseMask) == 0x000008, "Wrong alignment on BP_Functions_C_GetBitwiseMask");
static_assert(sizeof(BP_Functions_C_GetBitwiseMask) == 0x000030, "Wrong size on BP_Functions_C_GetBitwiseMask");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, Length) == 0x000000, "Member 'BP_Functions_C_GetBitwiseMask::Length' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, __WorldContext) == 0x000008, "Member 'BP_Functions_C_GetBitwiseMask::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, Mask) == 0x000010, "Member 'BP_Functions_C_GetBitwiseMask::Mask' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, Temp_bool_Variable) == 0x000014, "Member 'BP_Functions_C_GetBitwiseMask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, CallFunc_Clamp_ReturnValue) == 0x000018, "Member 'BP_Functions_C_GetBitwiseMask::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, CallFunc_Not_Int_ReturnValue) == 0x00001C, "Member 'BP_Functions_C_GetBitwiseMask::CallFunc_Not_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_Functions_C_GetBitwiseMask::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, CallFunc_BitwiseShiftLeft_ReturnValue) == 0x000024, "Member 'BP_Functions_C_GetBitwiseMask::CallFunc_BitwiseShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_Functions_C_GetBitwiseMask::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBitwiseMask, K2Node_Select_Default) == 0x00002C, "Member 'BP_Functions_C_GetBitwiseMask::K2Node_Select_Default' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Pack Integers
// 0x0068 (0x0068 - 0x0000)
struct BP_Functions_C_Pack_Integers final
{
public:
	TArray<int32>                                 Ints;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 BitLengths;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Int;                                               // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShiftLength;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBitwiseMask_Mask;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitwiseShiftLeft_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Pack_Integers) == 0x000008, "Wrong alignment on BP_Functions_C_Pack_Integers");
static_assert(sizeof(BP_Functions_C_Pack_Integers) == 0x000068, "Wrong size on BP_Functions_C_Pack_Integers");
static_assert(offsetof(BP_Functions_C_Pack_Integers, Ints) == 0x000000, "Member 'BP_Functions_C_Pack_Integers::Ints' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, BitLengths) == 0x000010, "Member 'BP_Functions_C_Pack_Integers::BitLengths' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, __WorldContext) == 0x000020, "Member 'BP_Functions_C_Pack_Integers::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, Int) == 0x000028, "Member 'BP_Functions_C_Pack_Integers::Int' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, Result) == 0x00002C, "Member 'BP_Functions_C_Pack_Integers::Result' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, ShiftLength) == 0x000030, "Member 'BP_Functions_C_Pack_Integers::ShiftLength' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000038, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Min_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, Temp_int_Variable) == 0x000040, "Member 'BP_Functions_C_Pack_Integers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_GetBitwiseMask_Mask) == 0x000050, "Member 'BP_Functions_C_Pack_Integers::CallFunc_GetBitwiseMask_Mask' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Array_Get_Item_1) == 0x000054, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_And_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Pack_Integers::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_Pack_Integers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_BitwiseShiftLeft_ReturnValue) == 0x000060, "Member 'BP_Functions_C_Pack_Integers::CallFunc_BitwiseShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Pack_Integers, CallFunc_Or_IntInt_ReturnValue) == 0x000064, "Member 'BP_Functions_C_Pack_Integers::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Unpack Integers
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_Unpack_Integers final
{
public:
	int32                                         Int;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 BitLengths;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Ints;                                              // 0x0020(0x0010)(Parm, OutParm)
	TArray<int32>                                 Result;                                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         ShiftedInput;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBitwiseMask_Mask;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitwiseShiftRight_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Unpack_Integers) == 0x000008, "Wrong alignment on BP_Functions_C_Unpack_Integers");
static_assert(sizeof(BP_Functions_C_Unpack_Integers) == 0x000070, "Wrong size on BP_Functions_C_Unpack_Integers");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, Int) == 0x000000, "Member 'BP_Functions_C_Unpack_Integers::Int' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, BitLengths) == 0x000008, "Member 'BP_Functions_C_Unpack_Integers::BitLengths' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, __WorldContext) == 0x000018, "Member 'BP_Functions_C_Unpack_Integers::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, Ints) == 0x000020, "Member 'BP_Functions_C_Unpack_Integers::Ints' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, Result) == 0x000030, "Member 'BP_Functions_C_Unpack_Integers::Result' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, ShiftedInput) == 0x000040, "Member 'BP_Functions_C_Unpack_Integers::ShiftedInput' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_Functions_C_Unpack_Integers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_Functions_C_Unpack_Integers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_GetBitwiseMask_Mask) == 0x000054, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_GetBitwiseMask_Mask' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_BitwiseShiftRight_ReturnValue) == 0x000060, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_BitwiseShiftRight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_And_IntInt_ReturnValue) == 0x000064, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Unpack_Integers, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Unpack_Integers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Join Integer Array
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Functions_C_Join_Integer_Array final
{
public:
	TArray<int32>                                 SourceArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Separator;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 JoinedText;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Join_Integer_Array) == 0x000008, "Wrong alignment on BP_Functions_C_Join_Integer_Array");
static_assert(sizeof(BP_Functions_C_Join_Integer_Array) == 0x0000B8, "Wrong size on BP_Functions_C_Join_Integer_Array");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, SourceArray) == 0x000000, "Member 'BP_Functions_C_Join_Integer_Array::SourceArray' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, Separator) == 0x000010, "Member 'BP_Functions_C_Join_Integer_Array::Separator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, __WorldContext) == 0x000020, "Member 'BP_Functions_C_Join_Integer_Array::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, ReturnValue) == 0x000028, "Member 'BP_Functions_C_Join_Integer_Array::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, JoinedText) == 0x000038, "Member 'BP_Functions_C_Join_Integer_Array::JoinedText' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Array_LastIndex_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, Temp_int_Variable) == 0x000080, "Member 'BP_Functions_C_Join_Integer_Array::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Join_Integer_Array, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_Join_Integer_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetAchievementProgress
// 0x0138 (0x0138 - 0x0000)
struct BP_Functions_C_GetAchievementProgress final
{
public:
	class FName                                   AchievementName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProgressValid;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_1;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckForValidGameInstance_bValid;     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_2;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_3;          // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AchievementsTableRow                CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgress_ValidOutput;   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate; // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPI_GetAchievementProgress_AchievementProgress; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_GetAchievementProgress_ValidOutput_1; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate_1; // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPI_GetAchievementProgress_AchievementProgress_1; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid; // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress; // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_GetAchievementProgress) == 0x000008, "Wrong alignment on BP_Functions_C_GetAchievementProgress");
static_assert(sizeof(BP_Functions_C_GetAchievementProgress) == 0x000138, "Wrong size on BP_Functions_C_GetAchievementProgress");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, AchievementName) == 0x000000, "Member 'BP_Functions_C_GetAchievementProgress::AchievementName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, __WorldContext) == 0x000008, "Member 'BP_Functions_C_GetAchievementProgress::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, IsProgressValid) == 0x000010, "Member 'BP_Functions_C_GetAchievementProgress::IsProgressValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, Progress) == 0x000014, "Member 'BP_Functions_C_GetAchievementProgress::Progress' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetGameInstance_ReturnValue_1) == 0x000020, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_AsBPI_Game_Instance) == 0x000028, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_AsBPI_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_AsBPI_Game_Instance_1) == 0x000040, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_AsBPI_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_CheckForValidGameInstance_bValid) == 0x000051, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_CheckForValidGameInstance_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetGameInstance_ReturnValue_2) == 0x000058, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_AsBPI_Game_Instance_2) == 0x000060, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_AsBPI_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_AsBPI_Game_Instance_3) == 0x000078, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_AsBPI_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetUserControllerId_ReturnValue) == 0x00008C, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_IsDedicatedServer_ReturnValue) == 0x000090, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000098, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000118, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgress_ValidOutput) == 0x000119, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgress_ValidOutput' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate) == 0x00011A, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgress_AchievementProgress) == 0x00011C, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgress_AchievementProgress' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgress_ValidOutput_1) == 0x000120, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgress_ValidOutput_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate_1) == 0x000121, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgress_MightBeOutOfDate_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgress_AchievementProgress_1) == 0x000124, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgress_AchievementProgress_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00012A, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012B, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BooleanAND_ReturnValue_1) == 0x00012C, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BooleanAND_ReturnValue_2) == 0x00012D, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_GetCurrentPlatform_ReturnValue) == 0x00012E, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid) == 0x00012F, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgressFromSave_Pure_bValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress) == 0x000130, "Member 'BP_Functions_C_GetAchievementProgress::CallFunc_BPI_GetAchievementProgressFromSave_Pure_AchievementProgress' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetAchievementProgress, K2Node_SwitchEnum_CmpSuccess) == 0x000134, "Member 'BP_Functions_C_GetAchievementProgress::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ConvertTransformToPasteFriendlyFormat
// 0x0280 (0x0280 - 0x0000)
struct BP_Functions_C_ConvertTransformToPasteFriendlyFormat final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PasteFriendlyString;                               // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_4;         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_5;         // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_RotatorToQuaternion_ReturnValue;          // 0x00F0(0x0010)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_6;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_7;         // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_8;         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_9;         // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat) == 0x000010, "Wrong alignment on BP_Functions_C_ConvertTransformToPasteFriendlyFormat");
static_assert(sizeof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat) == 0x000280, "Wrong size on BP_Functions_C_ConvertTransformToPasteFriendlyFormat");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, Transform) == 0x000000, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::Transform' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, __WorldContext) == 0x000030, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, PasteFriendlyString) == 0x000038, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::PasteFriendlyString' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakTransform_Location) == 0x000048, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakTransform_Rotation) == 0x000054, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakTransform_Scale) == 0x000060, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakVector_X) == 0x00006C, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakVector_Y) == 0x000070, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakVector_Z) == 0x000074, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakVector_X_1) == 0x000078, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakVector_Y_1) == 0x00007C, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue) == 0x000088, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000098, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0000A8, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x0000B8, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_4) == 0x0000C8, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_5) == 0x0000D8, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_RotatorToQuaternion_ReturnValue) == 0x0000F0, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_RotatorToQuaternion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_6) == 0x000100, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_7) == 0x000110, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue) == 0x000120, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_8) == 0x000130, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000140, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_9) == 0x000150, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000160, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000170, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000180, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000190, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001A0, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001B0, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001C0, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001D0, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001E0, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001F0, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000200, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000210, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000220, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000230, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000240, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000250, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000260, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertTransformToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000270, "Member 'BP_Functions_C_ConvertTransformToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ConvertRotatorToPasteFriendlyFormat
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Functions_C_ConvertRotatorToPasteFriendlyFormat final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PasteFriendlyString;                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat) == 0x000008, "Wrong alignment on BP_Functions_C_ConvertRotatorToPasteFriendlyFormat");
static_assert(sizeof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat) == 0x0000C8, "Wrong size on BP_Functions_C_ConvertRotatorToPasteFriendlyFormat");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, Rotator) == 0x000000, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::Rotator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, __WorldContext) == 0x000010, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, PasteFriendlyString) == 0x000018, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::PasteFriendlyString' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue) == 0x000038, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000058, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ConvertRotatorToPasteFriendlyFormat, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000B8, "Member 'BP_Functions_C_ConvertRotatorToPasteFriendlyFormat::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.CopyToClipboardPlayerCustomizationContainer
// 0x0170 (0x0170 - 0x0000)
struct BP_Functions_C_CopyToClipboardPlayerCustomizationContainer final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TempString;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AShelterUIBase*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMannequin*                             CallFunc_GetItemPreviews_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FCustomizationSlotVariant>      K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<struct FCustomizationSlotVariant>      CallFunc_GetPlayerCurrentOutfitVariantSlots_OutVariantSlotsPairs; // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetPlayerCurrentOutfitVariantSlots_bOutSucess; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0090(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1; // 0x00C8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1; // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer) == 0x000008, "Wrong alignment on BP_Functions_C_CopyToClipboardPlayerCustomizationContainer");
static_assert(sizeof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer) == 0x000170, "Wrong size on BP_Functions_C_CopyToClipboardPlayerCustomizationContainer");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, __WorldContext) == 0x000000, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, TempString) == 0x000008, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::TempString' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_GetActorOfClass_ReturnValue) == 0x000020, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_GetItemPreviews_ReturnValue) == 0x000030, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_GetItemPreviews_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_SelectString_ReturnValue) == 0x000040, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_GetPlayerCurrentOutfitVariantSlots_OutVariantSlotsPairs) == 0x000060, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_GetPlayerCurrentOutfitVariantSlots_OutVariantSlotsPairs' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_GetPlayerCurrentOutfitVariantSlots_bOutSucess) == 0x000070, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_GetPlayerCurrentOutfitVariantSlots_bOutSucess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000090, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1) == 0x0000C8, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1) == 0x0000F0, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000120, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000130, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000140, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000150, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CopyToClipboardPlayerCustomizationContainer, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000160, "Member 'BP_Functions_C_CopyToClipboardPlayerCustomizationContainer::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetFadeInMaterialVisibility
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_SetFadeInMaterialVisibility final
{
public:
	class FName                                   MeshActor_TAG;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visibility;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AStaticMeshActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       K2Node_DynamicCast_AsStatic_Mesh_Actor;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SetFadeInMaterialVisibility) == 0x000008, "Wrong alignment on BP_Functions_C_SetFadeInMaterialVisibility");
static_assert(sizeof(BP_Functions_C_SetFadeInMaterialVisibility) == 0x000060, "Wrong size on BP_Functions_C_SetFadeInMaterialVisibility");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, MeshActor_TAG) == 0x000000, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::MeshActor_TAG' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, Visibility) == 0x000008, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, __WorldContext) == 0x000010, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, CallFunc_GetTimeSeconds_ReturnValue) == 0x000018, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x00001C, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000020, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, Temp_bool_True_if_break_was_hit_Variable) == 0x000034, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, K2Node_DynamicCast_AsStatic_Mesh_Actor) == 0x000048, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::K2Node_DynamicCast_AsStatic_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFadeInMaterialVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_SetFadeInMaterialVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Set Material VisibilityActors with Tag
// 0x0128 (0x0128 - 0x0000)
struct BP_Functions_C_Set_Material_VisibilityActors_with_Tag final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ActorTagVisibilityMapWrap           Tag_to_count;                                      // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AStaticMeshActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x00E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       K2Node_DynamicCast_AsStatic_Mesh_Actor;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag) == 0x000008, "Wrong alignment on BP_Functions_C_Set_Material_VisibilityActors_with_Tag");
static_assert(sizeof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag) == 0x000128, "Wrong size on BP_Functions_C_Set_Material_VisibilityActors_with_Tag");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, bNewVisibility) == 0x000000, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, Tag_to_count) == 0x000008, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::Tag_to_count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, __WorldContext) == 0x000058, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, Temp_int_Variable) == 0x000060, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_GetTimeSeconds_ReturnValue) == 0x000064, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x00007C, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Map_Find_ReturnValue) == 0x0000C4, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Conv_StringToName_ReturnValue) == 0x0000DC, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x0000E8, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, K2Node_DynamicCast_AsStatic_Mesh_Actor) == 0x000108, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::K2Node_DynamicCast_AsStatic_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Array_Length_ReturnValue_1) == 0x000114, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Less_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Array_Length_ReturnValue_2) == 0x00011C, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Greater_IntInt_ReturnValue) == 0x000120, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Set_Material_VisibilityActors_with_Tag, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'BP_Functions_C_Set_Material_VisibilityActors_with_Tag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetHiddenActorByTag
// 0x0108 (0x0108 - 0x0000)
struct BP_Functions_C_SetHiddenActorByTag final
{
public:
	TMap<class FString, int32>                    Tag_to_Max_Count;                                  // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AStaticMeshActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_SetHiddenActorByTag) == 0x000008, "Wrong alignment on BP_Functions_C_SetHiddenActorByTag");
static_assert(sizeof(BP_Functions_C_SetHiddenActorByTag) == 0x000108, "Wrong size on BP_Functions_C_SetHiddenActorByTag");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, Tag_to_Max_Count) == 0x000000, "Member 'BP_Functions_C_SetHiddenActorByTag::Tag_to_Max_Count' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, __WorldContext) == 0x000050, "Member 'BP_Functions_C_SetHiddenActorByTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_Functions_C_SetHiddenActorByTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Map_Keys_Keys) == 0x000060, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, Temp_int_Variable) == 0x000074, "Member 'BP_Functions_C_SetHiddenActorByTag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Conv_IntToString_ReturnValue) == 0x000078, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_Functions_C_SetHiddenActorByTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, Temp_int_Array_Index_Variable_1) == 0x000098, "Member 'BP_Functions_C_SetHiddenActorByTag::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'BP_Functions_C_SetHiddenActorByTag::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Map_Find_ReturnValue) == 0x0000B4, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Conv_StringToName_ReturnValue) == 0x0000CC, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x0000D8, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E8, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Array_Length_ReturnValue_2) == 0x0000FC, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Less_IntInt_ReturnValue_1) == 0x000101, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetHiddenActorByTag, CallFunc_Not_PreBool_ReturnValue) == 0x000102, "Member 'BP_Functions_C_SetHiddenActorByTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Booster Ticket State
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Functions_C_Get_Booster_Ticket_State final
{
public:
	TArray<struct FBoosterDetails>                BoosterDetails;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 BoosterSKU;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoosterDetails                        BoosterDetail;                                     // 0x0030(0x0020)(Parm, OutParm)
	struct FBoosterDetails                        TempDetail;                                        // 0x0050(0x0020)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoosterDetails                        CallFunc_Array_Get_Item;                           // 0x0078(0x0020)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Booster_Ticket_State) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Booster_Ticket_State");
static_assert(sizeof(BP_Functions_C_Get_Booster_Ticket_State) == 0x0000A8, "Wrong size on BP_Functions_C_Get_Booster_Ticket_State");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, BoosterDetails) == 0x000000, "Member 'BP_Functions_C_Get_Booster_Ticket_State::BoosterDetails' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, BoosterSKU) == 0x000010, "Member 'BP_Functions_C_Get_Booster_Ticket_State::BoosterSKU' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, __WorldContext) == 0x000020, "Member 'BP_Functions_C_Get_Booster_Ticket_State::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, Found) == 0x000028, "Member 'BP_Functions_C_Get_Booster_Ticket_State::Found' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, BoosterDetail) == 0x000030, "Member 'BP_Functions_C_Get_Booster_Ticket_State::BoosterDetail' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, TempDetail) == 0x000050, "Member 'BP_Functions_C_Get_Booster_Ticket_State::TempDetail' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_Functions_C_Get_Booster_Ticket_State::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_Functions_C_Get_Booster_Ticket_State::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Functions_C_Get_Booster_Ticket_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_Functions_C_Get_Booster_Ticket_State::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00009C, "Member 'BP_Functions_C_Get_Booster_Ticket_State::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, CallFunc_Less_IntInt_ReturnValue) == 0x00009D, "Member 'BP_Functions_C_Get_Booster_Ticket_State::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Ticket_State, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Get_Booster_Ticket_State::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Booster Sku Class Info
// 0x0228 (0x0228 - 0x0000)
struct BP_Functions_C_Get_Booster_Sku_Class_Info final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class UClass*>            SKU_To_Currency;                                   // 0x0008(0x0050)(Parm, OutParm)
	TMap<class UClass*, class FString>            Currency_To_SKU;                                   // 0x0058(0x0050)(Parm, OutParm)
	TMap<class UClass*, class FString>            Currency_To_Gamemode;                              // 0x00A8(0x0050)(Parm, OutParm)
	class FString                                 ElimScoreBoost;                                    // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FBoosterDetails                        TempDetail;                                        // 0x0108(0x0020)(Edit, BlueprintVisible)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class UClass*, class FString>            K2Node_MakeMap_Map;                                // 0x0138(0x0050)()
	TMap<class UClass*, class FString>            K2Node_MakeMap_Map_1;                              // 0x0188(0x0050)()
	TMap<class FString, class UClass*>            K2Node_MakeMap_Map_2;                              // 0x01D8(0x0050)()
};
static_assert(alignof(BP_Functions_C_Get_Booster_Sku_Class_Info) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Booster_Sku_Class_Info");
static_assert(sizeof(BP_Functions_C_Get_Booster_Sku_Class_Info) == 0x000228, "Wrong size on BP_Functions_C_Get_Booster_Sku_Class_Info");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, __WorldContext) == 0x000000, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, SKU_To_Currency) == 0x000008, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::SKU_To_Currency' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, Currency_To_SKU) == 0x000058, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::Currency_To_SKU' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, Currency_To_Gamemode) == 0x0000A8, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::Currency_To_Gamemode' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, ElimScoreBoost) == 0x0000F8, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::ElimScoreBoost' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, TempDetail) == 0x000108, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::TempDetail' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, CallFunc_LeftChop_ReturnValue) == 0x000128, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, K2Node_MakeMap_Map) == 0x000138, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, K2Node_MakeMap_Map_1) == 0x000188, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Sku_Class_Info, K2Node_MakeMap_Map_2) == 0x0001D8, "Member 'BP_Functions_C_Get_Booster_Sku_Class_Info::K2Node_MakeMap_Map_2' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetBoosterSkuFromEnum
// 0x0078 (0x0078 - 0x0000)
struct BP_Functions_C_GetBoosterSkuFromEnum final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChopTeamScoreSku;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBooster                                      Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue_1;                   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_GetBoosterSkuFromEnum) == 0x000008, "Wrong alignment on BP_Functions_C_GetBoosterSkuFromEnum");
static_assert(sizeof(BP_Functions_C_GetBoosterSkuFromEnum) == 0x000078, "Wrong size on BP_Functions_C_GetBoosterSkuFromEnum");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, Booster) == 0x000000, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::Booster' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, ChopTeamScoreSku) == 0x000001, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::ChopTeamScoreSku' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, __WorldContext) == 0x000008, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, ReturnValue) == 0x000010, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, Temp_bool_Variable) == 0x000020, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, Temp_byte_Variable) == 0x000021, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, Temp_bool_Variable_1) == 0x000022, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, CallFunc_LeftChop_ReturnValue) == 0x000028, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, CallFunc_LeftChop_ReturnValue_1) == 0x000038, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::CallFunc_LeftChop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, K2Node_Select_Default) == 0x000048, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, K2Node_Select_Default_1) == 0x000058, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBoosterSkuFromEnum, K2Node_Select_Default_2) == 0x000068, "Member 'BP_Functions_C_GetBoosterSkuFromEnum::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get Booster Enum From Sku
// 0x0080 (0x0080 - 0x0000)
struct BP_Functions_C_Get_Booster_Enum_From_Sku final
{
public:
	class FString                                 BoosterSKU;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBooster                                      ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, EBooster>                 SkuToEnum;                                         // 0x0020(0x0050)(Edit, BlueprintVisible)
	class ULobbyComponent*                        CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoosterEnumFromSKU_ValidityCheck;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBoosterTypes                                 CallFunc_GetBoosterEnumFromSKU_ReturnValue;        // 0x0079(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_Booster_Enum_From_Sku) == 0x000008, "Wrong alignment on BP_Functions_C_Get_Booster_Enum_From_Sku");
static_assert(sizeof(BP_Functions_C_Get_Booster_Enum_From_Sku) == 0x000080, "Wrong size on BP_Functions_C_Get_Booster_Enum_From_Sku");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, BoosterSKU) == 0x000000, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::BoosterSKU' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, Found) == 0x000018, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::Found' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, ReturnValue) == 0x000019, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, SkuToEnum) == 0x000020, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::SkuToEnum' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000070, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, CallFunc_GetBoosterEnumFromSKU_ValidityCheck) == 0x000078, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::CallFunc_GetBoosterEnumFromSKU_ValidityCheck' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, CallFunc_GetBoosterEnumFromSKU_ReturnValue) == 0x000079, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::CallFunc_GetBoosterEnumFromSKU_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, CallFunc_MakeLiteralByte_ReturnValue) == 0x00007A, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_Booster_Enum_From_Sku, CallFunc_GetValidValue_ReturnValue) == 0x00007B, "Member 'BP_Functions_C_Get_Booster_Enum_From_Sku::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Decimal to Short Format
// 0x0268 (0x0268 - 0x0000)
struct BP_Functions_C_Decimal_to_Short_Format final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayAsInteger;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   FormattedValue;                                    // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0030(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0140(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0158(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0170(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0188(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01E0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01F8(0x0018)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0218(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0238(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0250(0x0018)()
};
static_assert(alignof(BP_Functions_C_Decimal_to_Short_Format) == 0x000008, "Wrong alignment on BP_Functions_C_Decimal_to_Short_Format");
static_assert(sizeof(BP_Functions_C_Decimal_to_Short_Format) == 0x000268, "Wrong size on BP_Functions_C_Decimal_to_Short_Format");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, Value) == 0x000000, "Member 'BP_Functions_C_Decimal_to_Short_Format::Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, DisplayAsInteger) == 0x000004, "Member 'BP_Functions_C_Decimal_to_Short_Format::DisplayAsInteger' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Decimal_to_Short_Format::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, FormattedValue) == 0x000010, "Member 'BP_Functions_C_Decimal_to_Short_Format::FormattedValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, Temp_bool_Variable) == 0x000028, "Member 'BP_Functions_C_Decimal_to_Short_Format::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Conv_FloatToText_ReturnValue) == 0x000030, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00004D, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000050, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000058, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000070, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_MakeArray_Array_1) == 0x000118, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Format_ReturnValue_1) == 0x000140, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000158, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_Select_Default) == 0x000170, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_MakeStruct_FormatArgumentData_2) == 0x000188, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_FFloor_ReturnValue) == 0x0001C8, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_MakeArray_Array_2) == 0x0001D0, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Conv_IntToText_ReturnValue) == 0x0001E0, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_Format_ReturnValue_2) == 0x0001F8, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000210, "Member 'BP_Functions_C_Decimal_to_Short_Format::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, Temp_bool_Variable_1) == 0x000211, "Member 'BP_Functions_C_Decimal_to_Short_Format::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, Temp_bool_Variable_2) == 0x000212, "Member 'BP_Functions_C_Decimal_to_Short_Format::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_Select_Default_1) == 0x000218, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, Temp_bool_Variable_3) == 0x000230, "Member 'BP_Functions_C_Decimal_to_Short_Format::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_Select_Default_2) == 0x000238, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Decimal_to_Short_Format, K2Node_Select_Default_3) == 0x000250, "Member 'BP_Functions_C_Decimal_to_Short_Format::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.CheckForNoWeapon
// 0x0088 (0x0088 - 0x0000)
struct BP_Functions_C_CheckForNoWeapon final
{
public:
	class APawn*                                  Owning_Player_Pawn;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOnlineGameMode                               Online_Game_Mode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponCheckResult                           Check_result;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasEachWeaponAmmo_AllWeaponsWithoutAmmo;  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_HasEachWeaponAmmo_NumberOfWeaponsWithoutAmmo; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_All_Weapons_Count_Number_of_Weapons;  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResourceGrid                          CallFunc_GetBackpackDescriptor_ReturnValue;        // 0x0058(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_CheckForNoWeapon) == 0x000008, "Wrong alignment on BP_Functions_C_CheckForNoWeapon");
static_assert(sizeof(BP_Functions_C_CheckForNoWeapon) == 0x000088, "Wrong size on BP_Functions_C_CheckForNoWeapon");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, Owning_Player_Pawn) == 0x000000, "Member 'BP_Functions_C_CheckForNoWeapon::Owning_Player_Pawn' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, Online_Game_Mode) == 0x000008, "Member 'BP_Functions_C_CheckForNoWeapon::Online_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, __WorldContext) == 0x000010, "Member 'BP_Functions_C_CheckForNoWeapon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, Check_result) == 0x000018, "Member 'BP_Functions_C_CheckForNoWeapon::Check_result' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_GetGameMode_ReturnValue) == 0x000020, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000030, "Member 'BP_Functions_C_CheckForNoWeapon::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Functions_C_CheckForNoWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, K2Node_DynamicCast_AsHuman_Character) == 0x000040, "Member 'BP_Functions_C_CheckForNoWeapon::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_Functions_C_CheckForNoWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_HasEachWeaponAmmo_AllWeaponsWithoutAmmo) == 0x000049, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_HasEachWeaponAmmo_AllWeaponsWithoutAmmo' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_HasEachWeaponAmmo_NumberOfWeaponsWithoutAmmo) == 0x00004C, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_HasEachWeaponAmmo_NumberOfWeaponsWithoutAmmo' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_Get_All_Weapons_Count_Number_of_Weapons) == 0x000050, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_Get_All_Weapons_Count_Number_of_Weapons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000055, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_GetBackpackDescriptor_ReturnValue) == 0x000058, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_GetBackpackDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_Functions_C_CheckForNoWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_Functions_C_CheckForNoWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_CheckForNoWeapon, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_Functions_C_CheckForNoWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.HasEachWeaponAmmo
// 0x0058 (0x0058 - 0x0000)
struct BP_Functions_C_HasEachWeaponAmmo final
{
public:
	class UInventoryComponent*                    Inventory;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllWeaponsWithoutAmmo;                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfWeaponsWithoutAmmo;                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NoAmmoWeaponsCount;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Weapon_with_ammo_found;                            // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoCountForWeapon_ReturnValue;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponType                                   CallFunc_GetWeaponType_ReturnValue;                // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_HasEachWeaponAmmo) == 0x000008, "Wrong alignment on BP_Functions_C_HasEachWeaponAmmo");
static_assert(sizeof(BP_Functions_C_HasEachWeaponAmmo) == 0x000058, "Wrong size on BP_Functions_C_HasEachWeaponAmmo");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, Inventory) == 0x000000, "Member 'BP_Functions_C_HasEachWeaponAmmo::Inventory' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, __WorldContext) == 0x000008, "Member 'BP_Functions_C_HasEachWeaponAmmo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, AllWeaponsWithoutAmmo) == 0x000010, "Member 'BP_Functions_C_HasEachWeaponAmmo::AllWeaponsWithoutAmmo' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, NumberOfWeaponsWithoutAmmo) == 0x000014, "Member 'BP_Functions_C_HasEachWeaponAmmo::NumberOfWeaponsWithoutAmmo' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, NoAmmoWeaponsCount) == 0x000018, "Member 'BP_Functions_C_HasEachWeaponAmmo::NoAmmoWeaponsCount' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, Weapon_with_ammo_found) == 0x00001C, "Member 'BP_Functions_C_HasEachWeaponAmmo::Weapon_with_ammo_found' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, Temp_bool_True_if_break_was_hit_Variable) == 0x00001D, "Member 'BP_Functions_C_HasEachWeaponAmmo::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, Temp_int_Variable) == 0x000024, "Member 'BP_Functions_C_HasEachWeaponAmmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Functions_C_HasEachWeaponAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_GetAmmoCountForWeapon_ReturnValue) == 0x000038, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_GetAmmoCountForWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003D, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_GetWeaponType_ReturnValue) == 0x00003E, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_GetWeaponType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, K2Node_SwitchEnum_CmpSuccess) == 0x00003F, "Member 'BP_Functions_C_HasEachWeaponAmmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_Functions_C_HasEachWeaponAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_HasEachWeaponAmmo, CallFunc_Not_PreBool_ReturnValue_1) == 0x000054, "Member 'BP_Functions_C_HasEachWeaponAmmo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ShowNoWeaponMsgBox
// 0x0068 (0x0068 - 0x0000)
struct BP_Functions_C_ShowNoWeaponMsgBox final
{
public:
	E_WeaponCheckResult                           Weapon_check_result;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      Owning_Player;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ShelterMap_C*                       UIShelterMap__Optional_;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GoToWeapons;                                       // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NoWeaponMessage;                                   // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   EquipMessage;                                      // 0x0040(0x0018)(Edit, BlueprintVisible)
	class UUI_NoWeaponMsgBox_C*                   CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetZOrder_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_ShowNoWeaponMsgBox) == 0x000008, "Wrong alignment on BP_Functions_C_ShowNoWeaponMsgBox");
static_assert(sizeof(BP_Functions_C_ShowNoWeaponMsgBox) == 0x000068, "Wrong size on BP_Functions_C_ShowNoWeaponMsgBox");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, Weapon_check_result) == 0x000000, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::Weapon_check_result' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, Owning_Player) == 0x000008, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::Owning_Player' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, UIShelterMap__Optional_) == 0x000010, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::UIShelterMap__Optional_' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, __WorldContext) == 0x000018, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, GoToWeapons) == 0x000020, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::GoToWeapons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, NoWeaponMessage) == 0x000028, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::NoWeaponMessage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, EquipMessage) == 0x000040, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::EquipMessage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, CallFunc_Create_ReturnValue) == 0x000058, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, CallFunc_GetZOrder_ReturnValue) == 0x000060, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::CallFunc_GetZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowNoWeaponMsgBox, K2Node_SwitchEnum_CmpSuccess) == 0x000064, "Member 'BP_Functions_C_ShowNoWeaponMsgBox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.JoinMPSession
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Functions_C_JoinMPSession final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LevelName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 GamemodeAlias;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Matchmaking_Slot;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Quick_Play;                                        // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SI_BaseGenerator_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Join_Requested_Event_ReturnValue;    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SI_BaseGenerator_C*                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAccurateRealTime_Seconds;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccurateRealTime_PartialSeconds;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_JoinMPSession) == 0x000008, "Wrong alignment on BP_Functions_C_JoinMPSession");
static_assert(sizeof(BP_Functions_C_JoinMPSession) == 0x0000A8, "Wrong size on BP_Functions_C_JoinMPSession");
static_assert(offsetof(BP_Functions_C_JoinMPSession, Owning_Player) == 0x000000, "Member 'BP_Functions_C_JoinMPSession::Owning_Player' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, LevelName) == 0x000008, "Member 'BP_Functions_C_JoinMPSession::LevelName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, GamemodeAlias) == 0x000018, "Member 'BP_Functions_C_JoinMPSession::GamemodeAlias' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, Matchmaking_Slot) == 0x000028, "Member 'BP_Functions_C_JoinMPSession::Matchmaking_Slot' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, Quick_Play) == 0x00002C, "Member 'BP_Functions_C_JoinMPSession::Quick_Play' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, __WorldContext) == 0x000030, "Member 'BP_Functions_C_JoinMPSession::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Functions_C_JoinMPSession::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_Functions_C_JoinMPSession::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_Functions_C_JoinMPSession::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_Functions_C_JoinMPSession::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_JoinMPSession::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_GetGameMode_ReturnValue) == 0x000060, "Member 'BP_Functions_C_JoinMPSession::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000068, "Member 'BP_Functions_C_JoinMPSession::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000070, "Member 'BP_Functions_C_JoinMPSession::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_Functions_C_JoinMPSession::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x000080, "Member 'BP_Functions_C_JoinMPSession::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_Functions_C_JoinMPSession::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_Functions_C_JoinMPSession::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_Send_Join_Requested_Event_ReturnValue) == 0x00008A, "Member 'BP_Functions_C_JoinMPSession::CallFunc_Send_Join_Requested_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_Functions_C_JoinMPSession::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_Functions_C_JoinMPSession::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_GetAccurateRealTime_Seconds) == 0x000098, "Member 'BP_Functions_C_JoinMPSession::CallFunc_GetAccurateRealTime_Seconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_GetAccurateRealTime_PartialSeconds) == 0x00009C, "Member 'BP_Functions_C_JoinMPSession::CallFunc_GetAccurateRealTime_PartialSeconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_JoinMPSession::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_JoinMPSession, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_Functions_C_JoinMPSession::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetInputIcons
// 0x0368 (0x0368 - 0x0000)
struct BP_Functions_C_GetInputIcons final
{
public:
	TArray<EInputIcon>                            InputIcons;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EInputIcon>                            Icons;                                             // 0x0018(0x0010)(Parm, OutParm)
	class FName                                   ActionName;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EInputIcon>                            FinalIcons;                                        // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue;             // 0x005C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UConsoleEvents*                         CallFunc_GetConsoleEvents_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnSteamDeck_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x00F0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0118(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0180(0x0018)()
	EInputIcon                                    CallFunc_Array_Get_Item;                           // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputIcon                                    CallFunc_Array_Get_Item_1;                         // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldOverrideActionName_ShouldOverride;  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ShouldOverrideActionName_New_Action_Name; // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0210(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_2;                         // 0x0228(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0258(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad;        // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x5];                                      // 0x0283(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_3;                    // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FInputIconWindows                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x02A5(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x02C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_3;                         // 0x02D8(0x0028)()
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0308(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad_1;      // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_4;                    // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_GetInputIcons) == 0x000008, "Wrong alignment on BP_Functions_C_GetInputIcons");
static_assert(sizeof(BP_Functions_C_GetInputIcons) == 0x000368, "Wrong size on BP_Functions_C_GetInputIcons");
static_assert(offsetof(BP_Functions_C_GetInputIcons, InputIcons) == 0x000000, "Member 'BP_Functions_C_GetInputIcons::InputIcons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, __WorldContext) == 0x000010, "Member 'BP_Functions_C_GetInputIcons::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Icons) == 0x000018, "Member 'BP_Functions_C_GetInputIcons::Icons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, ActionName) == 0x000028, "Member 'BP_Functions_C_GetInputIcons::ActionName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, RowName) == 0x000030, "Member 'BP_Functions_C_GetInputIcons::RowName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, FinalIcons) == 0x000038, "Member 'BP_Functions_C_GetInputIcons::FinalIcons' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_Functions_C_GetInputIcons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000050, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetLastInputMode_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetLastInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005D, "Member 'BP_Functions_C_GetInputIcons::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000060, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetConsoleEvents_ReturnValue) == 0x000068, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetConsoleEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_IsOnSteamDeck_ReturnValue) == 0x000070, "Member 'BP_Functions_C_GetInputIcons::CallFunc_IsOnSteamDeck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_IsGamepadConnected_ReturnValue) == 0x000071, "Member 'BP_Functions_C_GetInputIcons::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'BP_Functions_C_GetInputIcons::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_Functions_C_GetInputIcons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'BP_Functions_C_GetInputIcons::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Not_PreBool_ReturnValue_1) == 0x000079, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_Functions_C_GetInputIcons::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000084, "Member 'BP_Functions_C_GetInputIcons::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_Functions_C_GetInputIcons::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008C, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_int_Array_Index_Variable_2) == 0x000090, "Member 'BP_Functions_C_GetInputIcons::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Conv_NameToText_ReturnValue) == 0x000098, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'BP_Functions_C_GetInputIcons::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0000F0, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_Functions_C_GetInputIcons::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, K2Node_MakeStruct_FormatArgumentData_1) == 0x000118, "Member 'BP_Functions_C_GetInputIcons::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Format_ReturnValue) == 0x000158, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, K2Node_MakeArray_Array_1) == 0x000170, "Member 'BP_Functions_C_GetInputIcons::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Format_ReturnValue_1) == 0x000180, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Get_Item_1) == 0x000199, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Length_ReturnValue) == 0x00019C, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001A0, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Less_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Replace_ReturnValue) == 0x0001B8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Replace_ReturnValue_1) == 0x0001C8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_ShouldOverrideActionName_ShouldOverride) == 0x0001D8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_ShouldOverrideActionName_ShouldOverride' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_ShouldOverrideActionName_New_Action_Name) == 0x0001DC, "Member 'BP_Functions_C_GetInputIcons::CallFunc_ShouldOverrideActionName_New_Action_Name' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Replace_ReturnValue_2) == 0x0001E8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Conv_StringToName_ReturnValue) == 0x0001F8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetInputSettings_ReturnValue) == 0x000200, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000208, "Member 'BP_Functions_C_GetInputIcons::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetAxisMappingByName_OutMappings) == 0x000210, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_BooleanAND_ReturnValue_1) == 0x000220, "Member 'BP_Functions_C_GetInputIcons::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Get_Item_2) == 0x000228, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Length_ReturnValue_1) == 0x000250, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Key_IsValid_ReturnValue) == 0x000254, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000258, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Conv_TextToString_ReturnValue) == 0x000270, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000280, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Is_Input_Action_Gamepad_IsGamepad) == 0x000281, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Is_Input_Action_Gamepad_IsGamepad' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Not_PreBool_ReturnValue_3) == 0x000282, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Replace_ReturnValue_3) == 0x000288, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Replace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000298, "Member 'BP_Functions_C_GetInputIcons::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00029C, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_BooleanAND_ReturnValue_2) == 0x0002A4, "Member 'BP_Functions_C_GetInputIcons::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002A5, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002A7, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Add_ReturnValue) == 0x0002A8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Add_ReturnValue_1) == 0x0002AC, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, Temp_int_Loop_Counter_Variable_2) == 0x0002B0, "Member 'BP_Functions_C_GetInputIcons::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetInputSettings_ReturnValue_1) == 0x0002B8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_GetActionMappingByName_OutMappings) == 0x0002C0, "Member 'BP_Functions_C_GetInputIcons::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002D0, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Get_Item_3) == 0x0002D8, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_BooleanAND_ReturnValue_3) == 0x000300, "Member 'BP_Functions_C_GetInputIcons::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000308, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_Length_ReturnValue_2) == 0x000320, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000328, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Less_IntInt_ReturnValue_2) == 0x000338, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Is_Input_Action_Gamepad_IsGamepad_1) == 0x000339, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Is_Input_Action_Gamepad_IsGamepad_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_BooleanAND_ReturnValue_4) == 0x00033A, "Member 'BP_Functions_C_GetInputIcons::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Not_PreBool_ReturnValue_4) == 0x00033B, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Replace_ReturnValue_4) == 0x000340, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Replace_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x000350, "Member 'BP_Functions_C_GetInputIcons::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000354, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_BooleanAND_ReturnValue_5) == 0x00035C, "Member 'BP_Functions_C_GetInputIcons::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00035D, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcons, CallFunc_Add_IntInt_ReturnValue_2) == 0x000360, "Member 'BP_Functions_C_GetInputIcons::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetInputIcon
// 0x02B8 (0x02B8 - 0x0000)
struct BP_Functions_C_GetInputIcon final
{
public:
	EInputIcon                                    InputIconConsole;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputIcon                                    InputIconPCWithGamepad;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InputIconPC;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputIcon                                    InputIcon;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RowName;                                           // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue;             // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConsoleEvents*                         CallFunc_GetConsoleEvents_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnSteamDeck_ReturnValue;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0070(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0088(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0158(0x0018)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0178(0x0010)(ReferenceParm)
	struct FInputIconWindows                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0188(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0190(0x0028)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x01B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad;        // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0210(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x0220(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0250(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad_1;      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x02A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_GetInputIcon) == 0x000008, "Wrong alignment on BP_Functions_C_GetInputIcon");
static_assert(sizeof(BP_Functions_C_GetInputIcon) == 0x0002B8, "Wrong size on BP_Functions_C_GetInputIcon");
static_assert(offsetof(BP_Functions_C_GetInputIcon, InputIconConsole) == 0x000000, "Member 'BP_Functions_C_GetInputIcon::InputIconConsole' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, InputIconPCWithGamepad) == 0x000001, "Member 'BP_Functions_C_GetInputIcon::InputIconPCWithGamepad' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, InputIconPC) == 0x000004, "Member 'BP_Functions_C_GetInputIcon::InputIconPC' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, __WorldContext) == 0x000010, "Member 'BP_Functions_C_GetInputIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, InputIcon) == 0x000018, "Member 'BP_Functions_C_GetInputIcon::InputIcon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, RowName) == 0x00001C, "Member 'BP_Functions_C_GetInputIcon::RowName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, ActionName) == 0x000024, "Member 'BP_Functions_C_GetInputIcon::ActionName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_Functions_C_GetInputIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000030, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetLastInputMode_ReturnValue) == 0x000038, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetLastInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetConsoleEvents_ReturnValue) == 0x000040, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetConsoleEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'BP_Functions_C_GetInputIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_IsGamepadConnected_ReturnValue) == 0x000049, "Member 'BP_Functions_C_GetInputIcon::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000050, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BP_Functions_C_GetInputIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_IsOnSteamDeck_ReturnValue) == 0x000059, "Member 'BP_Functions_C_GetInputIcon::CallFunc_IsOnSteamDeck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, Temp_bool_True_if_break_was_hit_Variable) == 0x00005A, "Member 'BP_Functions_C_GetInputIcon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Not_PreBool_ReturnValue) == 0x00005B, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_Functions_C_GetInputIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000064, "Member 'BP_Functions_C_GetInputIcon::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_Functions_C_GetInputIcon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006C, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Conv_NameToText_ReturnValue) == 0x000070, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000088, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BP_Functions_C_GetInputIcon::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_Functions_C_GetInputIcon::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_Functions_C_GetInputIcon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, K2Node_MakeArray_Array_1) == 0x000130, "Member 'BP_Functions_C_GetInputIcon::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Format_ReturnValue) == 0x000140, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Format_ReturnValue_1) == 0x000158, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetInputSettings_ReturnValue) == 0x000170, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetAxisMappingByName_OutMappings) == 0x000178, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000188, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00018A, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0001B8, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Conv_TextToString_ReturnValue) == 0x0001D0, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Is_Input_Action_Gamepad_IsGamepad) == 0x0001E4, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Is_Input_Action_Gamepad_IsGamepad' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Replace_ReturnValue) == 0x0001E8, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001F8, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Conv_StringToName_ReturnValue) == 0x0001FC, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000204, "Member 'BP_Functions_C_GetInputIcon::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x000205, "Member 'BP_Functions_C_GetInputIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000206, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetInputSettings_ReturnValue_1) == 0x000208, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_GetActionMappingByName_OutMappings) == 0x000210, "Member 'BP_Functions_C_GetInputIcon::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Array_Get_Item_1) == 0x000220, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Array_Length_ReturnValue_1) == 0x000248, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Less_IntInt_ReturnValue) == 0x00024C, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000250, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_BooleanAND_ReturnValue_2) == 0x000268, "Member 'BP_Functions_C_GetInputIcon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000270, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Is_Input_Action_Gamepad_IsGamepad_1) == 0x000280, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Is_Input_Action_Gamepad_IsGamepad_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Replace_ReturnValue_1) == 0x000288, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Not_PreBool_ReturnValue_3) == 0x000298, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00029C, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x0002A4, "Member 'BP_Functions_C_GetInputIcon::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_BooleanAND_ReturnValue_3) == 0x0002A5, "Member 'BP_Functions_C_GetInputIcon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0002A6, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x0002A7, "Member 'BP_Functions_C_GetInputIcon::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, Temp_int_Loop_Counter_Variable_1) == 0x0002A8, "Member 'BP_Functions_C_GetInputIcon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002AC, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B0, "Member 'BP_Functions_C_GetInputIcon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIcon, CallFunc_BooleanAND_ReturnValue_4) == 0x0002B4, "Member 'BP_Functions_C_GetInputIcon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetInputIconText
// 0x0348 (0x0348 - 0x0000)
struct BP_Functions_C_GetInputIconText final
{
public:
	EInputIcon                                    InputIconConsole;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InputIconPC;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InputIconString;                                   // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InputIconStringTemp;                               // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue;             // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConsoleEvents*                         CallFunc_GetConsoleEvents_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnSteamDeck_ReturnValue;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01A8(0x0018)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x01C8(0x0010)(ReferenceParm)
	struct FInputIconWindows                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x01D8(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x01E0(0x0028)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0208(0x0018)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad;        // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x026C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0290(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x02A0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x02D0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad_1;      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_3;                    // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0326(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0327(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_GetInputIconText) == 0x000008, "Wrong alignment on BP_Functions_C_GetInputIconText");
static_assert(sizeof(BP_Functions_C_GetInputIconText) == 0x000348, "Wrong size on BP_Functions_C_GetInputIconText");
static_assert(offsetof(BP_Functions_C_GetInputIconText, InputIconConsole) == 0x000000, "Member 'BP_Functions_C_GetInputIconText::InputIconConsole' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, InputIconPC) == 0x000004, "Member 'BP_Functions_C_GetInputIconText::InputIconPC' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, __WorldContext) == 0x000010, "Member 'BP_Functions_C_GetInputIconText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, InputIconString) == 0x000018, "Member 'BP_Functions_C_GetInputIconText::InputIconString' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, RowName) == 0x000028, "Member 'BP_Functions_C_GetInputIconText::RowName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, ActionName) == 0x000030, "Member 'BP_Functions_C_GetInputIconText::ActionName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, InputIconStringTemp) == 0x000038, "Member 'BP_Functions_C_GetInputIconText::InputIconStringTemp' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_Functions_C_GetInputIconText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000050, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetLastInputMode_ReturnValue) == 0x000058, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetLastInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetConsoleEvents_ReturnValue) == 0x000060, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetConsoleEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'BP_Functions_C_GetInputIconText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_IsGamepadConnected_ReturnValue) == 0x000069, "Member 'BP_Functions_C_GetInputIconText::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000070, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'BP_Functions_C_GetInputIconText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_IsOnSteamDeck_ReturnValue) == 0x000079, "Member 'BP_Functions_C_GetInputIconText::CallFunc_IsOnSteamDeck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000080, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, Temp_bool_True_if_break_was_hit_Variable) == 0x000090, "Member 'BP_Functions_C_GetInputIconText::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Replace_ReturnValue) == 0x000098, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BP_Functions_C_GetInputIconText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000B4, "Member 'BP_Functions_C_GetInputIconText::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, Temp_int_Array_Index_Variable_1) == 0x0000B8, "Member 'BP_Functions_C_GetInputIconText::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000BC, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Conv_NameToText_ReturnValue) == 0x0000C0, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, K2Node_MakeStruct_FormatArgumentData) == 0x0000D8, "Member 'BP_Functions_C_GetInputIconText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_Functions_C_GetInputIconText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000140, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'BP_Functions_C_GetInputIconText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, K2Node_MakeArray_Array_1) == 0x000198, "Member 'BP_Functions_C_GetInputIconText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Format_ReturnValue_1) == 0x0001A8, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetInputSettings_ReturnValue) == 0x0001C0, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetAxisMappingByName_OutMappings) == 0x0001C8, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001D8, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001DA, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Array_Get_Item) == 0x0001E0, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000208, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000220, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Conv_TextToString_ReturnValue) == 0x000230, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Replace_ReturnValue_1) == 0x000240, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Is_Input_Action_Gamepad_IsGamepad) == 0x000250, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Is_Input_Action_Gamepad_IsGamepad' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Not_PreBool_ReturnValue_2) == 0x000251, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Replace_ReturnValue_2) == 0x000258, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000268, "Member 'BP_Functions_C_GetInputIconText::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Conv_StringToName_ReturnValue) == 0x00026C, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_BooleanAND_ReturnValue_1) == 0x000274, "Member 'BP_Functions_C_GetInputIconText::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Array_Length_ReturnValue) == 0x000278, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00027C, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetInputSettings_ReturnValue_1) == 0x000280, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, Temp_int_Loop_Counter_Variable_1) == 0x000288, "Member 'BP_Functions_C_GetInputIconText::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_GetActionMappingByName_OutMappings) == 0x000290, "Member 'BP_Functions_C_GetInputIconText::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Array_Get_Item_1) == 0x0002A0, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Array_Length_ReturnValue_1) == 0x0002C8, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Less_IntInt_ReturnValue) == 0x0002CC, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x0002D0, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_BooleanAND_ReturnValue_2) == 0x0002E8, "Member 'BP_Functions_C_GetInputIconText::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002F0, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Is_Input_Action_Gamepad_IsGamepad_1) == 0x000300, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Is_Input_Action_Gamepad_IsGamepad_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Replace_ReturnValue_3) == 0x000308, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Replace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Not_PreBool_ReturnValue_3) == 0x000318, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00031C, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x000324, "Member 'BP_Functions_C_GetInputIconText::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_BooleanAND_ReturnValue_3) == 0x000325, "Member 'BP_Functions_C_GetInputIconText::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000326, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Less_IntInt_ReturnValue_1) == 0x000327, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000328, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_BooleanAND_ReturnValue_4) == 0x00032C, "Member 'BP_Functions_C_GetInputIconText::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_Concat_StrStr_ReturnValue) == 0x000330, "Member 'BP_Functions_C_GetInputIconText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconText, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000340, "Member 'BP_Functions_C_GetInputIconText::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SoundClassToString
// 0x08E0 (0x08E0 - 0x0000)
struct BP_Functions_C_SoundClassToString final
{
public:
	class USoundClass*                            SoundClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SoundClassString;                                  // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0078(0x0018)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E0(0x0018)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0160(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x01A0(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_3;          // 0x01B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0210(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0250(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0290(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_4;          // 0x02D0(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_5;          // 0x02E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0300(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0340(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0380(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x03C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0400(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0440(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0458(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x0470(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x04B0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x04F0(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x0508(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x0520(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x0560(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_4;            // 0x05A0(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_5;            // 0x05B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x05D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_18;           // 0x0610(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_6;            // 0x0650(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_19;           // 0x0668(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_20;           // 0x06A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_21;           // 0x06E8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_22;           // 0x0728(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_23;           // 0x0768(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_24;           // 0x07A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_25;           // 0x07E8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_26;           // 0x0828(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_27;           // 0x0868(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x08A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x08B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x08D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SoundClassToString) == 0x000008, "Wrong alignment on BP_Functions_C_SoundClassToString");
static_assert(sizeof(BP_Functions_C_SoundClassToString) == 0x0008E0, "Wrong size on BP_Functions_C_SoundClassToString");
static_assert(offsetof(BP_Functions_C_SoundClassToString, SoundClass) == 0x000000, "Member 'BP_Functions_C_SoundClassToString::SoundClass' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, __WorldContext) == 0x000008, "Member 'BP_Functions_C_SoundClassToString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, SoundClassString) == 0x000010, "Member 'BP_Functions_C_SoundClassToString::SoundClassString' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000078, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000090, "Member 'BP_Functions_C_SoundClassToString::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E0, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000F8, "Member 'BP_Functions_C_SoundClassToString::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000148, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_3) == 0x000160, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0001A0, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_ObjectToText_ReturnValue_3) == 0x0001B8, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_ObjectToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001D0, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_5) == 0x000210, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_6) == 0x000250, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_7) == 0x000290, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_ObjectToText_ReturnValue_4) == 0x0002D0, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_ObjectToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_ObjectToText_ReturnValue_5) == 0x0002E8, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_ObjectToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_8) == 0x000300, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_9) == 0x000340, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_10) == 0x000380, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_11) == 0x0003C0, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_12) == 0x000400, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_BoolToText_ReturnValue) == 0x000440, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000458, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_13) == 0x000470, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_14) == 0x0004B0, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x0004F0, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x000508, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_15) == 0x000520, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_16) == 0x000560, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_BoolToText_ReturnValue_4) == 0x0005A0, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_BoolToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_BoolToText_ReturnValue_5) == 0x0005B8, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_BoolToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_17) == 0x0005D0, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_18) == 0x000610, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_18' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_BoolToText_ReturnValue_6) == 0x000650, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_BoolToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_19) == 0x000668, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_19' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_20) == 0x0006A8, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_20' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_21) == 0x0006E8, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_21' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_22) == 0x000728, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_22' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_23) == 0x000768, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_23' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_24) == 0x0007A8, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_24' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_25) == 0x0007E8, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_25' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_26) == 0x000828, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_26' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeStruct_FormatArgumentData_27) == 0x000868, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeStruct_FormatArgumentData_27' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, K2Node_MakeArray_Array) == 0x0008A8, "Member 'BP_Functions_C_SoundClassToString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Format_ReturnValue) == 0x0008B8, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SoundClassToString, CallFunc_Conv_TextToString_ReturnValue) == 0x0008D0, "Member 'BP_Functions_C_SoundClassToString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetWindowsInputIcon
// 0x0328 (0x0328 - 0x0000)
struct BP_Functions_C_GetWindowsInputIcon final
{
public:
	EInputIcon                                    InputIcon;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputIcon                                    Icon;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWide;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue;             // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UConsoleEvents*                         CallFunc_GetConsoleEvents_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnSteamDeck_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldOverrideActionName_ShouldOverride;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ShouldOverrideActionName_New_Action_Name; // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0118(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0140(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01A8(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x01D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x01F0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0220(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad;        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253[0x5];                                      // 0x0253(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_3;                    // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x026C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FInputIconWindows                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0276(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0288(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x02A0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x02D0(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad_1;      // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_303[0x5];                                      // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_4;                    // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_GetWindowsInputIcon) == 0x000008, "Wrong alignment on BP_Functions_C_GetWindowsInputIcon");
static_assert(sizeof(BP_Functions_C_GetWindowsInputIcon) == 0x000328, "Wrong size on BP_Functions_C_GetWindowsInputIcon");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, InputIcon) == 0x000000, "Member 'BP_Functions_C_GetWindowsInputIcon::InputIcon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, __WorldContext) == 0x000008, "Member 'BP_Functions_C_GetWindowsInputIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, Icon) == 0x000010, "Member 'BP_Functions_C_GetWindowsInputIcon::Icon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, IsWide) == 0x000011, "Member 'BP_Functions_C_GetWindowsInputIcon::IsWide' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, ActionName) == 0x000014, "Member 'BP_Functions_C_GetWindowsInputIcon::ActionName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, RowName) == 0x00001C, "Member 'BP_Functions_C_GetWindowsInputIcon::RowName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_Functions_C_GetWindowsInputIcon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000028, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetLastInputMode_ReturnValue) == 0x000030, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetLastInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000038, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetConsoleEvents_ReturnValue) == 0x000040, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetConsoleEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_IsOnSteamDeck_ReturnValue) == 0x000048, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_IsOnSteamDeck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_IsGamepadConnected_ReturnValue) == 0x000049, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004A, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_Functions_C_GetWindowsInputIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000054, "Member 'BP_Functions_C_GetWindowsInputIcon::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_Functions_C_GetWindowsInputIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005C, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000060, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_ShouldOverrideActionName_ShouldOverride) == 0x000070, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_ShouldOverrideActionName_ShouldOverride' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_ShouldOverrideActionName_New_Action_Name) == 0x000074, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_ShouldOverrideActionName_New_Action_Name' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Replace_ReturnValue) == 0x000080, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Replace_ReturnValue_1) == 0x000090, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Replace_ReturnValue_2) == 0x0000A0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Conv_StringToName_ReturnValue) == 0x0000B0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, Temp_int_Array_Index_Variable_1) == 0x0000B8, "Member 'BP_Functions_C_GetWindowsInputIcon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Conv_NameToText_ReturnValue) == 0x0000C0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, K2Node_MakeStruct_FormatArgumentData) == 0x0000D8, "Member 'BP_Functions_C_GetWindowsInputIcon::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000118, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, K2Node_MakeArray_Array) == 0x000130, "Member 'BP_Functions_C_GetWindowsInputIcon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, K2Node_MakeStruct_FormatArgumentData_1) == 0x000140, "Member 'BP_Functions_C_GetWindowsInputIcon::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, K2Node_MakeArray_Array_1) == 0x000198, "Member 'BP_Functions_C_GetWindowsInputIcon::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Format_ReturnValue_1) == 0x0001A8, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, Temp_int_Loop_Counter_Variable_1) == 0x0001C0, "Member 'BP_Functions_C_GetWindowsInputIcon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C4, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetInputSettings_ReturnValue) == 0x0001C8, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x0001D0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetAxisMappingByName_OutMappings) == 0x0001D8, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E8, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000220, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Conv_TextToString_ReturnValue) == 0x000240, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_BooleanAND_ReturnValue_2) == 0x000250, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Is_Input_Action_Gamepad_IsGamepad) == 0x000251, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Is_Input_Action_Gamepad_IsGamepad' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Not_PreBool_ReturnValue_3) == 0x000252, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Replace_ReturnValue_3) == 0x000258, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Replace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000268, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00026C, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_BooleanAND_ReturnValue_3) == 0x000274, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000275, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000276, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000278, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetInputSettings_ReturnValue_1) == 0x000280, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_GetActionMappingByName_OutMappings) == 0x000288, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000298, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Array_Get_Item_1) == 0x0002A0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Array_Length_ReturnValue_1) == 0x0002C8, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x0002D0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002E8, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002F0, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_BooleanAND_ReturnValue_4) == 0x000300, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Is_Input_Action_Gamepad_IsGamepad_1) == 0x000301, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Is_Input_Action_Gamepad_IsGamepad_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Not_PreBool_ReturnValue_4) == 0x000302, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Replace_ReturnValue_4) == 0x000308, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Replace_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x000318, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_Conv_StringToName_ReturnValue_2) == 0x00031C, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetWindowsInputIcon, CallFunc_BooleanAND_ReturnValue_5) == 0x000324, "Member 'BP_Functions_C_GetWindowsInputIcon::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ShouldOverrideActionName
// 0x0020 (0x0020 - 0x0000)
struct BP_Functions_C_ShouldOverrideActionName final
{
public:
	EInputIcon                                    InputIcon;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldOverride;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   New_Action_Name;                                   // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_ShouldOverrideActionName) == 0x000008, "Wrong alignment on BP_Functions_C_ShouldOverrideActionName");
static_assert(sizeof(BP_Functions_C_ShouldOverrideActionName) == 0x000020, "Wrong size on BP_Functions_C_ShouldOverrideActionName");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionName, InputIcon) == 0x000000, "Member 'BP_Functions_C_ShouldOverrideActionName::InputIcon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionName, __WorldContext) == 0x000008, "Member 'BP_Functions_C_ShouldOverrideActionName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionName, ShouldOverride) == 0x000010, "Member 'BP_Functions_C_ShouldOverrideActionName::ShouldOverride' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionName, New_Action_Name) == 0x000014, "Member 'BP_Functions_C_ShouldOverrideActionName::New_Action_Name' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionName, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'BP_Functions_C_ShouldOverrideActionName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ShouldOverrideActionNameString
// 0x0060 (0x0060 - 0x0000)
struct BP_Functions_C_ShouldOverrideActionNameString final
{
public:
	class FText                                   InputIcon;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldOverride;                                    // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NewName;                                           // 0x0024(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_ShouldOverrideActionNameString) == 0x000008, "Wrong alignment on BP_Functions_C_ShouldOverrideActionNameString");
static_assert(sizeof(BP_Functions_C_ShouldOverrideActionNameString) == 0x000060, "Wrong size on BP_Functions_C_ShouldOverrideActionNameString");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, InputIcon) == 0x000000, "Member 'BP_Functions_C_ShouldOverrideActionNameString::InputIcon' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, __WorldContext) == 0x000018, "Member 'BP_Functions_C_ShouldOverrideActionNameString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, ShouldOverride) == 0x000020, "Member 'BP_Functions_C_ShouldOverrideActionNameString::ShouldOverride' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, NewName) == 0x000024, "Member 'BP_Functions_C_ShouldOverrideActionNameString::NewName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'BP_Functions_C_ShouldOverrideActionNameString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, K2Node_SwitchString_CmpSuccess) == 0x000040, "Member 'BP_Functions_C_ShouldOverrideActionNameString::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000048, "Member 'BP_Functions_C_ShouldOverrideActionNameString::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShouldOverrideActionNameString, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'BP_Functions_C_ShouldOverrideActionNameString::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetInputIconsText
// 0x0410 (0x0410 - 0x0000)
struct BP_Functions_C_GetInputIconsText final
{
public:
	TArray<class FText>                           InInputIconsText;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           InputIconsText;                                    // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FText>                           FinalInputIconsText;                               // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FName                                   RowName;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue;             // 0x005C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UConsoleEvents*                         CallFunc_GetConsoleEvents_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadConnected_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnSteamDeck_ReturnValue;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x00A8(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldOverrideActionNameString_ShouldOverride; // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ShouldOverrideActionNameString_NewName;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0128(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0170(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0188(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x01F0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0220(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0270(0x0018)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0290(0x0010)(ReferenceParm)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_2;                         // 0x02A0(0x0028)()
	struct FInputIconWindows                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x02C8(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CB[0x5];                                      // 0x02CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x02D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad;        // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_3;                    // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0328(0x0018)()
	class FString                                 CallFunc_Replace_ReturnValue_4;                    // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0366(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367[0x1];                                      // 0x0367(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0378(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_3;                         // 0x0388(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x03B8(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Input_Action_Gamepad_IsGamepad_1;      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_5;                    // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0404(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x040D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x040E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_GetInputIconsText) == 0x000008, "Wrong alignment on BP_Functions_C_GetInputIconsText");
static_assert(sizeof(BP_Functions_C_GetInputIconsText) == 0x000410, "Wrong size on BP_Functions_C_GetInputIconsText");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, InInputIconsText) == 0x000000, "Member 'BP_Functions_C_GetInputIconsText::InInputIconsText' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, __WorldContext) == 0x000010, "Member 'BP_Functions_C_GetInputIconsText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, InputIconsText) == 0x000018, "Member 'BP_Functions_C_GetInputIconsText::InputIconsText' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, FinalInputIconsText) == 0x000028, "Member 'BP_Functions_C_GetInputIconsText::FinalInputIconsText' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, RowName) == 0x000038, "Member 'BP_Functions_C_GetInputIconsText::RowName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, ActionName) == 0x000040, "Member 'BP_Functions_C_GetInputIconsText::ActionName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000050, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetLastInputMode_ReturnValue) == 0x00005C, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetLastInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005D, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetConsoleEvents_ReturnValue) == 0x000060, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetConsoleEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000068, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_IsGamepadConnected_ReturnValue) == 0x000070, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_IsGamepadConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_IsOnSteamDeck_ReturnValue) == 0x000071, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_IsOnSteamDeck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_bool_True_if_break_was_hit_Variable) == 0x000073, "Member 'BP_Functions_C_GetInputIconsText::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Loop_Counter_Variable_3) == 0x000090, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Add_IntInt_ReturnValue_3) == 0x000094, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000098, "Member 'BP_Functions_C_GetInputIconsText::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Array_Index_Variable_2) == 0x00009C, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_ShouldOverrideActionNameString_ShouldOverride) == 0x0000C4, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_ShouldOverrideActionNameString_ShouldOverride' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_ShouldOverrideActionNameString_NewName) == 0x0000C8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_ShouldOverrideActionNameString_NewName' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Replace_ReturnValue) == 0x0000E0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Replace_ReturnValue_1) == 0x0000F0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Replace_ReturnValue_2) == 0x000108, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_StringToName_ReturnValue) == 0x00011C, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, Temp_int_Array_Index_Variable_3) == 0x000124, "Member 'BP_Functions_C_GetInputIconsText::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000148, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Concat_StrStr_ReturnValue) == 0x000160, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_StringToText_ReturnValue) == 0x000170, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_NameToText_ReturnValue) == 0x000188, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, K2Node_MakeStruct_FormatArgumentData) == 0x0001A0, "Member 'BP_Functions_C_GetInputIconsText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, K2Node_MakeArray_Array) == 0x0001E0, "Member 'BP_Functions_C_GetInputIconsText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0001F0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000220, "Member 'BP_Functions_C_GetInputIconsText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, K2Node_MakeArray_Array_1) == 0x000260, "Member 'BP_Functions_C_GetInputIconsText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Format_ReturnValue_1) == 0x000270, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetInputSettings_ReturnValue) == 0x000288, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetAxisMappingByName_OutMappings) == 0x000290, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Get_Item_2) == 0x0002A0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002C8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002CA, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0002D0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0002E8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0002F8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Is_Input_Action_Gamepad_IsGamepad) == 0x000308, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Is_Input_Action_Gamepad_IsGamepad' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Replace_ReturnValue_3) == 0x000310, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Replace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Not_PreBool_ReturnValue_2) == 0x000320, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000328, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Replace_ReturnValue_4) == 0x000340, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Replace_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Add_ReturnValue_1) == 0x000350, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000354, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00035C, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_BooleanAND_ReturnValue_1) == 0x00035D, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Length_ReturnValue_2) == 0x000360, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Less_IntInt_ReturnValue_2) == 0x000364, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000365, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_BooleanAND_ReturnValue_2) == 0x000366, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetInputSettings_ReturnValue_1) == 0x000368, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000370, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_GetActionMappingByName_OutMappings) == 0x000378, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Get_Item_3) == 0x000388, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_Length_ReturnValue_3) == 0x0003B0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003B4, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x0003B8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_BooleanAND_ReturnValue_3) == 0x0003D0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_TextToString_ReturnValue_3) == 0x0003D8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Is_Input_Action_Gamepad_IsGamepad_1) == 0x0003E8, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Is_Input_Action_Gamepad_IsGamepad_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Replace_ReturnValue_5) == 0x0003F0, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Replace_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Not_PreBool_ReturnValue_3) == 0x000400, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000404, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x00040C, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_BooleanAND_ReturnValue_4) == 0x00040D, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetInputIconsText, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00040E, "Member 'BP_Functions_C_GetInputIconsText::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetAllNicknameStylesInRichText
// 0x02D8 (0x02D8 - 0x0000)
struct BP_Functions_C_SetAllNicknameStylesInRichText final
{
public:
	class URichTextBlock*                         In_Rich_Text_Block;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTextBlockStyle                        Nickname_Style;                                    // 0x0008(0x0270)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlockDecorator*                CallFunc_GetDecoratorByClass_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetDecorator*                       K2Node_DynamicCast_AsWidget_Decorator;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_Map_Values_Values;                        // 0x02A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_PlayerNickname_C*                   K2Node_DynamicCast_AsUI_Player_Nickname;           // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SetAllNicknameStylesInRichText) == 0x000008, "Wrong alignment on BP_Functions_C_SetAllNicknameStylesInRichText");
static_assert(sizeof(BP_Functions_C_SetAllNicknameStylesInRichText) == 0x0002D8, "Wrong size on BP_Functions_C_SetAllNicknameStylesInRichText");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, In_Rich_Text_Block) == 0x000000, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::In_Rich_Text_Block' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, Nickname_Style) == 0x000008, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::Nickname_Style' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, __WorldContext) == 0x000278, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, CallFunc_IsValid_ReturnValue) == 0x000280, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, CallFunc_GetDecoratorByClass_ReturnValue) == 0x000288, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::CallFunc_GetDecoratorByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, Temp_int_Array_Index_Variable) == 0x000290, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, K2Node_DynamicCast_AsWidget_Decorator) == 0x000298, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::K2Node_DynamicCast_AsWidget_Decorator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, K2Node_DynamicCast_bSuccess) == 0x0002A0, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, Temp_int_Loop_Counter_Variable) == 0x0002A4, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, CallFunc_Map_Values_Values) == 0x0002A8, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, CallFunc_Array_Get_Item) == 0x0002B8, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, CallFunc_Array_Length_ReturnValue) == 0x0002C0, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, K2Node_DynamicCast_AsUI_Player_Nickname) == 0x0002C8, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::K2Node_DynamicCast_AsUI_Player_Nickname' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, K2Node_DynamicCast_bSuccess_1) == 0x0002D0, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, CallFunc_Less_IntInt_ReturnValue) == 0x0002D1, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameStylesInRichText, CallFunc_Add_IntInt_ReturnValue) == 0x0002D4, "Member 'BP_Functions_C_SetAllNicknameStylesInRichText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetAllNicknameWidgetsInRichText
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_SetAllNicknameWidgetsInRichText final
{
public:
	class URichTextBlock*                         In_Rich_Text_Block;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                CallFunc_GetPlayerPlatform_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetPlayerUniqueId_ReturnValue;            // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlockDecorator*                CallFunc_GetDecoratorByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetDecorator*                       K2Node_DynamicCast_AsWidget_Decorator;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_Map_Values_Values;                        // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_PlayerNickname_C*                   K2Node_DynamicCast_AsUI_Player_Nickname;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_SetAllNicknameWidgetsInRichText) == 0x000008, "Wrong alignment on BP_Functions_C_SetAllNicknameWidgetsInRichText");
static_assert(sizeof(BP_Functions_C_SetAllNicknameWidgetsInRichText) == 0x0000B0, "Wrong size on BP_Functions_C_SetAllNicknameWidgetsInRichText");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, In_Rich_Text_Block) == 0x000000, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::In_Rich_Text_Block' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, Player_State) == 0x000008, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::Player_State' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, __WorldContext) == 0x000010, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_GetPlayerPlatform_ReturnValue) == 0x000018, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_GetPlayerPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_GetPlayerName_ReturnValue) == 0x000020, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_GetPlayerUniqueId_ReturnValue) == 0x000030, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_GetPlayerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_GetDecoratorByClass_ReturnValue) == 0x000060, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_GetDecoratorByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, K2Node_DynamicCast_AsWidget_Decorator) == 0x000068, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::K2Node_DynamicCast_AsWidget_Decorator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_Map_Values_Values) == 0x000078, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, K2Node_DynamicCast_AsUI_Player_Nickname) == 0x000098, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::K2Node_DynamicCast_AsUI_Player_Nickname' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameWidgetsInRichText, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_Functions_C_SetAllNicknameWidgetsInRichText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetAllNicknameBottomPaddingInRichText
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_SetAllNicknameBottomPaddingInRichText final
{
public:
	class URichTextBlock*                         In_Rich_Text_Block;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bottom_padding;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlockDecorator*                CallFunc_GetDecoratorByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetDecorator*                       K2Node_DynamicCast_AsWidget_Decorator;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_Map_Values_Values;                        // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_PlayerNickname_C*                   K2Node_DynamicCast_AsUI_Player_Nickname;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText) == 0x000008, "Wrong alignment on BP_Functions_C_SetAllNicknameBottomPaddingInRichText");
static_assert(sizeof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText) == 0x000070, "Wrong size on BP_Functions_C_SetAllNicknameBottomPaddingInRichText");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, In_Rich_Text_Block) == 0x000000, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::In_Rich_Text_Block' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, Bottom_padding) == 0x000008, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::Bottom_padding' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, __WorldContext) == 0x000010, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, CallFunc_GetDecoratorByClass_ReturnValue) == 0x000020, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::CallFunc_GetDecoratorByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, K2Node_DynamicCast_AsWidget_Decorator) == 0x000030, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::K2Node_DynamicCast_AsWidget_Decorator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, CallFunc_Map_Values_Values) == 0x000040, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, K2Node_DynamicCast_AsUI_Player_Nickname) == 0x000060, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::K2Node_DynamicCast_AsUI_Player_Nickname' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameBottomPaddingInRichText, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_Functions_C_SetAllNicknameBottomPaddingInRichText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Increase Achievement Progress by Value
// 0x0068 (0x0068 - 0x0000)
struct BP_Functions_C_Increase_Achievement_Progress_by_Value final
{
public:
	class FName                                   Achievement_Name;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Target_Value;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameAchievementsSystem*               CallFunc_GetAchievementsSystem_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAchievementProgress_IsProgressValid;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAchievementProgress_Progress;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAchievementSystemValid_ReturnValue;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Increase_Achievement_Progress_Result_Code; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Increase_Achievement_Progress_Result_Code_1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Increase_Achievement_Progress_by_Value) == 0x000008, "Wrong alignment on BP_Functions_C_Increase_Achievement_Progress_by_Value");
static_assert(sizeof(BP_Functions_C_Increase_Achievement_Progress_by_Value) == 0x000068, "Wrong size on BP_Functions_C_Increase_Achievement_Progress_by_Value");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, Achievement_Name) == 0x000000, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::Achievement_Name' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, Value) == 0x000008, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, Target_Value) == 0x00000C, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::Target_Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_GetAchievementsSystem_ReturnValue) == 0x000020, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_GetAchievementsSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_GetAchievementProgress_IsProgressValid) == 0x000028, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_GetAchievementProgress_IsProgressValid' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_GetAchievementProgress_Progress) == 0x00002C, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_GetAchievementProgress_Progress' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_IsAchievementSystemValid_ReturnValue) == 0x000030, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_IsAchievementSystemValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Less_FloatFloat_ReturnValue) == 0x000031, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_BooleanAND_ReturnValue_1) == 0x000033, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000038, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000040, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00004C, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_BooleanAND_ReturnValue_2) == 0x000058, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Increase_Achievement_Progress_Result_Code) == 0x000060, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Increase_Achievement_Progress_Result_Code' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Increase_Achievement_Progress_by_Value, CallFunc_Increase_Achievement_Progress_Result_Code_1) == 0x000064, "Member 'BP_Functions_C_Increase_Achievement_Progress_by_Value::CallFunc_Increase_Achievement_Progress_Result_Code_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetAllNicknameMaxCharactersInRichText
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_SetAllNicknameMaxCharactersInRichText final
{
public:
	class URichTextBlock*                         In_Rich_Text_Block;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Characters;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlockDecorator*                CallFunc_GetDecoratorByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetDecorator*                       K2Node_DynamicCast_AsWidget_Decorator;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_Map_Values_Values;                        // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_PlayerNickname_C*                   K2Node_DynamicCast_AsUI_Player_Nickname;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText) == 0x000008, "Wrong alignment on BP_Functions_C_SetAllNicknameMaxCharactersInRichText");
static_assert(sizeof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText) == 0x000070, "Wrong size on BP_Functions_C_SetAllNicknameMaxCharactersInRichText");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, In_Rich_Text_Block) == 0x000000, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::In_Rich_Text_Block' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, Max_Characters) == 0x000008, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::Max_Characters' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, __WorldContext) == 0x000010, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, CallFunc_GetDecoratorByClass_ReturnValue) == 0x000020, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::CallFunc_GetDecoratorByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, K2Node_DynamicCast_AsWidget_Decorator) == 0x000030, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::K2Node_DynamicCast_AsWidget_Decorator' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, CallFunc_Map_Values_Values) == 0x000040, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, K2Node_DynamicCast_AsUI_Player_Nickname) == 0x000060, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::K2Node_DynamicCast_AsUI_Player_Nickname' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetAllNicknameMaxCharactersInRichText, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_Functions_C_SetAllNicknameMaxCharactersInRichText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.ShowProfile
// 0x0078 (0x0078 - 0x0000)
struct BP_Functions_C_ShowProfile final
{
public:
	struct FUniqueNetIdRepl                       ProfileToShowId;                                   // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGroupSystem*                           CallFunc_GetGroupSystem_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPlayer_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetLocalUserUniqueId_ReturnValue;         // 0x0040(0x0028)(HasGetValueTypeHash)
	class UPlatformTools*                         CallFunc_GetPlatformTools_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPlayer_ReturnValue_1;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenSystemUserProfile_ReturnValue;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_ShowProfile) == 0x000008, "Wrong alignment on BP_Functions_C_ShowProfile");
static_assert(sizeof(BP_Functions_C_ShowProfile) == 0x000078, "Wrong size on BP_Functions_C_ShowProfile");
static_assert(offsetof(BP_Functions_C_ShowProfile, ProfileToShowId) == 0x000000, "Member 'BP_Functions_C_ShowProfile::ProfileToShowId' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, __WorldContext) == 0x000028, "Member 'BP_Functions_C_ShowProfile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_GetGroupSystem_ReturnValue) == 0x000030, "Member 'BP_Functions_C_ShowProfile::CallFunc_GetGroupSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_IsValidPlayer_ReturnValue) == 0x000038, "Member 'BP_Functions_C_ShowProfile::CallFunc_IsValidPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_Functions_C_ShowProfile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_GetLocalUserUniqueId_ReturnValue) == 0x000040, "Member 'BP_Functions_C_ShowProfile::CallFunc_GetLocalUserUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_GetPlatformTools_ReturnValue) == 0x000068, "Member 'BP_Functions_C_ShowProfile::CallFunc_GetPlatformTools_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_IsValidPlayer_ReturnValue_1) == 0x000070, "Member 'BP_Functions_C_ShowProfile::CallFunc_IsValidPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_OpenSystemUserProfile_ReturnValue) == 0x000071, "Member 'BP_Functions_C_ShowProfile::CallFunc_OpenSystemUserProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_ShowProfile, CallFunc_IsValid_ReturnValue_1) == 0x000072, "Member 'BP_Functions_C_ShowProfile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.GetBlockedPlayersText
// 0x0148 (0x0148 - 0x0000)
struct BP_Functions_C_GetBlockedPlayersText final
{
public:
	bool                                          UseParentheses;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          BP_Player_Controlle_Script;                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayersBlocked;                                    // 0x0018(0x0018)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0130(0x0018)()
};
static_assert(alignof(BP_Functions_C_GetBlockedPlayersText) == 0x000008, "Wrong alignment on BP_Functions_C_GetBlockedPlayersText");
static_assert(sizeof(BP_Functions_C_GetBlockedPlayersText) == 0x000148, "Wrong size on BP_Functions_C_GetBlockedPlayersText");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, UseParentheses) == 0x000000, "Member 'BP_Functions_C_GetBlockedPlayersText::UseParentheses' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, BP_Player_Controlle_Script) == 0x000008, "Member 'BP_Functions_C_GetBlockedPlayersText::BP_Player_Controlle_Script' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, __WorldContext) == 0x000010, "Member 'BP_Functions_C_GetBlockedPlayersText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, PlayersBlocked) == 0x000018, "Member 'BP_Functions_C_GetBlockedPlayersText::PlayersBlocked' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_Functions_C_GetBlockedPlayersText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_Functions_C_GetBlockedPlayersText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_Functions_C_GetBlockedPlayersText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_Functions_C_GetBlockedPlayersText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_Functions_C_GetBlockedPlayersText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E0, "Member 'BP_Functions_C_GetBlockedPlayersText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, K2Node_MakeArray_Array_1) == 0x000120, "Member 'BP_Functions_C_GetBlockedPlayersText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_GetBlockedPlayersText, CallFunc_Format_ReturnValue_1) == 0x000130, "Member 'BP_Functions_C_GetBlockedPlayersText::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.StringToEFlamePlatform
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Functions_C_StringToEFlamePlatform final
{
public:
	class FString                                 PlatformString;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, EFlamePlatform>           StringPlatformMapping;                             // 0x0020(0x0050)(Edit, BlueprintVisible)
	EFlamePlatform                                CallFunc_Map_Find_Value;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, EFlamePlatform>           K2Node_MakeMap_Map;                                // 0x0078(0x0050)()
};
static_assert(alignof(BP_Functions_C_StringToEFlamePlatform) == 0x000008, "Wrong alignment on BP_Functions_C_StringToEFlamePlatform");
static_assert(sizeof(BP_Functions_C_StringToEFlamePlatform) == 0x0000C8, "Wrong size on BP_Functions_C_StringToEFlamePlatform");
static_assert(offsetof(BP_Functions_C_StringToEFlamePlatform, PlatformString) == 0x000000, "Member 'BP_Functions_C_StringToEFlamePlatform::PlatformString' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_StringToEFlamePlatform, __WorldContext) == 0x000010, "Member 'BP_Functions_C_StringToEFlamePlatform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_StringToEFlamePlatform, NewParam) == 0x000018, "Member 'BP_Functions_C_StringToEFlamePlatform::NewParam' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_StringToEFlamePlatform, StringPlatformMapping) == 0x000020, "Member 'BP_Functions_C_StringToEFlamePlatform::StringPlatformMapping' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_StringToEFlamePlatform, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_Functions_C_StringToEFlamePlatform::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_StringToEFlamePlatform, CallFunc_Map_Find_ReturnValue) == 0x000071, "Member 'BP_Functions_C_StringToEFlamePlatform::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_StringToEFlamePlatform, K2Node_MakeMap_Map) == 0x000078, "Member 'BP_Functions_C_StringToEFlamePlatform::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.SetFrameRate
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_SetFrameRate final
{
public:
	struct FVideoSaveSettings                     VideoSettings;                                     // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         OverrideFrameRate;                                 // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldApply_;                                      // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewFrameRate;                                      // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 FrameRateOptions;                                  // 0x0078(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_SetFrameRate) == 0x000008, "Wrong alignment on BP_Functions_C_SetFrameRate");
static_assert(sizeof(BP_Functions_C_SetFrameRate) == 0x0000B0, "Wrong size on BP_Functions_C_SetFrameRate");
static_assert(offsetof(BP_Functions_C_SetFrameRate, VideoSettings) == 0x000000, "Member 'BP_Functions_C_SetFrameRate::VideoSettings' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, OverrideFrameRate) == 0x000060, "Member 'BP_Functions_C_SetFrameRate::OverrideFrameRate' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, ShouldApply_) == 0x000064, "Member 'BP_Functions_C_SetFrameRate::ShouldApply_' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, __WorldContext) == 0x000068, "Member 'BP_Functions_C_SetFrameRate::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, NewFrameRate) == 0x000070, "Member 'BP_Functions_C_SetFrameRate::NewFrameRate' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, FrameRateOptions) == 0x000078, "Member 'BP_Functions_C_SetFrameRate::FrameRateOptions' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_Functions_C_SetFrameRate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, CallFunc_GetGameUserSettings_ReturnValue) == 0x000090, "Member 'BP_Functions_C_SetFrameRate::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_Functions_C_SetFrameRate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_Functions_C_SetFrameRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, CallFunc_BooleanOR_ReturnValue) == 0x0000A9, "Member 'BP_Functions_C_SetFrameRate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_SetFrameRate, CallFunc_SelectFloat_ReturnValue) == 0x0000AC, "Member 'BP_Functions_C_SetFrameRate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Is Input Action Gamepad
// 0x0020 (0x0020 - 0x0000)
struct BP_Functions_C_Is_Input_Action_Gamepad final
{
public:
	class FString                                 Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Is_Input_Action_Gamepad) == 0x000008, "Wrong alignment on BP_Functions_C_Is_Input_Action_Gamepad");
static_assert(sizeof(BP_Functions_C_Is_Input_Action_Gamepad) == 0x000020, "Wrong size on BP_Functions_C_Is_Input_Action_Gamepad");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, Input) == 0x000000, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::Input' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, __WorldContext) == 0x000010, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, IsGamepad) == 0x000018, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::IsGamepad' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, CallFunc_Contains_ReturnValue) == 0x000019, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, CallFunc_Contains_ReturnValue_1) == 0x00001A, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, CallFunc_Contains_ReturnValue_2) == 0x00001B, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Input_Action_Gamepad, CallFunc_BooleanOR_ReturnValue_1) == 0x00001D, "Member 'BP_Functions_C_Is_Input_Action_Gamepad::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.IsMatchmakingAllowedForGameMode
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Functions_C_IsMatchmakingAllowedForGameMode final
{
public:
	EOnlineGameMode                               GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGroupSystem*                           CallFunc_GetGroupSystem_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGroupSize_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchmakingAllowed_ReturnValue;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineGameModeDescriptionTableRow     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0078)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_IsMatchmakingAllowedForGameMode) == 0x000008, "Wrong alignment on BP_Functions_C_IsMatchmakingAllowedForGameMode");
static_assert(sizeof(BP_Functions_C_IsMatchmakingAllowedForGameMode) == 0x0000D8, "Wrong size on BP_Functions_C_IsMatchmakingAllowedForGameMode");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, GameMode) == 0x000000, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::GameMode' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, __WorldContext) == 0x000008, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, ReturnValue) == 0x000010, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, Temp_bool_True_if_break_was_hit_Variable) == 0x000011, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_GetGroupSystem_ReturnValue) == 0x000018, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_GetGroupSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_GetGroupSize_ReturnValue) == 0x000020, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_GetGroupSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_IsMatchmakingAllowed_ReturnValue) == 0x000025, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_IsMatchmakingAllowed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000026, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D0, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_BooleanAND_ReturnValue) == 0x0000D2, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D3, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsMatchmakingAllowedForGameMode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D4, "Member 'BP_Functions_C_IsMatchmakingAllowedForGameMode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.UnwindDegrees
// 0x0028 (0x0028 - 0x0000)
struct BP_Functions_C_UnwindDegrees final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Return;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueToUnWind;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_UnwindDegrees) == 0x000008, "Wrong alignment on BP_Functions_C_UnwindDegrees");
static_assert(sizeof(BP_Functions_C_UnwindDegrees) == 0x000028, "Wrong size on BP_Functions_C_UnwindDegrees");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, Input) == 0x000000, "Member 'BP_Functions_C_UnwindDegrees::Input' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, __WorldContext) == 0x000008, "Member 'BP_Functions_C_UnwindDegrees::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, Return) == 0x000010, "Member 'BP_Functions_C_UnwindDegrees::Return' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, ValueToUnWind) == 0x000014, "Member 'BP_Functions_C_UnwindDegrees::ValueToUnWind' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Functions_C_UnwindDegrees::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_Functions_C_UnwindDegrees::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_Functions_C_UnwindDegrees::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_UnwindDegrees, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_Functions_C_UnwindDegrees::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.PlayersUserMessage
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_PlayersUserMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class APlayerController*>              Players;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          DisplayToAll;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              Optional2D_Sound;                                  // 0x0030(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_PlayersUserMessage) == 0x000008, "Wrong alignment on BP_Functions_C_PlayersUserMessage");
static_assert(sizeof(BP_Functions_C_PlayersUserMessage) == 0x0000B0, "Wrong size on BP_Functions_C_PlayersUserMessage");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, Message) == 0x000000, "Member 'BP_Functions_C_PlayersUserMessage::Message' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, Players) == 0x000018, "Member 'BP_Functions_C_PlayersUserMessage::Players' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, DisplayToAll) == 0x000028, "Member 'BP_Functions_C_PlayersUserMessage::DisplayToAll' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, Optional2D_Sound) == 0x000030, "Member 'BP_Functions_C_PlayersUserMessage::Optional2D_Sound' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, __WorldContext) == 0x000058, "Member 'BP_Functions_C_PlayersUserMessage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_GetPlayerControllers_ReturnValue) == 0x000060, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_Functions_C_PlayersUserMessage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_Functions_C_PlayersUserMessage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_Functions_C_PlayersUserMessage::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'BP_Functions_C_PlayersUserMessage::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_PlayersUserMessage, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_Functions_C_PlayersUserMessage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Is Equipment Storage Empty
// 0x0020 (0x0020 - 0x0000)
struct BP_Functions_C_Is_Equipment_Storage_Empty final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Empty;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOfWeapons_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGridEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Is_Equipment_Storage_Empty) == 0x000008, "Wrong alignment on BP_Functions_C_Is_Equipment_Storage_Empty");
static_assert(sizeof(BP_Functions_C_Is_Equipment_Storage_Empty) == 0x000020, "Wrong size on BP_Functions_C_Is_Equipment_Storage_Empty");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, Equipment_Storage) == 0x000000, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, __WorldContext) == 0x000008, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, Is_Empty) == 0x000010, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::Is_Empty' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, CallFunc_CountOfWeapons_ReturnValue) == 0x000014, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::CallFunc_CountOfWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, CallFunc_IsGridEmpty_ReturnValue) == 0x000018, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::CallFunc_IsGridEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_Equipment_Storage_Empty, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'BP_Functions_C_Is_Equipment_Storage_Empty::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Get One Frame Skip Time
// 0x0018 (0x0018 - 0x0000)
struct BP_Functions_C_Get_One_Frame_Skip_Time final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkipTime;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_Get_One_Frame_Skip_Time) == 0x000008, "Wrong alignment on BP_Functions_C_Get_One_Frame_Skip_Time");
static_assert(sizeof(BP_Functions_C_Get_One_Frame_Skip_Time) == 0x000018, "Wrong size on BP_Functions_C_Get_One_Frame_Skip_Time");
static_assert(offsetof(BP_Functions_C_Get_One_Frame_Skip_Time, __WorldContext) == 0x000000, "Member 'BP_Functions_C_Get_One_Frame_Skip_Time::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_One_Frame_Skip_Time, SkipTime) == 0x000008, "Member 'BP_Functions_C_Get_One_Frame_Skip_Time::SkipTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_One_Frame_Skip_Time, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_Functions_C_Get_One_Frame_Skip_Time::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_One_Frame_Skip_Time, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BP_Functions_C_Get_One_Frame_Skip_Time::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Get_One_Frame_Skip_Time, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Functions_C_Get_One_Frame_Skip_Time::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.FindValidOffer
// 0x01D0 (0x01D0 - 0x0000)
struct BP_Functions_C_FindValidOffer final
{
public:
	struct FDateTime                              ShopOriginTime;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameStoreSlotInfo                     GameStoreSlotInfo;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FDateTime                              Now;                                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidOfferFound;                                   // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreOfferInfo                    ValidOffer;                                        // 0x0040(0x0028)(Parm, OutParm)
	struct FDateTime                              ValidUntil;                                        // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingSeconds;                                  // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OfferIndex;                                        // 0x0074(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasValidOfferFound;                                // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreOfferInfo                    ValidOfferLocal;                                   // 0x0080(0x0028)(Edit, BlueprintVisible)
	struct FTimespan                              LastCycleTimespan;                                 // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              SumOfOfferTimeSpans;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimespanOfAllOfferTimes;                           // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameStoreOfferInfo>            OffersLocal;                                       // 0x00C0(0x0010)(Edit, BlueprintVisible)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_TimespanTimespan_ReturnValue;    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Add_DateTimeTimespan_ReturnValue;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreOfferInfo                    CallFunc_Array_Get_Item;                           // 0x0110(0x0028)()
	struct FGameStoreOfferInfo                    CallFunc_Array_Get_Item_1;                         // 0x0138(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Add_TimespanTimespan_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameStoreOfferInfo                    CallFunc_Array_Get_Item_2;                         // 0x0170(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_TimespanTimespan_ReturnValue;     // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TimespanRatio_ReturnValue;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Add_TimespanTimespan_ReturnValue_1;       // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Multiply_TimespanFloat_ReturnValue;       // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Functions_C_FindValidOffer) == 0x000008, "Wrong alignment on BP_Functions_C_FindValidOffer");
static_assert(sizeof(BP_Functions_C_FindValidOffer) == 0x0001D0, "Wrong size on BP_Functions_C_FindValidOffer");
static_assert(offsetof(BP_Functions_C_FindValidOffer, ShopOriginTime) == 0x000000, "Member 'BP_Functions_C_FindValidOffer::ShopOriginTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, GameStoreSlotInfo) == 0x000008, "Member 'BP_Functions_C_FindValidOffer::GameStoreSlotInfo' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, Now) == 0x000028, "Member 'BP_Functions_C_FindValidOffer::Now' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, __WorldContext) == 0x000030, "Member 'BP_Functions_C_FindValidOffer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, ValidOfferFound) == 0x000038, "Member 'BP_Functions_C_FindValidOffer::ValidOfferFound' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, ValidOffer) == 0x000040, "Member 'BP_Functions_C_FindValidOffer::ValidOffer' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, ValidUntil) == 0x000068, "Member 'BP_Functions_C_FindValidOffer::ValidUntil' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, RemainingSeconds) == 0x000070, "Member 'BP_Functions_C_FindValidOffer::RemainingSeconds' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, OfferIndex) == 0x000074, "Member 'BP_Functions_C_FindValidOffer::OfferIndex' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, Index_0) == 0x000078, "Member 'BP_Functions_C_FindValidOffer::Index_0' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, WasValidOfferFound) == 0x00007C, "Member 'BP_Functions_C_FindValidOffer::WasValidOfferFound' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, ValidOfferLocal) == 0x000080, "Member 'BP_Functions_C_FindValidOffer::ValidOfferLocal' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, LastCycleTimespan) == 0x0000A8, "Member 'BP_Functions_C_FindValidOffer::LastCycleTimespan' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, SumOfOfferTimeSpans) == 0x0000B0, "Member 'BP_Functions_C_FindValidOffer::SumOfOfferTimeSpans' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, TimespanOfAllOfferTimes) == 0x0000B8, "Member 'BP_Functions_C_FindValidOffer::TimespanOfAllOfferTimes' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, OffersLocal) == 0x0000C0, "Member 'BP_Functions_C_FindValidOffer::OffersLocal' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x0000D0, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'BP_Functions_C_FindValidOffer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, Temp_int_Array_Index_Variable) == 0x0000E0, "Member 'BP_Functions_C_FindValidOffer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, Temp_bool_True_if_break_was_hit_Variable) == 0x0000E4, "Member 'BP_Functions_C_FindValidOffer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Not_PreBool_ReturnValue) == 0x0000E5, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, Temp_int_Array_Index_Variable_1) == 0x0000E8, "Member 'BP_Functions_C_FindValidOffer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Subtract_TimespanTimespan_ReturnValue) == 0x0000F0, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Subtract_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_GetTotalSeconds_ReturnValue) == 0x0000F8, "Member 'BP_Functions_C_FindValidOffer::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Add_DateTimeTimespan_ReturnValue) == 0x000100, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Add_DateTimeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Round_ReturnValue) == 0x000108, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Add_TimespanTimespan_ReturnValue) == 0x000168, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Add_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Array_Get_Item_2) == 0x000170, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Array_Length_ReturnValue_1) == 0x000198, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Less_IntInt_ReturnValue) == 0x00019C, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, Temp_int_Loop_Counter_Variable_1) == 0x0001A0, "Member 'BP_Functions_C_FindValidOffer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Greater_TimespanTimespan_ReturnValue) == 0x0001A4, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Greater_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A5, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A8, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_BooleanAND_ReturnValue) == 0x0001AC, "Member 'BP_Functions_C_FindValidOffer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_TimespanRatio_ReturnValue) == 0x0001B0, "Member 'BP_Functions_C_FindValidOffer::CallFunc_TimespanRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Add_TimespanTimespan_ReturnValue_1) == 0x0001B8, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Add_TimespanTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Fraction_ReturnValue) == 0x0001C0, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_FindValidOffer, CallFunc_Multiply_TimespanFloat_ReturnValue) == 0x0001C8, "Member 'BP_Functions_C_FindValidOffer::CallFunc_Multiply_TimespanFloat_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Nearly Equal (Vector Element-wise)
// 0x0048 (0x0048 - 0x0000)
struct BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_ final
{
public:
	struct FVector                                A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                B;                                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ErrorTolerance;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EqualX;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EqualY;                                            // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EqualZ;                                            // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_) == 0x000008, "Wrong alignment on BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_");
static_assert(sizeof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_) == 0x000048, "Wrong size on BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, A) == 0x000000, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::A' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, B) == 0x00000C, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::B' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, ErrorTolerance) == 0x000018, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::ErrorTolerance' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, __WorldContext) == 0x000020, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, EqualX) == 0x000028, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::EqualX' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, EqualY) == 0x000029, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::EqualY' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, EqualZ) == 0x00002A, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::EqualZ' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_BreakVector_X_1) == 0x000038, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_BreakVector_Y_1) == 0x00003C, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000045, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000046, "Member 'BP_Functions_C_Nearly_Equal__Vector_ElementMinuswise_::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.IsTemporarySellingPointActive
// 0x0070 (0x0070 - 0x0000)
struct BP_Functions_C_IsTemporarySellingPointActive final
{
public:
	struct FDateTime                              CurrentTime;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_TemporarySellingPointTimeInfo       ValidTimes;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsActive;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsTemporary;                                      // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameStoreOfferInfo>            Result;                                            // 0x0028(0x0010)(Edit, BlueprintVisible)
	struct FGameStoreInfo                         StoreInfo;                                         // 0x0038(0x0028)(Edit, BlueprintVisible)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DateTimeDateTime_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue;    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue_1;  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue; // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_IsTemporarySellingPointActive) == 0x000008, "Wrong alignment on BP_Functions_C_IsTemporarySellingPointActive");
static_assert(sizeof(BP_Functions_C_IsTemporarySellingPointActive) == 0x000070, "Wrong size on BP_Functions_C_IsTemporarySellingPointActive");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CurrentTime) == 0x000000, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CurrentTime' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, ValidTimes) == 0x000008, "Member 'BP_Functions_C_IsTemporarySellingPointActive::ValidTimes' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, __WorldContext) == 0x000018, "Member 'BP_Functions_C_IsTemporarySellingPointActive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, bIsActive) == 0x000020, "Member 'BP_Functions_C_IsTemporarySellingPointActive::bIsActive' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, bIsTemporary) == 0x000021, "Member 'BP_Functions_C_IsTemporarySellingPointActive::bIsTemporary' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, Result) == 0x000028, "Member 'BP_Functions_C_IsTemporarySellingPointActive::Result' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, StoreInfo) == 0x000038, "Member 'BP_Functions_C_IsTemporarySellingPointActive::StoreInfo' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CallFunc_MakeDateTime_ReturnValue) == 0x000060, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CallFunc_LessEqual_DateTimeDateTime_ReturnValue) == 0x000068, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CallFunc_LessEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CallFunc_NotEqual_DateTimeDateTime_ReturnValue) == 0x000069, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CallFunc_NotEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CallFunc_NotEqual_DateTimeDateTime_ReturnValue_1) == 0x00006A, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CallFunc_NotEqual_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue) == 0x00006B, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CallFunc_BooleanOR_ReturnValue) == 0x00006C, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_IsTemporarySellingPointActive, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'BP_Functions_C_IsTemporarySellingPointActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Is on A Console
// 0x0018 (0x0018 - 0x0000)
struct BP_Functions_C_Is_on_A_Console final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Is_on_A_Console) == 0x000008, "Wrong alignment on BP_Functions_C_Is_on_A_Console");
static_assert(sizeof(BP_Functions_C_Is_on_A_Console) == 0x000018, "Wrong size on BP_Functions_C_Is_on_A_Console");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, __WorldContext) == 0x000000, "Member 'BP_Functions_C_Is_on_A_Console::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, ReturnValue) == 0x000008, "Member 'BP_Functions_C_Is_on_A_Console::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_GetCurrentPlatform_ReturnValue) == 0x000009, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000B, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00000C, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00000D, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x00000E, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_BooleanAND_ReturnValue_1) == 0x000010, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_BooleanAND_ReturnValue_2) == 0x000011, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_BooleanAND_ReturnValue_3) == 0x000012, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Is_on_A_Console, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'BP_Functions_C_Is_on_A_Console::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Functions.BP_Functions_C.Find Ancestor Of User Widget Class
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Functions_C_Find_Ancestor_Of_User_Widget_Class final
{
public:
	TSoftObjectPtr<class UUserWidget>             ChildWidget;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, InstancedReference, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Desired_Ancestor_Class;                            // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Ancestor_Widget;                                   // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DesiredClass;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CurrentWidget;                                     // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class) == 0x000008, "Wrong alignment on BP_Functions_C_Find_Ancestor_Of_User_Widget_Class");
static_assert(sizeof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class) == 0x0000B0, "Wrong size on BP_Functions_C_Find_Ancestor_Of_User_Widget_Class");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, ChildWidget) == 0x000000, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::ChildWidget' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, Desired_Ancestor_Class) == 0x000028, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::Desired_Ancestor_Class' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, __WorldContext) == 0x000050, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, Success_) == 0x000058, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::Success_' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, Ancestor_Widget) == 0x000060, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::Ancestor_Widget' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, DesiredClass) == 0x000068, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::DesiredClass' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CurrentWidget) == 0x000070, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CurrentWidget' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_LoadSoftClassReference_ReturnValue) == 0x000078, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_LoadSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_LoadSoftReference_ReturnValue) == 0x000080, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, K2Node_DynamicCast_AsUser_Widget) == 0x000088, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_GetParentUserWidget_ReturnValue) == 0x000098, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000A9, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Functions_C_Find_Ancestor_Of_User_Widget_Class, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'BP_Functions_C_Find_Ancestor_Of_User_Widget_Class::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

