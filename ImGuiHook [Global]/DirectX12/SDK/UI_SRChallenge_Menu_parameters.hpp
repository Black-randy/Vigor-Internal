#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SRChallenge_Menu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "S_ShootingChallengeGroup_structs.hpp"
#include "S_ShootingChallenge_structs.hpp"
#include "S_ShootingChallengeGroupArray_structs.hpp"
#include "E_ShootingChallengeResult_structs.hpp"


namespace SDK::Params
{

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.ExecuteUbergraph_UI_SRChallenge_Menu
// 0x0400 (0x0400 - 0x0000)
struct UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FS_ShootingChallenge& Challenge, const struct FS_ShootingChallengeGroup& Group)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FS_ShootingChallenge& Challenge, const struct FS_ShootingChallengeGroup& Group)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0070(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0088(0x0018)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTableRowFromItemClass_Success;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetTableRowFromItemClass_TableHandle;     // 0x00A8(0x0010)(NoDestructor)
	bool                                          CallFunc_GetItemRowFromDataTable_Success;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemClassTableRow                     CallFunc_GetItemRowFromDataTable_RowData;          // 0x00C0(0x0118)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_TextureSoft;                    // 0x01E0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21B[0x1];                                      // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x021C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_SRChallenge_CategoryRow_C*          K2Node_DynamicCast_AsUI_SRChallenge_Category_Row;  // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0268(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_SRChallenge_Row_C*                  K2Node_DynamicCast_AsUI_SRChallenge_Row;           // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x1];                                      // 0x0293(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_SRChallenge_CategoryRow_C*          CallFunc_Create_ReturnValue;                       // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ShootingChallengeGroup>      CallFunc_MakeGroups_Groups;                        // 0x02B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_ShootingChallengeGroup>      CallFunc_GetWeaponsByCategory_ChallengeGroups;     // 0x02C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TMap<EItemCategory, struct FS_ShootingChallengeGroupArray> CallFunc_GetWeaponsByCategory_CategorizedWeapons;  // 0x02D0(0x0050)(ContainsInstancedReference)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EItemCategory>                         CallFunc_Map_Keys_Keys;                            // 0x0328(0x0010)(ReferenceParm)
	EItemCategory                                 CallFunc_Array_Get_Item_2;                         // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ShootingChallengeGroupArray         CallFunc_Map_Find_Value;                           // 0x0348(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ShootingChallengeGroup              CallFunc_Array_Get_Item_3;                         // 0x0380(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default;                             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUI_SRChallenge_CategoryRow_C* CategoryRef)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x03C8(0x0010)(ZeroConstructor, NoDestructor)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E2[0x6];                                      // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_SRChallenge_Row_C*                  CallFunc_Create_ReturnValue_1;                     // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu");
static_assert(sizeof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu) == 0x000400, "Wrong size on UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, EntryPoint) == 0x000000, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_bool_Variable) == 0x000015, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_bool_Variable_1) == 0x000016, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000020, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Conv_IntToText_ReturnValue) == 0x000058, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000070, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000088, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_IsValidClass_ReturnValue) == 0x0000A0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetTableRowFromItemClass_Success) == 0x0000A1, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetTableRowFromItemClass_Success' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetTableRowFromItemClass_TableHandle) == 0x0000A8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetTableRowFromItemClass_TableHandle' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetItemRowFromDataTable_Success) == 0x0000B8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetItemRowFromDataTable_Success' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetItemRowFromDataTable_RowData) == 0x0000C0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetItemRowFromDataTable_RowData' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Loop_Counter_Variable_2) == 0x0001D8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001DC, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_CustomEvent_TextureSoft) == 0x0001E0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_CustomEvent_TextureSoft' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000208, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_AsTexture_2D) == 0x000210, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_IsValid_ReturnValue) == 0x000219, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00021A, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_CreateDelegate_OutputDelegate_2) == 0x00021C, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetAllChildren_ReturnValue) == 0x000230, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Loop_Counter_Variable_3) == 0x000240, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Get_Item) == 0x000248, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_AsUI_SRChallenge_Category_Row) == 0x000250, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_AsUI_SRChallenge_Category_Row' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Add_IntInt_ReturnValue_3) == 0x00025C, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000260, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetAllChildren_ReturnValue_1) == 0x000268, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Get_Item_1) == 0x000278, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Length_ReturnValue) == 0x000280, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_AsUI_SRChallenge_Row) == 0x000288, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_AsUI_SRChallenge_Row' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_bSuccess_2) == 0x000290, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Less_IntInt_ReturnValue) == 0x000291, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_BooleanAND_ReturnValue) == 0x000292, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Length_ReturnValue_1) == 0x000294, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000298, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Less_IntInt_ReturnValue_1) == 0x000299, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Create_ReturnValue) == 0x0002A0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_IsValid_ReturnValue_1) == 0x0002A8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_MakeGroups_Groups) == 0x0002B0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_MakeGroups_Groups' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetWeaponsByCategory_ChallengeGroups) == 0x0002C0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetWeaponsByCategory_ChallengeGroups' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetWeaponsByCategory_CategorizedWeapons) == 0x0002D0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetWeaponsByCategory_CategorizedWeapons' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_AddChild_ReturnValue) == 0x000320, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Map_Keys_Keys) == 0x000328, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Get_Item_2) == 0x000338, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Length_ReturnValue_2) == 0x00033C, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Less_IntInt_ReturnValue_2) == 0x000340, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Map_Find_Value) == 0x000348, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Map_Find_ReturnValue) == 0x000358, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000360, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Length_ReturnValue_3) == 0x000368, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Less_IntInt_ReturnValue_3) == 0x00036C, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_GetChildAt_ReturnValue) == 0x000370, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_int_Array_Index_Variable_3) == 0x000378, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Array_Get_Item_3) == 0x000380, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_IsValid_ReturnValue_2) == 0x0003B0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, Temp_object_Variable) == 0x0003B8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_Select_Default) == 0x0003C0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003C8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_AsTexture_2D_1) == 0x0003D8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_DynamicCast_bSuccess_3) == 0x0003E0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_IsValid_ReturnValue_3) == 0x0003E1, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, K2Node_CustomEvent_Loaded) == 0x0003E8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_Create_ReturnValue_1) == 0x0003F0, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu, CallFunc_AddChild_ReturnValue_1) == 0x0003F8, "Member 'UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.LoadTargetImage
// 0x0028 (0x0028 - 0x0000)
struct UI_SRChallenge_Menu_C_LoadTargetImage final
{
public:
	TSoftObjectPtr<class UTexture2D>              TextureSoft;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_LoadTargetImage) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_LoadTargetImage");
static_assert(sizeof(UI_SRChallenge_Menu_C_LoadTargetImage) == 0x000028, "Wrong size on UI_SRChallenge_Menu_C_LoadTargetImage");
static_assert(offsetof(UI_SRChallenge_Menu_C_LoadTargetImage, TextureSoft) == 0x000000, "Member 'UI_SRChallenge_Menu_C_LoadTargetImage::TextureSoft' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7
// 0x0008 (0x0008 - 0x0000)
struct UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7");
static_assert(sizeof(UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7) == 0x000008, "Wrong size on UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7");
static_assert(offsetof(UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7, Loaded) == 0x000000, "Member 'UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7::Loaded' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.ChallengeClicked
// 0x00C0 (0x00C0 - 0x0000)
struct UI_SRChallenge_Menu_C_ChallengeClicked final
{
public:
	struct FS_ShootingChallenge                   Challenge;                                         // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ShootingChallengeGroup              Group;                                             // 0x0090(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_ChallengeClicked) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_ChallengeClicked");
static_assert(sizeof(UI_SRChallenge_Menu_C_ChallengeClicked) == 0x0000C0, "Wrong size on UI_SRChallenge_Menu_C_ChallengeClicked");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeClicked, Challenge) == 0x000000, "Member 'UI_SRChallenge_Menu_C_ChallengeClicked::Challenge' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeClicked, Group) == 0x000090, "Member 'UI_SRChallenge_Menu_C_ChallengeClicked::Group' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.ChallengeFocused
// 0x0180 (0x0180 - 0x0000)
struct UI_SRChallenge_Menu_C_ChallengeFocused final
{
public:
	struct FS_ShootingChallenge                   Challenge;                                         // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ShootingChallengeGroup              Group;                                             // 0x0090(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          BP_Player_Controller_Script;                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetWeaponName_ReturnValue;                // 0x00C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0018)()
	E_ShootingChallengeResult                     CallFunc_GetChallengeHighScore_Rank;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetChallengeHighScore_HighScore;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatTimeFloatMMSSmm_ReturnValue;        // 0x0158(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_ChallengeFocused) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_ChallengeFocused");
static_assert(sizeof(UI_SRChallenge_Menu_C_ChallengeFocused) == 0x000180, "Wrong size on UI_SRChallenge_Menu_C_ChallengeFocused");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, Challenge) == 0x000000, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::Challenge' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, Group) == 0x000090, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::Group' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, BP_Player_Controller_Script) == 0x0000C0, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::BP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, CallFunc_GetWeaponName_ReturnValue) == 0x0000C8, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::CallFunc_GetWeaponName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, K2Node_MakeArray_Array) == 0x000120, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, CallFunc_Format_ReturnValue) == 0x000130, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, CallFunc_GetChallengeHighScore_Rank) == 0x000148, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::CallFunc_GetChallengeHighScore_Rank' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, CallFunc_GetChallengeHighScore_HighScore) == 0x00014C, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::CallFunc_GetChallengeHighScore_HighScore' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, Temp_int_Variable) == 0x000150, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, CallFunc_FormatTimeFloatMMSSmm_ReturnValue) == 0x000158, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::CallFunc_FormatTimeFloatMMSSmm_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, K2Node_SwitchEnum_CmpSuccess) == 0x000170, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, Temp_int_Variable_1) == 0x000174, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, Temp_bool_Variable) == 0x000178, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_ChallengeFocused, K2Node_Select_Default) == 0x00017C, "Member 'UI_SRChallenge_Menu_C_ChallengeFocused::K2Node_Select_Default' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.CategoryFocused
// 0x02F0 (0x02F0 - 0x0000)
struct UI_SRChallenge_Menu_C_CategoryFocused final
{
public:
	class UUI_SRChallenge_CategoryRow_C*          CategoryRef;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CategoryWeaponCount;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempBronzeCount;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempSilverCount;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempGoldCount;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0130(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0210(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0220(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0238(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0250(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0268(0x0018)()
	class FText                                   CallFunc_GetCategoryText_DisplayText;              // 0x0280(0x0018)()
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_SRChallenge_Row_C*                  K2Node_DynamicCast_AsUI_SRChallenge_Row;           // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShootingChallengeResult                     CallFunc_Array_Get_Item_1;                         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3[0x1];                                      // 0x02D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_CategoryFocused) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_CategoryFocused");
static_assert(sizeof(UI_SRChallenge_Menu_C_CategoryFocused) == 0x0002F0, "Wrong size on UI_SRChallenge_Menu_C_CategoryFocused");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CategoryRef) == 0x000000, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CategoryRef' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CategoryWeaponCount) == 0x000008, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CategoryWeaponCount' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, TempBronzeCount) == 0x00000C, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::TempBronzeCount' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, TempSilverCount) == 0x000010, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::TempSilverCount' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, TempGoldCount) == 0x000014, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::TempGoldCount' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, Temp_int_Array_Index_Variable) == 0x000020, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, Temp_int_Variable) == 0x000024, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, Temp_int_Variable_1) == 0x00003C, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000040, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00004C, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Round_ReturnValue) == 0x000050, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000098, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeArray_Array) == 0x0000A0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Round_ReturnValue_1) == 0x0000D4, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeArray_Array_1) == 0x000118, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000128, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Format_ReturnValue_1) == 0x000130, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000148, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x00014C, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000150, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000198, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeArray_Array_2) == 0x0001A0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Round_ReturnValue_2) == 0x0001B0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Format_ReturnValue_2) == 0x0001B8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001D0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_MakeArray_Array_3) == 0x000210, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Format_ReturnValue_3) == 0x000220, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToText_ReturnValue) == 0x000238, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000250, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000268, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_GetCategoryText_DisplayText) == 0x000280, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_GetCategoryText_DisplayText' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_GetAllChildren_ReturnValue) == 0x000298, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Array_Get_Item) == 0x0002A8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Array_Length_ReturnValue) == 0x0002B0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_DynamicCast_AsUI_SRChallenge_Row) == 0x0002B8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_DynamicCast_AsUI_SRChallenge_Row' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, K2Node_DynamicCast_bSuccess) == 0x0002C0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Less_IntInt_ReturnValue) == 0x0002C1, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Array_Length_ReturnValue_1) == 0x0002C4, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Array_Get_Item_1) == 0x0002C8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Multiply_IntInt_ReturnValue) == 0x0002CC, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002D1, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002D2, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Array_Length_ReturnValue_2) == 0x0002D4, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002D8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, Temp_int_Variable_2) == 0x0002DC, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002E0, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002E4, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CategoryFocused, CallFunc_Add_IntInt_ReturnValue_4) == 0x0002E8, "Member 'UI_SRChallenge_Menu_C_CategoryFocused::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.SetObjectiveDescription
// 0x0018 (0x0018 - 0x0000)
struct UI_SRChallenge_Menu_C_SetObjectiveDescription final
{
public:
	class FText                                   Objective_Text;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_SRChallenge_Menu_C_SetObjectiveDescription) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_SetObjectiveDescription");
static_assert(sizeof(UI_SRChallenge_Menu_C_SetObjectiveDescription) == 0x000018, "Wrong size on UI_SRChallenge_Menu_C_SetObjectiveDescription");
static_assert(offsetof(UI_SRChallenge_Menu_C_SetObjectiveDescription, Objective_Text) == 0x000000, "Member 'UI_SRChallenge_Menu_C_SetObjectiveDescription::Objective_Text' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.SetRequiredTime
// 0x0058 (0x0058 - 0x0000)
struct UI_SRChallenge_Menu_C_SetRequiredTime final
{
public:
	float                                         Gold_Time;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Silver_Time;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bronze_Time;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatTimeFloatMMSS_TimeText;             // 0x0010(0x0018)()
	class FText                                   CallFunc_FormatTimeFloatMMSS_TimeText_1;           // 0x0028(0x0018)()
	class FText                                   CallFunc_FormatTimeFloatMMSS_TimeText_2;           // 0x0040(0x0018)()
};
static_assert(alignof(UI_SRChallenge_Menu_C_SetRequiredTime) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_SetRequiredTime");
static_assert(sizeof(UI_SRChallenge_Menu_C_SetRequiredTime) == 0x000058, "Wrong size on UI_SRChallenge_Menu_C_SetRequiredTime");
static_assert(offsetof(UI_SRChallenge_Menu_C_SetRequiredTime, Gold_Time) == 0x000000, "Member 'UI_SRChallenge_Menu_C_SetRequiredTime::Gold_Time' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_SetRequiredTime, Silver_Time) == 0x000004, "Member 'UI_SRChallenge_Menu_C_SetRequiredTime::Silver_Time' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_SetRequiredTime, Bronze_Time) == 0x000008, "Member 'UI_SRChallenge_Menu_C_SetRequiredTime::Bronze_Time' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_SetRequiredTime, CallFunc_FormatTimeFloatMMSS_TimeText) == 0x000010, "Member 'UI_SRChallenge_Menu_C_SetRequiredTime::CallFunc_FormatTimeFloatMMSS_TimeText' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_SetRequiredTime, CallFunc_FormatTimeFloatMMSS_TimeText_1) == 0x000028, "Member 'UI_SRChallenge_Menu_C_SetRequiredTime::CallFunc_FormatTimeFloatMMSS_TimeText_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_SetRequiredTime, CallFunc_FormatTimeFloatMMSS_TimeText_2) == 0x000040, "Member 'UI_SRChallenge_Menu_C_SetRequiredTime::CallFunc_FormatTimeFloatMMSS_TimeText_2' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.InitUI
// 0x0090 (0x0090 - 0x0000)
struct UI_SRChallenge_Menu_C_InitUI final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0018(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0030(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0048(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0060(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_2;                // 0x0078(0x0018)()
};
static_assert(alignof(UI_SRChallenge_Menu_C_InitUI) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_InitUI");
static_assert(sizeof(UI_SRChallenge_Menu_C_InitUI) == 0x000090, "Wrong size on UI_SRChallenge_Menu_C_InitUI");
static_assert(offsetof(UI_SRChallenge_Menu_C_InitUI, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'UI_SRChallenge_Menu_C_InitUI::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_InitUI, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000018, "Member 'UI_SRChallenge_Menu_C_InitUI::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_InitUI, CallFunc_TextToUpper_ReturnValue) == 0x000030, "Member 'UI_SRChallenge_Menu_C_InitUI::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_InitUI, CallFunc_TextToUpper_ReturnValue_1) == 0x000048, "Member 'UI_SRChallenge_Menu_C_InitUI::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_InitUI, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000060, "Member 'UI_SRChallenge_Menu_C_InitUI::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_InitUI, CallFunc_TextToUpper_ReturnValue_2) == 0x000078, "Member 'UI_SRChallenge_Menu_C_InitUI::CallFunc_TextToUpper_ReturnValue_2' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.MakeGroups
// 0x01A0 (0x01A0 - 0x0000)
struct UI_SRChallenge_Menu_C_MakeGroups final
{
public:
	TArray<struct FS_ShootingChallenge>           Challenges_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UBP_ShootingChallenges_GMComponent_C*   SRComponent;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ShootingChallengeGroup>      Groups;                                            // 0x0018(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_ShootingChallengeGroup>      GroupsLoc;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_ShootingChallengeGroup              GroupInProgress;                                   // 0x0038(0x0030)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ShootingChallenge                   CallFunc_Array_Get_Item;                           // 0x0078(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	E_ShootingChallengeResult                     CallFunc_GetChallengeHighScore_Rank;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetChallengeHighScore_HighScore;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeaponUnlocked_ReturnValue;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ShootingChallenge>           K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<E_ShootingChallengeResult>             K2Node_MakeArray_Array_1;                          // 0x0148(0x0010)(ReferenceParm)
	struct FS_ShootingChallengeGroup              K2Node_MakeStruct_S_ShootingChallengeGroup;        // 0x0158(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_SRChallenge_Menu_C_MakeGroups) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_MakeGroups");
static_assert(sizeof(UI_SRChallenge_Menu_C_MakeGroups) == 0x0001A0, "Wrong size on UI_SRChallenge_Menu_C_MakeGroups");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, Challenges_0) == 0x000000, "Member 'UI_SRChallenge_Menu_C_MakeGroups::Challenges_0' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, SRComponent) == 0x000010, "Member 'UI_SRChallenge_Menu_C_MakeGroups::SRComponent' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, Groups) == 0x000018, "Member 'UI_SRChallenge_Menu_C_MakeGroups::Groups' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, GroupsLoc) == 0x000028, "Member 'UI_SRChallenge_Menu_C_MakeGroups::GroupsLoc' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, GroupInProgress) == 0x000038, "Member 'UI_SRChallenge_Menu_C_MakeGroups::GroupInProgress' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'UI_SRChallenge_Menu_C_MakeGroups::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'UI_SRChallenge_Menu_C_MakeGroups::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Array_Get_Item) == 0x000078, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_GetChallengeHighScore_Rank) == 0x000108, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_GetChallengeHighScore_Rank' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_GetChallengeHighScore_HighScore) == 0x00010C, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_GetChallengeHighScore_HighScore' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, K2Node_SwitchEnum_CmpSuccess) == 0x000110, "Member 'UI_SRChallenge_Menu_C_MakeGroups::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_IsWeaponUnlocked_ReturnValue) == 0x000111, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_IsWeaponUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Less_IntInt_ReturnValue) == 0x000112, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, Temp_int_Variable) == 0x000118, "Member 'UI_SRChallenge_Menu_C_MakeGroups::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Array_Add_ReturnValue) == 0x00011C, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_IsValidClass_ReturnValue) == 0x000120, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Add_IntInt_ReturnValue_1) == 0x000124, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, Temp_int_Variable_1) == 0x000128, "Member 'UI_SRChallenge_Menu_C_MakeGroups::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Add_IntInt_ReturnValue_2) == 0x00012C, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Add_IntInt_ReturnValue_3) == 0x000130, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, Temp_int_Variable_2) == 0x000134, "Member 'UI_SRChallenge_Menu_C_MakeGroups::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, K2Node_MakeArray_Array) == 0x000138, "Member 'UI_SRChallenge_Menu_C_MakeGroups::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, K2Node_MakeArray_Array_1) == 0x000148, "Member 'UI_SRChallenge_Menu_C_MakeGroups::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, K2Node_MakeStruct_S_ShootingChallengeGroup) == 0x000158, "Member 'UI_SRChallenge_Menu_C_MakeGroups::K2Node_MakeStruct_S_ShootingChallengeGroup' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Array_Add_ReturnValue_1) == 0x000188, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x00018C, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Array_Add_ReturnValue_2) == 0x000190, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_Array_Add_ReturnValue_3) == 0x000194, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_MakeGroups, CallFunc_IsValidClass_ReturnValue_1) == 0x000198, "Member 'UI_SRChallenge_Menu_C_MakeGroups::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.GetWeaponsByCategory
// 0x02F8 (0x02F8 - 0x0000)
struct UI_SRChallenge_Menu_C_GetWeaponsByCategory final
{
public:
	TArray<struct FS_ShootingChallengeGroup>      ShootingChallengeGroups;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_ShootingChallengeGroup>      ChallengeGroups;                                   // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TMap<EItemCategory, struct FS_ShootingChallengeGroupArray> CategorizedWeapons;                                // 0x0020(0x0050)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_ShootingChallengeGroup>      TempWeapons;                                       // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TMap<EItemCategory, struct FS_ShootingChallengeGroupArray> TempCategorizedWeapons;                            // 0x0080(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_ShootingChallengeGroup>      TempChallenges;                                    // 0x00D0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ShootingChallengeGroup              CallFunc_Array_Get_Item;                           // 0x00F0(0x0030)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ShootingChallengeGroup>      K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_ShootingChallengeGroupArray         K2Node_MakeStruct_S_ShootingChallengeGroupArray;   // 0x0130(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetTableRowFromItemClass_Success;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetTableRowFromItemClass_TableHandle;     // 0x0148(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetItemRowFromDataTable_Success;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemClassTableRow                     CallFunc_GetItemRowFromDataTable_RowData;          // 0x0160(0x0118)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EItemCategory, struct FS_ShootingChallengeGroupArray> K2Node_MakeVariable_MakeVariableOutput;            // 0x0280(0x0050)(ContainsInstancedReference)
	struct FS_ShootingChallengeGroupArray         K2Node_MakeStruct_S_ShootingChallengeGroupArray_1; // 0x02D0(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ShootingChallengeGroupArray         CallFunc_Map_Find_Value;                           // 0x02E0(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_GetWeaponsByCategory) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_GetWeaponsByCategory");
static_assert(sizeof(UI_SRChallenge_Menu_C_GetWeaponsByCategory) == 0x0002F8, "Wrong size on UI_SRChallenge_Menu_C_GetWeaponsByCategory");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, ShootingChallengeGroups) == 0x000000, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::ShootingChallengeGroups' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, ChallengeGroups) == 0x000010, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::ChallengeGroups' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CategorizedWeapons) == 0x000020, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CategorizedWeapons' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, TempWeapons) == 0x000070, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::TempWeapons' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, TempCategorizedWeapons) == 0x000080, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::TempCategorizedWeapons' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, TempChallenges) == 0x0000D0, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::TempChallenges' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, K2Node_MakeArray_Array) == 0x000120, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, K2Node_MakeStruct_S_ShootingChallengeGroupArray) == 0x000130, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::K2Node_MakeStruct_S_ShootingChallengeGroupArray' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_GetTableRowFromItemClass_Success) == 0x000140, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_GetTableRowFromItemClass_Success' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_GetTableRowFromItemClass_TableHandle) == 0x000148, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_GetTableRowFromItemClass_TableHandle' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_GetItemRowFromDataTable_Success) == 0x000159, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_GetItemRowFromDataTable_Success' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_GetItemRowFromDataTable_RowData) == 0x000160, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_GetItemRowFromDataTable_RowData' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000278, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, K2Node_MakeVariable_MakeVariableOutput) == 0x000280, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, K2Node_MakeStruct_S_ShootingChallengeGroupArray_1) == 0x0002D0, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::K2Node_MakeStruct_S_ShootingChallengeGroupArray_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_Map_Find_Value) == 0x0002E0, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_Map_Find_ReturnValue) == 0x0002F0, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWeaponsByCategory, CallFunc_Array_AddUnique_ReturnValue) == 0x0002F4, "Member 'UI_SRChallenge_Menu_C_GetWeaponsByCategory::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.CollapseAllCategories
// 0x0090 (0x0090 - 0x0000)
struct UI_SRChallenge_Menu_C_CollapseAllCategories final
{
public:
	class UWidget*                                WidgetToFocusAfterClosure;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusedWidget_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_SRChallenge_CategoryRow_C*          K2Node_DynamicCast_AsUI_SRChallenge_Category_Row;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_SRChallenge_CategoryRow_C*          K2Node_DynamicCast_AsUI_SRChallenge_Category_Row_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_SRChallenge_CategoryRow_C*          K2Node_DynamicCast_AsUI_SRChallenge_Category_Row_2; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_CollapseAllCategories) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_CollapseAllCategories");
static_assert(sizeof(UI_SRChallenge_Menu_C_CollapseAllCategories) == 0x000090, "Wrong size on UI_SRChallenge_Menu_C_CollapseAllCategories");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, WidgetToFocusAfterClosure) == 0x000000, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::WidgetToFocusAfterClosure' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_GetFocusedWidget_ReturnValue) == 0x000018, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_GetFocusedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_GetParentUserWidget_ReturnValue) == 0x000028, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, K2Node_DynamicCast_AsUI_SRChallenge_Category_Row) == 0x000030, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::K2Node_DynamicCast_AsUI_SRChallenge_Category_Row' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_Array_Get_Item) == 0x000050, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, K2Node_DynamicCast_AsUI_SRChallenge_Category_Row_1) == 0x000058, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::K2Node_DynamicCast_AsUI_SRChallenge_Category_Row_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_GetParentUserWidget_ReturnValue_1) == 0x000070, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_GetParentUserWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, K2Node_DynamicCast_AsUI_SRChallenge_Category_Row_2) == 0x000078, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::K2Node_DynamicCast_AsUI_SRChallenge_Category_Row_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_IsValid_ReturnValue_3) == 0x000081, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_CollapseAllCategories, CallFunc_GetOwningPlayer_ReturnValue) == 0x000088, "Member 'UI_SRChallenge_Menu_C_CollapseAllCategories::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.GetWidgetToFocus
// 0x0010 (0x0010 - 0x0000)
struct UI_SRChallenge_Menu_C_GetWidgetToFocus final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetWidgetToFocus_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_Menu_C_GetWidgetToFocus) == 0x000008, "Wrong alignment on UI_SRChallenge_Menu_C_GetWidgetToFocus");
static_assert(sizeof(UI_SRChallenge_Menu_C_GetWidgetToFocus) == 0x000010, "Wrong size on UI_SRChallenge_Menu_C_GetWidgetToFocus");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWidgetToFocus, ReturnValue) == 0x000000, "Member 'UI_SRChallenge_Menu_C_GetWidgetToFocus::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_Menu_C_GetWidgetToFocus, CallFunc_GetWidgetToFocus_ReturnValue) == 0x000008, "Member 'UI_SRChallenge_Menu_C_GetWidgetToFocus::CallFunc_GetWidgetToFocus_ReturnValue' has a wrong offset!");

}

