#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SI_BaseImprovement

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SI_BaseImprovement.BP_SI_BaseImprovement_C
// 0x00B0 (0x04C0 - 0x0410)
class ABP_SI_BaseImprovement_C : public AShelterImprovement
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionItemComponent_C*         BP_InteractionItemComponent;                       // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MapMarkerComponent_C*               BP_MapMarkerComponent;                             // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AmbientSound;                                      // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USoundBase>>      AmbientSounds;                                     // 0x0438(0x0010)(Edit, BlueprintVisible)
	int32                                         DefaultVisualLevel;                                // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LevelsToChangeMesh;                                // 0x0450(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         PrevTickLevel;                                     // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShelterSlotState                             PrevTickState;                                     // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHologramShown;                                   // 0x0465(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_466[0x2];                                      // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         VisualLevel;                                       // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UStaticMesh>>     Meshes;                                            // 0x0470(0x0010)(Edit, BlueprintVisible)
	TSoftObjectPtr<class UStaticMesh>             HologramMesh;                                      // 0x0480(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CurrentLevel;                                      // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowHologram;                                     // 0x04AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ShelterSlot;                                       // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimInteractionType                          DefaultAnimType;                                   // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DefaultAnimTypeBackuped;                           // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SI_BaseImprovement(int32 EntryPoint);
	void OnImprovementChanged_Event_1();
	void LoadAndPlaySoundByLevel(int32 NewVisualLevel);
	void LoadAndShowVisualLevel(int32 NewVisualLevel);
	void OnImprovementChanged_Event_0(const class UShelterCraftingList* ParentShelter, TSubclassOf<class AShelterImprovement> FinishedImprovementClass, const struct FCloudImprovementInfo& AdditionalInfo);
	void ReceiveBeginPlay();
	void SomethingChanged();
	void OnLoaded_303A9E7341428F48F05BE78A846791CB(class UObject* Loaded);
	void OnLoaded_303A9E7341428F48F05BE78ACB8B4AC9(class UObject* Loaded);
	void OnLoaded_303A9E7341428F48F05BE78ABDFB150D(class UObject* Loaded);
	void UserConstructionScript();
	void ShowHologram(class UObject* Hologram);
	void UnShowHologram();
	void ShowVisualLevel(class UStaticMesh* VisualLevelStaticMesh);
	void PlaySoundByLevel(int32 NewVisualLevel);
	void SelectVisualLevelSoftMesh(int32 VisualLevel_0, TArray<TSoftObjectPtr<class UStaticMesh>>& SoftStaticMeshes, TSoftObjectPtr<class UStaticMesh>* SoftMesh);
	void SelectVisualLevelSoftSoundCue(TArray<TSoftObjectPtr<class USoundBase>>& SoftSoundCues, int32 VisualLevel_0, TSoftObjectPtr<class USoundBase>* SoftSoundCue);
	void UpdateMapMarker();
	void Set_Current_Level(int32 NewLevel);
	void SetAnimationTypeByLevel(int32 Level);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SI_BaseImprovement_C">();
	}
	static class ABP_SI_BaseImprovement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SI_BaseImprovement_C>();
	}
};
static_assert(alignof(ABP_SI_BaseImprovement_C) == 0x000008, "Wrong alignment on ABP_SI_BaseImprovement_C");
static_assert(sizeof(ABP_SI_BaseImprovement_C) == 0x0004C0, "Wrong size on ABP_SI_BaseImprovement_C");
static_assert(offsetof(ABP_SI_BaseImprovement_C, UberGraphFrame) == 0x000410, "Member 'ABP_SI_BaseImprovement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, StaticMesh) == 0x000418, "Member 'ABP_SI_BaseImprovement_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, BP_InteractionItemComponent) == 0x000420, "Member 'ABP_SI_BaseImprovement_C::BP_InteractionItemComponent' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, BP_MapMarkerComponent) == 0x000428, "Member 'ABP_SI_BaseImprovement_C::BP_MapMarkerComponent' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, AmbientSound) == 0x000430, "Member 'ABP_SI_BaseImprovement_C::AmbientSound' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, AmbientSounds) == 0x000438, "Member 'ABP_SI_BaseImprovement_C::AmbientSounds' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, DefaultVisualLevel) == 0x000448, "Member 'ABP_SI_BaseImprovement_C::DefaultVisualLevel' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, LevelsToChangeMesh) == 0x000450, "Member 'ABP_SI_BaseImprovement_C::LevelsToChangeMesh' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, PrevTickLevel) == 0x000460, "Member 'ABP_SI_BaseImprovement_C::PrevTickLevel' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, PrevTickState) == 0x000464, "Member 'ABP_SI_BaseImprovement_C::PrevTickState' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, IsHologramShown) == 0x000465, "Member 'ABP_SI_BaseImprovement_C::IsHologramShown' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, VisualLevel) == 0x000468, "Member 'ABP_SI_BaseImprovement_C::VisualLevel' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, Meshes) == 0x000470, "Member 'ABP_SI_BaseImprovement_C::Meshes' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, HologramMesh) == 0x000480, "Member 'ABP_SI_BaseImprovement_C::HologramMesh' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, CurrentLevel) == 0x0004A8, "Member 'ABP_SI_BaseImprovement_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, bShowHologram) == 0x0004AC, "Member 'ABP_SI_BaseImprovement_C::bShowHologram' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, ShelterSlot) == 0x0004B0, "Member 'ABP_SI_BaseImprovement_C::ShelterSlot' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, DefaultAnimType) == 0x0004B8, "Member 'ABP_SI_BaseImprovement_C::DefaultAnimType' has a wrong offset!");
static_assert(offsetof(ABP_SI_BaseImprovement_C, DefaultAnimTypeBackuped) == 0x0004B9, "Member 'ABP_SI_BaseImprovement_C::DefaultAnimTypeBackuped' has a wrong offset!");

}

