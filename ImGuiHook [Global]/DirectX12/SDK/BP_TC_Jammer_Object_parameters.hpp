#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_Jammer_Object

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TC_Jammer_Object.BP_TC_Jammer_Object_C.ExecuteUbergraph_BP_TC_Jammer_Object
// 0x01A0 (0x01A0 - 0x0000)
struct BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Player_that_destroyed_the_trap;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TC_Transmitter_Object_C*            K2Node_DynamicCast_AsBP_TC_Transmitter_Object;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender;                 // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TC_Transmitter_Object_C*            K2Node_DynamicCast_AsBP_TC_Transmitter_Object_1;   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches_1;    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167[0x1];                                      // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue;             // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue_1;           // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue_2;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_1;    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue_3;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object) == 0x000008, "Wrong alignment on BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object");
static_assert(sizeof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object) == 0x0001A0, "Wrong size on BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, EntryPoint) == 0x000000, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_GetInstigatorController_ReturnValue) == 0x000008, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_Event_Player_that_destroyed_the_trap) == 0x000018, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_Event_Player_that_destroyed_the_trap' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsValid_ReturnValue_3) == 0x000021, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000028, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000040, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_AsBP_TC_Transmitter_Object) == 0x0000D8, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_AsBP_TC_Transmitter_Object' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_AsBP_Character_Script) == 0x0000E8, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsValid_ReturnValue_4) == 0x0000F1, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_AsBP_Player_State_Matches) == 0x0000F8, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_AsBP_Player_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000108, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OtherActor) == 0x000110, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OtherComp) == 0x000118, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000120, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_Sender) == 0x000128, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_ComponentBoundEvent_Interacting_Actor) == 0x000130, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_ComponentBoundEvent_Interacting_Actor' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_AsBP_TC_Transmitter_Object_1) == 0x000138, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_AsBP_TC_Transmitter_Object_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_bSuccess_3) == 0x000140, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_AsBP_Character_Script_1) == 0x000148, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_AsBP_Character_Script_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_bSuccess_4) == 0x000150, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsValid_ReturnValue_5) == 0x000151, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_AsBP_Player_State_Matches_1) == 0x000158, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_AsBP_Player_State_Matches_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_bSuccess_5) == 0x000160, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsValid_ReturnValue_6) == 0x000161, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000162, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_Array_RemoveItem_ReturnValue) == 0x000163, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_Array_Contains_ReturnValue) == 0x000164, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsServer_ReturnValue) == 0x000165, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsDedicatedServer_ReturnValue) == 0x000166, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsInTheSameGroup_ReturnValue) == 0x00016C, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsInTheSameGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00016D, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsServer_ReturnValue_1) == 0x00016E, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsInTheSameGroup_ReturnValue_1) == 0x00016F, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsInTheSameGroup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsInTheSameGroup_ReturnValue_2) == 0x000170, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsInTheSameGroup_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000171, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_GetInstigatorController_ReturnValue_1) == 0x000178, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_GetInstigatorController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_IsInTheSameGroup_ReturnValue_3) == 0x000180, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_IsInTheSameGroup_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000188, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, K2Node_DynamicCast_bSuccess_6) == 0x000190, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000191, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_Array_Add_ReturnValue_1) == 0x000194, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object, CallFunc_Array_Contains_ReturnValue_1) == 0x000198, "Member 'BP_TC_Jammer_Object_C_ExecuteUbergraph_BP_TC_Jammer_Object::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_TC_Jammer_Object.BP_TC_Jammer_Object_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction Start on Server__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature) == 0x000008, "Wrong alignment on BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature");
static_assert(sizeof(BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature) == 0x000010, "Wrong size on BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature, Sender) == 0x000000, "Member 'BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_TC_Jammer_Object_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_TC_Jammer_Object.BP_TC_Jammer_Object_C.BndEvt__Jamming Range Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_TC_Jammer_Object.BP_TC_Jammer_Object_C.BndEvt__Jamming Range Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_TC_Jammer_Object_C_BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_TC_Jammer_Object.BP_TC_Jammer_Object_C.Trap_Break
// 0x0008 (0x0008 - 0x0000)
struct BP_TC_Jammer_Object_C_Trap_Break final
{
public:
	class UObject*                                Player_that_destroyed_the_trap;                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TC_Jammer_Object_C_Trap_Break) == 0x000008, "Wrong alignment on BP_TC_Jammer_Object_C_Trap_Break");
static_assert(sizeof(BP_TC_Jammer_Object_C_Trap_Break) == 0x000008, "Wrong size on BP_TC_Jammer_Object_C_Trap_Break");
static_assert(offsetof(BP_TC_Jammer_Object_C_Trap_Break, Player_that_destroyed_the_trap) == 0x000000, "Member 'BP_TC_Jammer_Object_C_Trap_Break::Player_that_destroyed_the_trap' has a wrong offset!");

// Function BP_TC_Jammer_Object.BP_TC_Jammer_Object_C.Update Open Map and Compass
// 0x0070 (0x0070 - 0x0000)
struct BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass final
{
public:
	class ABP_MapTool_C*                          Map_Tool;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_HorizontalCompass_C*>        CallFunc_GetAllOpenedWidgets_OutWidgets;           // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_HorizontalCompass_C*                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapTool*                               CallFunc_GetMapTool_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapTool_C*                          K2Node_DynamicCast_AsBP_Map_Tool;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass) == 0x000008, "Wrong alignment on BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass");
static_assert(sizeof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass) == 0x000070, "Wrong size on BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, Map_Tool) == 0x000000, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::Map_Tool' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_GetUserControllerId_ReturnValue) == 0x00000C, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000010, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_GetAllOpenedWidgets_OutWidgets) == 0x000020, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_GetAllOpenedWidgets_OutWidgets' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_GetHumanCharacter_ReturnValue) == 0x000040, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_GetMapTool_ReturnValue) == 0x000050, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_GetMapTool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_IsValid_ReturnValue_3) == 0x000058, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_IsValid_ReturnValue_4) == 0x000059, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, K2Node_DynamicCast_AsBP_Map_Tool) == 0x000060, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::K2Node_DynamicCast_AsBP_Map_Tool' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass, CallFunc_IsValid_ReturnValue_5) == 0x000069, "Member 'BP_TC_Jammer_Object_C_Update_Open_Map_and_Compass::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

}

