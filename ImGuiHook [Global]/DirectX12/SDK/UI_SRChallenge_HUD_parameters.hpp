#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SRChallenge_HUD

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_SRChallenge_HUD.UI_SRChallenge_HUD_C.ExecuteUbergraph_UI_SRChallenge_HUD
// 0x0004 (0x0004 - 0x0000)
struct UI_SRChallenge_HUD_C_ExecuteUbergraph_UI_SRChallenge_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_HUD_C_ExecuteUbergraph_UI_SRChallenge_HUD) == 0x000004, "Wrong alignment on UI_SRChallenge_HUD_C_ExecuteUbergraph_UI_SRChallenge_HUD");
static_assert(sizeof(UI_SRChallenge_HUD_C_ExecuteUbergraph_UI_SRChallenge_HUD) == 0x000004, "Wrong size on UI_SRChallenge_HUD_C_ExecuteUbergraph_UI_SRChallenge_HUD");
static_assert(offsetof(UI_SRChallenge_HUD_C_ExecuteUbergraph_UI_SRChallenge_HUD, EntryPoint) == 0x000000, "Member 'UI_SRChallenge_HUD_C_ExecuteUbergraph_UI_SRChallenge_HUD::EntryPoint' has a wrong offset!");

// Function UI_SRChallenge_HUD.UI_SRChallenge_HUD_C.UpdateChallengeTime
// 0x0160 (0x0160 - 0x0000)
struct UI_SRChallenge_HUD_C_UpdateChallengeTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0148(0x0018)()
};
static_assert(alignof(UI_SRChallenge_HUD_C_UpdateChallengeTime) == 0x000008, "Wrong alignment on UI_SRChallenge_HUD_C_UpdateChallengeTime");
static_assert(sizeof(UI_SRChallenge_HUD_C_UpdateChallengeTime) == 0x000160, "Wrong size on UI_SRChallenge_HUD_C_UpdateChallengeTime");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, Time) == 0x000000, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::Time' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, Temp_bool_Variable) == 0x000004, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00000C, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_FFloor_ReturnValue_1) == 0x000014, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_FFloor_ReturnValue_2) == 0x000024, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000038, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000040, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000050, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000060, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, K2Node_Select_Default) == 0x000098, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_FFloor_ReturnValue_3) == 0x0000A8, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, Temp_bool_Variable_1) == 0x0000AC, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000AD, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0000B0, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, K2Node_Select_Default_1) == 0x0000C0, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0000E0, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, Temp_bool_Variable_2) == 0x0000F0, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, K2Node_Select_Default_2) == 0x0000F8, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000108, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000118, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000128, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000138, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateChallengeTime, CallFunc_Conv_StringToText_ReturnValue) == 0x000148, "Member 'UI_SRChallenge_HUD_C_UpdateChallengeTime::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_SRChallenge_HUD.UI_SRChallenge_HUD_C.UpdateTargetsHit
// 0x0028 (0x0028 - 0x0000)
struct UI_SRChallenge_HUD_C_UpdateTargetsHit final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SRChallenge_HUD_C_UpdateTargetsHit) == 0x000008, "Wrong alignment on UI_SRChallenge_HUD_C_UpdateTargetsHit");
static_assert(sizeof(UI_SRChallenge_HUD_C_UpdateTargetsHit) == 0x000028, "Wrong size on UI_SRChallenge_HUD_C_UpdateTargetsHit");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateTargetsHit, Score) == 0x000000, "Member 'UI_SRChallenge_HUD_C_UpdateTargetsHit::Score' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateTargetsHit, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UI_SRChallenge_HUD_C_UpdateTargetsHit::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_UpdateTargetsHit, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'UI_SRChallenge_HUD_C_UpdateTargetsHit::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_SRChallenge_HUD.UI_SRChallenge_HUD_C.SetRequiredTargetsToHit
// 0x0020 (0x0020 - 0x0000)
struct UI_SRChallenge_HUD_C_SetRequiredTargetsToHit final
{
public:
	int32                                         RequiredTargets;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(UI_SRChallenge_HUD_C_SetRequiredTargetsToHit) == 0x000008, "Wrong alignment on UI_SRChallenge_HUD_C_SetRequiredTargetsToHit");
static_assert(sizeof(UI_SRChallenge_HUD_C_SetRequiredTargetsToHit) == 0x000020, "Wrong size on UI_SRChallenge_HUD_C_SetRequiredTargetsToHit");
static_assert(offsetof(UI_SRChallenge_HUD_C_SetRequiredTargetsToHit, RequiredTargets) == 0x000000, "Member 'UI_SRChallenge_HUD_C_SetRequiredTargetsToHit::RequiredTargets' has a wrong offset!");
static_assert(offsetof(UI_SRChallenge_HUD_C_SetRequiredTargetsToHit, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UI_SRChallenge_HUD_C_SetRequiredTargetsToHit::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UI_SRChallenge_HUD.UI_SRChallenge_HUD_C.SetDescription
// 0x0018 (0x0018 - 0x0000)
struct UI_SRChallenge_HUD_C_SetDescription final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_SRChallenge_HUD_C_SetDescription) == 0x000008, "Wrong alignment on UI_SRChallenge_HUD_C_SetDescription");
static_assert(sizeof(UI_SRChallenge_HUD_C_SetDescription) == 0x000018, "Wrong size on UI_SRChallenge_HUD_C_SetDescription");
static_assert(offsetof(UI_SRChallenge_HUD_C_SetDescription, Description) == 0x000000, "Member 'UI_SRChallenge_HUD_C_SetDescription::Description' has a wrong offset!");

}

