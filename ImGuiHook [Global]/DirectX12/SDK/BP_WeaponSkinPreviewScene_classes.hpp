#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponSkinPreviewScene

#include "Basic.hpp"

#include "S_ItemTransformSetting_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WeaponSkinPreviewScene.BP_WeaponSkinPreviewScene_C
// 0x0240 (0x0460 - 0x0220)
class ABP_WeaponSkinPreviewScene_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   Background_scene;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Lamp_01;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SewingMachine_table;                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Environment;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_ShelterUI_C*                        ShelterUI;                                         // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DEBUG_PlacementWPN;                                // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemTransformSetting                Preview_Settings;                                  // 0x0280(0x0140)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Custom_Lighting;                                   // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentWeapon;                                     // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CurrentSkin;                                       // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           SpawnedProps;                                      // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UDecalComponent*>                SpawnedDecals;                                     // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                ConstructWeaponMeshScale;                          // 0x03F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ShieldDecalMaterial;                               // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, TSoftObjectPtr<class UTexture2D>> RarityToShieldDecal;                               // 0x0410(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_WeaponSkinPreviewScene(int32 EntryPoint);
	void AddPreviewRotation(const struct FRotator& DeltaRotation);
	void ReceiveTick(float DeltaSeconds);
	void HideTempProps();
	void Stop_Ambient_Sound();
	void Start_Ambient_Sound();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void UpdateWeapon(class UClass* Weapon, class UClass* WeaponSkin);
	void SetWeaponTransform(const struct FS_WeaponSkinPreviewSettings& TransformSettings);
	void Get_Weapon_Settings_Table_Row(class UClass* Weapon, struct FS_WeaponSkinPreviewSettings* Row);
	void UpdateCameraTransform();
	void UpdatePreviewPropTransform();
	void UpdateWeaponAnimation();
	void HandleRarity(int32 Rarity);
	void DEBUG_ENABLE_PLACEMENT();
	void GetWeaponRelativeZoomTransform(const struct FTransform& CameraTransform, const struct FVector& ZoomOffset, struct FTransform* OutTransform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WeaponSkinPreviewScene_C">();
	}
	static class ABP_WeaponSkinPreviewScene_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WeaponSkinPreviewScene_C>();
	}
};
static_assert(alignof(ABP_WeaponSkinPreviewScene_C) == 0x000010, "Wrong alignment on ABP_WeaponSkinPreviewScene_C");
static_assert(sizeof(ABP_WeaponSkinPreviewScene_C) == 0x000460, "Wrong size on ABP_WeaponSkinPreviewScene_C");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, UberGraphFrame) == 0x000220, "Member 'ABP_WeaponSkinPreviewScene_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, Background_scene) == 0x000228, "Member 'ABP_WeaponSkinPreviewScene_C::Background_scene' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, PointLight1) == 0x000230, "Member 'ABP_WeaponSkinPreviewScene_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, PointLight) == 0x000238, "Member 'ABP_WeaponSkinPreviewScene_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, SpotLight) == 0x000240, "Member 'ABP_WeaponSkinPreviewScene_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, SM_Lamp_01) == 0x000248, "Member 'ABP_WeaponSkinPreviewScene_C::SM_Lamp_01' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, SM_SewingMachine_table) == 0x000250, "Member 'ABP_WeaponSkinPreviewScene_C::SM_SewingMachine_table' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, Environment) == 0x000258, "Member 'ABP_WeaponSkinPreviewScene_C::Environment' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, Scene) == 0x000260, "Member 'ABP_WeaponSkinPreviewScene_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, DefaultSceneRoot) == 0x000268, "Member 'ABP_WeaponSkinPreviewScene_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, ShelterUI) == 0x000270, "Member 'ABP_WeaponSkinPreviewScene_C::ShelterUI' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, DEBUG_PlacementWPN) == 0x000278, "Member 'ABP_WeaponSkinPreviewScene_C::DEBUG_PlacementWPN' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, Preview_Settings) == 0x000280, "Member 'ABP_WeaponSkinPreviewScene_C::Preview_Settings' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, Custom_Lighting) == 0x0003C0, "Member 'ABP_WeaponSkinPreviewScene_C::Custom_Lighting' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, CurrentWeapon) == 0x0003C8, "Member 'ABP_WeaponSkinPreviewScene_C::CurrentWeapon' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, CurrentSkin) == 0x0003D0, "Member 'ABP_WeaponSkinPreviewScene_C::CurrentSkin' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, SpawnedProps) == 0x0003D8, "Member 'ABP_WeaponSkinPreviewScene_C::SpawnedProps' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, SpawnedDecals) == 0x0003E8, "Member 'ABP_WeaponSkinPreviewScene_C::SpawnedDecals' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, ConstructWeaponMeshScale) == 0x0003F8, "Member 'ABP_WeaponSkinPreviewScene_C::ConstructWeaponMeshScale' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, ShieldDecalMaterial) == 0x000408, "Member 'ABP_WeaponSkinPreviewScene_C::ShieldDecalMaterial' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkinPreviewScene_C, RarityToShieldDecal) == 0x000410, "Member 'ABP_WeaponSkinPreviewScene_C::RarityToShieldDecal' has a wrong offset!");

}

