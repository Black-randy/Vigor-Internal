#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ShopTile

#include "Basic.hpp"

#include "UI_ShopTile_classes.hpp"
#include "UI_ShopTile_parameters.hpp"


namespace SDK
{

// Function UI_ShopTile.UI_ShopTile_C.OnTileOfferUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_ShopTile_C*                   ShopTile                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::OnTileOfferUpdated__DelegateSignature(class UUI_ShopTile_C* ShopTile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "OnTileOfferUpdated__DelegateSignature");

	Params::UI_ShopTile_C_OnTileOfferUpdated__DelegateSignature Parms{};

	Parms.ShopTile = ShopTile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.ExecuteUbergraph_UI_ShopTile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::ExecuteUbergraph_UI_ShopTile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "ExecuteUbergraph_UI_ShopTile");

	Params::UI_ShopTile_C_ExecuteUbergraph_UI_ShopTile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.BndEvt__UI_ShopTile_TileButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::BndEvt__UI_ShopTile_TileButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "BndEvt__UI_ShopTile_TileButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature");

	Params::UI_ShopTile_C_BndEvt__UI_ShopTile_TileButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_ShopTile_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "OnMouseLeave");

	Params::UI_ShopTile_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_ShopTile_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "OnMouseEnter");

	Params::UI_ShopTile_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.TileFocusLost
// (BlueprintCallable, BlueprintEvent)

void UUI_ShopTile_C::TileFocusLost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "TileFocusLost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShopTile.UI_ShopTile_C.Cheat_UpdateOffer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDateTime                        FakeNow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::Cheat_UpdateOffer(const struct FDateTime& FakeNow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "Cheat_UpdateOffer");

	Params::UI_ShopTile_C_Cheat_UpdateOffer Parms{};

	Parms.FakeNow = std::move(FakeNow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.EventOfferTimerTick
// (BlueprintCallable, BlueprintEvent)

void UUI_ShopTile_C::EventOfferTimerTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "EventOfferTimerTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShopTile.UI_ShopTile_C.EventUpdateOffer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimerHandle                     OfferTimer                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::EventUpdateOffer(const struct FTimerHandle& OfferTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "EventUpdateOffer");

	Params::UI_ShopTile_C_EventUpdateOffer Parms{};

	Parms.OfferTimer = std::move(OfferTimer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.OnFocusLost
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUI_ShopTile_C::OnFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "OnFocusLost");

	Params::UI_ShopTile_C_OnFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ShopTile_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShopTile.UI_ShopTile_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_ShopTile_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "OnFocusReceived");

	Params::UI_ShopTile_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_ShopTile.UI_ShopTile_C.GetRemainingTimeFormatted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             RemainingTime                                          (Parm, OutParm)

void UUI_ShopTile_C::GetRemainingTimeFormatted(class FText* RemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "GetRemainingTimeFormatted");

	Params::UI_ShopTile_C_GetRemainingTimeFormatted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingTime != nullptr)
		*RemainingTime = std::move(Parms.RemainingTime);
}


// Function UI_ShopTile.UI_ShopTile_C.FillTileContent_Old
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameStoreOfferInfo              GameStoreOfferInfo                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_ShopTile_C::FillTileContent_Old(const struct FGameStoreOfferInfo& GameStoreOfferInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "FillTileContent_Old");

	Params::UI_ShopTile_C_FillTileContent_Old Parms{};

	Parms.GameStoreOfferInfo = std::move(GameStoreOfferInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.UpdateRemainingTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShopTile_C::UpdateRemainingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "UpdateRemainingTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShopTile.UI_ShopTile_C.HasEnoughHCForItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemPrice                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasEnoughHC                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShopTile_C::HasEnoughHCForItem(int32 ItemPrice, bool* HasEnoughHC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "HasEnoughHCForItem");

	Params::UI_ShopTile_C_HasEnoughHCForItem Parms{};

	Parms.ItemPrice = ItemPrice;

	UObject::ProcessEvent(Func, &Parms);

	if (HasEnoughHC != nullptr)
		*HasEnoughHC = Parms.HasEnoughHC;
}


// Function UI_ShopTile.UI_ShopTile_C.GetSlotInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FGameStoreSlotInfo>       SlotsInfoArray_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutputValid                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameStoreSlotInfo               SlotInfo_0                                             (Parm, OutParm)

void UUI_ShopTile_C::GetSlotInfo(TArray<struct FGameStoreSlotInfo>& SlotsInfoArray_0, int32 SlotIndex, bool* OutputValid, struct FGameStoreSlotInfo* SlotInfo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "GetSlotInfo");

	Params::UI_ShopTile_C_GetSlotInfo Parms{};

	Parms.SlotsInfoArray_0 = std::move(SlotsInfoArray_0);
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	SlotsInfoArray_0 = std::move(Parms.SlotsInfoArray_0);

	if (OutputValid != nullptr)
		*OutputValid = Parms.OutputValid;

	if (SlotInfo_0 != nullptr)
		*SlotInfo_0 = std::move(Parms.SlotInfo_0);
}


// Function UI_ShopTile.UI_ShopTile_C.GetItemFromOffer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameStoreOfferInfo              GameStoreOfferInfo                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsItemClassValid                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           ItemClass                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::GetItemFromOffer(const struct FGameStoreOfferInfo& GameStoreOfferInfo, bool* IsItemClassValid, class UClass** ItemClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "GetItemFromOffer");

	Params::UI_ShopTile_C_GetItemFromOffer Parms{};

	Parms.GameStoreOfferInfo = std::move(GameStoreOfferInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (IsItemClassValid != nullptr)
		*IsItemClassValid = Parms.IsItemClassValid;

	if (ItemClass != nullptr)
		*ItemClass = Parms.ItemClass;
}


// Function UI_ShopTile.UI_ShopTile_C.GetItemStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           StoreItemClass_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFutureItem_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsItemOwned                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   FinalPrice                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PriceBeforeDiscount_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::GetItemStatus(class UClass** StoreItemClass_0, bool* IsFutureItem_0, bool* IsItemOwned, int32* FinalPrice, int32* PriceBeforeDiscount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "GetItemStatus");

	Params::UI_ShopTile_C_GetItemStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StoreItemClass_0 != nullptr)
		*StoreItemClass_0 = Parms.StoreItemClass_0;

	if (IsFutureItem_0 != nullptr)
		*IsFutureItem_0 = Parms.IsFutureItem_0;

	if (IsItemOwned != nullptr)
		*IsItemOwned = Parms.IsItemOwned;

	if (FinalPrice != nullptr)
		*FinalPrice = Parms.FinalPrice;

	if (PriceBeforeDiscount_0 != nullptr)
		*PriceBeforeDiscount_0 = Parms.PriceBeforeDiscount_0;
}


// Function UI_ShopTile.UI_ShopTile_C.GetFinalPrice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   FinalPrice                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShopTile_C::GetFinalPrice(int32* FinalPrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "GetFinalPrice");

	Params::UI_ShopTile_C_GetFinalPrice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FinalPrice != nullptr)
		*FinalPrice = Parms.FinalPrice;
}


// Function UI_ShopTile.UI_ShopTile_C.FillTileContent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameStoreOfferInfo              GameStoreOfferInfo                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Is_item_owned                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShopTile_C::FillTileContent(const struct FGameStoreOfferInfo& GameStoreOfferInfo, bool Is_item_owned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "FillTileContent");

	Params::UI_ShopTile_C_FillTileContent Parms{};

	Parms.GameStoreOfferInfo = std::move(GameStoreOfferInfo);
	Parms.Is_item_owned = Is_item_owned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShopTile.UI_ShopTile_C.Refresh Shop Content
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShopTile_C::Refresh_Shop_Content()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopTile_C", "Refresh Shop Content");

	UObject::ProcessEvent(Func, nullptr);
}

}

