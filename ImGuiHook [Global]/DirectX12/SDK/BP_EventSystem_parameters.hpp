#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_AnalyticsFile_structs.hpp"
#include "Engine_structs.hpp"
#include "EPingType_structs.hpp"
#include "Flame_structs.hpp"
#include "S_AnalyticsValue_structs.hpp"
#include "ECommStationAction_structs.hpp"
#include "E_TimedSafe_OpenCombinations_structs.hpp"
#include "Struct_GunFightStatistics_structs.hpp"
#include "S_BattlePassLevelRewardFull_structs.hpp"
#include "E_ShootingChallengeResult_structs.hpp"
#include "EBooster_structs.hpp"


namespace SDK::Params
{

// Function BP_EventSystem.BP_EventSystem_C.Create Opened__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSystem_C_Create_Opened__DelegateSignature final
{
public:
	class UClass*                                 Loot_Box_Class;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLootBoxPoolItem>               Items;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_EventSystem_C_Create_Opened__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Create_Opened__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Create_Opened__DelegateSignature) == 0x000018, "Wrong size on BP_EventSystem_C_Create_Opened__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Create_Opened__DelegateSignature, Loot_Box_Class) == 0x000000, "Member 'BP_EventSystem_C_Create_Opened__DelegateSignature::Loot_Box_Class' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Create_Opened__DelegateSignature, Items) == 0x000008, "Member 'BP_EventSystem_C_Create_Opened__DelegateSignature::Items' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Item Crafting Started__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_Item_Crafting_Started__DelegateSignature final
{
public:
	class UClass*                                 Item_Type;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Item_Crafting_Started__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Item_Crafting_Started__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Item_Crafting_Started__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_Item_Crafting_Started__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Item_Crafting_Started__DelegateSignature, Item_Type) == 0x000000, "Member 'BP_EventSystem_C_Item_Crafting_Started__DelegateSignature::Item_Type' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Item_Crafting_Started__DelegateSignature, Amount) == 0x000008, "Member 'BP_EventSystem_C_Item_Crafting_Started__DelegateSignature::Amount' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Encounter Result Screen Entered__DelegateSignature
// 0x0588 (0x0588 - 0x0000)
struct BP_EventSystem_C_Encounter_Result_Screen_Entered__DelegateSignature final
{
public:
	struct FUserMatchResult                       Match_Result;                                      // 0x0000(0x0588)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_EventSystem_C_Encounter_Result_Screen_Entered__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Encounter_Result_Screen_Entered__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Encounter_Result_Screen_Entered__DelegateSignature) == 0x000588, "Wrong size on BP_EventSystem_C_Encounter_Result_Screen_Entered__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Encounter_Result_Screen_Entered__DelegateSignature, Match_Result) == 0x000000, "Member 'BP_EventSystem_C_Encounter_Result_Screen_Entered__DelegateSignature::Match_Result' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Started Unlocking Barred Vault__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Started_Unlocking_Barred_Vault__DelegateSignature final
{
public:
	class AActor*                                 Vault;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Started_Unlocking_Barred_Vault__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Started_Unlocking_Barred_Vault__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Started_Unlocking_Barred_Vault__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Started_Unlocking_Barred_Vault__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Started_Unlocking_Barred_Vault__DelegateSignature, Vault) == 0x000000, "Member 'BP_EventSystem_C_Started_Unlocking_Barred_Vault__DelegateSignature::Vault' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Opened Barred Vault Inventory__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Opened_Barred_Vault_Inventory__DelegateSignature final
{
public:
	class AActor*                                 Vault;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Opened_Barred_Vault_Inventory__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Opened_Barred_Vault_Inventory__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Opened_Barred_Vault_Inventory__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Opened_Barred_Vault_Inventory__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Opened_Barred_Vault_Inventory__DelegateSignature, Vault) == 0x000000, "Member 'BP_EventSystem_C_Opened_Barred_Vault_Inventory__DelegateSignature::Vault' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Player Scored Kill__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EventSystem_C_Player_Scored_Kill__DelegateSignature final
{
public:
	class AHumanCharacter*                        Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Victim;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_Amount;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Damage_Type;                                       // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Instigating_Item;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_Result;                                        // 0x0020(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Player_Scored_Kill__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature) == 0x0000B0, "Wrong size on BP_EventSystem_C_Player_Scored_Kill__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature, Killer) == 0x000000, "Member 'BP_EventSystem_C_Player_Scored_Kill__DelegateSignature::Killer' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature, Victim) == 0x000008, "Member 'BP_EventSystem_C_Player_Scored_Kill__DelegateSignature::Victim' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature, Damage_Amount) == 0x000010, "Member 'BP_EventSystem_C_Player_Scored_Kill__DelegateSignature::Damage_Amount' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature, Damage_Type) == 0x000014, "Member 'BP_EventSystem_C_Player_Scored_Kill__DelegateSignature::Damage_Type' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature, Instigating_Item) == 0x000018, "Member 'BP_EventSystem_C_Player_Scored_Kill__DelegateSignature::Instigating_Item' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_Scored_Kill__DelegateSignature, Hit_Result) == 0x000020, "Member 'BP_EventSystem_C_Player_Scored_Kill__DelegateSignature::Hit_Result' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Improvement Upgrade Started__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Improvement_Upgrade_Started__DelegateSignature final
{
public:
	class UClass*                                 Shelter_Slot;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Improvement_Upgrade_Started__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Improvement_Upgrade_Started__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Improvement_Upgrade_Started__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Improvement_Upgrade_Started__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Improvement_Upgrade_Started__DelegateSignature, Shelter_Slot) == 0x000000, "Member 'BP_EventSystem_C_Improvement_Upgrade_Started__DelegateSignature::Shelter_Slot' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Other Player Became Threat__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Other_Player_Became_Threat__DelegateSignature final
{
public:
	class AHumanCharacter*                        Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Other_Player_Became_Threat__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Other_Player_Became_Threat__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Other_Player_Became_Threat__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Other_Player_Became_Threat__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Other_Player_Became_Threat__DelegateSignature, Killer) == 0x000000, "Member 'BP_EventSystem_C_Other_Player_Became_Threat__DelegateSignature::Killer' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Antenna Used__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_EventSystem_C_Antenna_Used__DelegateSignature final
{
public:
	int32                                         Players_Spotted;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Antenna_Used__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_Antenna_Used__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Antenna_Used__DelegateSignature) == 0x000004, "Wrong size on BP_EventSystem_C_Antenna_Used__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Antenna_Used__DelegateSignature, Players_Spotted) == 0x000000, "Member 'BP_EventSystem_C_Antenna_Used__DelegateSignature::Players_Spotted' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Comm Station Used__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_Comm_Station_Used__DelegateSignature final
{
public:
	class AEditorActor*                           Air_Drop_Location;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Location_Changed;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSystem_C_Comm_Station_Used__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Comm_Station_Used__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Comm_Station_Used__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_Comm_Station_Used__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Comm_Station_Used__DelegateSignature, Air_Drop_Location) == 0x000000, "Member 'BP_EventSystem_C_Comm_Station_Used__DelegateSignature::Air_Drop_Location' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Comm_Station_Used__DelegateSignature, Location_Changed) == 0x000008, "Member 'BP_EventSystem_C_Comm_Station_Used__DelegateSignature::Location_Changed' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Booster Used__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_EventSystem_C_Booster_Used__DelegateSignature final
{
public:
	EBooster                                      Booster_Type;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsedTicketInsteadOfCrowns;                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSystem_C_Booster_Used__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventSystem_C_Booster_Used__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Booster_Used__DelegateSignature) == 0x000002, "Wrong size on BP_EventSystem_C_Booster_Used__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Booster_Used__DelegateSignature, Booster_Type) == 0x000000, "Member 'BP_EventSystem_C_Booster_Used__DelegateSignature::Booster_Type' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Booster_Used__DelegateSignature, UsedTicketInsteadOfCrowns) == 0x000001, "Member 'BP_EventSystem_C_Booster_Used__DelegateSignature::UsedTicketInsteadOfCrowns' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Shooting Challenge Finished__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_EventSystem_C_Shooting_Challenge_Finished__DelegateSignature final
{
public:
	E_ShootingChallengeResult                     Rank;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Shooting_Challenge_Finished__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventSystem_C_Shooting_Challenge_Finished__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Shooting_Challenge_Finished__DelegateSignature) == 0x000001, "Wrong size on BP_EventSystem_C_Shooting_Challenge_Finished__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Shooting_Challenge_Finished__DelegateSignature, Rank) == 0x000000, "Member 'BP_EventSystem_C_Shooting_Challenge_Finished__DelegateSignature::Rank' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Airdrop Container Inventory Accessed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Airdrop_Container_Inventory_Accessed__DelegateSignature final
{
public:
	class AActor*                                 Airdrop_Container;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Airdrop_Container_Inventory_Accessed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Airdrop_Container_Inventory_Accessed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Airdrop_Container_Inventory_Accessed__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Airdrop_Container_Inventory_Accessed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Airdrop_Container_Inventory_Accessed__DelegateSignature, Airdrop_Container) == 0x000000, "Member 'BP_EventSystem_C_Airdrop_Container_Inventory_Accessed__DelegateSignature::Airdrop_Container' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Generic Lootable Object Inventory Accessed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Generic_Lootable_Object_Inventory_Accessed__DelegateSignature final
{
public:
	class ALootable*                              Lootable_Object;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Generic_Lootable_Object_Inventory_Accessed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Generic_Lootable_Object_Inventory_Accessed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Generic_Lootable_Object_Inventory_Accessed__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Generic_Lootable_Object_Inventory_Accessed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Generic_Lootable_Object_Inventory_Accessed__DelegateSignature, Lootable_Object) == 0x000000, "Member 'BP_EventSystem_C_Generic_Lootable_Object_Inventory_Accessed__DelegateSignature::Lootable_Object' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Item Deconstructed__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_Item_Deconstructed__DelegateSignature final
{
public:
	class UClass*                                 Item_Type;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Item_Deconstructed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Item_Deconstructed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Item_Deconstructed__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_Item_Deconstructed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Item_Deconstructed__DelegateSignature, Item_Type) == 0x000000, "Member 'BP_EventSystem_C_Item_Deconstructed__DelegateSignature::Item_Type' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Item_Deconstructed__DelegateSignature, Amount) == 0x000008, "Member 'BP_EventSystem_C_Item_Deconstructed__DelegateSignature::Amount' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Threat Died__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Threat_Died__DelegateSignature final
{
public:
	class AHumanCharacter*                        Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Threat_Died__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Threat_Died__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Threat_Died__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Threat_Died__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Threat_Died__DelegateSignature, Killer) == 0x000000, "Member 'BP_EventSystem_C_Threat_Died__DelegateSignature::Killer' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Other Player Became TeamKiller__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Other_Player_Became_TeamKiller__DelegateSignature final
{
public:
	class AHumanCharacter*                        Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Other_Player_Became_TeamKiller__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Other_Player_Became_TeamKiller__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Other_Player_Became_TeamKiller__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Other_Player_Became_TeamKiller__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Other_Player_Became_TeamKiller__DelegateSignature, Killer) == 0x000000, "Member 'BP_EventSystem_C_Other_Player_Became_TeamKiller__DelegateSignature::Killer' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Item Destroyed__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_Item_Destroyed__DelegateSignature final
{
public:
	class UClass*                                 Item_Type;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Widget_Type;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Item_Destroyed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Item_Destroyed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Item_Destroyed__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_Item_Destroyed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Item_Destroyed__DelegateSignature, Item_Type) == 0x000000, "Member 'BP_EventSystem_C_Item_Destroyed__DelegateSignature::Item_Type' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Item_Destroyed__DelegateSignature, Widget_Type) == 0x000008, "Member 'BP_EventSystem_C_Item_Destroyed__DelegateSignature::Widget_Type' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Burried Cache Opened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Burried_Cache_Opened__DelegateSignature final
{
public:
	class AActor*                                 Cache;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Burried_Cache_Opened__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Burried_Cache_Opened__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Burried_Cache_Opened__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Burried_Cache_Opened__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Burried_Cache_Opened__DelegateSignature, Cache) == 0x000000, "Member 'BP_EventSystem_C_Burried_Cache_Opened__DelegateSignature::Cache' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Player Dealt Damage__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature final
{
public:
	float                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeammateHit;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature, DamageAmount) == 0x000000, "Member 'BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature, TeammateHit) == 0x000004, "Member 'BP_EventSystem_C_Player_Dealt_Damage__DelegateSignature::TeammateHit' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.ConsumableUsed__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_ConsumableUsed__DelegateSignature final
{
public:
	class UClass*                                 UsedConsumable;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           User;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_ConsumableUsed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_ConsumableUsed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_ConsumableUsed__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_ConsumableUsed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_ConsumableUsed__DelegateSignature, UsedConsumable) == 0x000000, "Member 'BP_EventSystem_C_ConsumableUsed__DelegateSignature::UsedConsumable' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_ConsumableUsed__DelegateSignature, User) == 0x000008, "Member 'BP_EventSystem_C_ConsumableUsed__DelegateSignature::User' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Airdrop Saved With Kills__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_EventSystem_C_Airdrop_Saved_With_Kills__DelegateSignature final
{
public:
	int32                                         KillAmount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Airdrop_Saved_With_Kills__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_Airdrop_Saved_With_Kills__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Airdrop_Saved_With_Kills__DelegateSignature) == 0x000004, "Wrong size on BP_EventSystem_C_Airdrop_Saved_With_Kills__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Airdrop_Saved_With_Kills__DelegateSignature, KillAmount) == 0x000000, "Member 'BP_EventSystem_C_Airdrop_Saved_With_Kills__DelegateSignature::KillAmount' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Healed Amount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_Healed_Amount__DelegateSignature final
{
public:
	float                                         Heal_Amount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Healed_Amount__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Healed_Amount__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Healed_Amount__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_Healed_Amount__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Healed_Amount__DelegateSignature, Heal_Amount) == 0x000000, "Member 'BP_EventSystem_C_Healed_Amount__DelegateSignature::Heal_Amount' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Healed_Amount__DelegateSignature, Player_State) == 0x000008, "Member 'BP_EventSystem_C_Healed_Amount__DelegateSignature::Player_State' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Item Looted__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_Item_Looted__DelegateSignature final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Item_Looted__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Item_Looted__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Item_Looted__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_Item_Looted__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Item_Looted__DelegateSignature, Amount) == 0x000000, "Member 'BP_EventSystem_C_Item_Looted__DelegateSignature::Amount' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Item_Looted__DelegateSignature, Item) == 0x000008, "Member 'BP_EventSystem_C_Item_Looted__DelegateSignature::Item' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Crate Opened UI Closed__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature final
{
public:
	class UClass*                                 Loot_Box_Class;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLootBoxPoolItem>               Items;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature) == 0x000018, "Wrong size on BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature, Loot_Box_Class) == 0x000000, "Member 'BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature::Loot_Box_Class' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature, Items) == 0x000008, "Member 'BP_EventSystem_C_Crate_Opened_UI_Closed__DelegateSignature::Items' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.ItemBought__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_ItemBought__DelegateSignature final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_ItemBought__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_ItemBought__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_ItemBought__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_ItemBought__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_ItemBought__DelegateSignature, Item) == 0x000000, "Member 'BP_EventSystem_C_ItemBought__DelegateSignature::Item' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.BattlePassRewardsClaimed__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature final
{
public:
	TArray<struct FS_BattlePassLevelRewardFull>   Free;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   Premium;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          PremiumLocked;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature) == 0x000028, "Wrong size on BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature, Free) == 0x000000, "Member 'BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature::Free' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature, Premium) == 0x000010, "Member 'BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature::Premium' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature, PremiumLocked) == 0x000020, "Member 'BP_EventSystem_C_BattlePassRewardsClaimed__DelegateSignature::PremiumLocked' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Player Died__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Player_Died__DelegateSignature final
{
public:
	class AHumanCharacter*                        Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Player_Died__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Player_Died__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Player_Died__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Player_Died__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Player_Died__DelegateSignature, Killer) == 0x000000, "Member 'BP_EventSystem_C_Player_Died__DelegateSignature::Killer' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.PlayerLootedCrate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_PlayerLootedCrate__DelegateSignature final
{
public:
	class ALootable*                              Crate;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_PlayerLootedCrate__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_PlayerLootedCrate__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_PlayerLootedCrate__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_PlayerLootedCrate__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_PlayerLootedCrate__DelegateSignature, Crate) == 0x000000, "Member 'BP_EventSystem_C_PlayerLootedCrate__DelegateSignature::Crate' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.SignalDetected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_SignalDetected__DelegateSignature final
{
public:
	class AActor*                                 Detected_actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_SignalDetected__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_SignalDetected__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_SignalDetected__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_SignalDetected__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_SignalDetected__DelegateSignature, Detected_actor) == 0x000000, "Member 'BP_EventSystem_C_SignalDetected__DelegateSignature::Detected_actor' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Distance Traveled Updated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_EventSystem_C_Distance_Traveled_Updated__DelegateSignature final
{
public:
	float                                         Distance_Increment;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Distance_Traveled_Updated__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_Distance_Traveled_Updated__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Distance_Traveled_Updated__DelegateSignature) == 0x000004, "Wrong size on BP_EventSystem_C_Distance_Traveled_Updated__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Distance_Traveled_Updated__DelegateSignature, Distance_Increment) == 0x000000, "Member 'BP_EventSystem_C_Distance_Traveled_Updated__DelegateSignature::Distance_Increment' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.NonFriendlyPlayerJammed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_NonFriendlyPlayerJammed__DelegateSignature final
{
public:
	class AHumanCharacter*                        Jammed_character;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_NonFriendlyPlayerJammed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_NonFriendlyPlayerJammed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_NonFriendlyPlayerJammed__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_NonFriendlyPlayerJammed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_NonFriendlyPlayerJammed__DelegateSignature, Jammed_character) == 0x000000, "Member 'BP_EventSystem_C_NonFriendlyPlayerJammed__DelegateSignature::Jammed_character' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Gunfight_LoadoutLockBreak__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_EventSystem_C_Gunfight_LoadoutLockBreak__DelegateSignature final
{
public:
	bool                                          TicketUsed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSystem_C_Gunfight_LoadoutLockBreak__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventSystem_C_Gunfight_LoadoutLockBreak__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Gunfight_LoadoutLockBreak__DelegateSignature) == 0x000001, "Wrong size on BP_EventSystem_C_Gunfight_LoadoutLockBreak__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Gunfight_LoadoutLockBreak__DelegateSignature, TicketUsed) == 0x000000, "Member 'BP_EventSystem_C_Gunfight_LoadoutLockBreak__DelegateSignature::TicketUsed' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Gunfight_PlayerDealtDamage__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   DamageType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamagingItem;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature) == 0x000018, "Wrong size on BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature, PlayerId) == 0x000000, "Member 'BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature, Damage) == 0x000004, "Member 'BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature, DamageType) == 0x000008, "Member 'BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature::DamageType' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature, DamagingItem) == 0x000010, "Member 'BP_EventSystem_C_Gunfight_PlayerDealtDamage__DelegateSignature::DamagingItem' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Gunfight_PlayerReceivedDamage__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature final
{
public:
	int32                                         Userid;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   DamageType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature) == 0x00000C, "Wrong size on BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature, Userid) == 0x000000, "Member 'BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature::Userid' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature, Damage) == 0x000004, "Member 'BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature, DamageType) == 0x000008, "Member 'BP_EventSystem_C_Gunfight_PlayerReceivedDamage__DelegateSignature::DamageType' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.GestureUsed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_GestureUsed__DelegateSignature final
{
public:
	class UClass*                                 Gesture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_GestureUsed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_GestureUsed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_GestureUsed__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_GestureUsed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_GestureUsed__DelegateSignature, Gesture) == 0x000000, "Member 'BP_EventSystem_C_GestureUsed__DelegateSignature::Gesture' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.OtherPlayerSteppedIntoAlarmTrap__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature final
{
public:
	class AHumanCharacter*                        Character_that_stepped_into_alarm_trap;            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Triggered_alarm_trap;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature, Character_that_stepped_into_alarm_trap) == 0x000000, "Member 'BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature::Character_that_stepped_into_alarm_trap' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature, Triggered_alarm_trap) == 0x000008, "Member 'BP_EventSystem_C_OtherPlayerSteppedIntoAlarmTrap__DelegateSignature::Triggered_alarm_trap' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.PingCreated__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSystem_C_PingCreated__DelegateSignature final
{
public:
	EPingType                                     Ping_Type;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Pinged_Item;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_PingCreated__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_PingCreated__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_PingCreated__DelegateSignature) == 0x000018, "Wrong size on BP_EventSystem_C_PingCreated__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_PingCreated__DelegateSignature, Ping_Type) == 0x000000, "Member 'BP_EventSystem_C_PingCreated__DelegateSignature::Ping_Type' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_PingCreated__DelegateSignature, Location) == 0x000004, "Member 'BP_EventSystem_C_PingCreated__DelegateSignature::Location' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_PingCreated__DelegateSignature, Pinged_Item) == 0x000010, "Member 'BP_EventSystem_C_PingCreated__DelegateSignature::Pinged_Item' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct BP_EventSystem_C_Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature final
{
public:
	struct FStruct_GunFightStatistics             Statistics;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature) == 0x000050, "Wrong size on BP_EventSystem_C_Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature, Statistics) == 0x000000, "Member 'BP_EventSystem_C_Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature::Statistics' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.TimedSafeOpened__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_EventSystem_C_TimedSafeOpened__DelegateSignature final
{
public:
	E_TimedSafe_OpenCombinations                  OpenedSolo;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_TimedSafeOpened__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventSystem_C_TimedSafeOpened__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_TimedSafeOpened__DelegateSignature) == 0x000001, "Wrong size on BP_EventSystem_C_TimedSafeOpened__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_TimedSafeOpened__DelegateSignature, OpenedSolo) == 0x000000, "Member 'BP_EventSystem_C_TimedSafeOpened__DelegateSignature::OpenedSolo' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Player stayed in radiation__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature final
{
public:
	bool                                          Radiation_cloud;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Radiation_wave;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Radioactive_airdrop;                               // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_stayed;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature, Radiation_cloud) == 0x000000, "Member 'BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature::Radiation_cloud' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature, Radiation_wave) == 0x000001, "Member 'BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature::Radiation_wave' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature, Radioactive_airdrop) == 0x000002, "Member 'BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature::Radioactive_airdrop' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature, Time_stayed) == 0x000004, "Member 'BP_EventSystem_C_Player_stayed_in_radiation__DelegateSignature::Time_stayed' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.PlayerDestroyedTrap__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_PlayerDestroyedTrap__DelegateSignature final
{
public:
	class UClass*                                 Destroyed_trap;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_PlayerDestroyedTrap__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_PlayerDestroyedTrap__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_PlayerDestroyedTrap__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_PlayerDestroyedTrap__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_PlayerDestroyedTrap__DelegateSignature, Destroyed_trap) == 0x000000, "Member 'BP_EventSystem_C_PlayerDestroyedTrap__DelegateSignature::Destroyed_trap' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.GrenadeHitTarget__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_GrenadeHitTarget__DelegateSignature final
{
public:
	class AActor*                                 Target_that_got_hit;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Grenade_class;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_GrenadeHitTarget__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_GrenadeHitTarget__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_GrenadeHitTarget__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_GrenadeHitTarget__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_GrenadeHitTarget__DelegateSignature, Target_that_got_hit) == 0x000000, "Member 'BP_EventSystem_C_GrenadeHitTarget__DelegateSignature::Target_that_got_hit' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_GrenadeHitTarget__DelegateSignature, Grenade_class) == 0x000008, "Member 'BP_EventSystem_C_GrenadeHitTarget__DelegateSignature::Grenade_class' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.GrenadeMultiHit__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSystem_C_GrenadeMultiHit__DelegateSignature final
{
public:
	int32                                         Amount_of_nonMinusfriendly_hits;                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Grenade_class;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_GrenadeMultiHit__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_GrenadeMultiHit__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_GrenadeMultiHit__DelegateSignature) == 0x000010, "Wrong size on BP_EventSystem_C_GrenadeMultiHit__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_GrenadeMultiHit__DelegateSignature, Amount_of_nonMinusfriendly_hits) == 0x000000, "Member 'BP_EventSystem_C_GrenadeMultiHit__DelegateSignature::Amount_of_nonMinusfriendly_hits' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_GrenadeMultiHit__DelegateSignature, Grenade_class) == 0x000008, "Member 'BP_EventSystem_C_GrenadeMultiHit__DelegateSignature::Grenade_class' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.ShelterLevelChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_EventSystem_C_ShelterLevelChanged__DelegateSignature final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_ShelterLevelChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_ShelterLevelChanged__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_ShelterLevelChanged__DelegateSignature) == 0x000004, "Wrong size on BP_EventSystem_C_ShelterLevelChanged__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_ShelterLevelChanged__DelegateSignature, NewLevel) == 0x000000, "Member 'BP_EventSystem_C_ShelterLevelChanged__DelegateSignature::NewLevel' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.FoodDonated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_EventSystem_C_FoodDonated__DelegateSignature final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_FoodDonated__DelegateSignature) == 0x000004, "Wrong alignment on BP_EventSystem_C_FoodDonated__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_FoodDonated__DelegateSignature) == 0x000004, "Wrong size on BP_EventSystem_C_FoodDonated__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_FoodDonated__DelegateSignature, Amount) == 0x000000, "Member 'BP_EventSystem_C_FoodDonated__DelegateSignature::Amount' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.CommStationUsedWithAction__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_EventSystem_C_CommStationUsedWithAction__DelegateSignature final
{
public:
	ECommStationAction                            Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_CommStationUsedWithAction__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventSystem_C_CommStationUsedWithAction__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_CommStationUsedWithAction__DelegateSignature) == 0x000001, "Wrong size on BP_EventSystem_C_CommStationUsedWithAction__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_CommStationUsedWithAction__DelegateSignature, Action) == 0x000000, "Member 'BP_EventSystem_C_CommStationUsedWithAction__DelegateSignature::Action' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.StoredWeapon__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSystem_C_StoredWeapon__DelegateSignature final
{
public:
	class FString                                 WeaponObjectName;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 WeaponClass;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_StoredWeapon__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_StoredWeapon__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_StoredWeapon__DelegateSignature) == 0x000018, "Wrong size on BP_EventSystem_C_StoredWeapon__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_StoredWeapon__DelegateSignature, WeaponObjectName) == 0x000000, "Member 'BP_EventSystem_C_StoredWeapon__DelegateSignature::WeaponObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_StoredWeapon__DelegateSignature, WeaponClass) == 0x000010, "Member 'BP_EventSystem_C_StoredWeapon__DelegateSignature::WeaponClass' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Dummy Buried Cache opened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Dummy_Buried_Cache_opened__DelegateSignature final
{
public:
	class ALootable*                              Cache;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Dummy_Buried_Cache_opened__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_Dummy_Buried_Cache_opened__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_Dummy_Buried_Cache_opened__DelegateSignature) == 0x000008, "Wrong size on BP_EventSystem_C_Dummy_Buried_Cache_opened__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_Dummy_Buried_Cache_opened__DelegateSignature, Cache) == 0x000000, "Member 'BP_EventSystem_C_Dummy_Buried_Cache_opened__DelegateSignature::Cache' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.AnalyticsValueProcessed__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature final
{
public:
	class FString                                 Analytics_Value_Name;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FS_AnalyticsValue                      Analytics_Value;                                   // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature) == 0x000028, "Wrong size on BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature, Analytics_Value_Name) == 0x000000, "Member 'BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature::Analytics_Value_Name' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature, Analytics_Value) == 0x000010, "Member 'BP_EventSystem_C_AnalyticsValueProcessed__DelegateSignature::Analytics_Value' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.AnalyticsValuesPrinted__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature final
{
public:
	E_AnalyticsFile                               File;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnalyticsFileType                            FileType;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature) == 0x000001, "Wrong alignment on BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature");
static_assert(sizeof(BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature) == 0x000002, "Wrong size on BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature");
static_assert(offsetof(BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature, File) == 0x000000, "Member 'BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature::File' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature, FileType) == 0x000001, "Member 'BP_EventSystem_C_AnalyticsValuesPrinted__DelegateSignature::FileType' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.ExecuteUbergraph_BP_EventSystem
// 0x0020 (0x0020 - 0x0000)
struct BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem) == 0x000008, "Wrong alignment on BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem");
static_assert(sizeof(BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem) == 0x000020, "Wrong size on BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem");
static_assert(offsetof(BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem, EntryPoint) == 0x000000, "Member 'BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem, K2Node_DynamicCast_AsBPI_Game_Instance) == 0x000008, "Member 'BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem::K2Node_DynamicCast_AsBPI_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EventSystem_C_ExecuteUbergraph_BP_EventSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventSystem.BP_EventSystem_C.Get BP event system
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSystem_C_Get_BP_event_system final
{
public:
	class UBP_EventSystem_C*                      Event_system;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSystem_C_Get_BP_event_system) == 0x000008, "Wrong alignment on BP_EventSystem_C_Get_BP_event_system");
static_assert(sizeof(BP_EventSystem_C_Get_BP_event_system) == 0x000008, "Wrong size on BP_EventSystem_C_Get_BP_event_system");
static_assert(offsetof(BP_EventSystem_C_Get_BP_event_system, Event_system) == 0x000000, "Member 'BP_EventSystem_C_Get_BP_event_system::Event_system' has a wrong offset!");

}

