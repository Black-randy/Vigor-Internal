#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialAI_Controller

#include "Basic.hpp"

#include "BP_TutorialAI_Controller_classes.hpp"
#include "BP_TutorialAI_Controller_parameters.hpp"


namespace SDK
{

// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.ExecuteUbergraph_BP_TutorialAI_Controller
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialAI_Controller_C::ExecuteUbergraph_BP_TutorialAI_Controller(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "ExecuteUbergraph_BP_TutorialAI_Controller");

	Params::BP_TutorialAI_Controller_C_ExecuteUbergraph_BP_TutorialAI_Controller Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TutorialAI_Controller_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      Stimulus                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_TutorialAI_Controller_C::BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature");

	Params::BP_TutorialAI_Controller_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = std::move(Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialAI_Controller_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "ReceivePossess");

	Params::BP_TutorialAI_Controller_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.SightCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      Stimulus                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_TutorialAI_Controller_C::SightCharacter(class AHumanCharacter* Character_0, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "SightCharacter");

	Params::BP_TutorialAI_Controller_C_SightCharacter Parms{};

	Parms.Character_0 = Character_0;
	Parms.Stimulus = std::move(Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.DamageByCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAIStimulus                      Stimulus                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class AHumanCharacter*                  Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialAI_Controller_C::DamageByCharacter(const struct FAIStimulus& Stimulus, class AHumanCharacter* Character_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "DamageByCharacter");

	Params::BP_TutorialAI_Controller_C_DamageByCharacter Parms{};

	Parms.Stimulus = std::move(Stimulus);
	Parms.Character_0 = Character_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.Check Enemy Character Still in Sight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TutorialAI_Controller_C::Check_Enemy_Character_Still_in_Sight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "Check Enemy Character Still in Sight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.DetectNearCharacters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TutorialAI_Controller_C::DetectNearCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "DetectNearCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.CheckCharacterInSight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  EnemyCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckShootable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InSight                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Shootable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          ShootableLocation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialAI_Controller_C::CheckCharacterInSight(class AHumanCharacter* EnemyCharacter, bool CheckShootable, bool* InSight, bool* Shootable, struct FVector* ShootableLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "CheckCharacterInSight");

	Params::BP_TutorialAI_Controller_C_CheckCharacterInSight Parms{};

	Parms.EnemyCharacter = EnemyCharacter;
	Parms.CheckShootable = CheckShootable;

	UObject::ProcessEvent(Func, &Parms);

	if (InSight != nullptr)
		*InSight = Parms.InSight;

	if (Shootable != nullptr)
		*Shootable = Parms.Shootable;

	if (ShootableLocation != nullptr)
		*ShootableLocation = std::move(Parms.ShootableLocation);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.NoiseHeard
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAIStimulus                      Stimulus                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_TutorialAI_Controller_C::NoiseHeard(const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "NoiseHeard");

	Params::BP_TutorialAI_Controller_C_NoiseHeard Parms{};

	Parms.Stimulus = std::move(Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.InitializeAIOnPossessed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TutorialAI_Character_C*       Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialAI_Controller_C::InitializeAIOnPossessed(class ABP_TutorialAI_Character_C* Character_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "InitializeAIOnPossessed");

	Params::BP_TutorialAI_Controller_C_InitializeAIOnPossessed Parms{};

	Parms.Character_0 = Character_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialAI_Controller.BP_TutorialAI_Controller_C.Toggle Character Still in Sight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TutorialAI_Controller_C::Toggle_Character_Still_in_Sight(bool Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialAI_Controller_C", "Toggle Character Still in Sight");

	Params::BP_TutorialAI_Controller_C_Toggle_Character_Still_in_Sight Parms{};

	Parms.Activate = Activate;

	UObject::ProcessEvent(Func, &Parms);
}

}

