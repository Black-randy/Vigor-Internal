#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CollisionCapture

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CollisionCapture.BP_CollisionCapture_C.ExecuteUbergraph_BP_CollisionCapture
// 0x0018 (0x0018 - 0x0000)
struct BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture");
static_assert(sizeof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture) == 0x000018, "Wrong size on BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture");
static_assert(offsetof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture, EntryPoint) == 0x000000, "Member 'BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture, CallFunc_GetCurrentPlatform_ReturnValue) == 0x000004, "Member 'BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00000D, "Member 'BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture, K2Node_CustomEvent_Actor) == 0x000010, "Member 'BP_CollisionCapture_C_ExecuteUbergraph_BP_CollisionCapture::K2Node_CustomEvent_Actor' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.Exapand Showlist
// 0x0008 (0x0008 - 0x0000)
struct BP_CollisionCapture_C_Exapand_Showlist final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionCapture_C_Exapand_Showlist) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_Exapand_Showlist");
static_assert(sizeof(BP_CollisionCapture_C_Exapand_Showlist) == 0x000008, "Wrong size on BP_CollisionCapture_C_Exapand_Showlist");
static_assert(offsetof(BP_CollisionCapture_C_Exapand_Showlist, Actor) == 0x000000, "Member 'BP_CollisionCapture_C_Exapand_Showlist::Actor' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CollisionCapture_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionCapture_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CollisionCapture_C_ReceiveTick");
static_assert(sizeof(BP_CollisionCapture_C_ReceiveTick) == 0x000004, "Wrong size on BP_CollisionCapture_C_ReceiveTick");
static_assert(offsetof(BP_CollisionCapture_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CollisionCapture_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.MoveCapture
// 0x0110 (0x0110 - 0x0000)
struct BP_CollisionCapture_C_MoveCapture final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor_1;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x007C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_MoveCapture) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_MoveCapture");
static_assert(sizeof(BP_CollisionCapture_C_MoveCapture) == 0x000110, "Wrong size on BP_CollisionCapture_C_MoveCapture");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000008, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, K2Node_DynamicCast_AsActor) == 0x000010, "Member 'BP_CollisionCapture_C_MoveCapture::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CollisionCapture_C_MoveCapture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, K2Node_DynamicCast_AsActor_1) == 0x000020, "Member 'BP_CollisionCapture_C_MoveCapture::K2Node_DynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_CollisionCapture_C_MoveCapture::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000044, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, K2Node_MakeStruct_LinearColor) == 0x000050, "Member 'BP_CollisionCapture_C_MoveCapture::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_BreakVector_X_1) == 0x000060, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_BreakVector_Y_1) == 0x000064, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_BreakVector_Z_1) == 0x000068, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_Add_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00007C, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_MoveCapture, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000108, "Member 'BP_CollisionCapture_C_MoveCapture::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.Renew showlist
// 0x0040 (0x0040 - 0x0000)
struct BP_CollisionCapture_C_Renew_showlist final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_Renew_showlist) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_Renew_showlist");
static_assert(sizeof(BP_CollisionCapture_C_Renew_showlist) == 0x000040, "Wrong size on BP_CollisionCapture_C_Renew_showlist");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_CollisionCapture_C_Renew_showlist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CollisionCapture_C_Renew_showlist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_CollisionCapture_C_Renew_showlist::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_CollisionCapture_C_Renew_showlist::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Renew_showlist, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_CollisionCapture_C_Renew_showlist::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.InitOwnerMovementComponent
// 0x0038 (0x0038 - 0x0000)
struct BP_CollisionCapture_C_InitOwnerMovementComponent final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_InitOwnerMovementComponent) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_InitOwnerMovementComponent");
static_assert(sizeof(BP_CollisionCapture_C_InitOwnerMovementComponent) == 0x000038, "Wrong size on BP_CollisionCapture_C_InitOwnerMovementComponent");
static_assert(offsetof(BP_CollisionCapture_C_InitOwnerMovementComponent, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_CollisionCapture_C_InitOwnerMovementComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_InitOwnerMovementComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CollisionCapture_C_InitOwnerMovementComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_InitOwnerMovementComponent, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'BP_CollisionCapture_C_InitOwnerMovementComponent::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_InitOwnerMovementComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CollisionCapture_C_InitOwnerMovementComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_InitOwnerMovementComponent, CallFunc_GetMovementComponent_ReturnValue) == 0x000020, "Member 'BP_CollisionCapture_C_InitOwnerMovementComponent::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_InitOwnerMovementComponent, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000028, "Member 'BP_CollisionCapture_C_InitOwnerMovementComponent::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_InitOwnerMovementComponent, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_CollisionCapture_C_InitOwnerMovementComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.Init Showlist
// 0x0080 (0x0080 - 0x0000)
struct BP_CollisionCapture_C_Init_Showlist final
{
public:
	bool                                          LODTurnedOff;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors;            // 0x0060(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_Init_Showlist) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_Init_Showlist");
static_assert(sizeof(BP_CollisionCapture_C_Init_Showlist) == 0x000080, "Wrong size on BP_CollisionCapture_C_Init_Showlist");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, LODTurnedOff) == 0x000000, "Member 'BP_CollisionCapture_C_Init_Showlist::LODTurnedOff' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CollisionCapture_C_Init_Showlist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_CollisionCapture_C_Init_Showlist::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_CollisionCapture_C_Init_Showlist::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_CollisionCapture_C_Init_Showlist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_CollisionCapture_C_Init_Showlist::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_GetAllActorsWithTag_OutActors) == 0x000038, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_GetAllChildActors_ChildActors) == 0x000060, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_GetAllChildActors_ChildActors' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Init_Showlist, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_CollisionCapture_C_Init_Showlist::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.Simulate
// 0x0008 (0x0008 - 0x0000)
struct BP_CollisionCapture_C_Simulate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_Simulate) == 0x000004, "Wrong alignment on BP_CollisionCapture_C_Simulate");
static_assert(sizeof(BP_CollisionCapture_C_Simulate) == 0x000008, "Wrong size on BP_CollisionCapture_C_Simulate");
static_assert(offsetof(BP_CollisionCapture_C_Simulate, DeltaTime) == 0x000000, "Member 'BP_CollisionCapture_C_Simulate::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_Simulate, Unlocked) == 0x000004, "Member 'BP_CollisionCapture_C_Simulate::Unlocked' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.InitCaptures
// 0x0018 (0x0018 - 0x0000)
struct BP_CollisionCapture_C_InitCaptures final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionCapture_C_InitCaptures) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_InitCaptures");
static_assert(sizeof(BP_CollisionCapture_C_InitCaptures) == 0x000018, "Wrong size on BP_CollisionCapture_C_InitCaptures");
static_assert(offsetof(BP_CollisionCapture_C_InitCaptures, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_CollisionCapture_C_InitCaptures::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_InitCaptures, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'BP_CollisionCapture_C_InitCaptures::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.ExpandShowlist
// 0x0008 (0x0008 - 0x0000)
struct BP_CollisionCapture_C_ExpandShowlist final
{
public:
	class AActor*                                 Affector;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionCapture_C_ExpandShowlist) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_ExpandShowlist");
static_assert(sizeof(BP_CollisionCapture_C_ExpandShowlist) == 0x000008, "Wrong size on BP_CollisionCapture_C_ExpandShowlist");
static_assert(offsetof(BP_CollisionCapture_C_ExpandShowlist, Affector) == 0x000000, "Member 'BP_CollisionCapture_C_ExpandShowlist::Affector' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.AddComponentsToShowlist
// 0x0080 (0x0080 - 0x0000)
struct BP_CollisionCapture_C_AddComponentsToShowlist final
{
public:
	class AActor*                                 Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LODTurnedOff;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetComponentsByTag_ReturnValue;           // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UPrimitiveComponent*>            CallFunc_GetComponentsByTag_ReturnValue_1;         // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_AddComponentsToShowlist) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_AddComponentsToShowlist");
static_assert(sizeof(BP_CollisionCapture_C_AddComponentsToShowlist) == 0x000080, "Wrong size on BP_CollisionCapture_C_AddComponentsToShowlist");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, Object) == 0x000000, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::Object' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, LODTurnedOff) == 0x000008, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::LODTurnedOff' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_GetComponentsByTag_ReturnValue) == 0x000018, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_GetComponentsByTag_ReturnValue_1) == 0x000028, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_GetComponentsByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Find_ReturnValue) == 0x000064, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006D, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Find_ReturnValue_1) == 0x000074, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_AddComponentsToShowlist, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_CollisionCapture_C_AddComponentsToShowlist::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.CheckTargetAndSet
// 0x0070 (0x0070 - 0x0000)
struct BP_CollisionCapture_C_CheckTargetAndSet final
{
public:
	class AActor*                                 CollisionTarget_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue_1;         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetterSpectator_Success;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ACharacter>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue_2;         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WorldSpectator_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetterSpectator_Success_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_CheckTargetAndSet) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_CheckTargetAndSet");
static_assert(sizeof(BP_CollisionCapture_C_CheckTargetAndSet) == 0x000070, "Wrong size on BP_CollisionCapture_C_CheckTargetAndSet");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CollisionTarget_0) == 0x000000, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CollisionTarget_0' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, Success) == 0x000008, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::Success' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_IsPlayerControlled_ReturnValue) == 0x00001A, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_IsPlayerControlled_ReturnValue_1) == 0x00001B, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_IsPlayerControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_SetterSpectator_Success) == 0x00001C, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_SetterSpectator_Success' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000020, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_IsPlayerControlled_ReturnValue_2) == 0x000059, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_IsPlayerControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_GetActorOfClass_ReturnValue) == 0x000060, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_CheckTargetAndSet, CallFunc_SetterSpectator_Success_1) == 0x000068, "Member 'BP_CollisionCapture_C_CheckTargetAndSet::CallFunc_SetterSpectator_Success_1' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.ReCheckTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_CollisionCapture_C_ReCheckTarget final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetAndSet_Success;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_ReCheckTarget) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_ReCheckTarget");
static_assert(sizeof(BP_CollisionCapture_C_ReCheckTarget) == 0x000018, "Wrong size on BP_CollisionCapture_C_ReCheckTarget");
static_assert(offsetof(BP_CollisionCapture_C_ReCheckTarget, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'BP_CollisionCapture_C_ReCheckTarget::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ReCheckTarget, K2Node_DynamicCast_AsActor) == 0x000008, "Member 'BP_CollisionCapture_C_ReCheckTarget::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ReCheckTarget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_CollisionCapture_C_ReCheckTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_ReCheckTarget, CallFunc_CheckTargetAndSet_Success) == 0x000011, "Member 'BP_CollisionCapture_C_ReCheckTarget::CallFunc_CheckTargetAndSet_Success' has a wrong offset!");

// Function BP_CollisionCapture.BP_CollisionCapture_C.SetterSpectator
// 0x0040 (0x0040 - 0x0000)
struct BP_CollisionCapture_C_SetterSpectator final
{
public:
	class ABP_WorldSpectator_C*                   Spectator_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AHumanCharacter>         CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CollisionCapture_C_SetterSpectator) == 0x000008, "Wrong alignment on BP_CollisionCapture_C_SetterSpectator");
static_assert(sizeof(BP_CollisionCapture_C_SetterSpectator) == 0x000040, "Wrong size on BP_CollisionCapture_C_SetterSpectator");
static_assert(offsetof(BP_CollisionCapture_C_SetterSpectator, Spectator_0) == 0x000000, "Member 'BP_CollisionCapture_C_SetterSpectator::Spectator_0' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_SetterSpectator, Success) == 0x000008, "Member 'BP_CollisionCapture_C_SetterSpectator::Success' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_SetterSpectator, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_CollisionCapture_C_SetterSpectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_SetterSpectator, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'BP_CollisionCapture_C_SetterSpectator::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionCapture_C_SetterSpectator, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_CollisionCapture_C_SetterSpectator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

