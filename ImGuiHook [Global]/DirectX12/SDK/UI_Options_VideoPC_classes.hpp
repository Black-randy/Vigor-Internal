#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Options_VideoPC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Options_VideoPC.UI_Options_VideoPC_C
// 0x0288 (0x05A0 - 0x0318)
class UUI_Options_VideoPC_C final : public UOptionsMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_InputActionWidget_C*                ActionClose;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ActionDefault;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           AdvanceOptionButton;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  AmbientOcclusion;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  Antialiasing;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           ApplyResolution;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           AutoGraphics;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Slider_C*            BrightnessSlider;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ButtonPromptBox;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Slider_C*            ContrastSlider;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  DLSSQuality;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        FlameTextBlock;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        FlameTextBlock_2;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  FPSLimit;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Slider_C*            GammaSlider;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Checkbox_C*          LensFlare;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  MonitorPicker;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Checkbox_C*          MotionBlur;                                        // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  NewShadow;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        OptionLabel;                                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        OptionLabel_1;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        OptionLabel_3;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        OptionLabel_4;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Options;                                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  QualityPicker;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  Resolution;                                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Slider_C*            SafeFrameSlider;                                   // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           ShaderRecompile;                                   // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Checkbox_C*          ShowFPSCheckbox;                                   // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Checkbox_C*          SubsurfaceScattering;                              // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  ViewDistance;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_Checkbox_C*          VSyncCheckbox;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_OptionsElement_HorizontalPicker_C*  WindowModePicker;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SafeFrameIndicator_C*               SafeFrameIndicatorWidget;                          // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShelterUI_C*                        ShelterUI;                                         // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedQualityIndex;                              // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         QualityOptionsArray;                               // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         ResolutionOptionsArray;                            // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentSelectedResolutionIndex;                    // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVideoSaveSettings                     VideoSaveSettings;                                 // 0x0468(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AdvanceIsActive;                                   // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowApply;                                         // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWindowMode                                   FullscreenMode;                                    // 0x04CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB[0x5];                                      // 0x04CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWindowMode>                           WindowMode;                                        // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SelectedWindowMode;                                // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameSaveSettings                      GameUserSettings;                                  // 0x04E8(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FIntPoint                              MaxResolution;                                     // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FOptionsPickerValue>            FilteredResolutionOption;                          // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 GlobalMipMapBias;                                  // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 DFDistanceScale;                                   // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 FoliageLODDistanceScale;                           // 0x0568(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         DLSSmode;                                          // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FOptionsPickerValue>            DLSSOptionsTotalList;                              // 0x0580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 ResolutionScale;                                   // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_Options_VideoPC(int32 EntryPoint);
	void AntialiasingInit();
	void BndEvt__UI_Options_VideoPC_Antialiasing_K2Node_ComponentBoundEvent_8_OnOptionPickerValueChanged__DelegateSignature(const int32 SelectedOptionIndex);
	void BndEvt__UI_Options_VideoPC_DLSSQuality_K2Node_ComponentBoundEvent_3_OnOptionPickerValueChanged__DelegateSignature(const int32 SelectedOptionIndex);
	void SetVideoQualityToDefault();
	void SaveDefaultValueSettings();
	void SetNativeResolution();
	void ToggleAutoGraphics();
	void SetDefaultResolutionIndex();
	void ToggleResolutionWindow();
	void UpdateWindowMode();
	void ToggleWindowMode(int32 TargetIndex);
	void UpdateScreenResolution(bool ApplySettings, EWindowMode WindowMode_0);
	void ToggleApplyResolutionVisibility(int32 TargetResolutionIndex);
	void ToggleFPSVisibility(bool Show);
	void HideAdvanceOption();
	void OnOptionPickerValueChanged(const int32 SelectedOptionIndex);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ToggleFPSActive();
	void BndEvt__UI_Options_VideoPC_ShaderRecompile_K2Node_ComponentBoundEvent_17_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_ShaderRecompile_K2Node_ComponentBoundEvent_16_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_AutoGraphics_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_AutoGraphics_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_AdvanceOptionButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_AdvanceOptionButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_ApplyResolution_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_ApplyResolution_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void HandleHover(bool IsHovering, class UButton* Target);
	void OverrideCommitValues(class FName Identifier, const struct FOptionsElementValue& Value, bool ApplySettings);
	void RecompileShaderTrigger(EMessageBoxAction Result);
	void BndEvt__UI_Options_VideoPC_ShaderRecompile_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__ActionClose_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_Options_VideoPC_ApplyResolution_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Options_VideoPC_AutoGraphics_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void Destruct();
	void BndEvt__UI_Options_VideoPC_AdvanceOptionButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void OnVideoSettingsChanged(const struct FVideoSaveSettings& VideoSettings);
	void OnQualitySettingsChanged(const class FString& QualitySettingsLevel, bool IsAutoSet);
	void BndEvt__ActionDefault_K2Node_ComponentBoundEvent_2_OnClickedEvent__DelegateSignature();
	void OnChildFocusLost(class UWidget* InWidget);
	void OnChildFocusReceived(class UWidget* InWidget);
	void CreateSafeFrameIndicator();
	void RemoveSafeFrameIndicator();
	void InitShelterUI();
	void UpdateSafeFrameOptionVisibility();
	void UpdateQualitySettings();
	void UpdateMonitorSettingsState();
	void SetShadowQuality(int32 ShadowQualityIndex);
	void SetTextureQuality(int32 SelectedTextureIndex);
	void SetViewDistanceQuality(int32 SelectViewDistance);
	void SetLensFlare(bool IsEnabled);
	void SetAmbientOcclusion(int32 AmbientIndex);
	void SetMotionBlurQuality(bool IsEnabled);
	void SetSubsurfaceScatter(bool IsEnabled);
	void Update_Video_Settings_Quality(const struct FVideoSaveSettings& VideoSettings);
	void FilterResolutionPicker();
	void RefreshCustomCommand(int32 ShadowQuality, int32 ViewDistanceQuality, int32 TextureQuality, int32 AmbientOcclusionQuality);
	void InitDLSSSettings();
	void SetAntialiasing(int32 SelectedOptionIndex);
	void SetDLSSSupported(int32 SelectedOptionIndex);

	void StringToTextArray(TArray<class FString>& In, TArray<class FText>* Out) const;
	TArray<class UPanelWidget*> GetAllPanelWidgets() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Options_VideoPC_C">();
	}
	static class UUI_Options_VideoPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Options_VideoPC_C>();
	}
};
static_assert(alignof(UUI_Options_VideoPC_C) == 0x000008, "Wrong alignment on UUI_Options_VideoPC_C");
static_assert(sizeof(UUI_Options_VideoPC_C) == 0x0005A0, "Wrong size on UUI_Options_VideoPC_C");
static_assert(offsetof(UUI_Options_VideoPC_C, UberGraphFrame) == 0x000318, "Member 'UUI_Options_VideoPC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ActionClose) == 0x000320, "Member 'UUI_Options_VideoPC_C::ActionClose' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ActionDefault) == 0x000328, "Member 'UUI_Options_VideoPC_C::ActionDefault' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, AdvanceOptionButton) == 0x000330, "Member 'UUI_Options_VideoPC_C::AdvanceOptionButton' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, AmbientOcclusion) == 0x000338, "Member 'UUI_Options_VideoPC_C::AmbientOcclusion' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, Antialiasing) == 0x000340, "Member 'UUI_Options_VideoPC_C::Antialiasing' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ApplyResolution) == 0x000348, "Member 'UUI_Options_VideoPC_C::ApplyResolution' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, AutoGraphics) == 0x000350, "Member 'UUI_Options_VideoPC_C::AutoGraphics' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, BrightnessSlider) == 0x000358, "Member 'UUI_Options_VideoPC_C::BrightnessSlider' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ButtonPromptBox) == 0x000360, "Member 'UUI_Options_VideoPC_C::ButtonPromptBox' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ContrastSlider) == 0x000368, "Member 'UUI_Options_VideoPC_C::ContrastSlider' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, DLSSQuality) == 0x000370, "Member 'UUI_Options_VideoPC_C::DLSSQuality' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, FlameTextBlock) == 0x000378, "Member 'UUI_Options_VideoPC_C::FlameTextBlock' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, FlameTextBlock_2) == 0x000380, "Member 'UUI_Options_VideoPC_C::FlameTextBlock_2' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, FPSLimit) == 0x000388, "Member 'UUI_Options_VideoPC_C::FPSLimit' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, GammaSlider) == 0x000390, "Member 'UUI_Options_VideoPC_C::GammaSlider' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, LensFlare) == 0x000398, "Member 'UUI_Options_VideoPC_C::LensFlare' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, MonitorPicker) == 0x0003A0, "Member 'UUI_Options_VideoPC_C::MonitorPicker' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, MotionBlur) == 0x0003A8, "Member 'UUI_Options_VideoPC_C::MotionBlur' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, NewShadow) == 0x0003B0, "Member 'UUI_Options_VideoPC_C::NewShadow' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, OptionLabel) == 0x0003B8, "Member 'UUI_Options_VideoPC_C::OptionLabel' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, OptionLabel_1) == 0x0003C0, "Member 'UUI_Options_VideoPC_C::OptionLabel_1' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, OptionLabel_3) == 0x0003C8, "Member 'UUI_Options_VideoPC_C::OptionLabel_3' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, OptionLabel_4) == 0x0003D0, "Member 'UUI_Options_VideoPC_C::OptionLabel_4' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, Options) == 0x0003D8, "Member 'UUI_Options_VideoPC_C::Options' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, QualityPicker) == 0x0003E0, "Member 'UUI_Options_VideoPC_C::QualityPicker' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, Resolution) == 0x0003E8, "Member 'UUI_Options_VideoPC_C::Resolution' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, SafeFrameSlider) == 0x0003F0, "Member 'UUI_Options_VideoPC_C::SafeFrameSlider' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ShaderRecompile) == 0x0003F8, "Member 'UUI_Options_VideoPC_C::ShaderRecompile' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ShowFPSCheckbox) == 0x000400, "Member 'UUI_Options_VideoPC_C::ShowFPSCheckbox' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, SubsurfaceScattering) == 0x000408, "Member 'UUI_Options_VideoPC_C::SubsurfaceScattering' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ViewDistance) == 0x000410, "Member 'UUI_Options_VideoPC_C::ViewDistance' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, VSyncCheckbox) == 0x000418, "Member 'UUI_Options_VideoPC_C::VSyncCheckbox' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, WindowModePicker) == 0x000420, "Member 'UUI_Options_VideoPC_C::WindowModePicker' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, SafeFrameIndicatorWidget) == 0x000428, "Member 'UUI_Options_VideoPC_C::SafeFrameIndicatorWidget' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ShelterUI) == 0x000430, "Member 'UUI_Options_VideoPC_C::ShelterUI' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, SelectedQualityIndex) == 0x000438, "Member 'UUI_Options_VideoPC_C::SelectedQualityIndex' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, QualityOptionsArray) == 0x000440, "Member 'UUI_Options_VideoPC_C::QualityOptionsArray' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ResolutionOptionsArray) == 0x000450, "Member 'UUI_Options_VideoPC_C::ResolutionOptionsArray' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, CurrentSelectedResolutionIndex) == 0x000460, "Member 'UUI_Options_VideoPC_C::CurrentSelectedResolutionIndex' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, VideoSaveSettings) == 0x000468, "Member 'UUI_Options_VideoPC_C::VideoSaveSettings' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, AdvanceIsActive) == 0x0004C8, "Member 'UUI_Options_VideoPC_C::AdvanceIsActive' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ShowApply) == 0x0004C9, "Member 'UUI_Options_VideoPC_C::ShowApply' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, FullscreenMode) == 0x0004CA, "Member 'UUI_Options_VideoPC_C::FullscreenMode' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, WindowMode) == 0x0004D0, "Member 'UUI_Options_VideoPC_C::WindowMode' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, SelectedWindowMode) == 0x0004E0, "Member 'UUI_Options_VideoPC_C::SelectedWindowMode' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, GameUserSettings) == 0x0004E8, "Member 'UUI_Options_VideoPC_C::GameUserSettings' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, MaxResolution) == 0x000530, "Member 'UUI_Options_VideoPC_C::MaxResolution' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, FilteredResolutionOption) == 0x000538, "Member 'UUI_Options_VideoPC_C::FilteredResolutionOption' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, GlobalMipMapBias) == 0x000548, "Member 'UUI_Options_VideoPC_C::GlobalMipMapBias' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, DFDistanceScale) == 0x000558, "Member 'UUI_Options_VideoPC_C::DFDistanceScale' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, FoliageLODDistanceScale) == 0x000568, "Member 'UUI_Options_VideoPC_C::FoliageLODDistanceScale' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, DLSSmode) == 0x000578, "Member 'UUI_Options_VideoPC_C::DLSSmode' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, DLSSOptionsTotalList) == 0x000580, "Member 'UUI_Options_VideoPC_C::DLSSOptionsTotalList' has a wrong offset!");
static_assert(offsetof(UUI_Options_VideoPC_C, ResolutionScale) == 0x000590, "Member 'UUI_Options_VideoPC_C::ResolutionScale' has a wrong offset!");

}

