#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BeeHive_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_BeeHive_Base.BP_BeeHive_Base_C.ExecuteUbergraph_BP_BeeHive_Base
// 0x0180 (0x0180 - 0x0000)
struct BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0038(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_1;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0168(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base) == 0x000008, "Wrong alignment on BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base");
static_assert(sizeof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base) == 0x000180, "Wrong size on BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, EntryPoint) == 0x000000, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, Temp_byte_Variable) == 0x000004, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, Temp_byte_Variable_1) == 0x000014, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_IsServer_ReturnValue) == 0x000015, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_IsDedicatedServer_ReturnValue) == 0x000016, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000018, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000020, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000028, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000030, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_bFromSweep) == 0x000034, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_SweepResult) == 0x000038, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000C8, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x0000D0, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D8, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000E0, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_DynamicCast_AsBP_Character) == 0x0000E8, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_DynamicCast_AsBP_Character_1) == 0x0000F8, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_DynamicCast_AsBP_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000104, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000120, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Array_RemoveItem_ReturnValue) == 0x000130, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x000138, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000139, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00013A, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_RandomFloat_ReturnValue) == 0x00013C, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Array_Length_ReturnValue_1) == 0x000144, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_BooleanAND_ReturnValue) == 0x000148, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000149, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_Not_PreBool_ReturnValue_1) == 0x00014A, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_CustomEvent_Location) == 0x00014C, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, Temp_bool_Variable) == 0x000158, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000160, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000168, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000170, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_DynamicCast_bSuccess_2) == 0x000178, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base, K2Node_Select_Default) == 0x000179, "Member 'BP_BeeHive_Base_C_ExecuteUbergraph_BP_BeeHive_Base::K2Node_Select_Default' has a wrong offset!");

// Function BP_BeeHive_Base.BP_BeeHive_Base_C.Play Bee Sting Sound
// 0x000C (0x000C - 0x0000)
struct BP_BeeHive_Base_C_Play_Bee_Sting_Sound final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BeeHive_Base_C_Play_Bee_Sting_Sound) == 0x000004, "Wrong alignment on BP_BeeHive_Base_C_Play_Bee_Sting_Sound");
static_assert(sizeof(BP_BeeHive_Base_C_Play_Bee_Sting_Sound) == 0x00000C, "Wrong size on BP_BeeHive_Base_C_Play_Bee_Sting_Sound");
static_assert(offsetof(BP_BeeHive_Base_C_Play_Bee_Sting_Sound, Location) == 0x000000, "Member 'BP_BeeHive_Base_C_Play_Bee_Sting_Sound::Location' has a wrong offset!");

// Function BP_BeeHive_Base.BP_BeeHive_Base_C.BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_BeeHive_Base.BP_BeeHive_Base_C.BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BeeHive_Base_C_BndEvt__BeeStingOverlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BeeHive_Base.BP_BeeHive_Base_C.Damage Random Overlapping Character
// 0x0038 (0x0038 - 0x0000)
struct BP_BeeHive_Base_C_Damage_Random_Overlapping_Character final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageEvent                           K2Node_MakeStruct_DamageEvent;                     // 0x0008(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Sting_Player_Success;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character) == 0x000008, "Wrong alignment on BP_BeeHive_Base_C_Damage_Random_Overlapping_Character");
static_assert(sizeof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character) == 0x000038, "Wrong size on BP_BeeHive_Base_C_Damage_Random_Overlapping_Character");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, K2Node_MakeStruct_DamageEvent) == 0x000008, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::K2Node_MakeStruct_DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, CallFunc_Can_Sting_Player_Success) == 0x00002D, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::CallFunc_Can_Sting_Player_Success' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Damage_Random_Overlapping_Character, CallFunc_ApplyDamage_ReturnValue) == 0x000030, "Member 'BP_BeeHive_Base_C_Damage_Random_Overlapping_Character::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");

// Function BP_BeeHive_Base.BP_BeeHive_Base_C.Can Sting Player
// 0x01B8 (0x01B8 - 0x0000)
struct BP_BeeHive_Base_C_Can_Sting_Player final
{
public:
	class ABP_Character_C*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x007C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BeeHive_Base_C_Can_Sting_Player) == 0x000008, "Wrong alignment on BP_BeeHive_Base_C_Can_Sting_Player");
static_assert(sizeof(BP_BeeHive_Base_C_Can_Sting_Player) == 0x0001B8, "Wrong size on BP_BeeHive_Base_C_Can_Sting_Player");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, Character) == 0x000000, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::Character' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, Success) == 0x000008, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::Success' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_GetIsDead_ReturnValue) == 0x00000A, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, K2Node_MakeArray_Array_1) == 0x000038, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000058, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000068, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, K2Node_DynamicCast_AsBP_Character_Script) == 0x000070, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_Array_Get_Item) == 0x00007C, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_Location) == 0x000114, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_Normal) == 0x00012C, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000160, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_HitBoneName) == 0x000164, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_HitItem) == 0x00016C, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_ElementIndex) == 0x000170, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_FaceIndex) == 0x000174, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_TraceStart) == 0x000178, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_BreakHitResult_TraceEnd) == 0x000184, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_GetObjectClass_ReturnValue) == 0x000198, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_Less_IntInt_ReturnValue) == 0x0001A0, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_ClassIsChildOf_ReturnValue) == 0x0001A1, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001A2, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_GetObjectClass_ReturnValue_1) == 0x0001A8, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BeeHive_Base_C_Can_Sting_Player, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x0001B0, "Member 'BP_BeeHive_Base_C_Can_Sting_Player::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");

}

