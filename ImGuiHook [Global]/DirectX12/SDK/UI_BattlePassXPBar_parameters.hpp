#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassXPBar

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "E_BattlePassSystem_State_structs.hpp"


namespace SDK::Params
{

// Function UI_BattlePassXPBar.UI_BattlePassXPBar_C.ExecuteUbergraph_UI_BattlePassXPBar
// 0x0128 (0x0128 - 0x0000)
struct UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_Level;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_XP_For_Next_Level_Level;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0058(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_XP_Within_Level_Level;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0078(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassSystem_State                      CallFunc_Get_State_State;                          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AHumanPlayerController* Player, struct FCloudBattlePassExperienceEvent& Event)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_2;     // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Level_1;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_CustomEvent_Player;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassExperienceEvent        K2Node_CustomEvent_Event;                          // 0x00C8(0x0024)(ConstParm, NoDestructor)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success_1;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar) == 0x000008, "Wrong alignment on UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar");
static_assert(sizeof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar) == 0x000128, "Wrong size on UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, EntryPoint) == 0x000000, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, Temp_bool_Variable) == 0x000004, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000038, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_Premium_Status_Premium_Active) == 0x000040, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_Level_Level) == 0x000044, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x000048, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_XP_For_Next_Level_Level) == 0x000054, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_XP_For_Next_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Conv_IntToText_ReturnValue) == 0x000058, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000070, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_XP_Within_Level_Level) == 0x000074, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_XP_Within_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000078, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000090, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000094, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_State_State) == 0x000098, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000099, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CreateDelegate_OutputDelegate_3) == 0x00009C, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_Season_Name_Active_Season_Name_2) == 0x0000AC, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_Season_Name_Active_Season_Name_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_Season_Max_Level_Max_Level) == 0x0000B4, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Get_Level_Level_1) == 0x0000B8, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Get_Level_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CustomEvent_Player) == 0x0000C0, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CustomEvent_Event) == 0x0000C8, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, CallFunc_GetBattlePassSystem_ReturnValue) == 0x0000F0, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x0000F8, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, Temp_object_Variable) == 0x000108, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CustomEvent_Success_1) == 0x000110, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CustomEvent_Success_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_CustomEvent_Success) == 0x000111, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, Temp_object_Variable_1) == 0x000118, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar, K2Node_Select_Default) == 0x000120, "Member 'UI_BattlePassXPBar_C_ExecuteUbergraph_UI_BattlePassXPBar::K2Node_Select_Default' has a wrong offset!");

// Function UI_BattlePassXPBar.UI_BattlePassXPBar_C.EventLevelPurchased
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassXPBar_C_EventLevelPurchased final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassXPBar_C_EventLevelPurchased) == 0x000001, "Wrong alignment on UI_BattlePassXPBar_C_EventLevelPurchased");
static_assert(sizeof(UI_BattlePassXPBar_C_EventLevelPurchased) == 0x000001, "Wrong size on UI_BattlePassXPBar_C_EventLevelPurchased");
static_assert(offsetof(UI_BattlePassXPBar_C_EventLevelPurchased, Success) == 0x000000, "Member 'UI_BattlePassXPBar_C_EventLevelPurchased::Success' has a wrong offset!");

// Function UI_BattlePassXPBar.UI_BattlePassXPBar_C.EventPremiumPurchased
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassXPBar_C_EventPremiumPurchased final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassXPBar_C_EventPremiumPurchased) == 0x000001, "Wrong alignment on UI_BattlePassXPBar_C_EventPremiumPurchased");
static_assert(sizeof(UI_BattlePassXPBar_C_EventPremiumPurchased) == 0x000001, "Wrong size on UI_BattlePassXPBar_C_EventPremiumPurchased");
static_assert(offsetof(UI_BattlePassXPBar_C_EventPremiumPurchased, Success) == 0x000000, "Member 'UI_BattlePassXPBar_C_EventPremiumPurchased::Success' has a wrong offset!");

// Function UI_BattlePassXPBar.UI_BattlePassXPBar_C.EventNewXPAwarded
// 0x0030 (0x0030 - 0x0000)
struct UI_BattlePassXPBar_C_EventNewXPAwarded final
{
public:
	class AHumanPlayerController*                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassExperienceEvent        Event;                                             // 0x0008(0x0024)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(UI_BattlePassXPBar_C_EventNewXPAwarded) == 0x000008, "Wrong alignment on UI_BattlePassXPBar_C_EventNewXPAwarded");
static_assert(sizeof(UI_BattlePassXPBar_C_EventNewXPAwarded) == 0x000030, "Wrong size on UI_BattlePassXPBar_C_EventNewXPAwarded");
static_assert(offsetof(UI_BattlePassXPBar_C_EventNewXPAwarded, Player) == 0x000000, "Member 'UI_BattlePassXPBar_C_EventNewXPAwarded::Player' has a wrong offset!");
static_assert(offsetof(UI_BattlePassXPBar_C_EventNewXPAwarded, Event) == 0x000008, "Member 'UI_BattlePassXPBar_C_EventNewXPAwarded::Event' has a wrong offset!");

}

