#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SellingPointsSystem

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "E_SellingPointStatus_structs.hpp"
#include "S_BattlePassLevelRewardFull_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SellingPointsSystem.BP_SellingPointsSystem_C
// 0x00B0 (0x0370 - 0x02C0)
class UBP_SellingPointsSystem_C final : public UGameStoreSellingPoints
{
public:
	TArray<struct FGameStoreOfferInfo>            ExclusiveOffers;                                   // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         OwnedItems;                                        // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         CachedExclusiveOfferItems;                         // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         CachedBattlePassItems;                             // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_BattlePassLevelRewardFull>   BattlePassFreeRewards;                             // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_BattlePassLevelRewardFull>   BattlePassPremiumRewards;                          // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, E_SellingPointStatus>     ItemStateMap;                                      // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UpdateStaticData(class UGameStoreOffers* GameStoreOffers, class UBattlePassSystem* BattlePassSystem, const struct FDateTime& Now);
	void UpdateOwnedItems(TArray<class UClass*>& OwnedItems_0);
	void GetFocusedItemState(const class UClass*& Item, E_SellingPointStatus* Status, struct FGameStoreProductInfo* FocusedProductInfo);
	void ClearStaticData();
	void IsItemVisible(class UClass* Item, bool* Is_Visible);
	void UpdateOwnedCustomizations(class AHumanPlayerController* Controller);
	void GetCachedItemState(class UClass* Item, E_SellingPointStatus* Status, struct FGameStoreProductInfo* FocusedProductInfo);
	void UpdateCachedItemState(class UClass* Item, E_SellingPointStatus SellingPointStatus);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SellingPointsSystem_C">();
	}
	static class UBP_SellingPointsSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SellingPointsSystem_C>();
	}
};
static_assert(alignof(UBP_SellingPointsSystem_C) == 0x000008, "Wrong alignment on UBP_SellingPointsSystem_C");
static_assert(sizeof(UBP_SellingPointsSystem_C) == 0x000370, "Wrong size on UBP_SellingPointsSystem_C");
static_assert(offsetof(UBP_SellingPointsSystem_C, ExclusiveOffers) == 0x0002C0, "Member 'UBP_SellingPointsSystem_C::ExclusiveOffers' has a wrong offset!");
static_assert(offsetof(UBP_SellingPointsSystem_C, OwnedItems) == 0x0002D0, "Member 'UBP_SellingPointsSystem_C::OwnedItems' has a wrong offset!");
static_assert(offsetof(UBP_SellingPointsSystem_C, CachedExclusiveOfferItems) == 0x0002E0, "Member 'UBP_SellingPointsSystem_C::CachedExclusiveOfferItems' has a wrong offset!");
static_assert(offsetof(UBP_SellingPointsSystem_C, CachedBattlePassItems) == 0x0002F0, "Member 'UBP_SellingPointsSystem_C::CachedBattlePassItems' has a wrong offset!");
static_assert(offsetof(UBP_SellingPointsSystem_C, BattlePassFreeRewards) == 0x000300, "Member 'UBP_SellingPointsSystem_C::BattlePassFreeRewards' has a wrong offset!");
static_assert(offsetof(UBP_SellingPointsSystem_C, BattlePassPremiumRewards) == 0x000310, "Member 'UBP_SellingPointsSystem_C::BattlePassPremiumRewards' has a wrong offset!");
static_assert(offsetof(UBP_SellingPointsSystem_C, ItemStateMap) == 0x000320, "Member 'UBP_SellingPointsSystem_C::ItemStateMap' has a wrong offset!");

}

