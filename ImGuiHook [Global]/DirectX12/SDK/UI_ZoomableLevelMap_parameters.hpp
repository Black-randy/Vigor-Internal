#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ZoomableLevelMap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FlameUI_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "S_CustomMapMarker_structs.hpp"
#include "Slate_structs.hpp"
#include "S_CustomMapMarker_Fade_structs.hpp"
#include "S_CustomMapMarker_ContextUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "S_CustomMapMarker_Optimized_structs.hpp"
#include "S_CustomMapMarker_ContextStorage_structs.hpp"


namespace SDK::Params
{

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.ExecuteUbergraph_UI_ZoomableLevelMap
// 0x0EC8 (0x0EC8 - 0x0000)
struct UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue_1;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 PlayerIndex, EInputMode InputMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  K2Node_DynamicCast_AsHuman_Player_Character;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapTool*                               CallFunc_GetMapTool_ReturnValue;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapTool_C*                          K2Node_DynamicCast_AsBP_Map_Tool;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00BC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AxisValue_4;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AxisValue_3;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_AxisValue_2;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Tag_1;                          // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_CustomEvent_Marker;                         // 0x0130(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade;          // 0x0180(0x00D8)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Tag;                            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0268(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x029C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentPointerInfo_X;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentPointerInfo_Y;                  // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentPointerInfo_IsHoveringMap;      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentPointerInfo_IsTouch;            // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch;   // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_AxisValue_1;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AxisValue;                      // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_2;        // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentPointerInfo_X_1;                // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentPointerInfo_Y_1;                // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentPointerInfo_IsHoveringMap_1;    // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentPointerInfo_IsTouch_1;          // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch_1; // 0x0346(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0347(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B[0x1];                                      // 0x034B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_MarkerTag;                      // 0x0398(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                K2Node_CustomEvent_MarkerInfo;                     // 0x03A0(0x00D8)(HasGetValueTypeHash)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0480(0x0010)(ZeroConstructor, NoDestructor)
	struct FS_CustomMapMarker_ContextUI           K2Node_MakeStruct_S_CustomMapMarker_ContextUI;     // 0x0490(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0578(0x0010)(ZeroConstructor, NoDestructor)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value;                           // 0x0588(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0678(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1;   // 0x0680(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value_1;                         // 0x0768(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_852[0x6];                                      // 0x0852(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value_2;                         // 0x0858(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_941[0x3];                                      // 0x0941(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0944(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_CustomMapMarker_ContextUI>   CallFunc_Map_Values_Values;                        // 0x0958(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Array_Get_Item_2;                         // 0x0968(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A55[0x3];                                      // 0x0A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_10;           // 0x0A58(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0A68(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0A78(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0A88(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0x4];                                      // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value_3;                         // 0x0AA8(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0B91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B92[0x2];                                      // 0x0B92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_DynamicCast_AsCurve_Float;                  // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0BA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0BAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0BAB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_2;                             // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB1[0x3];                                      // 0x0BB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0BB4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_BC4[0x4];                                      // 0x0BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default;                             // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_DynamicCast_AsCurve_Float_1;                // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BEA[0x2];                                      // 0x0BEA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue;            // 0x0BEC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BFC[0x4];                                      // 0x0BFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0C00(0x0028)()
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue_1;          // 0x0C28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0C38(0x0028)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C61[0x3];                                      // 0x0C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0C64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C71[0x7];                                      // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FogOfWarComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0C78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C81[0x3];                                      // 0x0C81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_LowerMapZoomLimit;              // 0x0C84(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_UpperMapZoomLimit;              // 0x0C94(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0CA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA9[0x3];                                      // 0x0CA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB2[0x2];                                      // 0x0CB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0CB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x0CCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x0CD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0CD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0CE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CEA[0x2];                                      // 0x0CEA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0CEC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable_3;                             // 0x0CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewVisibility;                  // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D01[0x3];                                      // 0x0D01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0D04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0D0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D0D[0x3];                                      // 0x0D0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D14[0x4];                                      // 0x0D14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0D24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D25[0x3];                                      // 0x0D25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0D41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D42[0x6];                                      // 0x0D42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_3;                           // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_1;           // 0x0D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5C[0x4];                                      // 0x0D5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_4;                           // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D69[0x7];                                      // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0D80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0D81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D82[0x2];                                      // 0x0D82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0D84(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0D94(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_DA4[0x4];                                      // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_5;                           // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_2;  // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2; // 0x0DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC1[0x3];                                      // 0x0DC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_17;           // 0x0DC4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_DD4[0x4];                                      // 0x0DD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0DD8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlatformName_ReturnValue_1;            // 0x0DE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0DF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DFA[0x6];                                      // 0x0DFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue_2;            // 0x0E00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E11[0x7];                                      // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_3;            // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E21[0x3];                                      // 0x0E21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x0E2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_1;     // 0x0E31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_2;     // 0x0E32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E33[0x5];                                      // 0x0E33(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue;             // 0x0E40(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0E41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E42[0x2];                                      // 0x0E42(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerIndex;                    // 0x0E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    K2Node_CustomEvent_InputMode;                      // 0x0E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0E49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4A[0x2];                                      // 0x0E4A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_18;           // 0x0E4C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_3;     // 0x0E5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0E5D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5E[0x2];                                      // 0x0E5E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0E60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E64[0x4];                                      // 0x0E64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue_1;           // 0x0E70(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0E71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E72[0x2];                                      // 0x0E72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_6;                           // 0x0E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E79[0x3];                                      // 0x0E79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_7;                           // 0x0E7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0E80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0E84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x0E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x0E8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x0E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x0E94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_6;                     // 0x0EA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_7;                     // 0x0EA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_8;                     // 0x0EAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_9;                     // 0x0EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0EB4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap");
static_assert(sizeof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap) == 0x000EC8, "Wrong size on UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, EntryPoint) == 0x000000, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable) == 0x000004, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPlatform_ReturnValue) == 0x000005, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPlatform_ReturnValue_1) == 0x000018, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Array_Index_Variable) == 0x000044, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_1) == 0x000058, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_2) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_4) == 0x000070, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_3) == 0x000080, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetOwningPlayer_ReturnValue) == 0x000088, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_K2_GetPawn_ReturnValue) == 0x000090, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_AsHuman_Player_Character) == 0x000098, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_AsHuman_Player_Character' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetMapTool_ReturnValue) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetMapTool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_AsBP_Map_Tool) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_AsBP_Map_Tool' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_4) == 0x0000B9, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_5) == 0x0000BA, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Event_MyGeometry) == 0x0000BC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Event_InDeltaTime) == 0x0000F4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_AxisValue_4) == 0x0000F8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_AxisValue_3) == 0x0000FC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000101, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanOR_ReturnValue) == 0x000102, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanOR_ReturnValue_1) == 0x000103, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_AxisValue_2) == 0x000104, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000108, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue) == 0x00010C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000110, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000114, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000118, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00011C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_6) == 0x000120, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_Tag_1) == 0x000124, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_Marker) == 0x000130, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_Marker' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_MakeStruct_S_CustomMapMarker_Fade) == 0x000180, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_MakeStruct_S_CustomMapMarker_Fade' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_Tag) == 0x000258, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Array_Index_Variable_2) == 0x000260, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000264, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_5) == 0x000268, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000278, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_byte_Variable) == 0x00027C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000280, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000288, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Loop_Counter_Variable_2) == 0x000290, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_IntInt_ReturnValue_2) == 0x000294, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_byte_Variable_1) == 0x000298, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_7) == 0x000299, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_6) == 0x00029C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_MakeVector_ReturnValue) == 0x0002AC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0002B8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002C4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BreakVector_X) == 0x0002C8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BreakVector_Y) == 0x0002CC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BreakVector_Z) == 0x0002D0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002D4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0002D8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0002DC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0002E0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0002E4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0002E8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0002EC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_SpawnSound2D_ReturnValue) == 0x0002F0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_1) == 0x0002F8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002FC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanAND_ReturnValue) == 0x0002FD, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000300, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_X) == 0x000308, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_Y) == 0x00030C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_IsHoveringMap) == 0x000310, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_IsHoveringMap' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_IsTouch) == 0x000311, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_IsTouch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch) == 0x000312, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Not_PreBool_ReturnValue) == 0x000313, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_AxisValue_1) == 0x000314, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000318, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00031C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000320, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000324, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_IntInt_ReturnValue_3) == 0x000328, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Array_Index_Variable_3) == 0x00032C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_AxisValue) == 0x000330, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000334, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_NotEqual_FloatFloat_ReturnValue_2) == 0x000338, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_NotEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_X_1) == 0x00033C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_Y_1) == 0x000340, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_IsHoveringMap_1) == 0x000344, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_IsHoveringMap_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_IsTouch_1) == 0x000345, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_IsTouch_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch_1) == 0x000346, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Not_PreBool_ReturnValue_1) == 0x000347, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000348, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanAND_ReturnValue_1) == 0x000349, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanAND_ReturnValue_2) == 0x00034A, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_float_Variable) == 0x00034C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_IntInt_ReturnValue_4) == 0x000350, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Get_Item) == 0x000354, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Length_ReturnValue) == 0x000358, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Length_ReturnValue_1) == 0x00035C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000360, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000364, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_SelectInt_ReturnValue) == 0x000368, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Get_Item_1) == 0x00036C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_FloatFloat_ReturnValue) == 0x000370, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Length_ReturnValue_2) == 0x000374, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Less_IntInt_ReturnValue) == 0x000378, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Length_ReturnValue_3) == 0x00037C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000380, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000384, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_IntInt_ReturnValue_5) == 0x000388, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_SelectFloat_ReturnValue) == 0x00038C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000390, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_SelectInt_ReturnValue_1) == 0x000394, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_MarkerTag) == 0x000398, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_MarkerTag' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_MarkerInfo) == 0x0003A0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_MarkerInfo' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_SpawnObject_ReturnValue) == 0x000478, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_7) == 0x000480, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_MakeStruct_S_CustomMapMarker_ContextUI) == 0x000490, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_MakeStruct_S_CustomMapMarker_ContextUI' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_8) == 0x000578, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_Value) == 0x000588, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_ReturnValue) == 0x000670, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000678, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1) == 0x000680, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_Value_1) == 0x000768, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_ReturnValue_1) == 0x000850, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Remove_ReturnValue) == 0x000851, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_Value_2) == 0x000858, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_ReturnValue_2) == 0x000940, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_9) == 0x000944, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Values_Values) == 0x000958, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Get_Item_2) == 0x000968, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Length_ReturnValue_4) == 0x000A50, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Less_IntInt_ReturnValue_1) == 0x000A54, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_10) == 0x000A58, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_11) == 0x000A68, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_12) == 0x000A78, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Keys_Keys) == 0x000A88, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Get_Item_3) == 0x000A98, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Array_Length_ReturnValue_5) == 0x000AA0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_Value_3) == 0x000AA8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Map_Find_ReturnValue_3) == 0x000B90, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Less_IntInt_ReturnValue_2) == 0x000B91, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_float_Variable_1) == 0x000B94, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000B98, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_AsCurve_Float) == 0x000BA0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_AsCurve_Float' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_bSuccess_2) == 0x000BA8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000BA9, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue_1) == 0x000BAA, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000BAB, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_float_Variable_2) == 0x000BAC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_bool_Variable_8) == 0x000BB0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_13) == 0x000BB4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_object_Variable) == 0x000BC8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default) == 0x000BD0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000BD8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_AsCurve_Float_1) == 0x000BE0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_AsCurve_Float_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_DynamicCast_bSuccess_3) == 0x000BE8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Event_IsDesignTime) == 0x000BE9, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetMapMarkerColor_ReturnValue) == 0x000BEC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetMapMarkerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_MakeStruct_SlateColor) == 0x000C00, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetMapMarkerColor_ReturnValue_1) == 0x000C28, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetMapMarkerColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_MakeStruct_SlateColor_1) == 0x000C38, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000C60, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetUserControllerId_ReturnValue) == 0x000C64, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000C68, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue_2) == 0x000C70, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetComponentByClass_ReturnValue) == 0x000C78, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue_3) == 0x000C80, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_LowerMapZoomLimit) == 0x000C84, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_LowerMapZoomLimit' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_UpperMapZoomLimit) == 0x000C94, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_UpperMapZoomLimit' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Loop_Counter_Variable_3) == 0x000CA4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Less_IntInt_ReturnValue_3) == 0x000CA8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_IntInt_ReturnValue_6) == 0x000CAC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Less_FloatFloat_ReturnValue) == 0x000CB0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanAND_ReturnValue_3) == 0x000CB1, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000CB4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000CB8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000CBC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000CC0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000CC4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_2) == 0x000CC8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_3) == 0x000CCC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_4) == 0x000CD0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_5) == 0x000CD4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_MakeStruct_LinearColor) == 0x000CD8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000CE8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Not_PreBool_ReturnValue_2) == 0x000CE9, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_14) == 0x000CEC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_float_Variable_3) == 0x000CFC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_NewVisibility) == 0x000D00, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_NewVisibility' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000D04, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_SelectFloat_ReturnValue_1) == 0x000D08, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default_1) == 0x000D0C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000D10, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_Loaded) == 0x000D18, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetRenderOpacity_ReturnValue) == 0x000D20, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000D24, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default_2) == 0x000D28, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000D30, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000D38, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue_4) == 0x000D40, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue_5) == 0x000D41, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default_3) == 0x000D48, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_PlayAnimation_ReturnValue) == 0x000D50, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetRenderOpacity_ReturnValue_1) == 0x000D58, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetRenderOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default_4) == 0x000D60, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000D68, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000D70, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000D78, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Not_PreBool_ReturnValue_3) == 0x000D80, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue_6) == 0x000D81, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_15) == 0x000D84, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_16) == 0x000D94, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default_5) == 0x000DA8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_CreatePlayAnimationProxyObject_Result_2) == 0x000DB0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_CreatePlayAnimationProxyObject_Result_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2) == 0x000DB8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsValid_ReturnValue_7) == 0x000DC0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_17) == 0x000DC4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetPlatformName_ReturnValue) == 0x000DD8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetPlatformName_ReturnValue_1) == 0x000DE8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetPlatformName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000DF8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000DF9, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetPlatformName_ReturnValue_2) == 0x000E00, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetPlatformName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000E10, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetOwningPlayer_ReturnValue_3) == 0x000E18, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetOwningPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000E20, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000E24, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000E28, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x000E2C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000E30, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsPlatformGroupDesktop_ReturnValue_1) == 0x000E31, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsPlatformGroupDesktop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsPlatformGroupDesktop_ReturnValue_2) == 0x000E32, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsPlatformGroupDesktop_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000E38, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetLastInputMode_ReturnValue) == 0x000E40, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetLastInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000E41, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_PlayerIndex) == 0x000E44, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_PlayerIndex' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CustomEvent_InputMode) == 0x000E48, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CustomEvent_InputMode' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000E49, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_CreateDelegate_OutputDelegate_18) == 0x000E4C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_IsPlatformGroupDesktop_ReturnValue_3) == 0x000E5C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_IsPlatformGroupDesktop_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanOR_ReturnValue_2) == 0x000E5D, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, Temp_int_Variable) == 0x000E60, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000E68, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_GetLastInputMode_ReturnValue_1) == 0x000E70, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_GetLastInputMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000E71, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default_6) == 0x000E74, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_BooleanAND_ReturnValue_4) == 0x000E78, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_Select_Default_7) == 0x000E7C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000E80, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000E84, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x000E88, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x000E8C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x000E90, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x000E94, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x000E98, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000E9C, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000EA0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_6) == 0x000EA4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_7) == 0x000EA8, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_8) == 0x000EAC, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, CallFunc_FClamp_ReturnValue_9) == 0x000EB0, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap, K2Node_MakeStruct_LinearColor_1) == 0x000EB4, "Member 'UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.InputModeChanged
// 0x0008 (0x0008 - 0x0000)
struct UI_ZoomableLevelMap_C_InputModeChanged final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    InputMode;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_InputModeChanged) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_InputModeChanged");
static_assert(sizeof(UI_ZoomableLevelMap_C_InputModeChanged) == 0x000008, "Wrong size on UI_ZoomableLevelMap_C_InputModeChanged");
static_assert(offsetof(UI_ZoomableLevelMap_C_InputModeChanged, PlayerIndex) == 0x000000, "Member 'UI_ZoomableLevelMap_C_InputModeChanged::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InputModeChanged, InputMode) == 0x000004, "Member 'UI_ZoomableLevelMap_C_InputModeChanged::InputMode' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetBoosterDetailWidgetVIsibility
// 0x0001 (0x0001 - 0x0000)
struct UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility) == 0x000001, "Wrong alignment on UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility");
static_assert(sizeof(UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility) == 0x000001, "Wrong size on UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility, NewVisibility) == 0x000000, "Member 'UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility::NewVisibility' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetSpecificZoomLimits
// 0x0020 (0x0020 - 0x0000)
struct UI_ZoomableLevelMap_C_SetSpecificZoomLimits final
{
public:
	struct FLinearColor                           LowerMapZoomLimit_0;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UpperMapZoomLimit_0;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_SetSpecificZoomLimits) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_SetSpecificZoomLimits");
static_assert(sizeof(UI_ZoomableLevelMap_C_SetSpecificZoomLimits) == 0x000020, "Wrong size on UI_ZoomableLevelMap_C_SetSpecificZoomLimits");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetSpecificZoomLimits, LowerMapZoomLimit_0) == 0x000000, "Member 'UI_ZoomableLevelMap_C_SetSpecificZoomLimits::LowerMapZoomLimit_0' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetSpecificZoomLimits, UpperMapZoomLimit_0) == 0x000010, "Member 'UI_ZoomableLevelMap_C_SetSpecificZoomLimits::UpperMapZoomLimit_0' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ZoomableLevelMap_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ZoomableLevelMap_C_PreConstruct");
static_assert(sizeof(UI_ZoomableLevelMap_C_PreConstruct) == 0x000001, "Wrong size on UI_ZoomableLevelMap_C_PreConstruct");
static_assert(offsetof(UI_ZoomableLevelMap_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ZoomableLevelMap_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AddFadedMarker
// 0x00E0 (0x00E0 - 0x0000)
struct UI_ZoomableLevelMap_C_AddFadedMarker final
{
public:
	class FName                                   MarkerTag;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                MarkerInfo;                                        // 0x0008(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_AddFadedMarker) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_AddFadedMarker");
static_assert(sizeof(UI_ZoomableLevelMap_C_AddFadedMarker) == 0x0000E0, "Wrong size on UI_ZoomableLevelMap_C_AddFadedMarker");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddFadedMarker, MarkerTag) == 0x000000, "Member 'UI_ZoomableLevelMap_C_AddFadedMarker::MarkerTag' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddFadedMarker, MarkerInfo) == 0x000008, "Member 'UI_ZoomableLevelMap_C_AddFadedMarker::MarkerInfo' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.MouseWheelZoom
// 0x0004 (0x0004 - 0x0000)
struct UI_ZoomableLevelMap_C_MouseWheelZoom final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_MouseWheelZoom) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_MouseWheelZoom");
static_assert(sizeof(UI_ZoomableLevelMap_C_MouseWheelZoom) == 0x000004, "Wrong size on UI_ZoomableLevelMap_C_MouseWheelZoom");
static_assert(offsetof(UI_ZoomableLevelMap_C_MouseWheelZoom, AxisValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_MouseWheelZoom::AxisValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.PinchZoom
// 0x0004 (0x0004 - 0x0000)
struct UI_ZoomableLevelMap_C_PinchZoom final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_PinchZoom) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_PinchZoom");
static_assert(sizeof(UI_ZoomableLevelMap_C_PinchZoom) == 0x000004, "Wrong size on UI_ZoomableLevelMap_C_PinchZoom");
static_assert(offsetof(UI_ZoomableLevelMap_C_PinchZoom, AxisValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_PinchZoom::AxisValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.RemoveMapMarkerByTag
// 0x0008 (0x0008 - 0x0000)
struct UI_ZoomableLevelMap_C_RemoveMapMarkerByTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_RemoveMapMarkerByTag) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_RemoveMapMarkerByTag");
static_assert(sizeof(UI_ZoomableLevelMap_C_RemoveMapMarkerByTag) == 0x000008, "Wrong size on UI_ZoomableLevelMap_C_RemoveMapMarkerByTag");
static_assert(offsetof(UI_ZoomableLevelMap_C_RemoveMapMarkerByTag, Tag) == 0x000000, "Member 'UI_ZoomableLevelMap_C_RemoveMapMarkerByTag::Tag' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AddMapMarker
// 0x0058 (0x0058 - 0x0000)
struct UI_ZoomableLevelMap_C_AddMapMarker final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker                     Marker;                                            // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_AddMapMarker) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_AddMapMarker");
static_assert(sizeof(UI_ZoomableLevelMap_C_AddMapMarker) == 0x000058, "Wrong size on UI_ZoomableLevelMap_C_AddMapMarker");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMapMarker, Tag) == 0x000000, "Member 'UI_ZoomableLevelMap_C_AddMapMarker::Tag' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMapMarker, Marker) == 0x000008, "Member 'UI_ZoomableLevelMap_C_AddMapMarker::Marker' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Zoom
// 0x0004 (0x0004 - 0x0000)
struct UI_ZoomableLevelMap_C_Zoom final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Zoom) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_Zoom");
static_assert(sizeof(UI_ZoomableLevelMap_C_Zoom) == 0x000004, "Wrong size on UI_ZoomableLevelMap_C_Zoom");
static_assert(offsetof(UI_ZoomableLevelMap_C_Zoom, AxisValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Zoom::AxisValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.LeftStickLeftRight
// 0x0004 (0x0004 - 0x0000)
struct UI_ZoomableLevelMap_C_LeftStickLeftRight final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_LeftStickLeftRight) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_LeftStickLeftRight");
static_assert(sizeof(UI_ZoomableLevelMap_C_LeftStickLeftRight) == 0x000004, "Wrong size on UI_ZoomableLevelMap_C_LeftStickLeftRight");
static_assert(offsetof(UI_ZoomableLevelMap_C_LeftStickLeftRight, AxisValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_LeftStickLeftRight::AxisValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.LeftStickUpDown
// 0x0004 (0x0004 - 0x0000)
struct UI_ZoomableLevelMap_C_LeftStickUpDown final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_LeftStickUpDown) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_LeftStickUpDown");
static_assert(sizeof(UI_ZoomableLevelMap_C_LeftStickUpDown) == 0x000004, "Wrong size on UI_ZoomableLevelMap_C_LeftStickUpDown");
static_assert(offsetof(UI_ZoomableLevelMap_C_LeftStickUpDown, AxisValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_LeftStickUpDown::AxisValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_ZoomableLevelMap_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Tick) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_Tick");
static_assert(sizeof(UI_ZoomableLevelMap_C_Tick) == 0x00003C, "Wrong size on UI_ZoomableLevelMap_C_Tick");
static_assert(offsetof(UI_ZoomableLevelMap_C_Tick, MyGeometry) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_ZoomableLevelMap_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC
// 0x0008 (0x0008 - 0x0000)
struct UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC");
static_assert(sizeof(UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC) == 0x000008, "Wrong size on UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC");
static_assert(offsetof(UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC, Loaded) == 0x000000, "Member 'UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC::Loaded' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.GetPlayerPos
// 0x03F0 (0x03F0 - 0x0000)
struct UI_ZoomableLevelMap_C_GetPlayerPos final
{
public:
	TArray<struct FS_CustomMapMarker_ContextUI>   ActivePlayersMarkers;                              // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_CustomMapMarker_ContextUI>   ActiveMarkers;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Array_Get_Item;                           // 0x0058(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	class APawn*                                  CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_2;           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x01B0(0x0050)(HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Marker_Visible_Visible;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade;          // 0x0220(0x00D8)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           K2Node_MakeStruct_S_CustomMapMarker_ContextUI;     // 0x0300(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_GetPlayerPos) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_GetPlayerPos");
static_assert(sizeof(UI_ZoomableLevelMap_C_GetPlayerPos) == 0x0003F0, "Wrong size on UI_ZoomableLevelMap_C_GetPlayerPos");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, ActivePlayersMarkers) == 0x000000, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::ActivePlayersMarkers' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, ActiveMarkers) == 0x000010, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::ActiveMarkers' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000020, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_X) == 0x000038, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Y) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Z) == 0x000040, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_X_1) == 0x000044, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Z_1) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, Temp_int_Array_Index_Variable) == 0x000050, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Array_Get_Item) == 0x000058, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, K2Node_DynamicCast_AsHuman_Character) == 0x000148, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000158, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_GetIsDead_ReturnValue) == 0x000160, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Not_PreBool_ReturnValue) == 0x000161, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000162, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_IsValid_ReturnValue) == 0x000163, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000164, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_X_2) == 0x000170, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Y_2) == 0x000174, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Z_2) == 0x000178, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_GetBaseAimRotation_ReturnValue) == 0x00017C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_NormalizeToRange_ReturnValue) == 0x000188, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x00018C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000198, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakRotator_Roll) == 0x00019C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakRotator_Pitch) == 0x0001A0, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakRotator_Yaw) == 0x0001A4, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_NormalizeToRange_ReturnValue_2) == 0x0001A8, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_NormalizeToRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, K2Node_MakeStruct_S_CustomMapMarker) == 0x0001B0, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_MakeVector_ReturnValue) == 0x000200, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Is_Marker_Visible_Visible) == 0x00020C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Is_Marker_Visible_Visible' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_X_3) == 0x000210, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Y_3) == 0x000214, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BreakVector_Z_3) == 0x000218, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_BooleanAND_ReturnValue) == 0x00021C, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, K2Node_MakeStruct_S_CustomMapMarker_Fade) == 0x000220, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::K2Node_MakeStruct_S_CustomMapMarker_Fade' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002F8, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, K2Node_MakeStruct_S_CustomMapMarker_ContextUI) == 0x000300, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::K2Node_MakeStruct_S_CustomMapMarker_ContextUI' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetPlayerPos, CallFunc_Array_Add_ReturnValue) == 0x0003E8, "Member 'UI_ZoomableLevelMap_C_GetPlayerPos::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AddMarkerToMap
// 0x00B0 (0x00B0 - 0x0000)
struct UI_ZoomableLevelMap_C_AddMarkerToMap final
{
public:
	struct FS_CustomMapMarker                     CustomMapMarkerIcon;                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Marker_Visible_Visible;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x005C(0x0010)(NoDestructor)
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue;            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_AddMarkerToMap) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_AddMarkerToMap");
static_assert(sizeof(UI_ZoomableLevelMap_C_AddMarkerToMap) == 0x0000B0, "Wrong size on UI_ZoomableLevelMap_C_AddMarkerToMap");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, CustomMapMarkerIcon) == 0x000000, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::CustomMapMarkerIcon' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, Image) == 0x000050, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::Image' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, CallFunc_Is_Marker_Visible_Visible) == 0x000058, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::CallFunc_Is_Marker_Visible_Visible' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, K2Node_MakeStruct_Anchors) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, CallFunc_GetMapMarkerColor_ReturnValue) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::CallFunc_GetMapMarkerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, K2Node_MakeStruct_Margin) == 0x00007C, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, Temp_int_Variable) == 0x00008C, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, Temp_int_Variable_1) == 0x000090, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, Temp_bool_Variable) == 0x000094, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, Temp_byte_Variable) == 0x000095, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, K2Node_Select_Default) == 0x000098, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, Temp_byte_Variable_1) == 0x00009C, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, Temp_bool_Variable_1) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AddMarkerToMap, K2Node_Select_Default_1) == 0x0000A9, "Member 'UI_ZoomableLevelMap_C_AddMarkerToMap::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.InitMap
// 0x02B8 (0x02B8 - 0x0000)
struct UI_ZoomableLevelMap_C_InitMap final
{
public:
	struct FVector                                RelativeCornersOffset;                             // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_C*                        K2Node_DynamicCast_AsBP_Game_State;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_POIManagerComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_C*                        K2Node_DynamicCast_AsBP_Game_State_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCompassRotator_Compass_Rotator;        // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCompassRotator_Landscape_Rotator;      // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCompassRotator_Valid_Landscape;        // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CompasLevelSetting_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x01D0(0x0010)(ReferenceParm)
	TArray<class ABP_MapCorner_C*>                CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x01E0(0x0010)(ReferenceParm)
	class ABP_CompasLevelSetting_C*               CallFunc_Array_Get_Item_2;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item_3;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCompassRotator_Compass_Rotator_1;      // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCompassRotator_Landscape_Rotator_1;    // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCompassRotator_Valid_Landscape_1;      // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item_4;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_3;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_4;                       // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_5;                       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_5;                       // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_InitMap) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_InitMap");
static_assert(sizeof(UI_ZoomableLevelMap_C_InitMap) == 0x0002B8, "Wrong size on UI_ZoomableLevelMap_C_InitMap");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, RelativeCornersOffset) == 0x000000, "Member 'UI_ZoomableLevelMap_C_InitMap::RelativeCornersOffset' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetUserControllerId_ReturnValue) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000018, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, K2Node_DynamicCast_AsBP_Game_State) == 0x000020, "Member 'UI_ZoomableLevelMap_C_InitMap::K2Node_DynamicCast_AsBP_Game_State' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_ZoomableLevelMap_C_InitMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000048, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakRotator_Roll) == 0x000054, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakRotator_Pitch) == 0x000058, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakRotator_Yaw) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetGameState_ReturnValue_1) == 0x000060, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, K2Node_DynamicCast_AsBP_Game_State_1) == 0x000070, "Member 'UI_ZoomableLevelMap_C_InitMap::K2Node_DynamicCast_AsBP_Game_State_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'UI_ZoomableLevelMap_C_InitMap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Array_Get_Item) == 0x000080, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_IsValid_ReturnValue_2) == 0x000088, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00008C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_IsValid_ReturnValue_3) == 0x0000AC, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_1) == 0x0000C0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_1) == 0x0000C4, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CC, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMax_ReturnValue) == 0x0000D0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Not_PreBool_ReturnValue) == 0x0000D4, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMin_ReturnValue) == 0x0000D8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMax_ReturnValue_1) == 0x0000DC, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMin_ReturnValue_1) == 0x0000E0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMax_ReturnValue_2) == 0x0000E4, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMin_ReturnValue_2) == 0x0000E8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue) == 0x0000EC, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue_1) == 0x0000F8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetCompassRotator_Compass_Rotator) == 0x000104, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetCompassRotator_Compass_Rotator' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetCompassRotator_Landscape_Rotator) == 0x000110, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetCompassRotator_Landscape_Rotator' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetCompassRotator_Valid_Landscape) == 0x00011C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetCompassRotator_Valid_Landscape' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_ComposeRotators_ReturnValue) == 0x000120, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue_2) == 0x00012C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Add_FloatFloat_ReturnValue) == 0x000138, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_2) == 0x00013C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_2) == 0x000140, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_2) == 0x000144, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000148, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue_3) == 0x00014C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_3) == 0x000158, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_3) == 0x00015C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_3) == 0x000160, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_4) == 0x000164, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_4) == 0x000168, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_4) == 0x00016C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_5) == 0x000170, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_5) == 0x000174, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_5) == 0x000178, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_6) == 0x00017C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_6) == 0x000180, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_6) == 0x000184, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Lerp_ReturnValue) == 0x000188, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Lerp_ReturnValue_1) == 0x00018C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Lerp_ReturnValue_2) == 0x000190, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue_4) == 0x000194, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_7) == 0x0001A0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_7) == 0x0001A4, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_7) == 0x0001A8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Lerp_ReturnValue_3) == 0x0001AC, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Lerp_ReturnValue_4) == 0x0001B0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Lerp_ReturnValue_5) == 0x0001B4, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue_5) == 0x0001B8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_VLerp_ReturnValue) == 0x0001C4, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001D0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0001E0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Array_Get_Item_2) == 0x0001F0, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Array_Get_Item_3) == 0x0001F8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_IsValid_ReturnValue_4) == 0x000200, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_IsValid_ReturnValue_5) == 0x000201, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetCompassRotator_Compass_Rotator_1) == 0x000204, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetCompassRotator_Compass_Rotator_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetCompassRotator_Landscape_Rotator_1) == 0x000210, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetCompassRotator_Landscape_Rotator_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_GetCompassRotator_Valid_Landscape_1) == 0x00021C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_GetCompassRotator_Valid_Landscape_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000220, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_ComposeRotators_ReturnValue_1) == 0x00022C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_8) == 0x000238, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_8) == 0x00023C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_8) == 0x000240, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Array_Get_Item_4) == 0x000248, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_IsValid_ReturnValue_6) == 0x000250, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000254, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_X_9) == 0x000260, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Y_9) == 0x000264, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_BreakVector_Z_9) == 0x000268, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMax_ReturnValue_3) == 0x00026C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMin_ReturnValue_3) == 0x000270, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMax_ReturnValue_4) == 0x000274, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMin_ReturnValue_4) == 0x000278, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMin_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMax_ReturnValue_5) == 0x00027C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_FMin_ReturnValue_5) == 0x000280, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_FMin_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue_6) == 0x000284, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_MakeVector_ReturnValue_7) == 0x000290, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00029C, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_InitMap, CallFunc_Add_VectorVector_ReturnValue) == 0x0002A8, "Member 'UI_ZoomableLevelMap_C_InitMap::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.ResolveCustomMarkerButton
// 0x0050 (0x0050 - 0x0000)
struct UI_ZoomableLevelMap_C_ResolveCustomMarkerButton final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_ResolveCustomMarkerButton");
static_assert(sizeof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton) == 0x000050, "Wrong size on UI_ZoomableLevelMap_C_ResolveCustomMarkerButton");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, Temp_bool_Variable) == 0x000000, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, Temp_struct_Variable) == 0x000004, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, Temp_struct_Variable_1) == 0x000014, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, K2Node_DynamicCast_AsBP_Character_Script) == 0x000030, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, K2Node_Select_Default) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_ResolveCustomMarkerButton, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'UI_ZoomableLevelMap_C_ResolveCustomMarkerButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.LoadMarkers
// 0x0128 (0x0128 - 0x0000)
struct UI_ZoomableLevelMap_C_LoadMarkers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextStorage      CallFunc_Map_Find_Value;                           // 0x0040(0x00E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_LoadMarkers) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_LoadMarkers");
static_assert(sizeof(UI_ZoomableLevelMap_C_LoadMarkers) == 0x000128, "Wrong size on UI_ZoomableLevelMap_C_LoadMarkers");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000010, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_Array_Get_Item) == 0x000030, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_Map_Find_Value) == 0x000040, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_Map_Find_ReturnValue) == 0x000120, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_LoadMarkers, CallFunc_Less_IntInt_ReturnValue) == 0x000121, "Member 'UI_ZoomableLevelMap_C_LoadMarkers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.StartStopDeletingOneUserMarker
// 0x0220 (0x0220 - 0x0000)
struct UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value;                           // 0x0010(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value_1;                         // 0x0100(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IconSize2Tolerance_ReturnValue;           // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IconSize2Tolerance_ReturnValue_1;         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationFocused_ReturnValue;            // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsLocationFocused_Distance;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationFocused_ReturnValue_1;          // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsLocationFocused_Distance_1;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker");
static_assert(sizeof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker) == 0x000220, "Wrong size on UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, Temp_name_Variable) == 0x000000, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, Temp_name_Variable_1) == 0x000008, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_Map_Find_Value) == 0x000010, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_Map_Find_Value_1) == 0x000100, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_Map_Find_ReturnValue_1) == 0x0001E8, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_IconSize2Tolerance_ReturnValue) == 0x0001EC, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_IconSize2Tolerance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_IconSize2Tolerance_ReturnValue_1) == 0x0001F0, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_IconSize2Tolerance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_BreakVector_X) == 0x0001F4, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_BreakVector_Y) == 0x0001F8, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_BreakVector_Z) == 0x0001FC, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_BreakVector_X_1) == 0x000200, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_BreakVector_Y_1) == 0x000204, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_BreakVector_Z_1) == 0x000208, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_IsLocationFocused_ReturnValue) == 0x00020C, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_IsLocationFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_IsLocationFocused_Distance) == 0x000210, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_IsLocationFocused_Distance' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_IsLocationFocused_ReturnValue_1) == 0x000214, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_IsLocationFocused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_IsLocationFocused_Distance_1) == 0x000218, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_IsLocationFocused_Distance_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker, CallFunc_BooleanAND_ReturnValue) == 0x00021C, "Member 'UI_ZoomableLevelMap_C_StartStopDeletingOneUserMarker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CreateOneUserMarker
// 0x0128 (0x0128 - 0x0000)
struct UI_ZoomableLevelMap_C_CreateOneUserMarker final
{
public:
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x0028(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker_1;             // 0x0078(0x0050)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Matches_C*         K2Node_DynamicCast_AsBP_Player_Controller_Matches; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_Optimized           CallFunc_EncodeMapMarker_Map_Marker_Optimized;     // 0x00F0(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_CreateOneUserMarker) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_CreateOneUserMarker");
static_assert(sizeof(UI_ZoomableLevelMap_C_CreateOneUserMarker) == 0x000128, "Wrong size on UI_ZoomableLevelMap_C_CreateOneUserMarker");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, CallFunc_Conv_IntToString_ReturnValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, K2Node_MakeStruct_S_CustomMapMarker) == 0x000028, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, K2Node_MakeStruct_S_CustomMapMarker_1) == 0x000078, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::K2Node_MakeStruct_S_CustomMapMarker_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x0000D0, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, K2Node_DynamicCast_AsBP_Player_Controller_Matches) == 0x0000E0, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::K2Node_DynamicCast_AsBP_Player_Controller_Matches' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreateOneUserMarker, CallFunc_EncodeMapMarker_Map_Marker_Optimized) == 0x0000F0, "Member 'UI_ZoomableLevelMap_C_CreateOneUserMarker::CallFunc_EncodeMapMarker_Map_Marker_Optimized' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.MoveCursor
// 0x00D8 (0x00D8 - 0x0000)
struct UI_ZoomableLevelMap_C_MoveCursor final
{
public:
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_MoveCursor) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_MoveCursor");
static_assert(sizeof(UI_ZoomableLevelMap_C_MoveCursor) == 0x0000D8, "Wrong size on UI_ZoomableLevelMap_C_MoveCursor");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakRotator_Roll) == 0x000000, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakRotator_Pitch) == 0x000004, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakRotator_Yaw) == 0x000008, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y) == 0x000020, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z) == 0x000024, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_1) == 0x000028, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_1) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_2) == 0x000034, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_2) == 0x000038, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_2) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_3) == 0x000040, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_3) == 0x000044, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_3) == 0x000048, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_4) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_4) == 0x000050, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_4) == 0x000054, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_5) == 0x000058, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_5) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_5) == 0x000060, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000068, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_6) == 0x00007C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_6) == 0x000080, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_6) == 0x000084, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_Lerp_ReturnValue_1) == 0x00008C, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_Lerp_ReturnValue_2) == 0x000090, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_MakeVector_ReturnValue_1) == 0x000094, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_7) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_7) == 0x0000A4, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_7) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_FClamp_ReturnValue) == 0x0000AC, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_FClamp_ReturnValue_1) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_FClamp_ReturnValue_2) == 0x0000B4, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_MakeVector_ReturnValue_2) == 0x0000B8, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_X_8) == 0x0000C4, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Y_8) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_BreakVector_Z_8) == 0x0000CC, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_NormalizeToRange_ReturnValue) == 0x0000D0, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_MoveCursor, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0000D4, "Member 'UI_ZoomableLevelMap_C_MoveCursor::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SmoothCenterToPlayersposition
// 0x0030 (0x0030 - 0x0000)
struct UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition final
{
public:
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition");
static_assert(sizeof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition) == 0x000030, "Wrong size on UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_Sqrt_ReturnValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000010, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, CallFunc_Lerp_ReturnValue_1) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition, K2Node_MakeStruct_LinearColor) == 0x000020, "Member 'UI_ZoomableLevelMap_C_SmoothCenterToPlayersposition::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.StartSmoothCentering
// 0x0080 (0x0080 - 0x0000)
struct UI_ZoomableLevelMap_C_StartSmoothCentering final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_2;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_StartSmoothCentering) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_StartSmoothCentering");
static_assert(sizeof(UI_ZoomableLevelMap_C_StartSmoothCentering) == 0x000080, "Wrong size on UI_ZoomableLevelMap_C_StartSmoothCentering");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_X) == 0x000018, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Y) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Z) == 0x000020, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_X_1) == 0x000028, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Y_1) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_X_2) == 0x000034, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Y_2) == 0x000038, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Z_2) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_NormalizeToRange_ReturnValue) == 0x000040, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000044, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_NormalizeToRange_ReturnValue_2) == 0x000048, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_NormalizeToRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_X_3) == 0x000058, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Y_3) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_BreakVector_Z_3) == 0x000060, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_StartSmoothCentering, K2Node_MakeStruct_LinearColor) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_StartSmoothCentering::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Refresh Weather Icons
// 0x0080 (0x0080 - 0x0000)
struct UI_ZoomableLevelMap_C_Refresh_Weather_Icons final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_6;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_7;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_8;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Script_C*                 K2Node_DynamicCast_AsBP_Game_State_Script;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Convert_from_World_to_Game_Rotator_in_Game_Space; // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_Select_Default_1;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_2;                           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_Refresh_Weather_Icons");
static_assert(sizeof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons) == 0x000080, "Wrong size on UI_ZoomableLevelMap_C_Refresh_Weather_Icons");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_int_Variable) == 0x000004, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_1) == 0x000008, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_2) == 0x000009, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_3) == 0x00000A, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_4) == 0x00000B, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_int_Variable_1) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_5) == 0x000010, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_6) == 0x000011, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_7) == 0x000012, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_8) == 0x000013, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_byte_Variable_9) == 0x000014, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, K2Node_DynamicCast_AsBP_Game_State_Script) == 0x000020, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::K2Node_DynamicCast_AsBP_Game_State_Script' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, Temp_bool_Variable) == 0x000029, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_MakeRotator_ReturnValue) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, K2Node_Select_Default) == 0x000038, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_Convert_from_World_to_Game_Rotator_in_Game_Space) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_Convert_from_World_to_Game_Rotator_in_Game_Space' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_FMod_Remainder) == 0x000058, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_FMod_ReturnValue) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_Percent_IntInt_ReturnValue) == 0x000060, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000068, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, K2Node_Select_Default_1) == 0x000070, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, K2Node_Select_Default_2) == 0x000071, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Refresh_Weather_Icons, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000078, "Member 'UI_ZoomableLevelMap_C_Refresh_Weather_Icons::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetMarkerPosition
// 0x00D8 (0x00D8 - 0x0000)
struct UI_ZoomableLevelMap_C_SetMarkerPosition final
{
public:
	class UCanvasPanelSlot*                       Slot_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MarkerLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MarkerSize;                                        // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_2;           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_SetMarkerPosition) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_SetMarkerPosition");
static_assert(sizeof(UI_ZoomableLevelMap_C_SetMarkerPosition) == 0x0000D8, "Wrong size on UI_ZoomableLevelMap_C_SetMarkerPosition");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, Slot_0) == 0x000000, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::Slot_0' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, MarkerLocation) == 0x000008, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::MarkerLocation' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, MarkerSize) == 0x000014, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::MarkerSize' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_X) == 0x000024, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Y) == 0x000028, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Z) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_X_1) == 0x000030, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Y_1) == 0x000034, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Z_1) == 0x000038, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_X_2) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Y_2) == 0x000040, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Z_2) == 0x000044, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_NormalizeToRange_ReturnValue) == 0x000048, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000050, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000058, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_NormalizeToRange_ReturnValue_2) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_NormalizeToRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_X_3) == 0x000074, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Y_3) == 0x000078, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector_Z_3) == 0x00007C, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000080, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000094, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000098, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_GetSize_ReturnValue) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector2D_X) == 0x0000B8, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_BreakVector2D_Y) == 0x0000BC, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Lerp_ReturnValue) == 0x0000C0, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Lerp_ReturnValue_1) == 0x0000C4, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetMarkerPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x0000D0, "Member 'UI_ZoomableLevelMap_C_SetMarkerPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.IsLocationFocused
// 0x0030 (0x0030 - 0x0000)
struct UI_ZoomableLevelMap_C_IsLocationFocused final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ErrorTolerance;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Distance;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_IsLocationFocused) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_IsLocationFocused");
static_assert(sizeof(UI_ZoomableLevelMap_C_IsLocationFocused) == 0x000030, "Wrong size on UI_ZoomableLevelMap_C_IsLocationFocused");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, X) == 0x000000, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, Y) == 0x000004, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, ErrorTolerance) == 0x000008, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::ErrorTolerance' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, ReturnValue) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, Distance) == 0x000010, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::Distance' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, CallFunc_BreakVector_X) == 0x000014, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, CallFunc_BreakVector_Y) == 0x000018, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, CallFunc_BreakVector_Z) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000024, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, K2Node_MathExpression_ReturnValue) == 0x000028, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IsLocationFocused, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_IsLocationFocused::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Pixel2Meter
// 0x0070 (0x0070 - 0x0000)
struct UI_ZoomableLevelMap_C_Pixel2Meter final
{
public:
	float                                         Pixel;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Meter;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Hypotenuse_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Hypotenuse_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Pixel2Meter) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_Pixel2Meter");
static_assert(sizeof(UI_ZoomableLevelMap_C_Pixel2Meter) == 0x000070, "Wrong size on UI_ZoomableLevelMap_C_Pixel2Meter");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, Pixel) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::Pixel' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, Meter) == 0x000004, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::Meter' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_GetSize_ReturnValue) == 0x000018, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_MakeVector2D_ReturnValue_1) == 0x000028, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000044, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_BreakVector_X) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_BreakVector_Y) == 0x000050, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_BreakVector_Z) == 0x000054, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_BreakVector2D_X) == 0x000058, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_BreakVector2D_Y) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_Hypotenuse_ReturnValue) == 0x000060, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_Hypotenuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_Hypotenuse_ReturnValue_1) == 0x000064, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_Hypotenuse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pixel2Meter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_Pixel2Meter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Meter2Pixel
// 0x0070 (0x0070 - 0x0000)
struct UI_ZoomableLevelMap_C_Meter2Pixel final
{
public:
	float                                         Meter;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pixel;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Hypotenuse_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Hypotenuse_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Meter2Pixel) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_Meter2Pixel");
static_assert(sizeof(UI_ZoomableLevelMap_C_Meter2Pixel) == 0x000070, "Wrong size on UI_ZoomableLevelMap_C_Meter2Pixel");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, Meter) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::Meter' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, Pixel) == 0x000004, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::Pixel' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_GetSize_ReturnValue) == 0x000018, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_MakeVector2D_ReturnValue_1) == 0x000028, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000044, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_BreakVector_X) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_BreakVector_Y) == 0x000050, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_BreakVector_Z) == 0x000054, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_BreakVector2D_X) == 0x000058, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_BreakVector2D_Y) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_Hypotenuse_ReturnValue) == 0x000060, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_Hypotenuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_Hypotenuse_ReturnValue_1) == 0x000064, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_Hypotenuse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Meter2Pixel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_Meter2Pixel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.IconSize2Tolerance
// 0x003C (0x003C - 0x0000)
struct UI_ZoomableLevelMap_C_IconSize2Tolerance final
{
public:
	struct FVector2D                              InVec;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealWorldSize;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Hypotenuse_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Pixel2Meter_Meter;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Pixel2Meter_Meter_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaleForMarkers_Scale;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Hypotenuse_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_IconSize2Tolerance) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_IconSize2Tolerance");
static_assert(sizeof(UI_ZoomableLevelMap_C_IconSize2Tolerance) == 0x00003C, "Wrong size on UI_ZoomableLevelMap_C_IconSize2Tolerance");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, InVec) == 0x000000, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::InVec' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, IsRealWorldSize) == 0x000008, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::IsRealWorldSize' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, ReturnValue) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, Temp_bool_Variable) == 0x000010, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_BreakVector2D_X) == 0x000014, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_Hypotenuse_ReturnValue) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_Hypotenuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_Pixel2Meter_Meter) == 0x000020, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_Pixel2Meter_Meter' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_Pixel2Meter_Meter_1) == 0x000024, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_Pixel2Meter_Meter_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_GetScaleForMarkers_Scale) == 0x000028, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_GetScaleForMarkers_Scale' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_Hypotenuse_ReturnValue_1) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_Hypotenuse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, K2Node_Select_Default) == 0x000034, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_IconSize2Tolerance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'UI_ZoomableLevelMap_C_IconSize2Tolerance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.GetScaleForMarkers
// 0x0008 (0x0008 - 0x0000)
struct UI_ZoomableLevelMap_C_GetScaleForMarkers final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_GetScaleForMarkers) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_GetScaleForMarkers");
static_assert(sizeof(UI_ZoomableLevelMap_C_GetScaleForMarkers) == 0x000008, "Wrong size on UI_ZoomableLevelMap_C_GetScaleForMarkers");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetScaleForMarkers, Scale) == 0x000000, "Member 'UI_ZoomableLevelMap_C_GetScaleForMarkers::Scale' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetScaleForMarkers, CallFunc_Sqrt_ReturnValue) == 0x000004, "Member 'UI_ZoomableLevelMap_C_GetScaleForMarkers::CallFunc_Sqrt_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Radiation
// 0x00B8 (0x00B8 - 0x0000)
struct UI_ZoomableLevelMap_C_Radiation final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RadiationWave_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWaveLocation_Location;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAxis_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_2;           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Radiation) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_Radiation");
static_assert(sizeof(UI_ZoomableLevelMap_C_Radiation) == 0x0000B8, "Wrong size on UI_ZoomableLevelMap_C_Radiation");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Radiation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UI_ZoomableLevelMap_C_Radiation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_Array_Get_Item) == 0x000018, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_X) == 0x000020, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Y) == 0x000024, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Z) == 0x000028, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_GetWaveLocation_Location) == 0x000044, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_GetWaveLocation_Location' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_ClampAxis_ReturnValue) == 0x000050, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_ClampAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_X_1) == 0x000054, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Z_1) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_X_2) == 0x000074, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Y_2) == 0x000078, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Z_2) == 0x00007C, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_NormalizeToRange_ReturnValue) == 0x000080, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000084, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_NormalizeToRange_ReturnValue_2) == 0x000088, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_NormalizeToRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_X_3) == 0x000098, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Y_3) == 0x00009C, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, CallFunc_BreakVector_Z_3) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_Radiation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Radiation, K2Node_MakeStruct_LinearColor) == 0x0000A4, "Member 'UI_ZoomableLevelMap_C_Radiation::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CreatePlayersMarkers
// 0x05F8 (0x05F8 - 0x0000)
struct UI_ZoomableLevelMap_C_CreatePlayersMarkers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRichPlayerNicknameWidget_ReturnValue;  // 0x0010(0x0018)()
	class FText                                   CallFunc_GetRichPlayerNicknameWidget_ReturnValue_1; // 0x0028(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00A0(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue_1;                // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UConsoleEvents*                         CallFunc_GetConsoleEvents_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserLoggedIn_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00F0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0040)(HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x0160(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade;          // 0x01C0(0x00D8)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0298(0x0018)()
	struct FS_CustomMapMarker_ContextUI           K2Node_MakeStruct_S_CustomMapMarker_ContextUI;     // 0x02B0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_1;            // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              CallFunc_FindTeammates_TeammatesPlayerStates;      // 0x03B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker_1;             // 0x03E0(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade_1;        // 0x0430(0x00D8)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1;   // 0x0508(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_CreatePlayersMarkers) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_CreatePlayersMarkers");
static_assert(sizeof(UI_ZoomableLevelMap_C_CreatePlayersMarkers) == 0x0005F8, "Wrong size on UI_ZoomableLevelMap_C_CreatePlayersMarkers");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_GetRichPlayerNicknameWidget_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_GetRichPlayerNicknameWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_GetRichPlayerNicknameWidget_ReturnValue_1) == 0x000028, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_GetRichPlayerNicknameWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_DynamicCast_AsBP_Player_State) == 0x000088, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000098, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, Temp_text_Variable) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, Temp_bool_Variable) == 0x0000BC, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_SpawnObject_ReturnValue) == 0x0000C0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_SpawnObject_ReturnValue_1) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000D0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000D8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_GetConsoleEvents_ReturnValue) == 0x0000E0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_GetConsoleEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_IsUserLoggedIn_ReturnValue) == 0x0000E8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_IsUserLoggedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_MakeLiteralText_ReturnValue) == 0x0000F0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_Select_Default) == 0x000108, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_S_CustomMapMarker) == 0x000160, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeArray_Array) == 0x0001B0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_S_CustomMapMarker_Fade) == 0x0001C0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_S_CustomMapMarker_Fade' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Format_ReturnValue) == 0x000298, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_S_CustomMapMarker_ContextUI) == 0x0002B0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_S_CustomMapMarker_ContextUI' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Array_Add_ReturnValue_1) == 0x000398, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0003A0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_DynamicCast_AsBP_Player_State_1) == 0x0003A8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_DynamicCast_AsBP_Player_State_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_DynamicCast_bSuccess_1) == 0x0003B0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_FindTeammates_TeammatesPlayerStates) == 0x0003B8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_FindTeammates_TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Array_Length_ReturnValue) == 0x0003C8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Array_Get_Item) == 0x0003D0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Less_IntInt_ReturnValue) == 0x0003D8, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_S_CustomMapMarker_1) == 0x0003E0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_S_CustomMapMarker_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_S_CustomMapMarker_Fade_1) == 0x000430, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_S_CustomMapMarker_Fade_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1) == 0x000508, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Array_Add_ReturnValue_2) == 0x0005F0, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CreatePlayersMarkers, CallFunc_Array_Add_ReturnValue_3) == 0x0005F4, "Member 'UI_ZoomableLevelMap_C_CreatePlayersMarkers::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CloseMap
// 0x0048 (0x0048 - 0x0000)
struct UI_ZoomableLevelMap_C_CloseMap final
{
public:
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  K2Node_DynamicCast_AsHuman_Player_Character;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapTool*                               CallFunc_GetMapTool_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_CloseMap) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_CloseMap");
static_assert(sizeof(UI_ZoomableLevelMap_C_CloseMap) == 0x000048, "Wrong size on UI_ZoomableLevelMap_C_CloseMap");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, CallFunc_GetFlameController_ReturnValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_CloseMap::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000008, "Member 'UI_ZoomableLevelMap_C_CloseMap::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_CloseMap::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, CallFunc_SpawnSound2D_ReturnValue) == 0x000018, "Member 'UI_ZoomableLevelMap_C_CloseMap::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'UI_ZoomableLevelMap_C_CloseMap::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, K2Node_DynamicCast_AsHuman_Player_Character) == 0x000028, "Member 'UI_ZoomableLevelMap_C_CloseMap::K2Node_DynamicCast_AsHuman_Player_Character' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UI_ZoomableLevelMap_C_CloseMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, CallFunc_GetMapTool_ReturnValue) == 0x000038, "Member 'UI_ZoomableLevelMap_C_CloseMap::CallFunc_GetMapTool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_CloseMap, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UI_ZoomableLevelMap_C_CloseMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdatePositionsOfMarkersAndVisibilityOfLabel
// 0x06B0 (0x06B0 - 0x0000)
struct UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel final
{
public:
	struct FTextBlockStyle                        NicknameStyle;                                     // 0x0000(0x0270)(Edit, BlueprintVisible)
	struct FVector2D                              MarkerCanvasVectorY;                               // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MarkerCanvasVectorX;                               // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MarkerCanvasPos;                                   // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearestDistance;                                   // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NearestIndex;                                      // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_CustomMapMarker_ContextUI>   CallFunc_GetPlayerPos_ActivePlayersMarkers;        // 0x0290(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Array_Get_Item;                           // 0x02B0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IconSize2Tolerance_ReturnValue;           // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocationFocused_ReturnValue;            // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE[0x2];                                      // 0x03AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsLocationFocused_Distance;               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Array_Get_Item_1;                         // 0x03C0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_CustomMapMarker_ContextUI>   CallFunc_Map_Values_Values;                        // 0x04A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x04E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x04F8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMainWindowPositionOnScreen_ReturnValue; // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue_1;            // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue_2;            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Array_Get_Item_2;                         // 0x05C0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Marker_Visible_Visible;                // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x06AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x06AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel");
static_assert(sizeof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel) == 0x0006B0, "Wrong size on UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, NicknameStyle) == 0x000000, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::NicknameStyle' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, MarkerCanvasVectorY) == 0x000270, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::MarkerCanvasVectorY' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, MarkerCanvasVectorX) == 0x000278, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::MarkerCanvasVectorX' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, MarkerCanvasPos) == 0x000280, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::MarkerCanvasPos' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, NearestDistance) == 0x000288, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::NearestDistance' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, NearestIndex) == 0x00028C, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::NearestIndex' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_GetPlayerPos_ActivePlayersMarkers) == 0x000290, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_GetPlayerPos_ActivePlayersMarkers' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Array_Length_ReturnValue) == 0x0002A0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Array_Length_ReturnValue_1) == 0x0002A4, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, Temp_int_Array_Index_Variable) == 0x0002A8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Array_Get_Item) == 0x0002B0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, Temp_int_Loop_Counter_Variable) == 0x000398, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_IconSize2Tolerance_ReturnValue) == 0x00039C, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_IconSize2Tolerance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector_X) == 0x0003A0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector_Y) == 0x0003A4, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector_Z) == 0x0003A8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Less_IntInt_ReturnValue) == 0x0003AC, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_IsLocationFocused_ReturnValue) == 0x0003AD, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_IsLocationFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_IsLocationFocused_Distance) == 0x0003B0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_IsLocationFocused_Distance' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Add_IntInt_ReturnValue) == 0x0003B4, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, Temp_int_Array_Index_Variable_1) == 0x0003B8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Array_Get_Item_1) == 0x0003C0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Map_Values_Values) == 0x0004A8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0004B8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_IsValid_ReturnValue) == 0x0004C0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Conv_TextToString_ReturnValue) == 0x0004C8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_X) == 0x0004D8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_Y) == 0x0004DC, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_X_1) == 0x0004E0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_Y_1) == 0x0004E4, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_MakeColor_ReturnValue) == 0x0004E8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_GetCachedGeometry_ReturnValue) == 0x0004F8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_LocalToAbsolute_ReturnValue) == 0x000530, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_GetLocalSize_ReturnValue) == 0x000538, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_GetMainWindowPositionOnScreen_ReturnValue) == 0x000540, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_GetMainWindowPositionOnScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_X_2) == 0x000548, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_Y_2) == 0x00054C, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000550, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_MakeVector2D_ReturnValue) == 0x000558, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_LocalToAbsolute_ReturnValue_1) == 0x000560, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_LocalToAbsolute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_MakeVector2D_ReturnValue_1) == 0x000568, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000570, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_LocalToAbsolute_ReturnValue_2) == 0x000578, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_LocalToAbsolute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x000580, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_X_3) == 0x000588, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_BreakVector2D_Y_3) == 0x00058C, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_MakeColor_ReturnValue_1) == 0x000590, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, Temp_int_Loop_Counter_Variable_1) == 0x0005A0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005A4, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Add_IntInt_ReturnValue_1) == 0x0005A8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0005B0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0005B8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Array_Get_Item_2) == 0x0005C0, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0006A8, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Is_Marker_Visible_Visible) == 0x0006A9, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Is_Marker_Visible_Visible' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_IsValid_ReturnValue_1) == 0x0006AA, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Not_PreBool_ReturnValue) == 0x0006AB, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel, CallFunc_Less_FloatFloat_ReturnValue) == 0x0006AC, "Member 'UI_ZoomableLevelMap_C_UpdatePositionsOfMarkersAndVisibilityOfLabel::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SelectCustomMarkerForTeams
// 0x0068 (0x0068 - 0x0000)
struct UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams final
{
public:
	int32                                         IndexInGroup;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInGroup_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOrderInGroup_Index;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams");
static_assert(sizeof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams) == 0x000068, "Wrong size on UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, IndexInGroup) == 0x000000, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::IndexInGroup' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, Temp_int_Variable) == 0x000004, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, Temp_object_Variable) == 0x000008, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, Temp_object_Variable_1) == 0x000010, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, Temp_object_Variable_2) == 0x000018, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, Temp_object_Variable_3) == 0x000020, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, Temp_object_Variable_4) == 0x000028, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, K2Node_DynamicCast_AsTexture_2D) == 0x000030, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, K2Node_DynamicCast_AsBP_Player_State) == 0x000048, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, CallFunc_IsInGroup_ReturnValue) == 0x000051, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::CallFunc_IsInGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, CallFunc_GetOrderInGroup_Index) == 0x000054, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::CallFunc_GetOrderInGroup_Index' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, CallFunc_Clamp_ReturnValue) == 0x000058, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams, K2Node_Select_Default) == 0x000060, "Member 'UI_ZoomableLevelMap_C_SelectCustomMarkerForTeams::K2Node_Select_Default' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AutoZoom
// 0x0003 (0x0003 - 0x0000)
struct UI_ZoomableLevelMap_C_AutoZoom final
{
public:
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_AutoZoom) == 0x000001, "Wrong alignment on UI_ZoomableLevelMap_C_AutoZoom");
static_assert(sizeof(UI_ZoomableLevelMap_C_AutoZoom) == 0x000003, "Wrong size on UI_ZoomableLevelMap_C_AutoZoom");
static_assert(offsetof(UI_ZoomableLevelMap_C_AutoZoom, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_AutoZoom::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AutoZoom, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'UI_ZoomableLevelMap_C_AutoZoom::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_AutoZoom, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000002, "Member 'UI_ZoomableLevelMap_C_AutoZoom::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Pan
// 0x0040 (0x0040 - 0x0000)
struct UI_ZoomableLevelMap_C_Pan final
{
public:
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_1;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_2;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentPointerInfo_X;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentPointerInfo_Y;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentPointerInfo_IsHoveringMap;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentPointerInfo_IsTouch;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch;   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Pan) == 0x000004, "Wrong alignment on UI_ZoomableLevelMap_C_Pan");
static_assert(sizeof(UI_ZoomableLevelMap_C_Pan) == 0x000040, "Wrong size on UI_ZoomableLevelMap_C_Pan");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_IsPlatformGroupDesktop_ReturnValue_1) == 0x000001, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_IsPlatformGroupDesktop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_IsPlatformGroupDesktop_ReturnValue_2) == 0x000002, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_IsPlatformGroupDesktop_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_SelectFloat_ReturnValue_1) == 0x000008, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_GetCurrentPointerInfo_X) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_GetCurrentPointerInfo_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_GetCurrentPointerInfo_Y) == 0x000010, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_GetCurrentPointerInfo_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_GetCurrentPointerInfo_IsHoveringMap) == 0x000014, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_GetCurrentPointerInfo_IsHoveringMap' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_GetCurrentPointerInfo_IsTouch) == 0x000015, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_GetCurrentPointerInfo_IsTouch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch) == 0x000016, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_GetCurrentPointerInfo_IsTwoFingerTouch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_SelectFloat_ReturnValue_2) == 0x000018, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000030, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000034, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000038, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Pan, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_Pan::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.GetCurrentPointerInfo
// 0x0130 (0x0130 - 0x0000)
struct UI_ZoomableLevelMap_C_GetCurrentPointerInfo final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHoveringMap;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsTouch;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsTwoFingerTouch;                                  // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0058(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition_1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition_1;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition_2;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition_2;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition_3;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition_3;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputTouchState_LocationX;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputTouchState_LocationY;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInputTouchState_bIsCurrentlyPressed;   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInputTouchState_LocationX_1;           // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputTouchState_LocationY_1;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInputTouchState_bIsCurrentlyPressed_1; // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_GetCurrentPointerInfo");
static_assert(sizeof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo) == 0x000130, "Wrong size on UI_ZoomableLevelMap_C_GetCurrentPointerInfo");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, X) == 0x000000, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, Y) == 0x000004, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, IsHoveringMap) == 0x000008, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::IsHoveringMap' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, IsTouch) == 0x000009, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::IsTouch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, IsTwoFingerTouch) == 0x00000A, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::IsTwoFingerTouch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetCurrentPlatform_ReturnValue) == 0x00000B, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_PixelPosition) == 0x000048, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_ViewportPosition) == 0x000050, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000058, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetLocalSize_ReturnValue) == 0x000090, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_PixelPosition_1) == 0x000098, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_PixelPosition_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_ViewportPosition_1) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_ViewportPosition_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_PixelPosition_2) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_PixelPosition_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_ViewportPosition_2) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_ViewportPosition_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BreakVector2D_X) == 0x0000B8, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BreakVector2D_Y) == 0x0000BC, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000C0, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetLocalSize_ReturnValue_1) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BreakVector2D_X_1) == 0x0000D0, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BreakVector2D_Y_1) == 0x0000D4, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_PixelPosition_3) == 0x0000D8, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_PixelPosition_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_LocalToViewport_ViewportPosition_3) == 0x0000E0, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_LocalToViewport_ViewportPosition_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000E8, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BreakVector2D_X_2) == 0x0000F0, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BreakVector2D_Y_2) == 0x0000F4, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetInputTouchState_LocationX) == 0x0000F8, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetInputTouchState_LocationX' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetInputTouchState_LocationY) == 0x0000FC, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetInputTouchState_LocationY' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetInputTouchState_bIsCurrentlyPressed) == 0x000100, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetInputTouchState_bIsCurrentlyPressed' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000104, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetMousePosition_LocationX) == 0x000108, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetMousePosition_LocationY) == 0x00010C, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetMousePosition_ReturnValue) == 0x000110, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetInputTouchState_LocationX_1) == 0x000114, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetInputTouchState_LocationX_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetInputTouchState_LocationY_1) == 0x000118, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetInputTouchState_LocationY_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_GetInputTouchState_bIsCurrentlyPressed_1) == 0x00011C, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_GetInputTouchState_bIsCurrentlyPressed_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_SelectFloat_ReturnValue) == 0x000120, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000125, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_SelectFloat_ReturnValue_1) == 0x000128, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x00012C, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_GetCurrentPointerInfo, CallFunc_BooleanAND_ReturnValue_1) == 0x00012D, "Member 'UI_ZoomableLevelMap_C_GetCurrentPointerInfo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdateMarker
// 0x0130 (0x0130 - 0x0000)
struct UI_ZoomableLevelMap_C_UpdateMarker final
{
public:
	class UImage*                                 ImageWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tint;                                              // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Image;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ImageSize;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tilt;                                              // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RealWorldSize;                                     // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Meter2Pixel_Pixel;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Meter2Pixel_Pixel_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_2;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_UpdateMarker) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_UpdateMarker");
static_assert(sizeof(UI_ZoomableLevelMap_C_UpdateMarker) == 0x000130, "Wrong size on UI_ZoomableLevelMap_C_UpdateMarker");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, ImageWidget) == 0x000000, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::ImageWidget' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Location) == 0x000008, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Location' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Tint) == 0x000014, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Tint' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Image) == 0x000028, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Image' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, ImageSize) == 0x000030, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::ImageSize' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Tilt) == 0x000038, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Tilt' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, RealWorldSize) == 0x00003C, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::RealWorldSize' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector2D_X) == 0x000040, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_Meter2Pixel_Pixel) == 0x000048, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_Meter2Pixel_Pixel' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_Meter2Pixel_Pixel_1) == 0x00004C, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_Meter2Pixel_Pixel_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_X) == 0x000050, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Y) == 0x000054, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Z) == 0x000058, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_MakeVector2D_ReturnValue) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000080, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000088, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_MakeVector2D_ReturnValue_1) == 0x00008C, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_MakeVector2D_ReturnValue_2) == 0x000094, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x0000A0, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_GetSize_ReturnValue) == 0x0000AC, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_X_1) == 0x0000B4, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Y_1) == 0x0000B8, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Z_1) == 0x0000BC, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000C0, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_X_2) == 0x0000D0, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Y_2) == 0x0000D4, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Z_2) == 0x0000D8, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Temp_bool_Variable) == 0x0000DC, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_NormalizeToRange_ReturnValue) == 0x0000E0, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0000E4, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, K2Node_Select_Default) == 0x0000E8, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_NormalizeToRange_ReturnValue_2) == 0x0000F0, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_NormalizeToRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000F4, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_MakeVector_ReturnValue) == 0x0000FC, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector2D_X_1) == 0x000108, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector2D_Y_1) == 0x00010C, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_X_3) == 0x000110, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Y_3) == 0x000114, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, CallFunc_BreakVector_Z_3) == 0x000118, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Temp_float_Variable) == 0x00011C, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Temp_float_Variable_1) == 0x000120, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, Temp_bool_Variable_1) == 0x000124, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateMarker, K2Node_Select_Default_1) == 0x000128, "Member 'UI_ZoomableLevelMap_C_UpdateMarker::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.FadeMarkers
// 0x0320 (0x0320 - 0x0000)
struct UI_ZoomableLevelMap_C_FadeMarkers final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           Marker;                                            // 0x0008(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x00F0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x00F4(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue;            // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue_1;          // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade;          // 0x0150(0x00D8)(HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           K2Node_SetFieldsInStruct_StructOut;                // 0x0238(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_FadeMarkers) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_FadeMarkers");
static_assert(sizeof(UI_ZoomableLevelMap_C_FadeMarkers) == 0x000320, "Wrong size on UI_ZoomableLevelMap_C_FadeMarkers");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, Curve) == 0x000000, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::Curve' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, Marker) == 0x000008, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::Marker' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, DeltaTime) == 0x0000F0, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::DeltaTime' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, Tag) == 0x0000F4, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::Tag' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, Temp_bool_Variable) == 0x0000FC, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, Temp_float_Variable) == 0x000100, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_Add_FloatFloat_ReturnValue) == 0x000104, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, Temp_bool_Variable_1) == 0x000108, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00010C, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000110, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_GetFloatValue_ReturnValue) == 0x000114, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_Subtract_IntInt_ReturnValue) == 0x000118, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_GetMapMarkerColor_ReturnValue) == 0x00011C, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_GetMapMarkerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00012C, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_BooleanAND_ReturnValue) == 0x00012D, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_Lerp_ReturnValue) == 0x000130, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, K2Node_Select_Default) == 0x000134, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, K2Node_Select_Default_1) == 0x000138, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_GetMapMarkerColor_ReturnValue_1) == 0x00013C, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_GetMapMarkerColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, K2Node_MakeStruct_S_CustomMapMarker_Fade) == 0x000150, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::K2Node_MakeStruct_S_CustomMapMarker_Fade' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x000228, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_FadeMarkers, K2Node_SetFieldsInStruct_StructOut) == 0x000238, "Member 'UI_ZoomableLevelMap_C_FadeMarkers::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdatePOI
// 0x0118 (0x0118 - 0x0000)
struct UI_ZoomableLevelMap_C_UpdatePOI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
};
static_assert(alignof(UI_ZoomableLevelMap_C_UpdatePOI) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_UpdatePOI");
static_assert(sizeof(UI_ZoomableLevelMap_C_UpdatePOI) == 0x000118, "Wrong size on UI_ZoomableLevelMap_C_UpdatePOI");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, CallFunc_Array_Length_ReturnValue_1) == 0x000008, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, K2Node_MakeArray_Array) == 0x0000F0, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdatePOI, CallFunc_Format_ReturnValue) == 0x000100, "Member 'UI_ZoomableLevelMap_C_UpdatePOI::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetOnScreenPosition
// 0x0220 (0x0220 - 0x0000)
struct UI_ZoomableLevelMap_C_SetOnScreenPosition final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShadowOverlayScale;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DesiredPosition;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               DesiredAnchors;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  K2Node_DynamicCast_AsHuman_Player_Character;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraManagerComponent*                K2Node_DynamicCast_AsCamera_Manager_Component;     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0070(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0080(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors_2;                       // 0x00BC(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_3;                       // 0x00CC(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_9;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_10;                           // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_11;                           // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors_4;                       // 0x0108(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_5;                       // 0x0118(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors_6;                       // 0x012C(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_7;                       // 0x013C(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_Select_Default;                             // 0x0158(0x0010)(NoDestructor)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_12;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_Select_Default_3;                           // 0x0180(0x0010)(NoDestructor)
	struct FVector2D                              Temp_struct_Variable_13;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_5;                           // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_6;                           // 0x01AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_Select_Default_7;                           // 0x01B4(0x0010)(NoDestructor)
	struct FVector2D                              Temp_struct_Variable_14;                           // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_15;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_8;                           // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_9;                           // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_10;                          // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_Select_Default_11;                          // 0x01FC(0x0010)(NoDestructor)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ZoomableLevelMap_C_SetOnScreenPosition) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_SetOnScreenPosition");
static_assert(sizeof(UI_ZoomableLevelMap_C_SetOnScreenPosition) == 0x000220, "Wrong size on UI_ZoomableLevelMap_C_SetOnScreenPosition");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, PlayerController) == 0x000000, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::PlayerController' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, ShadowOverlayScale) == 0x000008, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::ShadowOverlayScale' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, DesiredPosition) == 0x000010, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::DesiredPosition' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, DesiredAnchors) == 0x000018, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::DesiredAnchors' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable) == 0x000028, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_DynamicCast_AsHuman_Player_Character) == 0x000038, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_DynamicCast_AsHuman_Player_Character' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_1) == 0x000044, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_DynamicCast_AsCamera_Manager_Component) == 0x000050, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_DynamicCast_AsCamera_Manager_Component' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable) == 0x000059, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_2) == 0x00005C, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_3) == 0x000064, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_1) == 0x00006C, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors) == 0x000070, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors_1) == 0x000080, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_2) == 0x000090, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_4) == 0x000094, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_5) == 0x00009C, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_3) == 0x0000A4, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_6) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_7) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_4) == 0x0000B8, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors_2) == 0x0000BC, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors_3) == 0x0000CC, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_5) == 0x0000DC, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_8) == 0x0000E0, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_9) == 0x0000E8, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_6) == 0x0000F0, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_10) == 0x0000F4, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_11) == 0x0000FC, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_7) == 0x000104, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors_4) == 0x000108, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors_5) == 0x000118, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_8) == 0x000128, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors_6) == 0x00012C, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_MakeStruct_Anchors_7) == 0x00013C, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_MakeStruct_Anchors_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_9) == 0x00014C, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000150, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default) == 0x000158, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_1) == 0x000168, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_2) == 0x000170, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_12) == 0x000178, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_3) == 0x000180, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_13) == 0x000190, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_10) == 0x000198, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_4) == 0x00019C, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_5) == 0x0001A4, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_6) == 0x0001AC, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_7) == 0x0001B4, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_14) == 0x0001C4, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0001D0, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_struct_Variable_15) == 0x0001D8, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, Temp_bool_Variable_11) == 0x0001E0, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_8) == 0x0001E4, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_9) == 0x0001EC, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_10) == 0x0001F4, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, K2Node_Select_Default_11) == 0x0001FC, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000210, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_SetOnScreenPosition, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000218, "Member 'UI_ZoomableLevelMap_C_SetOnScreenPosition::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Is Marker Visible
// 0x0140 (0x0140 - 0x0000)
struct UI_ZoomableLevelMap_C_Is_Marker_Visible final
{
public:
	struct FS_CustomMapMarker                     Marker_Settings;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EMapMarkerType>                          Always_Visible_Markers;                            // 0x0058(0x0050)(Edit, BlueprintVisible)
	bool                                          CallFunc_Is_Marker_Jammed_Is_Jammed;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EMapMarkerType>                          K2Node_MakeVariable_MakeVariableOutput;            // 0x00C8(0x0050)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FogOfWarComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Location_Discovered_Discovered;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Is_Marker_Visible) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_Is_Marker_Visible");
static_assert(sizeof(UI_ZoomableLevelMap_C_Is_Marker_Visible) == 0x000140, "Wrong size on UI_ZoomableLevelMap_C_Is_Marker_Visible");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, Marker_Settings) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::Marker_Settings' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, Visible) == 0x000050, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::Visible' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, Always_Visible_Markers) == 0x000058, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::Always_Visible_Markers' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_Is_Marker_Jammed_Is_Jammed) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_Is_Marker_Jammed_Is_Jammed' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_Contains_ReturnValue) == 0x0000C1, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, K2Node_MakeVariable_MakeVariableOutput) == 0x0000C8, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_BooleanAND_ReturnValue) == 0x000118, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_GetUserControllerId_ReturnValue) == 0x00011C, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000120, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_Set_Contains_ReturnValue) == 0x000129, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_BooleanOR_ReturnValue) == 0x00012A, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_GetComponentByClass_ReturnValue) == 0x000130, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_Is_Location_Discovered_Discovered) == 0x000138, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_Is_Location_Discovered_Discovered' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Visible, CallFunc_IsValid_ReturnValue_1) == 0x000139, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Visible::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Is Marker Jammed
// 0x0128 (0x0128 - 0x0000)
struct UI_ZoomableLevelMap_C_Is_Marker_Jammed final
{
public:
	struct FS_CustomMapMarker                     Marker;                                            // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Is_Jammed;                                         // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EMapMarkerType>                          Jammed_Marker_Types;                               // 0x0058(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TSet<EMapMarkerType>                          K2Node_MakeVariable_MakeVariableOutput;            // 0x00A8(0x0050)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_Is_Marker_Jammed) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_Is_Marker_Jammed");
static_assert(sizeof(UI_ZoomableLevelMap_C_Is_Marker_Jammed) == 0x000128, "Wrong size on UI_ZoomableLevelMap_C_Is_Marker_Jammed");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, Marker) == 0x000000, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::Marker' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, Is_Jammed) == 0x000050, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::Is_Jammed' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, Jammed_Marker_Types) == 0x000058, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::Jammed_Marker_Types' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, K2Node_MakeVariable_MakeVariableOutput) == 0x0000A8, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000F8, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, CallFunc_K2_GetPawn_ReturnValue) == 0x000108, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, K2Node_DynamicCast_AsBP_Character_Script) == 0x000118, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, K2Node_SwitchEnum_CmpSuccess) == 0x000121, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_Is_Marker_Jammed, CallFunc_Set_Contains_ReturnValue) == 0x000122, "Member 'UI_ZoomableLevelMap_C_Is_Marker_Jammed::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdateCrosshair
// 0x0018 (0x0018 - 0x0000)
struct UI_ZoomableLevelMap_C_UpdateCrosshair final
{
public:
	ECursorMode                                   TargetCrosshair;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ZoomableLevelMap_C_UpdateCrosshair) == 0x000008, "Wrong alignment on UI_ZoomableLevelMap_C_UpdateCrosshair");
static_assert(sizeof(UI_ZoomableLevelMap_C_UpdateCrosshair) == 0x000018, "Wrong size on UI_ZoomableLevelMap_C_UpdateCrosshair");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateCrosshair, TargetCrosshair) == 0x000000, "Member 'UI_ZoomableLevelMap_C_UpdateCrosshair::TargetCrosshair' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateCrosshair, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_ZoomableLevelMap_C_UpdateCrosshair::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_ZoomableLevelMap_C_UpdateCrosshair, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'UI_ZoomableLevelMap_C_UpdateCrosshair::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

