#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChallengeOverview

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "FlameUI_structs.hpp"
#include "E_ChallengeManagerState_structs.hpp"
#include "E_ChallengeSlotState_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ChallengeOverview.UI_ChallengeOverview_C
// 0x0068 (0x0320 - 0x02B8)
class UUI_ChallengeOverview_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade;                                              // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           ChallengeList;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemSimple_C*         UI_ChallengesListItemSimple;                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone_49;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_InputActionWidget;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           Check_Timer;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Anim_Timer;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Hide_Timer;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             Challenge_Overview_Closed;                         // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         PopUp_Duration;                                    // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          LinksToShelterTab;                                 // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChallengeItemCount;                                // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxChallengeItemCount;                             // 0x031C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Challenge_Overview_Closed__DelegateSignature();
	void ExecuteUbergraph_UI_ChallengeOverview(int32 EntryPoint);
	void Enable_Action_Button(class AActor* OverlappedActor, class AActor* OtherActor);
	void Disable_Action_Button(class AActor* OverlappedActor, class AActor* OtherActor);
	void BndEvt__UI_InputActionWidget_K2Node_ComponentBoundEvent_1_OnActionHoldEvent__DelegateSignature();
	void Despawn();
	void Hide();
	void Show();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ChallengeOverview_C">();
	}
	static class UUI_ChallengeOverview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ChallengeOverview_C>();
	}
};
static_assert(alignof(UUI_ChallengeOverview_C) == 0x000008, "Wrong alignment on UUI_ChallengeOverview_C");
static_assert(sizeof(UUI_ChallengeOverview_C) == 0x000320, "Wrong size on UUI_ChallengeOverview_C");
static_assert(offsetof(UUI_ChallengeOverview_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_ChallengeOverview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, Fade) == 0x0002C0, "Member 'UUI_ChallengeOverview_C::Fade' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, ChallengeList) == 0x0002C8, "Member 'UUI_ChallengeOverview_C::ChallengeList' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, UI_ChallengesListItemSimple) == 0x0002D0, "Member 'UUI_ChallengeOverview_C::UI_ChallengesListItemSimple' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, UI_FlameSafezone_49) == 0x0002D8, "Member 'UUI_ChallengeOverview_C::UI_FlameSafezone_49' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, UI_InputActionWidget) == 0x0002E0, "Member 'UUI_ChallengeOverview_C::UI_InputActionWidget' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, Check_Timer) == 0x0002E8, "Member 'UUI_ChallengeOverview_C::Check_Timer' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, Anim_Timer) == 0x0002F0, "Member 'UUI_ChallengeOverview_C::Anim_Timer' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, Hide_Timer) == 0x0002F8, "Member 'UUI_ChallengeOverview_C::Hide_Timer' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, Challenge_Overview_Closed) == 0x000300, "Member 'UUI_ChallengeOverview_C::Challenge_Overview_Closed' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, PopUp_Duration) == 0x000310, "Member 'UUI_ChallengeOverview_C::PopUp_Duration' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, LinksToShelterTab) == 0x000314, "Member 'UUI_ChallengeOverview_C::LinksToShelterTab' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, ChallengeItemCount) == 0x000318, "Member 'UUI_ChallengeOverview_C::ChallengeItemCount' has a wrong offset!");
static_assert(offsetof(UUI_ChallengeOverview_C, MaxChallengeItemCount) == 0x00031C, "Member 'UUI_ChallengeOverview_C::MaxChallengeItemCount' has a wrong offset!");

}

