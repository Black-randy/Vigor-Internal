#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Container_Simple

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_GMComponent_ADM_Container_Base_classes.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C
// 0x00E8 (0x0220 - 0x0138)
class UBP_GMComponent_ADM_Container_Simple_C final : public UBP_GMComponent_ADM_Container_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GMComponent_ADM_Container_Simple_C; // 0x0138(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Air_Drop_Altitude;                                 // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Drop_Zone_Location;                                // 0x0144(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Air_Drop_Timer;                                    // 0x0150(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Time_Between_Aircraft_and_Container_Spawn;         // 0x0158(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IngressToAirdropDistance;                          // 0x015C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Aircraft_Altitude;                                 // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Drop_Zone_Rotation;                                // 0x0164(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMap<ESublevelTheme, class UClass*>           ThemeContainers;                                   // 0x0170(0x0050)(Edit, BlueprintVisible)
	class UClass*                                 DefaultContainers;                                 // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ESublevelTheme, class UClass*>           ThemeAirplanes;                                    // 0x01C8(0x0050)(Edit, BlueprintVisible)
	class UClass*                                 DefaultAirplane;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple(int32 EntryPoint);
	void Spawn_Air_Drop_Aircraft(class ABP_AirDropLocation_C* Drop_Zone_Actor);
	void Initialize_Component();
	void Container_Touched_Down(class ABP_AirDropContainer_Base_C* Container);
	void Spawn_Container();
	void Game_Mode_Toggled(bool Game_Mode_Is_Running);
	void Initialize_Bindings(bool* Success);
	void RandomAircraftFlightPlan(struct FTwoVectors* Ingress_and_Egress_Vectors);
	void GetContainerClass(class UClass** Class_0);
	void GetAirplaneClass(class UClass** Class_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMComponent_ADM_Container_Simple_C">();
	}
	static class UBP_GMComponent_ADM_Container_Simple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GMComponent_ADM_Container_Simple_C>();
	}
};
static_assert(alignof(UBP_GMComponent_ADM_Container_Simple_C) == 0x000008, "Wrong alignment on UBP_GMComponent_ADM_Container_Simple_C");
static_assert(sizeof(UBP_GMComponent_ADM_Container_Simple_C) == 0x000220, "Wrong size on UBP_GMComponent_ADM_Container_Simple_C");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, UberGraphFrame_BP_GMComponent_ADM_Container_Simple_C) == 0x000138, "Member 'UBP_GMComponent_ADM_Container_Simple_C::UberGraphFrame_BP_GMComponent_ADM_Container_Simple_C' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, Air_Drop_Altitude) == 0x000140, "Member 'UBP_GMComponent_ADM_Container_Simple_C::Air_Drop_Altitude' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, Drop_Zone_Location) == 0x000144, "Member 'UBP_GMComponent_ADM_Container_Simple_C::Drop_Zone_Location' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, Air_Drop_Timer) == 0x000150, "Member 'UBP_GMComponent_ADM_Container_Simple_C::Air_Drop_Timer' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, Time_Between_Aircraft_and_Container_Spawn) == 0x000158, "Member 'UBP_GMComponent_ADM_Container_Simple_C::Time_Between_Aircraft_and_Container_Spawn' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, IngressToAirdropDistance) == 0x00015C, "Member 'UBP_GMComponent_ADM_Container_Simple_C::IngressToAirdropDistance' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, Aircraft_Altitude) == 0x000160, "Member 'UBP_GMComponent_ADM_Container_Simple_C::Aircraft_Altitude' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, Drop_Zone_Rotation) == 0x000164, "Member 'UBP_GMComponent_ADM_Container_Simple_C::Drop_Zone_Rotation' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, ThemeContainers) == 0x000170, "Member 'UBP_GMComponent_ADM_Container_Simple_C::ThemeContainers' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, DefaultContainers) == 0x0001C0, "Member 'UBP_GMComponent_ADM_Container_Simple_C::DefaultContainers' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, ThemeAirplanes) == 0x0001C8, "Member 'UBP_GMComponent_ADM_Container_Simple_C::ThemeAirplanes' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Container_Simple_C, DefaultAirplane) == 0x000218, "Member 'UBP_GMComponent_ADM_Container_Simple_C::DefaultAirplane' has a wrong offset!");

}

