#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WeaponInfo

#include "Basic.hpp"

#include "UI_WeaponInfo_classes.hpp"
#include "UI_WeaponInfo_parameters.hpp"


namespace SDK
{

// Function UI_WeaponInfo.UI_WeaponInfo_C.ExecuteUbergraph_UI_WeaponInfo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WeaponInfo_C::ExecuteUbergraph_UI_WeaponInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "ExecuteUbergraph_UI_WeaponInfo");

	Params::UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.OnGameSettingsChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameSaveSettings                GameSettings                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_WeaponInfo_C::OnGameSettingsChanged(const struct FGameSaveSettings& GameSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "OnGameSettingsChanged");

	Params::UI_WeaponInfo_C_OnGameSettingsChanged Parms{};

	Parms.GameSettings = std::move(GameSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.PlayerFiredFullAuto
// (BlueprintCallable, BlueprintEvent)

void UUI_WeaponInfo_C::PlayerFiredFullAuto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "PlayerFiredFullAuto");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.PlayerChangedFireMode
// (BlueprintCallable, BlueprintEvent)

void UUI_WeaponInfo_C::PlayerChangedFireMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "PlayerChangedFireMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.PlayerFiredSingle
// (BlueprintCallable, BlueprintEvent)

void UUI_WeaponInfo_C::PlayerFiredSingle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "PlayerFiredSingle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WeaponInfo_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "Tick");

	Params::UI_WeaponInfo_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_WeaponInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.GetTextAmmoText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UUI_WeaponInfo_C::GetTextAmmoText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "GetTextAmmoText");

	Params::UI_WeaponInfo_C_GetTextAmmoText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.GetTextMagazinesText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UUI_WeaponInfo_C::GetTextMagazinesText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "GetTextMagazinesText");

	Params::UI_WeaponInfo_C_GetTextMagazinesText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.SetWeaponInfoVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_WeaponInfo_C::SetWeaponInfoVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "SetWeaponInfoVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.GetFireModeImage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateBrush UUI_WeaponInfo_C::GetFireModeImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "GetFireModeImage");

	Params::UI_WeaponInfo_C_GetFireModeImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.UpdateShowPermanentlyFromSave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameSaveSettings                GameSettings                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_WeaponInfo_C::UpdateShowPermanentlyFromSave(const struct FGameSaveSettings& GameSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "UpdateShowPermanentlyFromSave");

	Params::UI_WeaponInfo_C_UpdateShowPermanentlyFromSave Parms{};

	Parms.GameSettings = std::move(GameSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.IsShooting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsShootingOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_WeaponInfo_C::IsShooting(bool* IsShootingOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "IsShooting");

	Params::UI_WeaponInfo_C_IsShooting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsShootingOut != nullptr)
		*IsShootingOut = Parms.IsShootingOut;
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.IsChangingFireMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsChangingFMOut                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_WeaponInfo_C::IsChangingFireMode(bool* IsChangingFMOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "IsChangingFireMode");

	Params::UI_WeaponInfo_C_IsChangingFireMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsChangingFMOut != nullptr)
		*IsChangingFMOut = Parms.IsChangingFMOut;
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.HasChangedWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeapon*                          CurrentWeapon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUI_WeaponInfo_C::HasChangedWeapon(class AWeapon* CurrentWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "HasChangedWeapon");

	Params::UI_WeaponInfo_C_HasChangedWeapon Parms{};

	Parms.CurrentWeapon = CurrentWeapon;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_WeaponInfo.UI_WeaponInfo_C.GetWeaponImage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateBrush UUI_WeaponInfo_C::GetWeaponImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponInfo_C", "GetWeaponImage");

	Params::UI_WeaponInfo_C_GetWeaponImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

