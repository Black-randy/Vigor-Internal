#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Crosshair

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Crosshair.UI_Crosshair_C.ExecuteUbergraph_UI_Crosshair
// 0x0158 (0x0158 - 0x0000)
struct UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InterpolateCrosshairDispersion_ReturnValue; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameSaveSettings& GameSettings)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameSaveSettings& GameSettings)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_Character_C*                        CallFunc_GetOwningCharacter_BP_Character;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAimpointWeaponTarget_ReturnValue;      // 0x00A8(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair) == 0x000008, "Wrong alignment on UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair");
static_assert(sizeof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair) == 0x000158, "Wrong size on UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, EntryPoint) == 0x000000, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, Temp_bool_Has_Been_Initd_Variable_1) == 0x000020, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_Event_MyGeometry) == 0x000024, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_InterpolateCrosshairDispersion_ReturnValue) == 0x000060, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_InterpolateCrosshairDispersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_Event_IsDesignTime) == 0x000064, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, Temp_bool_IsClosed_Variable_1) == 0x000065, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000068, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000080, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetOwningCharacter_BP_Character) == 0x000098, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetOwningCharacter_BP_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetController_ReturnValue) == 0x0000A0, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetAimpointWeaponTarget_ReturnValue) == 0x0000A8, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetAimpointWeaponTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_DynamicCast_AsPlayer_Controller) == 0x0000B8, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0000C4, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0000CC, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000D0, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetViewportSize_ReturnValue) == 0x0000D8, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetViewportSize_ReturnValue_1) == 0x0000E0, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_BreakVector2D_X) == 0x0000E8, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_BreakVector2D_Y) == 0x0000EC, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_BreakVector2D_X_1) == 0x0000F0, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_BreakVector2D_Y_1) == 0x0000F4, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F8, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000FC, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000100, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000104, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_MakeVector2D_ReturnValue) == 0x000108, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_MakeVector2D_ReturnValue_1) == 0x000110, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000118, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000120, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000124, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00012C, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000130, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000138, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000140, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_DynamicCast_AsBP_Character_Script) == 0x000148, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Crosshair_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Crosshair_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Crosshair_C_PreConstruct");
static_assert(sizeof(UI_Crosshair_C_PreConstruct) == 0x000001, "Wrong size on UI_Crosshair_C_PreConstruct");
static_assert(offsetof(UI_Crosshair_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Crosshair_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_Crosshair_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_Tick) == 0x000004, "Wrong alignment on UI_Crosshair_C_Tick");
static_assert(sizeof(UI_Crosshair_C_Tick) == 0x00003C, "Wrong size on UI_Crosshair_C_Tick");
static_assert(offsetof(UI_Crosshair_C_Tick, MyGeometry) == 0x000000, "Member 'UI_Crosshair_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_Crosshair_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.GetCurrentDispersion
// 0x0030 (0x0030 - 0x0000)
struct UI_Crosshair_C_GetCurrentDispersion final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        CallFunc_GetOwningCharacter_BP_Character;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectileWeapon*                      K2Node_DynamicCast_AsProjectile_Weapon;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentModifiedDispersion_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Crosshair_C_GetCurrentDispersion) == 0x000008, "Wrong alignment on UI_Crosshair_C_GetCurrentDispersion");
static_assert(sizeof(UI_Crosshair_C_GetCurrentDispersion) == 0x000030, "Wrong size on UI_Crosshair_C_GetCurrentDispersion");
static_assert(offsetof(UI_Crosshair_C_GetCurrentDispersion, ReturnValue) == 0x000000, "Member 'UI_Crosshair_C_GetCurrentDispersion::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetCurrentDispersion, CallFunc_GetOwningCharacter_BP_Character) == 0x000008, "Member 'UI_Crosshair_C_GetCurrentDispersion::CallFunc_GetOwningCharacter_BP_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetCurrentDispersion, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UI_Crosshair_C_GetCurrentDispersion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetCurrentDispersion, K2Node_DynamicCast_AsProjectile_Weapon) == 0x000018, "Member 'UI_Crosshair_C_GetCurrentDispersion::K2Node_DynamicCast_AsProjectile_Weapon' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetCurrentDispersion, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UI_Crosshair_C_GetCurrentDispersion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetCurrentDispersion, CallFunc_GetCurrentModifiedDispersion_ReturnValue) == 0x000024, "Member 'UI_Crosshair_C_GetCurrentDispersion::CallFunc_GetCurrentModifiedDispersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetCurrentDispersion, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'UI_Crosshair_C_GetCurrentDispersion::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetDispersionRenderTransform
// 0x0020 (0x0020 - 0x0000)
struct UI_Crosshair_C_SetDispersionRenderTransform final
{
public:
	float                                         Dispersion;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Mask;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_SetDispersionRenderTransform) == 0x000008, "Wrong alignment on UI_Crosshair_C_SetDispersionRenderTransform");
static_assert(sizeof(UI_Crosshair_C_SetDispersionRenderTransform) == 0x000020, "Wrong size on UI_Crosshair_C_SetDispersionRenderTransform");
static_assert(offsetof(UI_Crosshair_C_SetDispersionRenderTransform, Dispersion) == 0x000000, "Member 'UI_Crosshair_C_SetDispersionRenderTransform::Dispersion' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDispersionRenderTransform, Widget) == 0x000008, "Member 'UI_Crosshair_C_SetDispersionRenderTransform::Widget' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDispersionRenderTransform, Mask) == 0x000010, "Member 'UI_Crosshair_C_SetDispersionRenderTransform::Mask' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDispersionRenderTransform, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000018, "Member 'UI_Crosshair_C_SetDispersionRenderTransform::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.GetOwningCharacter
// 0x0020 (0x0020 - 0x0000)
struct UI_Crosshair_C_GetOwningCharacter final
{
public:
	class ABP_Character_C*                        BP_Character;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Crosshair_C_GetOwningCharacter) == 0x000008, "Wrong alignment on UI_Crosshair_C_GetOwningCharacter");
static_assert(sizeof(UI_Crosshair_C_GetOwningCharacter) == 0x000020, "Wrong size on UI_Crosshair_C_GetOwningCharacter");
static_assert(offsetof(UI_Crosshair_C_GetOwningCharacter, BP_Character) == 0x000000, "Member 'UI_Crosshair_C_GetOwningCharacter::BP_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetOwningCharacter, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'UI_Crosshair_C_GetOwningCharacter::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetOwningCharacter, K2Node_DynamicCast_AsBP_Character) == 0x000010, "Member 'UI_Crosshair_C_GetOwningCharacter::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_GetOwningCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_Crosshair_C_GetOwningCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.ComputeCrosshairTargetDispersion
// 0x0008 (0x0008 - 0x0000)
struct UI_Crosshair_C_ComputeCrosshairTargetDispersion final
{
public:
	float                                         CallFunc_GetCurrentDispersion_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_ComputeCrosshairTargetDispersion) == 0x000004, "Wrong alignment on UI_Crosshair_C_ComputeCrosshairTargetDispersion");
static_assert(sizeof(UI_Crosshair_C_ComputeCrosshairTargetDispersion) == 0x000008, "Wrong size on UI_Crosshair_C_ComputeCrosshairTargetDispersion");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairTargetDispersion, CallFunc_GetCurrentDispersion_ReturnValue) == 0x000000, "Member 'UI_Crosshair_C_ComputeCrosshairTargetDispersion::CallFunc_GetCurrentDispersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairTargetDispersion, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'UI_Crosshair_C_ComputeCrosshairTargetDispersion::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.InterpolateCrosshairDispersion
// 0x000C (0x000C - 0x0000)
struct UI_Crosshair_C_InterpolateCrosshairDispersion final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_InterpolateCrosshairDispersion) == 0x000004, "Wrong alignment on UI_Crosshair_C_InterpolateCrosshairDispersion");
static_assert(sizeof(UI_Crosshair_C_InterpolateCrosshairDispersion) == 0x00000C, "Wrong size on UI_Crosshair_C_InterpolateCrosshairDispersion");
static_assert(offsetof(UI_Crosshair_C_InterpolateCrosshairDispersion, DeltaTime) == 0x000000, "Member 'UI_Crosshair_C_InterpolateCrosshairDispersion::DeltaTime' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_InterpolateCrosshairDispersion, ReturnValue) == 0x000004, "Member 'UI_Crosshair_C_InterpolateCrosshairDispersion::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_InterpolateCrosshairDispersion, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'UI_Crosshair_C_InterpolateCrosshairDispersion::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.UpdateCrosshairRenderTransform
// 0x0004 (0x0004 - 0x0000)
struct UI_Crosshair_C_UpdateCrosshairRenderTransform final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_UpdateCrosshairRenderTransform) == 0x000004, "Wrong alignment on UI_Crosshair_C_UpdateCrosshairRenderTransform");
static_assert(sizeof(UI_Crosshair_C_UpdateCrosshairRenderTransform) == 0x000004, "Wrong size on UI_Crosshair_C_UpdateCrosshairRenderTransform");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairRenderTransform, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'UI_Crosshair_C_UpdateCrosshairRenderTransform::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairColor
// 0x0010 (0x0010 - 0x0000)
struct UI_Crosshair_C_SetCrosshairColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_SetCrosshairColor) == 0x000004, "Wrong alignment on UI_Crosshair_C_SetCrosshairColor");
static_assert(sizeof(UI_Crosshair_C_SetCrosshairColor) == 0x000010, "Wrong size on UI_Crosshair_C_SetCrosshairColor");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairColor, Color) == 0x000000, "Member 'UI_Crosshair_C_SetCrosshairColor::Color' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetDefaultCrosshairSettings
// 0x0088 (0x0088 - 0x0000)
struct UI_Crosshair_C_SetDefaultCrosshairSettings final
{
public:
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_GetOptionsSaveGame_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsSaveGame*                       K2Node_DynamicCast_AsOptions_Save_Game;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameSaveSettings                      CallFunc_GetGameSettings_ReturnValue;              // 0x0020(0x0048)(ConstParm)
	struct FLinearColor                           CallFunc_LinearColorFromHexString_ReturnValue;     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_SetDefaultCrosshairSettings) == 0x000008, "Wrong alignment on UI_Crosshair_C_SetDefaultCrosshairSettings");
static_assert(sizeof(UI_Crosshair_C_SetDefaultCrosshairSettings) == 0x000088, "Wrong size on UI_Crosshair_C_SetDefaultCrosshairSettings");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000000, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_GetOptionsSaveGame_ReturnValue) == 0x000008, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_GetOptionsSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, K2Node_DynamicCast_AsOptions_Save_Game) == 0x000010, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::K2Node_DynamicCast_AsOptions_Save_Game' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_GetGameSettings_ReturnValue) == 0x000020, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_GetGameSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_LinearColorFromHexString_ReturnValue) == 0x000068, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_LinearColorFromHexString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_Lerp_ReturnValue) == 0x000078, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_Lerp_ReturnValue_1) == 0x00007C, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_Round_ReturnValue) == 0x000080, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetDefaultCrosshairSettings, CallFunc_Round_ReturnValue_1) == 0x000084, "Member 'UI_Crosshair_C_SetDefaultCrosshairSettings::CallFunc_Round_ReturnValue_1' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.ComputeCrosshairVisibility
// 0x0450 (0x0450 - 0x0000)
struct UI_Crosshair_C_ComputeCrosshairVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoHiddenCrosshair;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        OwningCharacter;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECameraPositionState                          CallFunc_GetCameraState_ReturnValue;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirearmWeaponConfiguration            CallFunc_GetWeaponData_ReturnValue;                // 0x0020(0x0418)(ConstParm)
	bool                                          CallFunc_IsAimingAffectedByConcussion_ReturnValue; // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43A[0x6];                                      // 0x043A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        CallFunc_GetOwningCharacter_BP_Character;          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Crosshair_C_ComputeCrosshairVisibility) == 0x000008, "Wrong alignment on UI_Crosshair_C_ComputeCrosshairVisibility");
static_assert(sizeof(UI_Crosshair_C_ComputeCrosshairVisibility) == 0x000450, "Wrong size on UI_Crosshair_C_ComputeCrosshairVisibility");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, ReturnValue) == 0x000000, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, NoHiddenCrosshair) == 0x000001, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::NoHiddenCrosshair' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, OwningCharacter) == 0x000008, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::OwningCharacter' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_IsEditor_ReturnValue) == 0x000010, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000014, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_GetCameraState_ReturnValue) == 0x00001B, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_GetCameraState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_IsValid_ReturnValue_2) == 0x00001D, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_GetWeaponData_ReturnValue) == 0x000020, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_GetWeaponData_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_IsAimingAffectedByConcussion_ReturnValue) == 0x000438, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_IsAimingAffectedByConcussion_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_IsSprinting_ReturnValue) == 0x000439, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_GetOwningCharacter_BP_Character) == 0x000440, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_GetOwningCharacter_BP_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ComputeCrosshairVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000448, "Member 'UI_Crosshair_C_ComputeCrosshairVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.UpdateCrosshairVisibility
// 0x0130 (0x0130 - 0x0000)
struct UI_Crosshair_C_UpdateCrosshairVisibility final
{
public:
	bool                                          ArmedState;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CrosshairVisibility;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  K2Node_DynamicCast_AsHuman_Player_Character;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MeleeBase_C*                        K2Node_DynamicCast_AsBP_Melee_Base;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        CallFunc_GetOwningCharacter_BP_Character;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_1;                          // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESlateVisibility                              CallFunc_ComputeCrosshairVisibility_ReturnValue;   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_Select_Default;                             // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UImage*                                 CallFunc_Array_Get_Item_4;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_Select_Default_1;                           // 0x0110(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UImage*                                 CallFunc_Array_Get_Item_5;                         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Crosshair_C_UpdateCrosshairVisibility) == 0x000008, "Wrong alignment on UI_Crosshair_C_UpdateCrosshairVisibility");
static_assert(sizeof(UI_Crosshair_C_UpdateCrosshairVisibility) == 0x000130, "Wrong size on UI_Crosshair_C_UpdateCrosshairVisibility");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, ArmedState) == 0x000000, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::ArmedState' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CrosshairVisibility) == 0x000001, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CrosshairVisibility' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Array_Index_Variable) == 0x000014, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000020, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_DynamicCast_AsHuman_Player_Character) == 0x000028, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_DynamicCast_AsHuman_Player_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_DynamicCast_AsBP_Melee_Base) == 0x000038, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_DynamicCast_AsBP_Melee_Base' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Array_Index_Variable_3) == 0x000044, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Loop_Counter_Variable_3) == 0x00004C, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Loop_Counter_Variable_4) == 0x000058, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Add_IntInt_ReturnValue_4) == 0x00005C, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Array_Index_Variable_4) == 0x000060, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Array_Index_Variable_5) == 0x000064, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_bool_Variable) == 0x000068, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_bool_Variable_1) == 0x000069, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_GetOwningCharacter_BP_Character) == 0x000070, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_GetOwningCharacter_BP_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, Temp_int_Loop_Counter_Variable_5) == 0x00007C, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Add_IntInt_ReturnValue_5) == 0x000084, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_MakeArray_Array) == 0x000088, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_MakeArray_Array_1) == 0x000098, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_ComputeCrosshairVisibility_ReturnValue) == 0x0000A8, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_ComputeCrosshairVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DC, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Length_ReturnValue_2) == 0x0000E0, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E4, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Length_ReturnValue_3) == 0x0000E8, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000EC, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_Select_Default) == 0x0000F0, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Get_Item_4) == 0x000100, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Length_ReturnValue_4) == 0x000108, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Less_IntInt_ReturnValue_4) == 0x00010C, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, K2Node_Select_Default_1) == 0x000110, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Get_Item_5) == 0x000120, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Array_Length_ReturnValue_5) == 0x000128, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateCrosshairVisibility, CallFunc_Less_IntInt_ReturnValue_5) == 0x00012C, "Member 'UI_Crosshair_C_UpdateCrosshairVisibility::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.UpdateBlockedCrosshairLocation
// 0x00D0 (0x00D0 - 0x0000)
struct UI_Crosshair_C_UpdateBlockedCrosshairLocation final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0058(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  K2Node_DynamicCast_AsHuman_Player_Character;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_UpdateBlockedCrosshairLocation) == 0x000008, "Wrong alignment on UI_Crosshair_C_UpdateBlockedCrosshairLocation");
static_assert(sizeof(UI_Crosshair_C_UpdateBlockedCrosshairLocation) == 0x0000D0, "Wrong size on UI_Crosshair_C_UpdateBlockedCrosshairLocation");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_GetViewportScale_ReturnValue) == 0x000018, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, K2Node_MakeArray_Array) == 0x000020, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Array_Get_Item) == 0x000038, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000050, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_GetAnchors_ReturnValue) == 0x000058, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000070, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000080, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, K2Node_DynamicCast_AsHuman_Player_Character) == 0x000090, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::K2Node_DynamicCast_AsHuman_Player_Character' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_GetController_ReturnValue) == 0x0000A0, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, K2Node_DynamicCast_AsPlayer_Controller) == 0x0000A8, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0000B4, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0000BC, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000C0, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_UpdateBlockedCrosshairLocation, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000C8, "Member 'UI_Crosshair_C_UpdateBlockedCrosshairLocation::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetHitIndicationVisibility
// 0x0001 (0x0001 - 0x0000)
struct UI_Crosshair_C_SetHitIndicationVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_SetHitIndicationVisibility) == 0x000001, "Wrong alignment on UI_Crosshair_C_SetHitIndicationVisibility");
static_assert(sizeof(UI_Crosshair_C_SetHitIndicationVisibility) == 0x000001, "Wrong size on UI_Crosshair_C_SetHitIndicationVisibility");
static_assert(offsetof(UI_Crosshair_C_SetHitIndicationVisibility, InVisibility) == 0x000000, "Member 'UI_Crosshair_C_SetHitIndicationVisibility::InVisibility' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetHitIndicationColor
// 0x0010 (0x0010 - 0x0000)
struct UI_Crosshair_C_SetHitIndicationColor final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_SetHitIndicationColor) == 0x000004, "Wrong alignment on UI_Crosshair_C_SetHitIndicationColor");
static_assert(sizeof(UI_Crosshair_C_SetHitIndicationColor) == 0x000010, "Wrong size on UI_Crosshair_C_SetHitIndicationColor");
static_assert(offsetof(UI_Crosshair_C_SetHitIndicationColor, InColorAndOpacity) == 0x000000, "Member 'UI_Crosshair_C_SetHitIndicationColor::InColorAndOpacity' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.OnGameSettingsChanged
// 0x0058 (0x0058 - 0x0000)
struct UI_Crosshair_C_OnGameSettingsChanged final
{
public:
	struct FGameSaveSettings                      InGameSettings;                                    // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLinearColor                           CallFunc_LinearColorFromHexString_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_OnGameSettingsChanged) == 0x000008, "Wrong alignment on UI_Crosshair_C_OnGameSettingsChanged");
static_assert(sizeof(UI_Crosshair_C_OnGameSettingsChanged) == 0x000058, "Wrong size on UI_Crosshair_C_OnGameSettingsChanged");
static_assert(offsetof(UI_Crosshair_C_OnGameSettingsChanged, InGameSettings) == 0x000000, "Member 'UI_Crosshair_C_OnGameSettingsChanged::InGameSettings' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_OnGameSettingsChanged, CallFunc_LinearColorFromHexString_ReturnValue) == 0x000048, "Member 'UI_Crosshair_C_OnGameSettingsChanged::CallFunc_LinearColorFromHexString_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetHitIndicatorScale
// 0x0028 (0x0028 - 0x0000)
struct UI_Crosshair_C_SetHitIndicatorScale final
{
public:
	float                                         Damage_Dealt;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_SetHitIndicatorScale) == 0x000008, "Wrong alignment on UI_Crosshair_C_SetHitIndicatorScale");
static_assert(sizeof(UI_Crosshair_C_SetHitIndicatorScale) == 0x000028, "Wrong size on UI_Crosshair_C_SetHitIndicatorScale");
static_assert(offsetof(UI_Crosshair_C_SetHitIndicatorScale, Damage_Dealt) == 0x000000, "Member 'UI_Crosshair_C_SetHitIndicatorScale::Damage_Dealt' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetHitIndicatorScale, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_Crosshair_C_SetHitIndicatorScale::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetHitIndicatorScale, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'UI_Crosshair_C_SetHitIndicatorScale::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetHitIndicatorScale, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'UI_Crosshair_C_SetHitIndicatorScale::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetHitIndicatorScale, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'UI_Crosshair_C_SetHitIndicatorScale::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairLength
// 0x0118 (0x0118 - 0x0000)
struct UI_Crosshair_C_SetCrosshairLength final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CrosshairLevel;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x0088)()
};
static_assert(alignof(UI_Crosshair_C_SetCrosshairLength) == 0x000008, "Wrong alignment on UI_Crosshair_C_SetCrosshairLength");
static_assert(sizeof(UI_Crosshair_C_SetCrosshairLength) == 0x000118, "Wrong size on UI_Crosshair_C_SetCrosshairLength");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Length) == 0x000000, "Member 'UI_Crosshair_C_SetCrosshairLength::Length' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CrosshairLevel) == 0x000004, "Member 'UI_Crosshair_C_SetCrosshairLength::CrosshairLevel' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Temp_int_Variable) == 0x000008, "Member 'UI_Crosshair_C_SetCrosshairLength::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Temp_float_Variable) == 0x00000C, "Member 'UI_Crosshair_C_SetCrosshairLength::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Temp_float_Variable_1) == 0x000010, "Member 'UI_Crosshair_C_SetCrosshairLength::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Temp_float_Variable_2) == 0x000014, "Member 'UI_Crosshair_C_SetCrosshairLength::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Temp_float_Variable_3) == 0x000018, "Member 'UI_Crosshair_C_SetCrosshairLength::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Temp_float_Variable_4) == 0x00001C, "Member 'UI_Crosshair_C_SetCrosshairLength::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, Temp_float_Variable_5) == 0x000020, "Member 'UI_Crosshair_C_SetCrosshairLength::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, K2Node_Select_Default) == 0x000030, "Member 'UI_Crosshair_C_SetCrosshairLength::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000038, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_MakeVector2D_ReturnValue_1) == 0x000050, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_MakeVector2D_ReturnValue_2) == 0x00005C, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000068, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_MakeVector2D_ReturnValue_3) == 0x000070, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000078, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_BreakVector2D_X) == 0x000080, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_BreakVector2D_Y) == 0x000084, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, CallFunc_MakeVector2D_ReturnValue_4) == 0x000088, "Member 'UI_Crosshair_C_SetCrosshairLength::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairLength, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'UI_Crosshair_C_SetCrosshairLength::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairOpacity
// 0x0004 (0x0004 - 0x0000)
struct UI_Crosshair_C_SetCrosshairOpacity final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_SetCrosshairOpacity) == 0x000004, "Wrong alignment on UI_Crosshair_C_SetCrosshairOpacity");
static_assert(sizeof(UI_Crosshair_C_SetCrosshairOpacity) == 0x000004, "Wrong size on UI_Crosshair_C_SetCrosshairOpacity");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairOpacity, Opacity) == 0x000000, "Member 'UI_Crosshair_C_SetCrosshairOpacity::Opacity' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairThickness
// 0x00C8 (0x00C8 - 0x0000)
struct UI_Crosshair_C_SetCrosshairThickness final
{
public:
	int32                                         Thickness;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CrosshairLevel;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0040(0x0088)()
};
static_assert(alignof(UI_Crosshair_C_SetCrosshairThickness) == 0x000008, "Wrong alignment on UI_Crosshair_C_SetCrosshairThickness");
static_assert(sizeof(UI_Crosshair_C_SetCrosshairThickness) == 0x0000C8, "Wrong size on UI_Crosshair_C_SetCrosshairThickness");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Thickness) == 0x000000, "Member 'UI_Crosshair_C_SetCrosshairThickness::Thickness' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, CrosshairLevel) == 0x000004, "Member 'UI_Crosshair_C_SetCrosshairThickness::CrosshairLevel' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Temp_int_Variable) == 0x000008, "Member 'UI_Crosshair_C_SetCrosshairThickness::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Temp_float_Variable) == 0x00000C, "Member 'UI_Crosshair_C_SetCrosshairThickness::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Temp_float_Variable_1) == 0x000010, "Member 'UI_Crosshair_C_SetCrosshairThickness::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Temp_float_Variable_2) == 0x000014, "Member 'UI_Crosshair_C_SetCrosshairThickness::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Temp_float_Variable_3) == 0x000018, "Member 'UI_Crosshair_C_SetCrosshairThickness::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Temp_float_Variable_4) == 0x00001C, "Member 'UI_Crosshair_C_SetCrosshairThickness::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, Temp_float_Variable_5) == 0x000020, "Member 'UI_Crosshair_C_SetCrosshairThickness::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'UI_Crosshair_C_SetCrosshairThickness::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, K2Node_Select_Default) == 0x000028, "Member 'UI_Crosshair_C_SetCrosshairThickness::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'UI_Crosshair_C_SetCrosshairThickness::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'UI_Crosshair_C_SetCrosshairThickness::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'UI_Crosshair_C_SetCrosshairThickness::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_SetCrosshairThickness, K2Node_MakeStruct_SlateBrush) == 0x000040, "Member 'UI_Crosshair_C_SetCrosshairThickness::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_Crosshair.UI_Crosshair_C.ShowHitIndicationForTime
// 0x0020 (0x0020 - 0x0000)
struct UI_Crosshair_C_ShowHitIndicationForTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Crosshair_C_ShowHitIndicationForTime) == 0x000008, "Wrong alignment on UI_Crosshair_C_ShowHitIndicationForTime");
static_assert(sizeof(UI_Crosshair_C_ShowHitIndicationForTime) == 0x000020, "Wrong size on UI_Crosshair_C_ShowHitIndicationForTime");
static_assert(offsetof(UI_Crosshair_C_ShowHitIndicationForTime, Time) == 0x000000, "Member 'UI_Crosshair_C_ShowHitIndicationForTime::Time' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ShowHitIndicationForTime, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_Crosshair_C_ShowHitIndicationForTime::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Crosshair_C_ShowHitIndicationForTime, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'UI_Crosshair_C_ShowHitIndicationForTime::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}

