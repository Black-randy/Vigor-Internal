#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlameUI

#include "Basic.hpp"

#include "FlameUI_classes.hpp"
#include "FlameUI_parameters.hpp"


namespace SDK
{

// Function FlameUI.FlameTextBlock.SetDisplayAsUpperCase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDisplayAsUpperCase                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlameTextBlock::SetDisplayAsUpperCase(bool bInDisplayAsUpperCase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlameTextBlock", "SetDisplayAsUpperCase");

	Params::FlameTextBlock_SetDisplayAsUpperCase Parms{};

	Parms.bInDisplayAsUpperCase = bInDisplayAsUpperCase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.CoreFunctions.GetCurrentPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFlamePlatform                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFlamePlatform UCoreFunctions::GetCurrentPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CoreFunctions", "GetCurrentPlatform");

	Params::CoreFunctions_GetCurrentPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FlameUI.CoreFunctions.IsLowEndPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCoreFunctions::IsLowEndPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CoreFunctions", "IsLowEndPlatform");

	Params::CoreFunctions_IsLowEndPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FlameUI.CoreFunctions.SetFlamePlatform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EFlamePlatform                          InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreFunctions::SetFlamePlatform(EFlamePlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CoreFunctions", "SetFlamePlatform");

	Params::CoreFunctions_SetFlamePlatform Parms{};

	Parms.InPlatform = InPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.FlameSlider.OnCaptureBegin
// (Final, Native, Protected)

void UFlameSlider::OnCaptureBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlameSlider", "OnCaptureBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.FlameSlider.OnCaptureEnd
// (Final, Native, Protected)

void UFlameSlider::OnCaptureEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlameSlider", "OnCaptureEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.CustomCursor.SetCurrentCursorMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECursorMode                             CursorMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomCursor::SetCurrentCursorMode(ECursorMode CursorMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCursor", "SetCurrentCursorMode");

	Params::CustomCursor_SetCurrentCursorMode Parms{};

	Parms.CursorMode = CursorMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.CustomCursor.ToggleMouseCursor
// (Event, Public, BlueprintEvent)

void UCustomCursor::ToggleMouseCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCursor", "ToggleMouseCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FlameUI.CustomCursor.UpdateCursorMode
// (Event, Public, BlueprintEvent)

void UCustomCursor::UpdateCursorMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCursor", "UpdateCursorMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FlameUI.FlameButton.UpdateSavedBrush
// (Final, Native, Protected, BlueprintCallable)

void UFlameButton::UpdateSavedBrush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlameButton", "UpdateSavedBrush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.FocusInterface.OnFocusLost
// (Native, Public)

void IFocusInterface::OnFocusLost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FocusInterface", "OnFocusLost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.FocusInterface.OnFocusReceived
// (Native, Public)

void IFocusInterface::OnFocusReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FocusInterface", "OnFocusReceived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.InputFunctions.GetInputIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputIcon                              InIcon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputIconType                          InIconType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UInputFunctions::GetInputIcon(EInputIcon InIcon, EInputIconType InIconType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InputFunctions", "GetInputIcon");

	Params::InputFunctions_GetInputIcon Parms{};

	Parms.InIcon = InIcon;
	Parms.InIconType = InIconType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FlameUI.InputFunctions.GetInputIconActionName
// (Final, Native, Static, Private)
// Parameters:
// EInputIcon                              InIcon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UInputFunctions::GetInputIconActionName(EInputIcon InIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InputFunctions", "GetInputIconActionName");

	Params::InputFunctions_GetInputIconActionName Parms{};

	Parms.InIcon = InIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FlameUI.InputFunctions.GetInputIconWithCustomControls
// (Final, Native, Static, Public)
// Parameters:
// EInputIcon                              InIcon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputIconType                          InIconType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputIcon                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EInputIcon UInputFunctions::GetInputIconWithCustomControls(EInputIcon InIcon, EInputIconType InIconType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InputFunctions", "GetInputIconWithCustomControls");

	Params::InputFunctions_GetInputIconWithCustomControls Parms{};

	Parms.InIcon = InIcon;
	Parms.InIconType = InIconType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FlameUI.InputFunctions.GetWindowsControllerIcon
// (Final, Native, Static, Public)
// Parameters:
// EInputIcon                              InIcon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputIcon                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EInputIcon UInputFunctions::GetWindowsControllerIcon(EInputIcon InIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InputFunctions", "GetWindowsControllerIcon");

	Params::InputFunctions_GetWindowsControllerIcon Parms{};

	Parms.InIcon = InIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FlameUI.InputIconImage.SetInputIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInputIcon                              InInputIcon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsHoldable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInputIconImage::SetInputIcon(EInputIcon InInputIcon, bool bInIsHoldable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputIconImage", "SetInputIcon");

	Params::InputIconImage_SetInputIcon Parms{};

	Parms.InInputIcon = InInputIcon;
	Parms.bInIsHoldable = bInIsHoldable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.InputIconImage.SetProgressPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InProgressPercentage                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInputIconImage::SetProgressPercentage(float InProgressPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputIconImage", "SetProgressPercentage");

	Params::InputIconImage_SetProgressPercentage Parms{};

	Parms.InProgressPercentage = InProgressPercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FlameUI.PlatformTextBlock.SetTexts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<EFlamePlatform, class FText>       InTexts                                                (Parm, NativeAccessSpecifierPublic)

void UPlatformTextBlock::SetTexts(const TMap<EFlamePlatform, class FText>& InTexts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformTextBlock", "SetTexts");

	Params::PlatformTextBlock_SetTexts Parms{};

	Parms.InTexts = std::move(InTexts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

