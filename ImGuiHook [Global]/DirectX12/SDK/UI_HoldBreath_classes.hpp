#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HoldBreath

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_HoldBreath.UI_HoldBreath_C
// 0x0020 (0x02D8 - 0x02B8)
class UUI_HoldBreath_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URichTextBlock*                         RichText;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStaminaComponent*                      CharacterStaminaComponent;                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHoldingBreath;                                   // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EInputMode                                    LastInputMode;                                     // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckForStamina;                                   // 0x02D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_HoldBreath(int32 EntryPoint);
	void CheckStamina();
	void OnPCControlsChange();
	void UpdateText(int32 PlayerIndex, EInputMode InputMode);
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void Construct();
	void OnCameraStateChanged(ECameraPositionState OldState, ECameraPositionState NewState);
	void OnHoldBreathStarted();
	void OnHoldBreathEnded();
	void UpdateRichText(bool IsHoldingBreath_0);
	void BindToCharacter();
	void UnbindFromCharacter();

	void GetHoldBreathRichText(class FText* Text) const;
	void GetReleaseBreathRichText(class FText* Text) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_HoldBreath_C">();
	}
	static class UUI_HoldBreath_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_HoldBreath_C>();
	}
};
static_assert(alignof(UUI_HoldBreath_C) == 0x000008, "Wrong alignment on UUI_HoldBreath_C");
static_assert(sizeof(UUI_HoldBreath_C) == 0x0002D8, "Wrong size on UUI_HoldBreath_C");
static_assert(offsetof(UUI_HoldBreath_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_HoldBreath_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_HoldBreath_C, RichText) == 0x0002C0, "Member 'UUI_HoldBreath_C::RichText' has a wrong offset!");
static_assert(offsetof(UUI_HoldBreath_C, CharacterStaminaComponent) == 0x0002C8, "Member 'UUI_HoldBreath_C::CharacterStaminaComponent' has a wrong offset!");
static_assert(offsetof(UUI_HoldBreath_C, IsHoldingBreath) == 0x0002D0, "Member 'UUI_HoldBreath_C::IsHoldingBreath' has a wrong offset!");
static_assert(offsetof(UUI_HoldBreath_C, LastInputMode) == 0x0002D1, "Member 'UUI_HoldBreath_C::LastInputMode' has a wrong offset!");
static_assert(offsetof(UUI_HoldBreath_C, CheckForStamina) == 0x0002D2, "Member 'UUI_HoldBreath_C::CheckForStamina' has a wrong offset!");

}

