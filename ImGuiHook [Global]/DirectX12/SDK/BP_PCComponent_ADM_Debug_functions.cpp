#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM_Debug

#include "Basic.hpp"

#include "BP_PCComponent_ADM_Debug_classes.hpp"
#include "BP_PCComponent_ADM_Debug_parameters.hpp"


namespace SDK
{

// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.ExecuteUbergraph_BP_PCComponent_ADM_Debug
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_Debug_C::ExecuteUbergraph_BP_PCComponent_ADM_Debug(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "ExecuteUbergraph_BP_PCComponent_ADM_Debug");

	Params::BP_PCComponent_ADM_Debug_C_ExecuteUbergraph_BP_PCComponent_ADM_Debug Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Print Distances
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Debug_C::Print_Distances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Print Distances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Toggle Object Distances
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Debug_C::Toggle_Object_Distances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Toggle Object Distances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Add Warning Message
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_PCComponent_ADM_Debug_C::Add_Warning_Message(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Add Warning Message");

	Params::BP_PCComponent_ADM_Debug_C_Add_Warning_Message Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Hide Passive UI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Debug_C::Hide_Passive_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Hide Passive UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Show Passive UI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Debug_C::Show_Passive_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Show Passive UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Mark Asset Locations
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Asset_Locations                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Asset_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture*                         Marker_Image                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_Debug_C::Mark_Asset_Locations(const TArray<struct FVector>& Asset_Locations, const class FText& Asset_Name, class UTexture* Marker_Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Mark Asset Locations");

	Params::BP_PCComponent_ADM_Debug_C_Mark_Asset_Locations Parms{};

	Parms.Asset_Locations = std::move(Asset_Locations);
	Parms.Asset_Name = std::move(Asset_Name);
	Parms.Marker_Image = Marker_Image;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Drop All Air Drops
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Debug_C::Drop_All_Air_Drops()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Drop All Air Drops");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Remove Module
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GSComponent_ADM_C*            Module                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_Debug_C::Remove_Module(class UBP_GSComponent_ADM_C* Module)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Remove Module");

	Params::BP_PCComponent_ADM_Debug_C_Remove_Module Parms{};

	Parms.Module = Module;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Add Module
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Module_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_Debug_C::Add_Module(class UClass* Module_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Add Module");

	Params::BP_PCComponent_ADM_Debug_C_Add_Module Parms{};

	Parms.Module_Type = Module_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Set Amount of Players in Debug UI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount_of_Players                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_Debug_C::Set_Amount_of_Players_in_Debug_UI(int32 Amount_of_Players)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Set Amount of Players in Debug UI");

	Params::BP_PCComponent_ADM_Debug_C_Set_Amount_of_Players_in_Debug_UI Parms{};

	Parms.Amount_of_Players = Amount_of_Players;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Toggle Game Mode
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Debug_C::Toggle_Game_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Toggle Game Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C.Calculate Distances
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Distances                                              (Parm, OutParm)
// TArray<struct FLinearColor>             Colors                                                 (Parm, OutParm)

void UBP_PCComponent_ADM_Debug_C::Calculate_Distances(TArray<class FString>* Distances, TArray<struct FLinearColor>* Colors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Debug_C", "Calculate Distances");

	Params::BP_PCComponent_ADM_Debug_C_Calculate_Distances Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distances != nullptr)
		*Distances = std::move(Parms.Distances);

	if (Colors != nullptr)
		*Colors = std::move(Parms.Colors);
}

}

