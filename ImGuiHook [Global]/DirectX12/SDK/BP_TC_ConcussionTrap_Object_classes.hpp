#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_ConcussionTrap_Object

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_TC_ContactBomb_Object_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TC_ConcussionTrap_Object.BP_TC_ConcussionTrap_Object_C
// 0x0068 (0x0610 - 0x05A8)
class ABP_TC_ConcussionTrap_Object_C final : public ABP_TC_ContactBomb_Object_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TC_ConcussionTrap_Object_C;      // 0x05A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         ConsumableUI_ToHide;                               // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FExplosionEffect>               ExplosionEffects;                                  // 0x05D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   StaminaEffectName;                                 // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActivationTime;                                    // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeWithoutMovement;                               // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeWithoutAiming;                                 // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           MovementTimerHandler;                              // 0x05F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AimingTimerHandler;                                // 0x0600(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           TriggerAnimation;                                  // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TC_ConcussionTrap_Object(int32 EntryPoint);
	void PlayAnimationsOnClients();
	void Trap_play_effects_triggered();
	void TrapTriggeredDelayedEvent();
	void EnableAiming();
	void Trap_Break(class UObject* Player_that_destroyed_the_trap);
	void EnableBackMovement();
	void DisableMovement();
	void Trap_Triggered(class UObject* ObjectThatTriggeredTrap);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnExplosionCompleted(const TArray<struct FExplosionEffect>& ExplosionEffects_0);
	void ReceiveTick(float DeltaSeconds);
	void AddStaminaEffect(class UStaminaComponent* StaminaComponent);
	void SetStaminaEffectName(float ConcussionStrength, class ABP_Character_C* Player);
	void DisablePlayerMovementAndAiming(class AHumanCharacter* InputPin);
	void EnablePlayerMovement(class AHumanCharacter* InputPin);
	void EnablePlayerAiming(class ABP_Character_Script_C* InputPin);
	void TrapExplosionEffects();
	void ApplyConcussionEffects();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TC_ConcussionTrap_Object_C">();
	}
	static class ABP_TC_ConcussionTrap_Object_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TC_ConcussionTrap_Object_C>();
	}
};
static_assert(alignof(ABP_TC_ConcussionTrap_Object_C) == 0x000008, "Wrong alignment on ABP_TC_ConcussionTrap_Object_C");
static_assert(sizeof(ABP_TC_ConcussionTrap_Object_C) == 0x000610, "Wrong size on ABP_TC_ConcussionTrap_Object_C");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, UberGraphFrame_BP_TC_ConcussionTrap_Object_C) == 0x0005A8, "Member 'ABP_TC_ConcussionTrap_Object_C::UberGraphFrame_BP_TC_ConcussionTrap_Object_C' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, Sphere) == 0x0005B0, "Member 'ABP_TC_ConcussionTrap_Object_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, SkeletalMesh) == 0x0005B8, "Member 'ABP_TC_ConcussionTrap_Object_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, ConsumableUI_ToHide) == 0x0005C0, "Member 'ABP_TC_ConcussionTrap_Object_C::ConsumableUI_ToHide' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, ExplosionEffects) == 0x0005D0, "Member 'ABP_TC_ConcussionTrap_Object_C::ExplosionEffects' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, StaminaEffectName) == 0x0005E0, "Member 'ABP_TC_ConcussionTrap_Object_C::StaminaEffectName' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, ActivationTime) == 0x0005E8, "Member 'ABP_TC_ConcussionTrap_Object_C::ActivationTime' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, TimeWithoutMovement) == 0x0005EC, "Member 'ABP_TC_ConcussionTrap_Object_C::TimeWithoutMovement' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, TimeWithoutAiming) == 0x0005F0, "Member 'ABP_TC_ConcussionTrap_Object_C::TimeWithoutAiming' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, MovementTimerHandler) == 0x0005F8, "Member 'ABP_TC_ConcussionTrap_Object_C::MovementTimerHandler' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, AimingTimerHandler) == 0x000600, "Member 'ABP_TC_ConcussionTrap_Object_C::AimingTimerHandler' has a wrong offset!");
static_assert(offsetof(ABP_TC_ConcussionTrap_Object_C, TriggerAnimation) == 0x000608, "Member 'ABP_TC_ConcussionTrap_Object_C::TriggerAnimation' has a wrong offset!");

}

