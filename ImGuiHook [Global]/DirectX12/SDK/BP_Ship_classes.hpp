#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ship

#include "Basic.hpp"

#include "BP_BuoyantActor_classes.hpp"
#include "S_Car_Colours_structs.hpp"
#include "Engine_structs.hpp"
#include "E_Car_Extension_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ship.BP_Ship_C
// 0x00E0 (0x03A8 - 0x02C8)
class ABP_Ship_C : public ABP_BuoyantActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        RainAudio;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Extension;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Movement_offset;                                   // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Rotation;                                        // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_rotation;                                        // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FS_Car_Colours>            Colours;                                           // 0x02F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Colour;                                            // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_Car_Extension, class UStaticMesh*>     BodyMesh;                                          // 0x0348(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_Car_Extension                               Versions;                                          // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableBuoyancy;                                   // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreRain;                                        // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B[0x5];                                      // 0x039B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RainAudioParameterCurve;                           // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetMeches();
	void SetColours();
	void UserConstructionScript();
	void AdjustWindIntensity(float CurrentWindIntensity);
	void AdjustWindDirection(const struct FVector& CurrentWindDirection);
	void SetHeavyRain(bool HeavyRain);
	void AdjustRainIntensity(float CurrentRainAmount, float CurrentWetnessAmount);
	void AdjustWeather(float CurrentRainAmount, float CurrentWindIntensity, const struct FVector& CurrentWindDirection, float CurrentWetnessAmount);
	void ExecuteUbergraph_BP_Ship(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ship_C">();
	}
	static class ABP_Ship_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ship_C>();
	}
};
static_assert(alignof(ABP_Ship_C) == 0x000008, "Wrong alignment on ABP_Ship_C");
static_assert(sizeof(ABP_Ship_C) == 0x0003A8, "Wrong size on ABP_Ship_C");
static_assert(offsetof(ABP_Ship_C, UberGraphFrame) == 0x0002C8, "Member 'ABP_Ship_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, RainAudio) == 0x0002D0, "Member 'ABP_Ship_C::RainAudio' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, Extension) == 0x0002D8, "Member 'ABP_Ship_C::Extension' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, Speed) == 0x0002E0, "Member 'ABP_Ship_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, Movement_offset) == 0x0002E4, "Member 'ABP_Ship_C::Movement_offset' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, Y_Rotation) == 0x0002E8, "Member 'ABP_Ship_C::Y_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, X_rotation) == 0x0002EC, "Member 'ABP_Ship_C::X_rotation' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, Colours) == 0x0002F0, "Member 'ABP_Ship_C::Colours' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, Colour) == 0x000340, "Member 'ABP_Ship_C::Colour' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, BodyMesh) == 0x000348, "Member 'ABP_Ship_C::BodyMesh' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, Versions) == 0x000398, "Member 'ABP_Ship_C::Versions' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, DisableBuoyancy) == 0x000399, "Member 'ABP_Ship_C::DisableBuoyancy' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, IgnoreRain) == 0x00039A, "Member 'ABP_Ship_C::IgnoreRain' has a wrong offset!");
static_assert(offsetof(ABP_Ship_C, RainAudioParameterCurve) == 0x0003A0, "Member 'ABP_Ship_C::RainAudioParameterCurve' has a wrong offset!");

}

