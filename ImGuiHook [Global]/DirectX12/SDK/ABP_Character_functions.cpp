#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Character

#include "Basic.hpp"

#include "ABP_Character_classes.hpp"
#include "ABP_Character_parameters.hpp"


namespace SDK
{

// Function ABP_Character.ABP_Character_C.ExecuteUbergraph_ABP_Character
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::ExecuteUbergraph_ABP_Character(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "ExecuteUbergraph_ABP_Character");

	Params::ABP_Character_C_ExecuteUbergraph_ABP_Character Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.CassettesInspectStarted
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::CassettesInspectStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "CassettesInspectStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.CassettesInspectStopped
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::CassettesInspectStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "CassettesInspectStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.CassettesRotationChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::CassettesRotationChanged(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "CassettesRotationChanged");

	Params::ABP_Character_C_CassettesRotationChanged Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.BPI_ResetNotifyKeys
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::BPI_ResetNotifyKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "BPI_ResetNotifyKeys");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_Dead
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_IK Off
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_IK_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_IK Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_IK On
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_IK_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_IK On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_KitchenTimer_Show
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_KitchenTimer_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_KitchenTimer_Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_KitchenTimer_Hide
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_KitchenTimer_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_KitchenTimer_Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_Map_Show
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_Map_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_Map_Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_Map_Hide
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_Map_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_Map_Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_IsInIdle
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_IsInIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_IsInIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_IsInMotion
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_IsInMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_IsInMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_IsAiming
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_IsAiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_IsAiming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.BP_StopMapGesture
// (Event, Public, BlueprintEvent)

void UABP_Character_C::BP_StopMapGesture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "BP_StopMapGesture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.StartRagdoll
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::StartRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "StartRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.SetShelterPreviewIdleAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::SetShelterPreviewIdleAnim(class UAnimSequenceBase* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetShelterPreviewIdleAnim");

	Params::ABP_Character_C_SetShelterPreviewIdleAnim Parms{};

	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_JumpStarted
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_JumpStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_JumpStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.StopEvaluatingJump
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::StopEvaluatingJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "StopEvaluatingJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_AimLessThrowStart
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_AimLessThrowStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_AimLessThrowStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_ThrowStart
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_ThrowStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_ThrowStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_ConsumableUseStart
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_ConsumableUseStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_ConsumableUseStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.ClearCustomItemGrip
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::ClearCustomItemGrip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "ClearCustomItemGrip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.On_ITEM_Change
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::On_ITEM_Change()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "On_ITEM_Change");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.TraceForThePronePST
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::TraceForThePronePST()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "TraceForThePronePST");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.RefreshLeftHandProne_PST_Pos
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::RefreshLeftHandProne_PST_Pos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "RefreshLeftHandProne_PST_Pos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.BP_ItemInHandsChanged
// (Event, Public, BlueprintEvent)

void UABP_Character_C::BP_ItemInHandsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "BP_ItemInHandsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.CheckIfGenderChanged
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::CheckIfGenderChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "CheckIfGenderChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.SetAnimCollectionAfterGenderChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMale                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::SetAnimCollectionAfterGenderChange(bool IsMale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetAnimCollectionAfterGenderChange");

	Params::ABP_Character_C_SetAnimCollectionAfterGenderChange Parms{};

	Parms.IsMale = IsMale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.GenderChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Gender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::GenderChanged(class UClass* Gender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GenderChanged");

	Params::ABP_Character_C_GenderChanged Parms{};

	Parms.Gender = Gender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.NoWPN_Equipped
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::NoWPN_Equipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "NoWPN_Equipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.Gender_Change
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::Gender_Change()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Gender_Change");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.StopRagdoll
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::StopRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "StopRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_AimCorrection
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_AimCorrection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_AimCorrection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.AnimNotify_AimInterrupt
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::AnimNotify_AimInterrupt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimNotify_AimInterrupt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.ResetAnimNotifyValues
// (BlueprintCallable, BlueprintEvent)

void UABP_Character_C::ResetAnimNotifyValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "ResetAnimNotifyValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.NotifyStoppedAiming_BP
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::NotifyStoppedAiming_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "NotifyStoppedAiming_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.NotifyIsAiming_BP
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::NotifyIsAiming_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "NotifyIsAiming_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.SetDefaultAnimCollection
// (Event, Public, BlueprintEvent)

void UABP_Character_C::SetDefaultAnimCollection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetDefaultAnimCollection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.StopAnyAction_BP
// (Event, Protected, BlueprintEvent)

void UABP_Character_C::StopAnyAction_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "StopAnyAction_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.SetIKValues
// (Event, Protected, BlueprintEvent)

void UABP_Character_C::SetIKValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetIKValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.ChangeGender
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsaMale                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::ChangeGender(bool bIsaMale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "ChangeGender");

	Params::ABP_Character_C_ChangeGender Parms{};

	Parms.bIsaMale = bIsaMale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "BlueprintUpdateAnimation");

	Params::ABP_Character_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.LerpLookAtAlpha
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Yaw                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Alpha                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::LerpLookAtAlpha(float DeltaTimeX, float* Yaw, float* Pitch, float* Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "LerpLookAtAlpha");

	Params::ABP_Character_C_LerpLookAtAlpha Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);

	if (Yaw != nullptr)
		*Yaw = Parms.Yaw;

	if (Pitch != nullptr)
		*Pitch = Parms.Pitch;

	if (Alpha != nullptr)
		*Alpha = Parms.Alpha;
}


// Function ABP_Character.ABP_Character_C.BP_LegIK
// (Private, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::BP_LegIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "BP_LegIK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.SetBPVariables
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::SetBPVariables(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetBPVariables");

	Params::ABP_Character_C_SetBPVariables Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.BP_SetIKValues
// (Private, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::BP_SetIKValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "BP_SetIKValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.CanUseLeftHandIK_BP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::CanUseLeftHandIK_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "CanUseLeftHandIK_BP");

	Params::ABP_Character_C_CanUseLeftHandIK_BP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.GetCorrectIKRunDataTable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UDataTable*                       Dt                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::GetCorrectIKRunDataTable(class UDataTable** Dt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GetCorrectIKRunDataTable");

	Params::ABP_Character_C_GetCorrectIKRunDataTable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dt != nullptr)
		*Dt = Parms.Dt;
}


// Function ABP_Character.ABP_Character_C.GetCorrectSectionForThrowPower
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WasAiming                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             SectionName                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::GetCorrectSectionForThrowPower(float Power, bool WasAiming, class FName* SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GetCorrectSectionForThrowPower");

	Params::ABP_Character_C_GetCorrectSectionForThrowPower Parms{};

	Parms.Power = Power;
	Parms.WasAiming = WasAiming;

	UObject::ProcessEvent(Func, &Parms);

	if (SectionName != nullptr)
		*SectionName = Parms.SectionName;
}


// Function ABP_Character.ABP_Character_C.TraceDownwardsFromElbowToForearm
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaX_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::TraceDownwardsFromElbowToForearm(float DeltaX_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "TraceDownwardsFromElbowToForearm");

	Params::ABP_Character_C_TraceDownwardsFromElbowToForearm Parms{};

	Parms.DeltaX_0 = DeltaX_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Character.ABP_Character_C.GetRightHandLocationPerStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          RightHandLocation_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::GetRightHandLocationPerStance(struct FVector* RightHandLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GetRightHandLocationPerStance");

	Params::ABP_Character_C_GetRightHandLocationPerStance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RightHandLocation_0 != nullptr)
		*RightHandLocation_0 = std::move(Parms.RightHandLocation_0);
}


// Function ABP_Character.ABP_Character_C.GetRightHandRotationPerStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         RightHandLocation_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::GetRightHandRotationPerStance(struct FRotator* RightHandLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GetRightHandRotationPerStance");

	Params::ABP_Character_C_GetRightHandRotationPerStance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RightHandLocation_0 != nullptr)
		*RightHandLocation_0 = std::move(Parms.RightHandLocation_0);
}


// Function ABP_Character.ABP_Character_C.UpdateStockRestOffset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_Character_C::UpdateStockRestOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "UpdateStockRestOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Character.ABP_Character_C.GetRotationLimitsPerStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EStance                                 Stance                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LeftMaxRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightMaxRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::GetRotationLimitsPerStance(EStance Stance, float* LeftMaxRotation, float* RightMaxRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GetRotationLimitsPerStance");

	Params::ABP_Character_C_GetRotationLimitsPerStance Parms{};

	Parms.Stance = Stance;

	UObject::ProcessEvent(Func, &Parms);

	if (LeftMaxRotation != nullptr)
		*LeftMaxRotation = Parms.LeftMaxRotation;

	if (RightMaxRotation != nullptr)
		*RightMaxRotation = Parms.RightMaxRotation;
}


// Function ABP_Character.ABP_Character_C.Get_LeanRight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Character_C::Get_LeanRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_LeanRight");

	Params::ABP_Character_C_Get_LeanRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_LeanForward
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Character_C::Get_LeanForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_LeanForward");

	Params::ABP_Character_C_Get_LeanForward Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_LowerBody_RootYaw
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Character_C::Get_LowerBody_RootYaw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_LowerBody_RootYaw");

	Params::ABP_Character_C_Get_LowerBody_RootYaw Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_IK_RunAdjustments_Alpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Character_C::Get_IK_RunAdjustments_Alpha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_IK_RunAdjustments_Alpha");

	Params::ABP_Character_C_Get_IK_RunAdjustments_Alpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_RightHandLocationBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_RightHandLocationBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_RightHandLocationBP");

	Params::ABP_Character_C_Get_RightHandLocationBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_LeftHandLocationBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_LeftHandLocationBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_LeftHandLocationBP");

	Params::ABP_Character_C_Get_LeftHandLocationBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_RightHandRotationBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UABP_Character_C::Get_RightHandRotationBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_RightHandRotationBP");

	Params::ABP_Character_C_Get_RightHandRotationBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_IK_RightHand_Joint_Offset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_IK_RightHand_Joint_Offset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_IK_RightHand_Joint_Offset");

	Params::ABP_Character_C_Get_IK_RightHand_Joint_Offset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_Prone_LeftHand_Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_Prone_LeftHand_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_Prone_LeftHand_Location");

	Params::ABP_Character_C_Get_Prone_LeftHand_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_LeftMovementAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Character_C::Get_LeftMovementAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_LeftMovementAngle");

	Params::ABP_Character_C_Get_LeftMovementAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_RightMovementAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Character_C::Get_RightMovementAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_RightMovementAngle");

	Params::ABP_Character_C_Get_RightMovementAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.GetAnimCollection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Male                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UHumanAnimCollection*             AsHuman_Anim_Collection                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Character_C::GetAnimCollection(bool Male, class UHumanAnimCollection** AsHuman_Anim_Collection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GetAnimCollection");

	Params::ABP_Character_C_GetAnimCollection Parms{};

	Parms.Male = Male;

	UObject::ProcessEvent(Func, &Parms);

	if (AsHuman_Anim_Collection != nullptr)
		*AsHuman_Anim_Collection = Parms.AsHuman_Anim_Collection;
}


// Function ABP_Character.ABP_Character_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_Character_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimGraph");

	Params::ABP_Character_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ABP_Character.ABP_Character_C.Melee
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Melee_Locomotion                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Melee_0                                                (Parm, OutParm, NoDestructor)

void UABP_Character_C::Melee(const struct FPoseLink& Melee_Locomotion, struct FPoseLink* Melee_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Melee");

	Params::ABP_Character_C_Melee Parms{};

	Parms.Melee_Locomotion = std::move(Melee_Locomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (Melee_0 != nullptr)
		*Melee_0 = std::move(Parms.Melee_0);
}


// Function ABP_Character.ABP_Character_C.WeaponActions
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Weapon_Locomotion                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        WeaponActions_0                                        (Parm, OutParm, NoDestructor)

void UABP_Character_C::WeaponActions(const struct FPoseLink& Weapon_Locomotion, struct FPoseLink* WeaponActions_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "WeaponActions");

	Params::ABP_Character_C_WeaponActions Parms{};

	Parms.Weapon_Locomotion = std::move(Weapon_Locomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponActions_0 != nullptr)
		*WeaponActions_0 = std::move(Parms.WeaponActions_0);
}


// Function ABP_Character.ABP_Character_C.AimingLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        AimedLocomotion                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        AimingLayer_0                                          (Parm, OutParm, NoDestructor)

void UABP_Character_C::AimingLayer(const struct FPoseLink& AimedLocomotion, struct FPoseLink* AimingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AimingLayer");

	Params::ABP_Character_C_AimingLayer Parms{};

	Parms.AimedLocomotion = std::move(AimedLocomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (AimingLayer_0 != nullptr)
		*AimingLayer_0 = std::move(Parms.AimingLayer_0);
}


// Function ABP_Character.ABP_Character_C.HandFKLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        HandFK_FullBody                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        HandFKLayer_0                                          (Parm, OutParm, NoDestructor)

void UABP_Character_C::HandFKLayer(const struct FPoseLink& HandFK_FullBody, struct FPoseLink* HandFKLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "HandFKLayer");

	Params::ABP_Character_C_HandFKLayer Parms{};

	Parms.HandFK_FullBody = std::move(HandFK_FullBody);

	UObject::ProcessEvent(Func, &Parms);

	if (HandFKLayer_0 != nullptr)
		*HandFKLayer_0 = std::move(Parms.HandFKLayer_0);
}


// Function ABP_Character.ABP_Character_C.LadderLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        LadderLayer_0                                          (Parm, OutParm, NoDestructor)

void UABP_Character_C::LadderLayer(struct FPoseLink* LadderLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "LadderLayer");

	Params::ABP_Character_C_LadderLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LadderLayer_0 != nullptr)
		*LadderLayer_0 = std::move(Parms.LadderLayer_0);
}


// Function ABP_Character.ABP_Character_C.FPVLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InpuPose                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        FPVLayer_0                                             (Parm, OutParm, NoDestructor)

void UABP_Character_C::FPVLayer(const struct FPoseLink& InpuPose, struct FPoseLink* FPVLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "FPVLayer");

	Params::ABP_Character_C_FPVLayer Parms{};

	Parms.InpuPose = std::move(InpuPose);

	UObject::ProcessEvent(Func, &Parms);

	if (FPVLayer_0 != nullptr)
		*FPVLayer_0 = std::move(Parms.FPVLayer_0);
}


// Function ABP_Character.ABP_Character_C.GestureLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        FinalLocomotion                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        GestureLayer_0                                         (Parm, OutParm, NoDestructor)

void UABP_Character_C::GestureLayer(const struct FPoseLink& FinalLocomotion, struct FPoseLink* GestureLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GestureLayer");

	Params::ABP_Character_C_GestureLayer Parms{};

	Parms.FinalLocomotion = std::move(FinalLocomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (GestureLayer_0 != nullptr)
		*GestureLayer_0 = std::move(Parms.GestureLayer_0);
}


// Function ABP_Character.ABP_Character_C.LayerInteraction
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Interaction_FullBody                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        LayerInteraction_0                                     (Parm, OutParm, NoDestructor)

void UABP_Character_C::LayerInteraction(const struct FPoseLink& Interaction_FullBody, struct FPoseLink* LayerInteraction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "LayerInteraction");

	Params::ABP_Character_C_LayerInteraction Parms{};

	Parms.Interaction_FullBody = std::move(Interaction_FullBody);

	UObject::ProcessEvent(Func, &Parms);

	if (LayerInteraction_0 != nullptr)
		*LayerInteraction_0 = std::move(Parms.LayerInteraction_0);
}


// Function ABP_Character.ABP_Character_C.BaseLocomotionMixer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Standing                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Water                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Crouch                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Prone                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Down                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Aiming_Stand                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Aiming_Crouch                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        BaseLocomotionMixer_0                                  (Parm, OutParm, NoDestructor)

void UABP_Character_C::BaseLocomotionMixer(const struct FPoseLink& Standing, const struct FPoseLink& Water, const struct FPoseLink& Crouch, const struct FPoseLink& Prone, const struct FPoseLink& Down, const struct FPoseLink& Aiming_Stand, const struct FPoseLink& Aiming_Crouch, struct FPoseLink* BaseLocomotionMixer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "BaseLocomotionMixer");

	Params::ABP_Character_C_BaseLocomotionMixer Parms{};

	Parms.Standing = std::move(Standing);
	Parms.Water = std::move(Water);
	Parms.Crouch = std::move(Crouch);
	Parms.Prone = std::move(Prone);
	Parms.Down = std::move(Down);
	Parms.Aiming_Stand = std::move(Aiming_Stand);
	Parms.Aiming_Crouch = std::move(Aiming_Crouch);

	UObject::ProcessEvent(Func, &Parms);

	if (BaseLocomotionMixer_0 != nullptr)
		*BaseLocomotionMixer_0 = std::move(Parms.BaseLocomotionMixer_0);
}


// Function ABP_Character.ABP_Character_C.SkeletalControlLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        SkeletalLayer                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        SkeletalControlLayer_0                                 (Parm, OutParm, NoDestructor)

void UABP_Character_C::SkeletalControlLayer(const struct FPoseLink& SkeletalLayer, struct FPoseLink* SkeletalControlLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SkeletalControlLayer");

	Params::ABP_Character_C_SkeletalControlLayer Parms{};

	Parms.SkeletalLayer = std::move(SkeletalLayer);

	UObject::ProcessEvent(Func, &Parms);

	if (SkeletalControlLayer_0 != nullptr)
		*SkeletalControlLayer_0 = std::move(Parms.SkeletalControlLayer_0);
}


// Function ABP_Character.ABP_Character_C.LocomotionSlotLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        BaseLocomotion                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        LocomotionSlotLayer_0                                  (Parm, OutParm, NoDestructor)

void UABP_Character_C::LocomotionSlotLayer(const struct FPoseLink& BaseLocomotion, struct FPoseLink* LocomotionSlotLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "LocomotionSlotLayer");

	Params::ABP_Character_C_LocomotionSlotLayer Parms{};

	Parms.BaseLocomotion = std::move(BaseLocomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (LocomotionSlotLayer_0 != nullptr)
		*LocomotionSlotLayer_0 = std::move(Parms.LocomotionSlotLayer_0);
}


// Function ABP_Character.ABP_Character_C.MirrorLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        MirrorFullBody                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        MirrorLayer_0                                          (Parm, OutParm, NoDestructor)

void UABP_Character_C::MirrorLayer(const struct FPoseLink& MirrorFullBody, struct FPoseLink* MirrorLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "MirrorLayer");

	Params::ABP_Character_C_MirrorLayer Parms{};

	Parms.MirrorFullBody = std::move(MirrorFullBody);

	UObject::ProcessEvent(Func, &Parms);

	if (MirrorLayer_0 != nullptr)
		*MirrorLayer_0 = std::move(Parms.MirrorLayer_0);
}


// Function ABP_Character.ABP_Character_C.PrimaryWPN_SocketLock
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        PrimaryWPN_SocketLock_0                                (Parm, OutParm, NoDestructor)

void UABP_Character_C::PrimaryWPN_SocketLock(const struct FPoseLink& InPose, struct FPoseLink* PrimaryWPN_SocketLock_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "PrimaryWPN_SocketLock");

	Params::ABP_Character_C_PrimaryWPN_SocketLock Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (PrimaryWPN_SocketLock_0 != nullptr)
		*PrimaryWPN_SocketLock_0 = std::move(Parms.PrimaryWPN_SocketLock_0);
}


// Function ABP_Character.ABP_Character_C.LeftHandOnGroundFor_PST_Prone
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        LeftHandOnGroundFor_PST_Prone_0                        (Parm, OutParm, NoDestructor)

void UABP_Character_C::LeftHandOnGroundFor_PST_Prone(const struct FPoseLink& In, struct FPoseLink* LeftHandOnGroundFor_PST_Prone_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "LeftHandOnGroundFor_PST_Prone");

	Params::ABP_Character_C_LeftHandOnGroundFor_PST_Prone Parms{};

	Parms.In = std::move(In);

	UObject::ProcessEvent(Func, &Parms);

	if (LeftHandOnGroundFor_PST_Prone_0 != nullptr)
		*LeftHandOnGroundFor_PST_Prone_0 = std::move(Parms.LeftHandOnGroundFor_PST_Prone_0);
}


// Function ABP_Character.ABP_Character_C.AnimDynamicsJiggle
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose_                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// E_MeshSpecificJiggle                    BackPackJiggleType_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_MeshSpecificJiggle                    UniformJiggleType_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_MeshSpecificJiggle                    BottomFaceWearJiggleType_0                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink                        AnimDynamicsJiggle_0                                   (Parm, OutParm, NoDestructor)

void UABP_Character_C::AnimDynamicsJiggle(const struct FPoseLink& InPose_, E_MeshSpecificJiggle BackPackJiggleType_0, E_MeshSpecificJiggle UniformJiggleType_0, E_MeshSpecificJiggle BottomFaceWearJiggleType_0, struct FPoseLink* AnimDynamicsJiggle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "AnimDynamicsJiggle");

	Params::ABP_Character_C_AnimDynamicsJiggle Parms{};

	Parms.InPose_ = std::move(InPose_);
	Parms.BackPackJiggleType_0 = BackPackJiggleType_0;
	Parms.UniformJiggleType_0 = UniformJiggleType_0;
	Parms.BottomFaceWearJiggleType_0 = BottomFaceWearJiggleType_0;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimDynamicsJiggle_0 != nullptr)
		*AnimDynamicsJiggle_0 = std::move(Parms.AnimDynamicsJiggle_0);
}


// Function ABP_Character.ABP_Character_C.RootRotation&TurnInPlaceBlend
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InputPose                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        RootRotation_TurnInPlaceBlend_0                        (Parm, OutParm, NoDestructor)

void UABP_Character_C::RootRotation_TurnInPlaceBlend(const struct FPoseLink& InputPose, struct FPoseLink* RootRotation_TurnInPlaceBlend_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "RootRotation&TurnInPlaceBlend");

	Params::ABP_Character_C_RootRotation_TurnInPlaceBlend Parms{};

	Parms.InputPose = std::move(InputPose);

	UObject::ProcessEvent(Func, &Parms);

	if (RootRotation_TurnInPlaceBlend_0 != nullptr)
		*RootRotation_TurnInPlaceBlend_0 = std::move(Parms.RootRotation_TurnInPlaceBlend_0);
}


// Function ABP_Character.ABP_Character_C.SetJiggleTypes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldSimJiggle                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FS_JiggleSettings                Uniform                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FS_JiggleSettings                Backpack                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FS_JiggleSettings                BottomHeadwear                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::SetJiggleTypes(bool bShouldSimJiggle, const struct FS_JiggleSettings& Uniform, const struct FS_JiggleSettings& Backpack, const struct FS_JiggleSettings& BottomHeadwear, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetJiggleTypes");

	Params::ABP_Character_C_SetJiggleTypes Parms{};

	Parms.bShouldSimJiggle = bShouldSimJiggle;
	Parms.Uniform = std::move(Uniform);
	Parms.Backpack = std::move(Backpack);
	Parms.BottomHeadwear = std::move(BottomHeadwear);

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function ABP_Character.ABP_Character_C.SetPrimaryHolsterLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldLock                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRightSide_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::SetPrimaryHolsterLock(bool ShouldLock, bool bRightSide_, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetPrimaryHolsterLock");

	Params::ABP_Character_C_SetPrimaryHolsterLock Parms{};

	Parms.ShouldLock = ShouldLock;
	Parms.bRightSide_ = bRightSide_;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function ABP_Character.ABP_Character_C.SetDisableLeftHandIK
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldDisable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::SetDisableLeftHandIK(bool ShouldDisable, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetDisableLeftHandIK");

	Params::ABP_Character_C_SetDisableLeftHandIK Parms{};

	Parms.ShouldDisable = ShouldDisable;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function ABP_Character.ABP_Character_C.SetDisabledAiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::SetDisabledAiming(bool bDisabled, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetDisabledAiming");

	Params::ABP_Character_C_SetDisabledAiming Parms{};

	Parms.bDisabled = bDisabled;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function ABP_Character.ABP_Character_C.SetActiveHardStanceTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::SetActiveHardStanceTransition(bool bActive, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "SetActiveHardStanceTransition");

	Params::ABP_Character_C_SetActiveHardStanceTransition Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function ABP_Character.ABP_Character_C.CheckForJiggle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           UniformMesh                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           BackpackMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           BottomHeadwear                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Processed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::CheckForJiggle(class USkeletalMeshComponent* UniformMesh, class USkeletalMeshComponent* BackpackMesh, class USkeletalMeshComponent* BottomHeadwear, bool* Processed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "CheckForJiggle");

	Params::ABP_Character_C_CheckForJiggle Parms{};

	Parms.UniformMesh = UniformMesh;
	Parms.BackpackMesh = BackpackMesh;
	Parms.BottomHeadwear = BottomHeadwear;

	UObject::ProcessEvent(Func, &Parms);

	if (Processed != nullptr)
		*Processed = Parms.Processed;
}


// Function ABP_Character.ABP_Character_C.GetIdleLayer
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IdleAction                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Character_C::GetIdleLayer(bool* IdleAction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "GetIdleLayer");

	Params::ABP_Character_C_GetIdleLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IdleAction != nullptr)
		*IdleAction = Parms.IdleAction;
}


// Function ABP_Character.ABP_Character_C.Get_FPV_LookRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UABP_Character_C::Get_FPV_LookRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_FPV_LookRotation");

	Params::ABP_Character_C_Get_FPV_LookRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_MeleeAim_Alpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Character_C::Get_MeleeAim_Alpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_MeleeAim_Alpha");

	Params::ABP_Character_C_Get_MeleeAim_Alpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_SkipStart_Bool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_SkipStart_Bool() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_SkipStart_Bool");

	Params::ABP_Character_C_Get_SkipStart_Bool Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_ToLoop_Bool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_ToLoop_Bool() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_ToLoop_Bool");

	Params::ABP_Character_C_Get_ToLoop_Bool Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_Prone_UpperBody_Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UABP_Character_C::Get_Prone_UpperBody_Rotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_Prone_UpperBody_Rotation");

	Params::ABP_Character_C_Get_Prone_UpperBody_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_Prone_Hips_Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UABP_Character_C::Get_Prone_Hips_Rotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_Prone_Hips_Rotation");

	Params::ABP_Character_C_Get_Prone_Hips_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_Jump_HipsPull_Offset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_Jump_HipsPull_Offset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_Jump_HipsPull_Offset");

	Params::ABP_Character_C_Get_Jump_HipsPull_Offset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_BackSocketLock_PrimaryA_Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_BackSocketLock_PrimaryA_Location() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_BackSocketLock_PrimaryA_Location");

	Params::ABP_Character_C_Get_BackSocketLock_PrimaryA_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_BackSocketLock_PrimaryA_Rotation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UABP_Character_C::Get_BackSocketLock_PrimaryA_Rotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_BackSocketLock_PrimaryA_Rotation");

	Params::ABP_Character_C_Get_BackSocketLock_PrimaryA_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_BackSocketLock_PrimaryB_Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_BackSocketLock_PrimaryB_Location() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_BackSocketLock_PrimaryB_Location");

	Params::ABP_Character_C_Get_BackSocketLock_PrimaryB_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_BackSocketLock_PrimaryB_Rotation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UABP_Character_C::Get_BackSocketLock_PrimaryB_Rotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_BackSocketLock_PrimaryB_Rotation");

	Params::ABP_Character_C_Get_BackSocketLock_PrimaryB_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_ShouldLeftIK_CopyGunIK
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_ShouldLeftIK_CopyGunIK() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_ShouldLeftIK_CopyGunIK");

	Params::ABP_Character_C_Get_ShouldLeftIK_CopyGunIK Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_ShouldConsiderGunLeftHand_IK
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_ShouldConsiderGunLeftHand_IK() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_ShouldConsiderGunLeftHand_IK");

	Params::ABP_Character_C_Get_ShouldConsiderGunLeftHand_IK Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_ShouldAdjustPronePST_LeftHand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_ShouldAdjustPronePST_LeftHand() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_ShouldAdjustPronePST_LeftHand");

	Params::ABP_Character_C_Get_ShouldAdjustPronePST_LeftHand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_UseGunLeftHandIK
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_UseGunLeftHandIK() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_UseGunLeftHandIK");

	Params::ABP_Character_C_Get_UseGunLeftHandIK Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_RightArmJoint_Offset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_RightArmJoint_Offset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_RightArmJoint_Offset");

	Params::ABP_Character_C_Get_RightArmJoint_Offset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_DoJiggleBone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_DoJiggleBone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_DoJiggleBone");

	Params::ABP_Character_C_Get_DoJiggleBone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_Mirrored_RightHand_PullBack_Pistol
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UABP_Character_C::Get_Mirrored_RightHand_PullBack_Pistol() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_Mirrored_RightHand_PullBack_Pistol");

	Params::ABP_Character_C_Get_Mirrored_RightHand_PullBack_Pistol Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Character.ABP_Character_C.Get_UseLocomotionSlotsUpperBody
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UABP_Character_C::Get_UseLocomotionSlotsUpperBody() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Character_C", "Get_UseLocomotionSlotsUpperBody");

	Params::ABP_Character_C_Get_UseLocomotionSlotsUpperBody Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

