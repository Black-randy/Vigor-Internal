#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HoldBreath

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function UI_HoldBreath.UI_HoldBreath_C.ExecuteUbergraph_UI_HoldBreath
// 0x0068 (0x0068 - 0x0000)
struct UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 PlayerIndex, EInputMode InputMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerIndex;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    K2Node_CustomEvent_InputMode;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CanStartHoldBreath_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath) == 0x000008, "Wrong alignment on UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath");
static_assert(sizeof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath) == 0x000068, "Wrong size on UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, EntryPoint) == 0x000000, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, K2Node_Event_IsDesignTime) == 0x000030, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000038, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, K2Node_CustomEvent_PlayerIndex) == 0x000040, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::K2Node_CustomEvent_PlayerIndex' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, K2Node_CustomEvent_InputMode) == 0x000044, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::K2Node_CustomEvent_InputMode' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000045, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000048, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_CanStartHoldBreath_ReturnValue) == 0x000060, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_CanStartHoldBreath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_BooleanAND_ReturnValue) == 0x000063, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath, CallFunc_BooleanAND_ReturnValue_1) == 0x000064, "Member 'UI_HoldBreath_C_ExecuteUbergraph_UI_HoldBreath::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.UpdateText
// 0x0008 (0x0008 - 0x0000)
struct UI_HoldBreath_C_UpdateText final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    InputMode;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HoldBreath_C_UpdateText) == 0x000004, "Wrong alignment on UI_HoldBreath_C_UpdateText");
static_assert(sizeof(UI_HoldBreath_C_UpdateText) == 0x000008, "Wrong size on UI_HoldBreath_C_UpdateText");
static_assert(offsetof(UI_HoldBreath_C_UpdateText, PlayerIndex) == 0x000000, "Member 'UI_HoldBreath_C_UpdateText::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UpdateText, InputMode) == 0x000004, "Member 'UI_HoldBreath_C_UpdateText::InputMode' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HoldBreath_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HoldBreath_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HoldBreath_C_PreConstruct");
static_assert(sizeof(UI_HoldBreath_C_PreConstruct) == 0x000001, "Wrong size on UI_HoldBreath_C_PreConstruct");
static_assert(offsetof(UI_HoldBreath_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HoldBreath_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.OnCameraStateChanged
// 0x0048 (0x0048 - 0x0000)
struct UI_HoldBreath_C_OnCameraStateChanged final
{
public:
	ECameraPositionState                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECameraPositionState                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterSwayParameters               NewLocalVar_0;                                     // 0x0004(0x0018)(Edit, BlueprintVisible, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HoldBreath_C_OnCameraStateChanged) == 0x000008, "Wrong alignment on UI_HoldBreath_C_OnCameraStateChanged");
static_assert(sizeof(UI_HoldBreath_C_OnCameraStateChanged) == 0x000048, "Wrong size on UI_HoldBreath_C_OnCameraStateChanged");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, OldState) == 0x000000, "Member 'UI_HoldBreath_C_OnCameraStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, NewState) == 0x000001, "Member 'UI_HoldBreath_C_OnCameraStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, NewLocalVar_0) == 0x000004, "Member 'UI_HoldBreath_C_OnCameraStateChanged::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'UI_HoldBreath_C_OnCameraStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000020, "Member 'UI_HoldBreath_C_OnCameraStateChanged::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'UI_HoldBreath_C_OnCameraStateChanged::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UI_HoldBreath_C_OnCameraStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, K2Node_DynamicCast_AsWeapon) == 0x000038, "Member 'UI_HoldBreath_C_OnCameraStateChanged::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'UI_HoldBreath_C_OnCameraStateChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_OnCameraStateChanged, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'UI_HoldBreath_C_OnCameraStateChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.UpdateRichText
// 0x0038 (0x0038 - 0x0000)
struct UI_HoldBreath_C_UpdateRichText final
{
public:
	bool                                          IsHoldingBreath_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetHoldBreathRichText_Text;               // 0x0008(0x0018)()
	class FText                                   CallFunc_GetReleaseBreathRichText_Text;            // 0x0020(0x0018)()
};
static_assert(alignof(UI_HoldBreath_C_UpdateRichText) == 0x000008, "Wrong alignment on UI_HoldBreath_C_UpdateRichText");
static_assert(sizeof(UI_HoldBreath_C_UpdateRichText) == 0x000038, "Wrong size on UI_HoldBreath_C_UpdateRichText");
static_assert(offsetof(UI_HoldBreath_C_UpdateRichText, IsHoldingBreath_0) == 0x000000, "Member 'UI_HoldBreath_C_UpdateRichText::IsHoldingBreath_0' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UpdateRichText, CallFunc_GetHoldBreathRichText_Text) == 0x000008, "Member 'UI_HoldBreath_C_UpdateRichText::CallFunc_GetHoldBreathRichText_Text' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UpdateRichText, CallFunc_GetReleaseBreathRichText_Text) == 0x000020, "Member 'UI_HoldBreath_C_UpdateRichText::CallFunc_GetReleaseBreathRichText_Text' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.BindToCharacter
// 0x0098 (0x0098 - 0x0000)
struct UI_HoldBreath_C_BindToCharacter final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_StaminaComponent_C*                 K2Node_DynamicCast_AsBP_Stamina_Component;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ECameraPositionState OldState, ECameraPositionState NewState)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaminaComponent*                      CallFunc_GetStaminaComponent_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HoldBreath_C_BindToCharacter) == 0x000008, "Wrong alignment on UI_HoldBreath_C_BindToCharacter");
static_assert(sizeof(UI_HoldBreath_C_BindToCharacter) == 0x000098, "Wrong size on UI_HoldBreath_C_BindToCharacter");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'UI_HoldBreath_C_BindToCharacter::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000018, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_DynamicCast_AsBP_Stamina_Component) == 0x000028, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_DynamicCast_AsBP_Stamina_Component' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000038, "Member 'UI_HoldBreath_C_BindToCharacter::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UI_HoldBreath_C_BindToCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000064, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x000078, "Member 'UI_HoldBreath_C_BindToCharacter::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_DynamicCast_AsHuman_Character) == 0x000080, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'UI_HoldBreath_C_BindToCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_BindToCharacter, CallFunc_GetStaminaComponent_ReturnValue) == 0x000090, "Member 'UI_HoldBreath_C_BindToCharacter::CallFunc_GetStaminaComponent_ReturnValue' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.UnbindFromCharacter
// 0x0088 (0x0088 - 0x0000)
struct UI_HoldBreath_C_UnbindFromCharacter final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ECameraPositionState OldState, ECameraPositionState NewState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaminaComponent*                      CallFunc_GetStaminaComponent_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_StaminaComponent_C*                 K2Node_DynamicCast_AsBP_Stamina_Component;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HoldBreath_C_UnbindFromCharacter) == 0x000008, "Wrong alignment on UI_HoldBreath_C_UnbindFromCharacter");
static_assert(sizeof(UI_HoldBreath_C_UnbindFromCharacter) == 0x000088, "Wrong size on UI_HoldBreath_C_UnbindFromCharacter");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'UI_HoldBreath_C_UnbindFromCharacter::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000018, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000058, "Member 'UI_HoldBreath_C_UnbindFromCharacter::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_DynamicCast_AsHuman_Character) == 0x000060, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, CallFunc_GetStaminaComponent_ReturnValue) == 0x000070, "Member 'UI_HoldBreath_C_UnbindFromCharacter::CallFunc_GetStaminaComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_DynamicCast_AsBP_Stamina_Component) == 0x000078, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_DynamicCast_AsBP_Stamina_Component' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_UnbindFromCharacter, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'UI_HoldBreath_C_UnbindFromCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.GetHoldBreathRichText
// 0x0188 (0x0188 - 0x0000)
struct UI_HoldBreath_C_GetHoldBreathRichText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FName                                   RowName;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionNameLocal;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetInputIconText_InputIconString;         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0170(0x0018)()
};
static_assert(alignof(UI_HoldBreath_C_GetHoldBreathRichText) == 0x000008, "Wrong alignment on UI_HoldBreath_C_GetHoldBreathRichText");
static_assert(sizeof(UI_HoldBreath_C_GetHoldBreathRichText) == 0x000188, "Wrong size on UI_HoldBreath_C_GetHoldBreathRichText");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, Text) == 0x000000, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::Text' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, RowName) == 0x000018, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::RowName' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, ActionNameLocal) == 0x000020, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::ActionNameLocal' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, CallFunc_GetInputIconText_InputIconString) == 0x000028, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::CallFunc_GetInputIconText_InputIconString' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, K2Node_MakeArray_Array) == 0x000090, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, K2Node_MakeArray_Array_2) == 0x000160, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetHoldBreathRichText, CallFunc_Format_ReturnValue_2) == 0x000170, "Member 'UI_HoldBreath_C_GetHoldBreathRichText::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function UI_HoldBreath.UI_HoldBreath_C.GetReleaseBreathRichText
// 0x0188 (0x0188 - 0x0000)
struct UI_HoldBreath_C_GetReleaseBreathRichText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FName                                   RowName;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionNameLocal;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetInputIconText_InputIconString;         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0170(0x0018)()
};
static_assert(alignof(UI_HoldBreath_C_GetReleaseBreathRichText) == 0x000008, "Wrong alignment on UI_HoldBreath_C_GetReleaseBreathRichText");
static_assert(sizeof(UI_HoldBreath_C_GetReleaseBreathRichText) == 0x000188, "Wrong size on UI_HoldBreath_C_GetReleaseBreathRichText");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, Text) == 0x000000, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::Text' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, RowName) == 0x000018, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::RowName' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, ActionNameLocal) == 0x000020, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::ActionNameLocal' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, CallFunc_GetInputIconText_InputIconString) == 0x000028, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::CallFunc_GetInputIconText_InputIconString' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, K2Node_MakeArray_Array) == 0x000090, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, K2Node_MakeArray_Array_2) == 0x000160, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_HoldBreath_C_GetReleaseBreathRichText, CallFunc_Format_ReturnValue_2) == 0x000170, "Member 'UI_HoldBreath_C_GetReleaseBreathRichText::CallFunc_Format_ReturnValue_2' has a wrong offset!");

}

