#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialBottlesManager

#include "Basic.hpp"

#include "BP_TutorialBottlesManager_classes.hpp"
#include "BP_TutorialBottlesManager_parameters.hpp"


namespace SDK
{

// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.ExecuteUbergraph_BP_TutorialBottlesManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialBottlesManager_C::ExecuteUbergraph_BP_TutorialBottlesManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "ExecuteUbergraph_BP_TutorialBottlesManager");

	Params::BP_TutorialBottlesManager_C_ExecuteUbergraph_BP_TutorialBottlesManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.OnHitTartget
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialBottlesManager_C::OnHitTartget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "OnHitTartget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialBottlesManager_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.Reset Hit
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialBottlesManager_C::Reset_Hit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "Reset Hit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.Wait For Next Hits
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialBottlesManager_C::Wait_For_Next_Hits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "Wait For Next Hits");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.ResetActorState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TutorialBottlesManager_C::ResetActorState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "ResetActorState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.OnTargetHIt
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              FHitComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialBottlesManager_C::OnTargetHIt(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "OnTargetHIt");

	Params::BP_TutorialBottlesManager_C_OnTargetHIt Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.DamageType = DamageType;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.Update
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitPoint                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDirection                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialBottlesManager_C::Update(const struct FVector& HitPoint, const struct FVector& HitDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "Update");

	Params::BP_TutorialBottlesManager_C_Update Parms{};

	Parms.HitPoint = std::move(HitPoint);
	Parms.HitDirection = std::move(HitDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TutorialBottlesManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.ShowHints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TutorialBottlesManager_C::ShowHints(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "ShowHints");

	Params::BP_TutorialBottlesManager_C_ShowHints Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.RespawnItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TutorialBottlesManager_C::RespawnItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "RespawnItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.ShowFirstShootingRangeHints
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TutorialBottlesManager_C::ShowFirstShootingRangeHints(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "ShowFirstShootingRangeHints");

	Params::BP_TutorialBottlesManager_C_ShowFirstShootingRangeHints Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialBottlesManager.BP_TutorialBottlesManager_C.IsDirty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDirty_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TutorialBottlesManager_C::IsDirty(bool* IsDirty_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialBottlesManager_C", "IsDirty");

	Params::BP_TutorialBottlesManager_C_IsDirty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDirty_0 != nullptr)
		*IsDirty_0 = Parms.IsDirty_0;
}

}

