#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SignalJammer

#include "Basic.hpp"

#include "S_CustomMapMarker_Fade_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_CustomMapMarker_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SignalJammer.BP_SignalJammer_C.Signal Jammer Interaction Triggered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature final
{
public:
	class ABP_SignalJammer_C*                     Interacted_Signal_Jammer;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Interacting_Character;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature) == 0x000008, "Wrong alignment on BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature");
static_assert(sizeof(BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature) == 0x000010, "Wrong size on BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature");
static_assert(offsetof(BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature, Interacted_Signal_Jammer) == 0x000000, "Member 'BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature::Interacted_Signal_Jammer' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature, Interacting_Character) == 0x000008, "Member 'BP_SignalJammer_C_Signal_Jammer_Interaction_Triggered__DelegateSignature::Interacting_Character' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.ExecuteUbergraph_BP_SignalJammer
// 0x0298 (0x0298 - 0x0000)
struct BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0038(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_TC_Transmitter_Object_C*            K2Node_DynamicCast_AsBP_TC_Transmitter_Object;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TC_Transmitter_Object_C*            K2Node_DynamicCast_AsBP_TC_Transmitter_Object_1;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script_1;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches_1;    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue;             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_CustomEvent_Character_That_Used_Jammer;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender;                 // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Signal_Jammer_Used_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Signal_Jammer_Ended_ReturnValue;     // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches_2;    // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue_1;           // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender_1;               // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor_1;    // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script_2;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x025F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches_3;    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue_2;           // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        CallFunc_Array_Get_Item;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue_3;           // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer) == 0x000008, "Wrong alignment on BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer");
static_assert(sizeof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer) == 0x000298, "Wrong size on BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, EntryPoint) == 0x000000, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000018, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000020, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000028, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000030, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_bFromSweep) == 0x000034, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_SweepResult) == 0x000038, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_TC_Transmitter_Object) == 0x0000D0, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_TC_Transmitter_Object' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Character_Script) == 0x0000E0, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Player_State_Matches) == 0x0000F0, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Player_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000100, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OtherActor) == 0x000108, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OtherComp) == 0x000110, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000118, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_TC_Transmitter_Object_1) == 0x000120, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_TC_Transmitter_Object_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_3) == 0x000128, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Character_Script_1) == 0x000130, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Character_Script_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_4) == 0x000138, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_GetController_ReturnValue) == 0x000140, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000148, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_5) == 0x000150, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Player_State_Matches_1) == 0x000158, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Player_State_Matches_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_6) == 0x000160, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsInTheSameGroup_ReturnValue) == 0x000161, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsInTheSameGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000162, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000164, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000178, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_CustomEvent_Character_That_Used_Jammer) == 0x000180, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_CustomEvent_Character_That_Used_Jammer' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_GetUserControllerId_ReturnValue) == 0x000188, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000190, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_Sender) == 0x0001A0, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_Interacting_Actor) == 0x0001A8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_Interacting_Actor' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Send_Signal_Jammer_Used_ReturnValue) == 0x0001B0, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Send_Signal_Jammer_Used_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Send_Signal_Jammer_Ended_ReturnValue) == 0x0001B1, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Send_Signal_Jammer_Ended_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Array_Add_ReturnValue) == 0x0001B4, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001B8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Array_Length_ReturnValue) == 0x0001BC, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Array_RemoveItem_ReturnValue) == 0x0001C0, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001C4, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0001D8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001E0, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001EC, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0001F8, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Conv_VectorToString_ReturnValue) == 0x000200, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Concat_StrStr_ReturnValue) == 0x000210, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Conv_StringToName_ReturnValue) == 0x000220, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000228, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Player_State_Matches_2) == 0x000230, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Player_State_Matches_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_7) == 0x000238, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsInTheSameGroup_ReturnValue_1) == 0x000239, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsInTheSameGroup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_Sender_1) == 0x000240, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_ComponentBoundEvent_Interacting_Actor_1) == 0x000248, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_ComponentBoundEvent_Interacting_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Character_Script_2) == 0x000250, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Character_Script_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_8) == 0x000258, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsServer_ReturnValue) == 0x000259, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Array_Contains_ReturnValue) == 0x00025A, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsValid_ReturnValue_1) == 0x00025B, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsDedicatedServer_ReturnValue) == 0x00025C, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00025D, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00025E, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00025F, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_AsBP_Player_State_Matches_3) == 0x000260, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_AsBP_Player_State_Matches_3' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, K2Node_DynamicCast_bSuccess_9) == 0x000268, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsInTheSameGroup_ReturnValue_2) == 0x000269, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsInTheSameGroup_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, Temp_int_Loop_Counter_Variable) == 0x00026C, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Less_IntInt_ReturnValue) == 0x000270, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Add_IntInt_ReturnValue) == 0x000274, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, Temp_float_Variable) == 0x000278, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00027C, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, Temp_int_Array_Index_Variable) == 0x000280, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_Array_Get_Item) == 0x000288, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000290, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer, CallFunc_IsInTheSameGroup_ReturnValue_3) == 0x000291, "Member 'BP_SignalJammer_C_ExecuteUbergraph_BP_SignalJammer::CallFunc_IsInTheSameGroup_ReturnValue_3' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction Start On Client__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature) == 0x000008, "Wrong alignment on BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature");
static_assert(sizeof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature) == 0x000010, "Wrong size on BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature, Sender) == 0x000000, "Member 'BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_Interaction_Start_On_Client__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.Signal Jammer Was Used
// 0x0008 (0x0008 - 0x0000)
struct BP_SignalJammer_C_Signal_Jammer_Was_Used final
{
public:
	class AHumanCharacter*                        Character_That_Used_Jammer;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_Signal_Jammer_Was_Used) == 0x000008, "Wrong alignment on BP_SignalJammer_C_Signal_Jammer_Was_Used");
static_assert(sizeof(BP_SignalJammer_C_Signal_Jammer_Was_Used) == 0x000008, "Wrong size on BP_SignalJammer_C_Signal_Jammer_Was_Used");
static_assert(offsetof(BP_SignalJammer_C_Signal_Jammer_Was_Used, Character_That_Used_Jammer) == 0x000000, "Member 'BP_SignalJammer_C_Signal_Jammer_Was_Used::Character_That_Used_Jammer' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_SignalJammer_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start on Server__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature) == 0x000008, "Wrong alignment on BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature");
static_assert(sizeof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature) == 0x000010, "Wrong size on BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature, Sender) == 0x000000, "Member 'BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_SignalJammer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct BP_SignalJammer_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SignalJammer_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SignalJammer_C_UserConstructionScript");
static_assert(sizeof(BP_SignalJammer_C_UserConstructionScript) == 0x000048, "Wrong size on BP_SignalJammer_C_UserConstructionScript");
static_assert(offsetof(BP_SignalJammer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_SignalJammer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000028, "Member 'BP_SignalJammer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_SignalJammer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_SignalJammer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh) == 0x000038, "Member 'BP_SignalJammer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_SignalJammer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000041, "Member 'BP_SignalJammer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.Check Jammed Player For Analytics
// 0x0020 (0x0020 - 0x0000)
struct BP_SignalJammer_C_Check_Jammed_Player_For_Analytics final
{
public:
	class ABP_Character_C*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics) == 0x000008, "Wrong alignment on BP_SignalJammer_C_Check_Jammed_Player_For_Analytics");
static_assert(sizeof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics) == 0x000020, "Wrong size on BP_SignalJammer_C_Check_Jammed_Player_For_Analytics");
static_assert(offsetof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics, Character) == 0x000000, "Member 'BP_SignalJammer_C_Check_Jammed_Player_For_Analytics::Character' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics, Temp_int_Variable) == 0x000008, "Member 'BP_SignalJammer_C_Check_Jammed_Player_For_Analytics::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics, Temp_int_Variable_1) == 0x00000C, "Member 'BP_SignalJammer_C_Check_Jammed_Player_For_Analytics::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'BP_SignalJammer_C_Check_Jammed_Player_For_Analytics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SignalJammer_C_Check_Jammed_Player_For_Analytics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'BP_SignalJammer_C_Check_Jammed_Player_For_Analytics::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Check_Jammed_Player_For_Analytics, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_SignalJammer_C_Check_Jammed_Player_For_Analytics::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.Set New Jamming Area Location
// 0x0100 (0x0100 - 0x0000)
struct BP_SignalJammer_C_Set_New_Jamming_Area_Location final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SideB;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SideA;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BetaAngle;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0024(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_Set_New_Jamming_Area_Location) == 0x000004, "Wrong alignment on BP_SignalJammer_C_Set_New_Jamming_Area_Location");
static_assert(sizeof(BP_SignalJammer_C_Set_New_Jamming_Area_Location) == 0x000100, "Wrong size on BP_SignalJammer_C_Set_New_Jamming_Area_Location");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, NewLocation) == 0x000000, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::NewLocation' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, SideB) == 0x00000C, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::SideB' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, SideA) == 0x000010, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::SideA' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, BetaAngle) == 0x000014, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::BetaAngle' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, Temp_bool_Variable) == 0x000018, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, Temp_int_Variable) == 0x00001C, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, Temp_int_Variable_1) == 0x000020, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000024, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B0, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_RandomInteger_ReturnValue) == 0x0000BC, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, K2Node_Select_Default) == 0x0000C4, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000CC, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_DegCos_ReturnValue) == 0x0000D0, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0000D4, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E4, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_DegCos_ReturnValue_1) == 0x0000F4, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000F8, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Set_New_Jamming_Area_Location, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000FC, "Member 'BP_SignalJammer_C_Set_New_Jamming_Area_Location::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.Update Jamming Area Marker
// 0x0200 (0x0200 - 0x0000)
struct BP_SignalJammer_C_Update_Jamming_Area_Marker final
{
public:
	class ABP_Character_C*                        BP_Character;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x0038(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_Copy_ReturnValue;                           // 0x0088(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_SetFieldsInStruct_StructOut;                // 0x00D8(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade;          // 0x0128(0x00D8)(HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_Update_Jamming_Area_Marker) == 0x000008, "Wrong alignment on BP_SignalJammer_C_Update_Jamming_Area_Marker");
static_assert(sizeof(BP_SignalJammer_C_Update_Jamming_Area_Marker) == 0x000200, "Wrong size on BP_SignalJammer_C_Update_Jamming_Area_Marker");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, BP_Character) == 0x000000, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::BP_Character' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00000C, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000020, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, K2Node_MakeStruct_S_CustomMapMarker) == 0x000038, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, K2Node_Copy_ReturnValue) == 0x000088, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, K2Node_SetFieldsInStruct_StructOut) == 0x0000D8, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Marker, K2Node_MakeStruct_S_CustomMapMarker_Fade) == 0x000128, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Marker::K2Node_MakeStruct_S_CustomMapMarker_Fade' has a wrong offset!");

// Function BP_SignalJammer.BP_SignalJammer_C.Update Jamming Area Range
// 0x0008 (0x0008 - 0x0000)
struct BP_SignalJammer_C_Update_Jamming_Area_Range final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SignalJammer_C_Update_Jamming_Area_Range) == 0x000004, "Wrong alignment on BP_SignalJammer_C_Update_Jamming_Area_Range");
static_assert(sizeof(BP_SignalJammer_C_Update_Jamming_Area_Range) == 0x000008, "Wrong size on BP_SignalJammer_C_Update_Jamming_Area_Range");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Range, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Range::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SignalJammer_C_Update_Jamming_Area_Range, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'BP_SignalJammer_C_Update_Jamming_Area_Range::CallFunc_Lerp_ReturnValue' has a wrong offset!");

}

