#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.ExecuteUbergraph_BP_GMComponent_ADM_Base
// 0x0338 (0x0338 - 0x0000)
struct BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_GameState_AirDropModular_C*         K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_AirDropModular_C*         K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular_1; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSComponent_ADM_C*                  CallFunc_Create_GSComponent_for_Game_State_Game_State_Component; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Game_Mode_Is_Running;           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_CustomEvent_Player_Controller_1;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_AirDropModular_C*  K2Node_CustomEvent_Player_Controller;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Number_of_Flashes;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Flash_Label_Color;              // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Register_ADM_Component_Assigned_ID;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Deregister_ADM_Component_Successful;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0148(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component; // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_2; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_CustomEvent_New_Controller;                 // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component_1; // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_PCComponent_ADM_C*>          CallFunc_Get_PCComponents_for_Player_Controllers_Player_Controller_Component; // 0x01A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_PCComponent_ADM_C*                  CallFunc_Get_PCComponent_for_Player_Controller_Player_Controller_Component; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_PCComponent_for_Player_Controller_Found; // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_CustomEvent_Exiting_Controller;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item_2;                         // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item_3;                         // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular_1; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23B[0x1];                                      // 0x023B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_3; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_4;             // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_4;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base) == 0x000338, "Wrong size on BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, EntryPoint) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular) == 0x000020, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000060, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetGameState_ReturnValue_1) == 0x000078, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular_1) == 0x000080, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Create_GSComponent_for_Game_State_Game_State_Component) == 0x000090, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Create_GSComponent_for_Game_State_Game_State_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Array_Index_Variable_1) == 0x0000A0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetGameMode_ReturnValue) == 0x0000A8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular) == 0x0000B0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetGameMode_ReturnValue_1) == 0x0000C0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1) == 0x0000D0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Array_Index_Variable_2) == 0x0000E0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_CustomEvent_Game_Mode_Is_Running) == 0x0000E4, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_CustomEvent_Game_Mode_Is_Running' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_CustomEvent_Player_Controller_1) == 0x0000E8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_CustomEvent_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_CustomEvent_Player_Controller) == 0x0000F0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_CustomEvent_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_CustomEvent_Number_of_Flashes) == 0x0000F8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_CustomEvent_Number_of_Flashes' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_CustomEvent_Flash_Label_Color) == 0x0000FC, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_CustomEvent_Flash_Label_Color' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_Event_EndPlayReason) == 0x00010C, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Register_ADM_Component_Assigned_ID) == 0x000110, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Register_ADM_Component_Assigned_ID' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Loop_Counter_Variable_2) == 0x000114, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Deregister_ADM_Component_Successful) == 0x000118, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Deregister_ADM_Component_Successful' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Array_Index_Variable_3) == 0x000120, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetObjectName_ReturnValue) == 0x000128, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000138, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetPlayerControllers_ReturnValue) == 0x000148, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular) == 0x000168, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess_4) == 0x000170, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetGameMode_ReturnValue_2) == 0x000178, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component) == 0x000180, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_2) == 0x000188, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess_5) == 0x000190, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_CustomEvent_New_Controller) == 0x000198, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_CustomEvent_New_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component_1) == 0x0001A0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Get_PCComponents_for_Player_Controllers_Player_Controller_Component) == 0x0001A8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Get_PCComponents_for_Player_Controllers_Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Get_PCComponent_for_Player_Controller_Player_Controller_Component) == 0x0001B8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Get_PCComponent_for_Player_Controller_Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Get_PCComponent_for_Player_Controller_Found) == 0x0001C0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Get_PCComponent_for_Player_Controller_Found' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_CustomEvent_Exiting_Controller) == 0x0001D8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_CustomEvent_Exiting_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Less_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Get_Item_2) == 0x0001E8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetOwner_ReturnValue) == 0x0001F0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Length_ReturnValue_2) == 0x0001F8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001FC, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000200, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Max_ReturnValue) == 0x000204, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, Temp_int_Loop_Counter_Variable_3) == 0x000208, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Get_Item_3) == 0x000210, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_Length_ReturnValue_3) == 0x000218, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetOwner_ReturnValue_1) == 0x000220, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Less_IntInt_ReturnValue_1) == 0x000228, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular_1) == 0x000230, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess_6) == 0x000238, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_IsValid_ReturnValue_1) == 0x000239, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Less_IntInt_ReturnValue_2) == 0x00023A, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Add_IntInt_ReturnValue_2) == 0x00023C, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetGameMode_ReturnValue_3) == 0x000240, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetDisplayName_ReturnValue_1) == 0x000248, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetDisplayName_ReturnValue_2) == 0x000258, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_3) == 0x000268, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, K2Node_DynamicCast_bSuccess_7) == 0x000270, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000278, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000288, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000298, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0002A8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0002B8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetOwner_ReturnValue_2) == 0x0002C8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetDisplayName_ReturnValue_3) == 0x0002D0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetDisplayName_ReturnValue_4) == 0x0002E0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GetGameMode_ReturnValue_4) == 0x0002F0, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GetGameMode_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0002F8, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000308, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000310, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000320, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000330, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base, CallFunc_Array_AddUnique_ReturnValue) == 0x000334, "Member 'BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Logging Out
// 0x0008 (0x0008 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Player_Logging_Out final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Exiting_Controller;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Player_Logging_Out) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Player_Logging_Out");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Player_Logging_Out) == 0x000008, "Wrong size on BP_GMComponent_ADM_Base_C_Player_Logging_Out");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Player_Logging_Out, Exiting_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Player_Logging_Out::Exiting_Controller' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Logged In
// 0x0008 (0x0008 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Player_Logged_In final
{
public:
	class ABP_PlayerController_AirDropModular_C*  New_Controller;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Player_Logged_In) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Player_Logged_In");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Player_Logged_In) == 0x000008, "Wrong size on BP_GMComponent_ADM_Base_C_Player_Logged_In");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Player_Logged_In, New_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Player_Logged_In::New_Controller' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GMComponent_ADM_Base_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_GMComponent_ADM_Base_C_ReceiveEndPlay");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_GMComponent_ADM_Base_C_ReceiveEndPlay");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Flash Debug UI Tab Labels
// 0x0014 (0x0014 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels final
{
public:
	int32                                         Number_of_Flashes;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Flash_Label_Color;                                 // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels) == 0x000004, "Wrong alignment on BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels) == 0x000014, "Wrong size on BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels, Number_of_Flashes) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels::Number_of_Flashes' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels, Flash_Label_Color) == 0x000004, "Member 'BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels::Flash_Label_Color' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Closed Debug UI
// 0x0008 (0x0008 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI) == 0x000008, "Wrong size on BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI, Player_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI::Player_Controller' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Opened Debug UI
// 0x0008 (0x0008 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI) == 0x000008, "Wrong size on BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI, Player_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI::Player_Controller' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Game Mode Toggled
// 0x0001 (0x0001 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Game_Mode_Toggled final
{
public:
	bool                                          Game_Mode_Is_Running;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Game_Mode_Toggled) == 0x000001, "Wrong alignment on BP_GMComponent_ADM_Base_C_Game_Mode_Toggled");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Game_Mode_Toggled) == 0x000001, "Wrong size on BP_GMComponent_ADM_Base_C_Game_Mode_Toggled");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Game_Mode_Toggled, Game_Mode_Is_Running) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Game_Mode_Toggled::Game_Mode_Is_Running' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Create PCComponent for Player Controller
// 0x0048 (0x0048 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  Player_Controller_Component;                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_AddComponentToActor_OutNewComponent;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_AirDropModular_C*  CallFunc_Get_Player_Controller_Player_Controller;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller) == 0x000048, "Wrong size on BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller, Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller::Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller, Player_Controller_Component) == 0x000008, "Member 'BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller::Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller, CallFunc_AddComponentToActor_OutNewComponent) == 0x000010, "Member 'BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller::CallFunc_AddComponentToActor_OutNewComponent' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller, CallFunc_Get_Player_Controller_Player_Controller) == 0x000018, "Member 'BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller::CallFunc_Get_Player_Controller_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Get PCComponent for Player Controller
// 0x0050 (0x0050 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  Player_Controller_Component;                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  Matching_Player_Controller_Component;              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller) == 0x000050, "Wrong size on BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, Player_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, Player_Controller_Component) == 0x000008, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, Found) == 0x000010, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::Found' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, Matching_Player_Controller_Component) == 0x000018, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::Matching_Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Initialize Bindings
// 0x0070 (0x0070 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Initialize_Bindings final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_PlayerController_AirDropModular_C* Player_Controller)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ABP_PlayerController_AirDropModular_C* Player_Controller)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Game_Mode_Is_Running)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Initialize_Bindings) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Initialize_Bindings");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Initialize_Bindings) == 0x000070, "Wrong size on BP_GMComponent_ADM_Base_C_Initialize_Bindings");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, Success) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::Success' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, CallFunc_GetGameMode_ReturnValue) == 0x000048, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular) == 0x000060, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Initialize_Bindings, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_GMComponent_ADM_Base_C_Initialize_Bindings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Create GSComponent for Game State
// 0x0018 (0x0018 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State final
{
public:
	class ABP_GameState_AirDropModular_C*         Game_State;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSComponent_ADM_C*                  Game_State_Component_0;                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSComponent_ADM_C*                  CallFunc_AddComponentToActor_OutNewComponent;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State) == 0x000018, "Wrong size on BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State, Game_State) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State::Game_State' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State, Game_State_Component_0) == 0x000008, "Member 'BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State::Game_State_Component_0' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State, CallFunc_AddComponentToActor_OutNewComponent) == 0x000010, "Member 'BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State::CallFunc_AddComponentToActor_OutNewComponent' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Is Player Winner
// 0x0010 (0x0010 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Is_Player_Winner final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player_Is_Winner;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Output_is_Valid;                                   // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Is_Player_Winner) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Is_Player_Winner");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Is_Player_Winner) == 0x000010, "Wrong size on BP_GMComponent_ADM_Base_C_Is_Player_Winner");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Is_Player_Winner, Player_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Is_Player_Winner::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Is_Player_Winner, Player_Is_Winner) == 0x000008, "Member 'BP_GMComponent_ADM_Base_C_Is_Player_Winner::Player_Is_Winner' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Is_Player_Winner, Output_is_Valid) == 0x000009, "Member 'BP_GMComponent_ADM_Base_C_Is_Player_Winner::Output_is_Valid' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Get PCComponents for Player Controllers
// 0x0078 (0x0078 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers final
{
public:
	TArray<class ABP_PlayerController_AirDropModular_C*> Player_Controllers;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UBP_PCComponent_ADM_C*>          Player_Controller_Component;                       // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UBP_PCComponent_ADM_C*>          Matching_Player_Controller_Components;             // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers) == 0x000078, "Wrong size on BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, Player_Controllers) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, Player_Controller_Component) == 0x000010, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, Matching_Player_Controller_Components) == 0x000020, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::Matching_Player_Controller_Components' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular) == 0x000060, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers, CallFunc_Array_Contains_ReturnValue) == 0x000070, "Member 'BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Ready To Start Match
// 0x000C (0x000C - 0x0000)
struct BP_GMComponent_ADM_Base_C_Ready_To_Start_Match final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match) == 0x000004, "Wrong alignment on BP_GMComponent_ADM_Base_C_Ready_To_Start_Match");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match) == 0x00000C, "Wrong size on BP_GMComponent_ADM_Base_C_Ready_To_Start_Match");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match, Return_Value) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Ready_To_Start_Match::Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_GMComponent_ADM_Base_C_Ready_To_Start_Match::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_GMComponent_ADM_Base_C_Ready_To_Start_Match::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_GMComponent_ADM_Base_C_Ready_To_Start_Match::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_GMComponent_ADM_Base_C_Ready_To_Start_Match::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Ready_To_Start_Match, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'BP_GMComponent_ADM_Base_C_Ready_To_Start_Match::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Get Rewards For Player
// 0x0018 (0x0018 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Rewards;                                           // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player) == 0x000018, "Wrong size on BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player, Player_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player, Rewards) == 0x000008, "Member 'BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player::Rewards' has a wrong offset!");

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Is Initialization Successful
// 0x0001 (0x0001 - 0x0000)
struct BP_GMComponent_ADM_Base_C_Is_Initialization_Successful final
{
public:
	bool                                          IsInitialized;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Base_C_Is_Initialization_Successful) == 0x000001, "Wrong alignment on BP_GMComponent_ADM_Base_C_Is_Initialization_Successful");
static_assert(sizeof(BP_GMComponent_ADM_Base_C_Is_Initialization_Successful) == 0x000001, "Wrong size on BP_GMComponent_ADM_Base_C_Is_Initialization_Successful");
static_assert(offsetof(BP_GMComponent_ADM_Base_C_Is_Initialization_Successful, IsInitialized) == 0x000000, "Member 'BP_GMComponent_ADM_Base_C_Is_Initialization_Successful::IsInitialized' has a wrong offset!");

}

