#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StreamingRepair

#include "Basic.hpp"

#include "BP_StreamingRepair_classes.hpp"
#include "BP_StreamingRepair_parameters.hpp"


namespace SDK
{

// Function BP_StreamingRepair.BP_StreamingRepair_C.ExecuteUbergraph_BP_StreamingRepair
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StreamingRepair_C::ExecuteUbergraph_BP_StreamingRepair(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "ExecuteUbergraph_BP_StreamingRepair");

	Params::BP_StreamingRepair_C_ExecuteUbergraph_BP_StreamingRepair Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_StreamingRepair_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.LoadSubLevelsRequired
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShelterLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LoadOnlyNewLevel                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StreamingRepair_C::LoadSubLevelsRequired(int32 ShelterLevel, bool LoadOnlyNewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "LoadSubLevelsRequired");

	Params::BP_StreamingRepair_C_LoadSubLevelsRequired Parms{};

	Parms.ShelterLevel = ShelterLevel;
	Parms.LoadOnlyNewLevel = LoadOnlyNewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.Event Load Level Blocking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StreamingRepair_C::Event_Load_Level_Blocking(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "Event Load Level Blocking");

	Params::BP_StreamingRepair_C_Event_Load_Level_Blocking Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.CheckForCorrectSublevels
// (BlueprintCallable, BlueprintEvent)

void ABP_StreamingRepair_C::CheckForCorrectSublevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "CheckForCorrectSublevels");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.SetSublevelVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldBeVisible                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ShelterLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StreamingRepair_C::SetSublevelVisibility(bool bShouldBeVisible, int32 ShelterLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "SetSublevelVisibility");

	Params::BP_StreamingRepair_C_SetSublevelVisibility Parms{};

	Parms.bShouldBeVisible = bShouldBeVisible;
	Parms.ShelterLevel = ShelterLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.UnloadInvisibleLevels
// (BlueprintCallable, BlueprintEvent)

void ABP_StreamingRepair_C::UnloadInvisibleLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "UnloadInvisibleLevels");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ABP_StreamingRepair_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_StreamingRepair_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.EventLoadLevel_WithOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NextLevel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StreamingRepair_C::EventLoadLevel_WithOverlap(int32 NextLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "EventLoadLevel_WithOverlap");

	Params::BP_StreamingRepair_C_EventLoadLevel_WithOverlap Parms{};

	Parms.NextLevel = NextLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.OnRepairLoaded
// (BlueprintCallable, BlueprintEvent)

void ABP_StreamingRepair_C::OnRepairLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "OnRepairLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.LightsLoaded
// (BlueprintCallable, BlueprintEvent)

void ABP_StreamingRepair_C::LightsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "LightsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.LoadLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StreamingRepair_C::LoadLevel(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "LoadLevel");

	Params::BP_StreamingRepair_C_LoadLevel Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StreamingRepair.BP_StreamingRepair_C.SetSubLevelVisibilityIfNeeded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShelterLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SameVisibility                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StreamingRepair_C::SetSubLevelVisibilityIfNeeded(int32 ShelterLevel, bool bNewVisibility, bool* Valid, bool* SameVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StreamingRepair_C", "SetSubLevelVisibilityIfNeeded");

	Params::BP_StreamingRepair_C_SetSubLevelVisibilityIfNeeded Parms{};

	Parms.ShelterLevel = ShelterLevel;
	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (SameVisibility != nullptr)
		*SameVisibility = Parms.SameVisibility;
}

}

