#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ShelterMap

#include "Basic.hpp"

#include "UI_ShelterMap_classes.hpp"
#include "UI_ShelterMap_parameters.hpp"


namespace SDK
{

// Function UI_ShelterMap.UI_ShelterMap_C.MPSessionEvents__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::MPSessionEvents__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "MPSessionEvents__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.ExecuteUbergraph_UI_ShelterMap
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::ExecuteUbergraph_UI_ShelterMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "ExecuteUbergraph_UI_ShelterMap");

	Params::UI_ShelterMap_C_ExecuteUbergraph_UI_ShelterMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnResetToDefaultState
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::OnResetToDefaultState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnResetToDefaultState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "Tick");

	Params::UI_ShelterMap_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BndEvt__UI_ShelterMap_ActionClose_K2Node_ComponentBoundEvent_3_OnClickedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ShelterMap_C::BndEvt__UI_ShelterMap_ActionClose_K2Node_ComponentBoundEvent_3_OnClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BndEvt__UI_ShelterMap_ActionClose_K2Node_ComponentBoundEvent_3_OnClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShelterMap_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "PreConstruct");

	Params::UI_ShelterMap_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature");

	Params::UI_ShelterMap_C_BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ShelterMap_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnChallengeManagerInitialized
// (BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::OnChallengeManagerInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnChallengeManagerInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature");

	Params::UI_ShelterMap_C_BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature");

	Params::UI_ShelterMap_C_BndEvt__UI_ShelterMap_PlayButtonWindows_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BndEvt__ActionMoreInfo_K2Node_ComponentBoundEvent_4_OnActionReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ShelterMap_C::BndEvt__ActionMoreInfo_K2Node_ComponentBoundEvent_4_OnActionReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BndEvt__ActionMoreInfo_K2Node_ComponentBoundEvent_4_OnActionReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.CheckForDoubleXP_Event
// (BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::CheckForDoubleXP_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "CheckForDoubleXP_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.StartMPSessionEvent
// (BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::StartMPSessionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "StartMPSessionEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnMapTileFocused
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UShelterMapTile*                  Tile                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::OnMapTileFocused(class UShelterMapTile* Tile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnMapTileFocused");

	Params::UI_ShelterMap_C_OnMapTileFocused Parms{};

	Parms.Tile = Tile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BndEvt__ActionPlay_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ShelterMap_C::BndEvt__ActionPlay_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BndEvt__ActionPlay_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnMapsRotationUpdated
// (BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::OnMapsRotationUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnMapsRotationUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnPlayerLeftGroup
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 Userid                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           GroupId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::OnPlayerLeftGroup(const struct FUniqueNetIdRepl& Userid, const class FString& GroupId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnPlayerLeftGroup");

	Params::UI_ShelterMap_C_OnPlayerLeftGroup Parms{};

	Parms.Userid = std::move(Userid);
	Parms.GroupId = std::move(GroupId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnPlayerJoinedGroup
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 Userid                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           GroupId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::OnPlayerJoinedGroup(const struct FUniqueNetIdRepl& Userid, const class FString& GroupId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnPlayerJoinedGroup");

	Params::UI_ShelterMap_C_OnPlayerJoinedGroup Parms{};

	Parms.Userid = std::move(Userid);
	Parms.GroupId = std::move(GroupId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnLoneWolfMessageBoxClosed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFlameWidget*                     FlameWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::OnLoneWolfMessageBoxClosed(class UFlameWidget* FlameWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnLoneWolfMessageBoxClosed");

	Params::UI_ShelterMap_C_OnLoneWolfMessageBoxClosed Parms{};

	Parms.FlameWidget = FlameWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ShelterMap_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.OnScroll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::OnScroll(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "OnScroll");

	Params::UI_ShelterMap_C_OnScroll Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BndEvt__ActionLoneWolf_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ShelterMap_C::BndEvt__ActionLoneWolf_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BndEvt__ActionLoneWolf_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.JoinMPSession
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           GamemodeAlias                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Matchmaking_Slot                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::JoinMPSession(const class FString& LevelName, const class FString& GamemodeAlias, int32 Matchmaking_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "JoinMPSession");

	Params::UI_ShelterMap_C_JoinMPSession Parms{};

	Parms.LevelName = std::move(LevelName);
	Parms.GamemodeAlias = std::move(GamemodeAlias);
	Parms.Matchmaking_Slot = Matchmaking_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.CheckInventory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::CheckInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "CheckInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdateMatchmakingMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UpdateMatchmakingMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdateMatchmakingMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdateDescriptions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     Descriptions                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_ShelterMap_C::UpdateDescriptions(TArray<class FText>& Descriptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdateDescriptions");

	Params::UI_ShelterMap_C_UpdateDescriptions Parms{};

	Parms.Descriptions = std::move(Descriptions);

	UObject::ProcessEvent(Func, &Parms);

	Descriptions = std::move(Parms.Descriptions);
}


// Function UI_ShelterMap.UI_ShelterMap_C.BindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::BindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "BindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UnbindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UnbindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UnbindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.CreateDescription
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Rule                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class UFlameTextBlock*                  Text                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::CreateDescription(const class FText& Rule, class UFlameTextBlock** Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "CreateDescription");

	Params::UI_ShelterMap_C_CreateDescription Parms{};

	Parms.Rule = std::move(Rule);

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = Parms.Text;
}


// Function UI_ShelterMap.UI_ShelterMap_C.LevelClassNameToString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             LevelClassName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           LevelName                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::LevelClassNameToString(class FName LevelClassName, class FString* LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "LevelClassNameToString");

	Params::UI_ShelterMap_C_LevelClassNameToString Parms{};

	Parms.LevelClassName = LevelClassName;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelName != nullptr)
		*LevelName = std::move(Parms.LevelName);
}


// Function UI_ShelterMap.UI_ShelterMap_C.ScrollGameInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::ScrollGameInfo(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "ScrollGameInfo");

	Params::UI_ShelterMap_C_ScrollGameInfo Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.ShowMapOnboarding
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceOnboarding                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShelterMap_C::ShowMapOnboarding(bool ForceOnboarding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "ShowMapOnboarding");

	Params::UI_ShelterMap_C_ShowMapOnboarding Parms{};

	Parms.ForceOnboarding = ForceOnboarding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.ShowMatchmakingOnboarding
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::ShowMatchmakingOnboarding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "ShowMatchmakingOnboarding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.InitTiles
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::InitTiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "InitTiles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdateMatchmakingBox
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UpdateMatchmakingBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdateMatchmakingBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdateGameModeName
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UpdateGameModeName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdateGameModeName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdateLoneWolfVisual
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UpdateLoneWolfVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdateLoneWolfVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdatePlayButtonVisual
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UpdatePlayButtonVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdatePlayButtonVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdateInfoBox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UpdateInfoBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdateInfoBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.UpdateWarningMessage
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::UpdateWarningMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "UpdateWarningMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.ShouldShowLoneWolfMessageBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShelterMap_C::ShouldShowLoneWolfMessageBox(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "ShouldShowLoneWolfMessageBox");

	Params::UI_ShelterMap_C_ShouldShowLoneWolfMessageBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UI_ShelterMap.UI_ShelterMap_C.ShowLoneWolfMessageBox
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::ShowLoneWolfMessageBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "ShowLoneWolfMessageBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.SetLoneWolfState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_LoneWolfState                         InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::SetLoneWolfState(E_LoneWolfState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "SetLoneWolfState");

	Params::UI_ShelterMap_C_SetLoneWolfState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.InitLoneWolfState
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::InitLoneWolfState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "InitLoneWolfState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.CreateTileFromCloudSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudMapRotationSlot            InCloudSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UWidget*                          MapSlot                                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::CreateTileFromCloudSlot(const struct FCloudMapRotationSlot& InCloudSlot, class UWidget** MapSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "CreateTileFromCloudSlot");

	Params::UI_ShelterMap_C_CreateTileFromCloudSlot Parms{};

	Parms.InCloudSlot = std::move(InCloudSlot);

	UObject::ProcessEvent(Func, &Parms);

	if (MapSlot != nullptr)
		*MapSlot = Parms.MapSlot;
}


// Function UI_ShelterMap.UI_ShelterMap_C.IsMapRotationSlotValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMapRotationSlotEntry            InMapRotationSlot                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShelterMap_C::IsMapRotationSlotValid(const struct FMapRotationSlotEntry& InMapRotationSlot, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "IsMapRotationSlotValid");

	Params::UI_ShelterMap_C_IsMapRotationSlotValid Parms{};

	Parms.InMapRotationSlot = std::move(InMapRotationSlot);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UI_ShelterMap.UI_ShelterMap_C.IsMapRotationSlotCurrentlyValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMapRotationSlotEntry            InMapRotationSlot                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShelterMap_C::IsMapRotationSlotCurrentlyValid(const struct FMapRotationSlotEntry& InMapRotationSlot, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "IsMapRotationSlotCurrentlyValid");

	Params::UI_ShelterMap_C_IsMapRotationSlotCurrentlyValid Parms{};

	Parms.InMapRotationSlot = std::move(InMapRotationSlot);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UI_ShelterMap.UI_ShelterMap_C.CreateTileFromMapSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudMapRotationSlot            MapRotationSlot                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class UShelterMapTile*                  Tile                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::CreateTileFromMapSlot(const struct FCloudMapRotationSlot& MapRotationSlot, class UShelterMapTile** Tile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "CreateTileFromMapSlot");

	Params::UI_ShelterMap_C_CreateTileFromMapSlot Parms{};

	Parms.MapRotationSlot = std::move(MapRotationSlot);

	UObject::ProcessEvent(Func, &Parms);

	if (Tile != nullptr)
		*Tile = Parms.Tile;
}


// Function UI_ShelterMap.UI_ShelterMap_C.ToClientEndTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDateTime                        InCloudEndTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FDateTime                        ClientEndTime                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::ToClientEndTime(const struct FDateTime& InCloudEndTime, struct FDateTime* ClientEndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "ToClientEndTime");

	Params::UI_ShelterMap_C_ToClientEndTime Parms{};

	Parms.InCloudEndTime = std::move(InCloudEndTime);

	UObject::ProcessEvent(Func, &Parms);

	if (ClientEndTime != nullptr)
		*ClientEndTime = std::move(Parms.ClientEndTime);
}


// Function UI_ShelterMap.UI_ShelterMap_C.CreateTilesFromMapRotationSlots
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::CreateTilesFromMapRotationSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "CreateTilesFromMapRotationSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.FindSlotIdByTile
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UShelterMapTile*                  InTile                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotId                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ShelterMap_C::FindSlotIdByTile(class UShelterMapTile* InTile, int32* SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "FindSlotIdByTile");

	Params::UI_ShelterMap_C_FindSlotIdByTile Parms{};

	Parms.InTile = InTile;

	UObject::ProcessEvent(Func, &Parms);

	if (SlotId != nullptr)
		*SlotId = Parms.SlotId;
}


// Function UI_ShelterMap.UI_ShelterMap_C.CheckForNoWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::CheckForNoWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "CheckForNoWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.Show No Weapons Msg Box
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             EquipMessage                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    GoToWeaponsBool                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ShelterMap_C::Show_No_Weapons_Msg_Box(const class FText& Message, const class FText& EquipMessage, bool GoToWeaponsBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "Show No Weapons Msg Box");

	Params::UI_ShelterMap_C_Show_No_Weapons_Msg_Box Parms{};

	Parms.Message = std::move(Message);
	Parms.EquipMessage = std::move(EquipMessage);
	Parms.GoToWeaponsBool = GoToWeaponsBool;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ShelterMap.UI_ShelterMap_C.AllowMatchmakingCurrencyMessages
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ShelterMap_C::AllowMatchmakingCurrencyMessages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "AllowMatchmakingCurrencyMessages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ShelterMap.UI_ShelterMap_C.GetWidgetToFocus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UUI_ShelterMap_C::GetWidgetToFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "GetWidgetToFocus");

	Params::UI_ShelterMap_C_GetWidgetToFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_ShelterMap.UI_ShelterMap_C.IsMatchmakingAllowed
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUI_ShelterMap_C::IsMatchmakingAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShelterMap_C", "IsMatchmakingAllowed");

	Params::UI_ShelterMap_C_IsMatchmakingAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

