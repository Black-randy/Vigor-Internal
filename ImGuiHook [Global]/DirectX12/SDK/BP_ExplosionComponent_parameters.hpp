#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplosionComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ExplosionComponent.BP_ExplosionComponent_C.ExecuteUbergraph_BP_ExplosionComponent
// 0x0200 (0x0200 - 0x0000)
struct BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0014(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExplosionRadius;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_InstigatorController;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_ProcessExplosionInteractions_ReturnValue; // 0x0038(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Explosions_C>     K2Node_DynamicCast_AsBPI_Explosions;               // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Explosion_Strength;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Explosion_Position;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Owner;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULethalItemComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0110(0x0010)(ConstParm, ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue;        // 0x0120(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameAssetManager*                     CallFunc_GetAssetManagerSystem_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0170(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue_1;      // 0x01A0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameAssetManager*                     CallFunc_GetAssetManagerSystem_ReturnValue_1;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue_1;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor_1;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent) == 0x000010, "Wrong alignment on BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent");
static_assert(sizeof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent) == 0x000200, "Wrong size on BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, EntryPoint) == 0x000000, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_Event_Location) == 0x000014, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_Event_ExplosionRadius) == 0x000020, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_Event_ExplosionRadius' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_Event_InstigatorController) == 0x000028, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_Event_InstigatorController' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_ProcessExplosionInteractions_ReturnValue) == 0x000038, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_ProcessExplosionInteractions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, Temp_int_Variable) == 0x000060, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_DynamicCast_AsBPI_Explosions) == 0x000070, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_DynamicCast_AsBPI_Explosions' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000088, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_CustomEvent_Explosion_Strength) == 0x000090, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_CustomEvent_Explosion_Strength' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_CustomEvent_Explosion_Position) == 0x000094, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_CustomEvent_Explosion_Position' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_CustomEvent_Owner) == 0x0000A0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetOwner_ReturnValue_3) == 0x0000A8, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, Temp_int_Loop_Counter_Variable) == 0x000104, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, Temp_object_Variable) == 0x000110, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetSoftClassReference_ReturnValue) == 0x000120, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000148, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetAssetManagerSystem_ReturnValue) == 0x000150, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetAssetManagerSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_LoadSoftClassReference_ReturnValue) == 0x000158, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_LoadSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_ClassDynamicCast_AsActor) == 0x000160, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_ClassDynamicCast_bSuccess) == 0x000168, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_SphereOverlapActors_OutActors) == 0x000170, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_SphereOverlapActors_ReturnValue) == 0x000180, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Array_Get_Item_1) == 0x000188, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Array_Length_ReturnValue_1) == 0x000190, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_ApplyDamage_ReturnValue) == 0x000194, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetSoftClassReference_ReturnValue_1) == 0x0001A0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001C8, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_IsValidClass_ReturnValue) == 0x0001D0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001D8, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_GetAssetManagerSystem_ReturnValue_1) == 0x0001E0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_GetAssetManagerSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, CallFunc_LoadSoftClassReference_ReturnValue_1) == 0x0001E8, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::CallFunc_LoadSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_ClassDynamicCast_AsActor_1) == 0x0001F0, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_ClassDynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent, K2Node_ClassDynamicCast_bSuccess_1) == 0x0001F8, "Member 'BP_ExplosionComponent_C_ExecuteUbergraph_BP_ExplosionComponent::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_ExplosionComponent.BP_ExplosionComponent_C.Event Affect Vegetation
// 0x0018 (0x0018 - 0x0000)
struct BP_ExplosionComponent_C_Event_Affect_Vegetation final
{
public:
	float                                         Explosion_Strength;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Explosion_Position;                                // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplosionComponent_C_Event_Affect_Vegetation) == 0x000008, "Wrong alignment on BP_ExplosionComponent_C_Event_Affect_Vegetation");
static_assert(sizeof(BP_ExplosionComponent_C_Event_Affect_Vegetation) == 0x000018, "Wrong size on BP_ExplosionComponent_C_Event_Affect_Vegetation");
static_assert(offsetof(BP_ExplosionComponent_C_Event_Affect_Vegetation, Explosion_Strength) == 0x000000, "Member 'BP_ExplosionComponent_C_Event_Affect_Vegetation::Explosion_Strength' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Event_Affect_Vegetation, Explosion_Position) == 0x000004, "Member 'BP_ExplosionComponent_C_Event_Affect_Vegetation::Explosion_Position' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Event_Affect_Vegetation, Owner) == 0x000010, "Member 'BP_ExplosionComponent_C_Event_Affect_Vegetation::Owner' has a wrong offset!");

// Function BP_ExplosionComponent.BP_ExplosionComponent_C.ProccessExplosion
// 0x0018 (0x0018 - 0x0000)
struct BP_ExplosionComponent_C_ProccessExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatorController;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplosionComponent_C_ProccessExplosion) == 0x000008, "Wrong alignment on BP_ExplosionComponent_C_ProccessExplosion");
static_assert(sizeof(BP_ExplosionComponent_C_ProccessExplosion) == 0x000018, "Wrong size on BP_ExplosionComponent_C_ProccessExplosion");
static_assert(offsetof(BP_ExplosionComponent_C_ProccessExplosion, Location) == 0x000000, "Member 'BP_ExplosionComponent_C_ProccessExplosion::Location' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ProccessExplosion, ExplosionRadius) == 0x00000C, "Member 'BP_ExplosionComponent_C_ProccessExplosion::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_ProccessExplosion, InstigatorController) == 0x000010, "Member 'BP_ExplosionComponent_C_ProccessExplosion::InstigatorController' has a wrong offset!");

// Function BP_ExplosionComponent.BP_ExplosionComponent_C.Destroy window Panes
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ExplosionComponent_C_Destroy_window_Panes final
{
public:
	class AWindowSashSet*                         WindowSash;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PaneID;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetPaneByIdx_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x002C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_ApplyPointDamage_ReturnValue;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplosionComponent_C_Destroy_window_Panes) == 0x000008, "Wrong alignment on BP_ExplosionComponent_C_Destroy_window_Panes");
static_assert(sizeof(BP_ExplosionComponent_C_Destroy_window_Panes) == 0x0000C0, "Wrong size on BP_ExplosionComponent_C_Destroy_window_Panes");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, WindowSash) == 0x000000, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::WindowSash' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, PaneID) == 0x000008, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::PaneID' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, Temp_int_Variable) == 0x00000C, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, CallFunc_GetPaneByIdx_ReturnValue) == 0x000020, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::CallFunc_GetPaneByIdx_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, CallFunc_MakeHitResult_ReturnValue) == 0x00002C, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_Destroy_window_Panes, CallFunc_ApplyPointDamage_ReturnValue) == 0x0000B8, "Member 'BP_ExplosionComponent_C_Destroy_window_Panes::CallFunc_ApplyPointDamage_ReturnValue' has a wrong offset!");

// Function BP_ExplosionComponent.BP_ExplosionComponent_C.LoadAffectedClasses
// 0x0070 (0x0070 - 0x0000)
struct BP_ExplosionComponent_C_LoadAffectedClasses final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameAssetManager*                     CallFunc_GetAssetManagerSystem_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplosionComponent_C_LoadAffectedClasses) == 0x000008, "Wrong alignment on BP_ExplosionComponent_C_LoadAffectedClasses");
static_assert(sizeof(BP_ExplosionComponent_C_LoadAffectedClasses) == 0x000070, "Wrong size on BP_ExplosionComponent_C_LoadAffectedClasses");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, CallFunc_GetAssetManagerSystem_ReturnValue) == 0x000010, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::CallFunc_GetAssetManagerSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, CallFunc_LoadSoftClassReference_ReturnValue) == 0x000060, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::CallFunc_LoadSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionComponent_C_LoadAffectedClasses, CallFunc_Array_AddUnique_ReturnValue) == 0x000068, "Member 'BP_ExplosionComponent_C_LoadAffectedClasses::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

