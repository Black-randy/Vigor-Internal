#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CheatWidget_LootVisualizationMarker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_CheatWidget_LootVisualizationMarker.UI_CheatWidget_LootVisualizationMarker_C
// 0x0028 (0x02E0 - 0x02B8)
class UUI_CheatWidget_LootVisualizationMarker_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFlameTextBlock*                        LootableDistance;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerIcon;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                MarkerWorldLocation;                               // 0x02D0(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DisplayDistance;                                   // 0x02DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_CheatWidget_LootVisualizationMarker(int32 EntryPoint);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_CheatWidget_LootVisualizationMarker_C">();
	}
	static class UUI_CheatWidget_LootVisualizationMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_CheatWidget_LootVisualizationMarker_C>();
	}
};
static_assert(alignof(UUI_CheatWidget_LootVisualizationMarker_C) == 0x000008, "Wrong alignment on UUI_CheatWidget_LootVisualizationMarker_C");
static_assert(sizeof(UUI_CheatWidget_LootVisualizationMarker_C) == 0x0002E0, "Wrong size on UUI_CheatWidget_LootVisualizationMarker_C");
static_assert(offsetof(UUI_CheatWidget_LootVisualizationMarker_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_CheatWidget_LootVisualizationMarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_CheatWidget_LootVisualizationMarker_C, LootableDistance) == 0x0002C0, "Member 'UUI_CheatWidget_LootVisualizationMarker_C::LootableDistance' has a wrong offset!");
static_assert(offsetof(UUI_CheatWidget_LootVisualizationMarker_C, MarkerIcon) == 0x0002C8, "Member 'UUI_CheatWidget_LootVisualizationMarker_C::MarkerIcon' has a wrong offset!");
static_assert(offsetof(UUI_CheatWidget_LootVisualizationMarker_C, MarkerWorldLocation) == 0x0002D0, "Member 'UUI_CheatWidget_LootVisualizationMarker_C::MarkerWorldLocation' has a wrong offset!");
static_assert(offsetof(UUI_CheatWidget_LootVisualizationMarker_C, DisplayDistance) == 0x0002DC, "Member 'UUI_CheatWidget_LootVisualizationMarker_C::DisplayDistance' has a wrong offset!");

}

