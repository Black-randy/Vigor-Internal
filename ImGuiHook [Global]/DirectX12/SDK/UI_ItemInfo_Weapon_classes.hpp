#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ItemInfo_Weapon

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ItemInfo_Weapon.UI_ItemInfo_Weapon_C
// 0x00E0 (0x0398 - 0x02B8)
class UUI_ItemInfo_Weapon_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Auto;                                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Bar_Damage;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Bar_Ergonomics;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Bar_MuzzleSpeed;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Bar_ROF;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         BonusAmmo;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Burst;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Heavy;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameMarqueeBlockText_C*            Marquee_BaseDamage;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameMarqueeBlockText_C*            Marquee_Capacity;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameMarqueeBlockText_C*            Marquee_EffectiveRange;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameMarqueeBlockText_C*            Marquee_Ergonomics;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameMarqueeBlockText_C*            Marquee_RateOfFire;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Optic;                                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Semi;                                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Stun;                                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Supressed;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        TextValue_BaseDamage;                              // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        TextValue_Capacity;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        TextValue_EffectiveRange;                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        TextValue_Ergonomics;                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        TextValue_RateOfFire;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         WeaponIcons;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           UI_FalseColor;                                     // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UI_True_Color;                                     // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_ItemInfo_Weapon(int32 EntryPoint);
	void Update(class UClass* WeaponClass);
	void CreateAmmoIndicators(class UClass* WeaponClass);
	void UpdateWeaponStats(class UClass* WeaponClass);
	void UpdateFireModeInfo(const struct FFirearmWeaponConfiguration& WeaponParameters);
	void UpdateMuzzleInfo(const struct FFirearmWeaponConfiguration& WeaponParameters);
	void UpdateBonusAmmo(class UClass* Class_0);
	void Set_Stat_Icons_Size(const struct FVector2D& Size);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ItemInfo_Weapon_C">();
	}
	static class UUI_ItemInfo_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ItemInfo_Weapon_C>();
	}
};
static_assert(alignof(UUI_ItemInfo_Weapon_C) == 0x000008, "Wrong alignment on UUI_ItemInfo_Weapon_C");
static_assert(sizeof(UUI_ItemInfo_Weapon_C) == 0x000398, "Wrong size on UUI_ItemInfo_Weapon_C");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_ItemInfo_Weapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Auto) == 0x0002C0, "Member 'UUI_ItemInfo_Weapon_C::Auto' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Bar_Damage) == 0x0002C8, "Member 'UUI_ItemInfo_Weapon_C::Bar_Damage' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Bar_Ergonomics) == 0x0002D0, "Member 'UUI_ItemInfo_Weapon_C::Bar_Ergonomics' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Bar_MuzzleSpeed) == 0x0002D8, "Member 'UUI_ItemInfo_Weapon_C::Bar_MuzzleSpeed' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Bar_ROF) == 0x0002E0, "Member 'UUI_ItemInfo_Weapon_C::Bar_ROF' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, BonusAmmo) == 0x0002E8, "Member 'UUI_ItemInfo_Weapon_C::BonusAmmo' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Burst) == 0x0002F0, "Member 'UUI_ItemInfo_Weapon_C::Burst' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Heavy) == 0x0002F8, "Member 'UUI_ItemInfo_Weapon_C::Heavy' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Marquee_BaseDamage) == 0x000300, "Member 'UUI_ItemInfo_Weapon_C::Marquee_BaseDamage' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Marquee_Capacity) == 0x000308, "Member 'UUI_ItemInfo_Weapon_C::Marquee_Capacity' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Marquee_EffectiveRange) == 0x000310, "Member 'UUI_ItemInfo_Weapon_C::Marquee_EffectiveRange' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Marquee_Ergonomics) == 0x000318, "Member 'UUI_ItemInfo_Weapon_C::Marquee_Ergonomics' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Marquee_RateOfFire) == 0x000320, "Member 'UUI_ItemInfo_Weapon_C::Marquee_RateOfFire' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Optic) == 0x000328, "Member 'UUI_ItemInfo_Weapon_C::Optic' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Semi) == 0x000330, "Member 'UUI_ItemInfo_Weapon_C::Semi' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Stun) == 0x000338, "Member 'UUI_ItemInfo_Weapon_C::Stun' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, Supressed) == 0x000340, "Member 'UUI_ItemInfo_Weapon_C::Supressed' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, TextValue_BaseDamage) == 0x000348, "Member 'UUI_ItemInfo_Weapon_C::TextValue_BaseDamage' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, TextValue_Capacity) == 0x000350, "Member 'UUI_ItemInfo_Weapon_C::TextValue_Capacity' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, TextValue_EffectiveRange) == 0x000358, "Member 'UUI_ItemInfo_Weapon_C::TextValue_EffectiveRange' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, TextValue_Ergonomics) == 0x000360, "Member 'UUI_ItemInfo_Weapon_C::TextValue_Ergonomics' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, TextValue_RateOfFire) == 0x000368, "Member 'UUI_ItemInfo_Weapon_C::TextValue_RateOfFire' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, WeaponIcons) == 0x000370, "Member 'UUI_ItemInfo_Weapon_C::WeaponIcons' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, UI_FalseColor) == 0x000378, "Member 'UUI_ItemInfo_Weapon_C::UI_FalseColor' has a wrong offset!");
static_assert(offsetof(UUI_ItemInfo_Weapon_C, UI_True_Color) == 0x000388, "Member 'UUI_ItemInfo_Weapon_C::UI_True_Color' has a wrong offset!");

}

