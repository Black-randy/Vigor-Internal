#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HorizontalCompass

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "S_CustomMapMarker_structs.hpp"
#include "E_TeamsMatchPhase_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_CustomMapMarker_ContextUI_structs.hpp"
#include "S_CustomMapMarker_Fade_structs.hpp"
#include "S_CustomMapMarker_ContextStorage_structs.hpp"


namespace SDK::Params
{

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.ExecuteUbergraph_UI_HorizontalCompass
// 0x0F30 (0x0F30 - 0x0000)
struct UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Tag;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_GetOptionsSaveGame_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsSaveGame*                       K2Node_DynamicCast_AsOptions_Save_Game;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameSaveSettings                      CallFunc_GetGameSettings_ReturnValue;              // 0x0058(0x0048)(ConstParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_MarkerTag;                      // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_Fade                K2Node_CustomEvent_MarkerInfo;                     // 0x00C0(0x00D8)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value;                           // 0x0198(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           K2Node_MakeStruct_S_CustomMapMarker_ContextUI;     // 0x02A0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Tag_1;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_CustomEvent_Marker;                         // 0x0398(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade;          // 0x03E8(0x00D8)(HasGetValueTypeHash)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1;   // 0x04D0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value_1;                         // 0x05B8(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x06A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue;            // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x06D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x06E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0700(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73C[0x4];                                      // 0x073C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x0740(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value_2;                         // 0x0760(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849[0x3];                                      // 0x0849(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_MarkerJammed_Is_Jammed;                // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_DynamicCast_AsCurve_Float;                  // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0872(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0873(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue_1;          // 0x087C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x088C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x088D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E[0x2];                                      // 0x088E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetMapMarkerColor_ReturnValue_2;          // 0x0890(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x08B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B5[0x3];                                      // 0x08B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x08BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x08C4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameSaveSettings& GameSettings)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x08E4(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x08FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x08FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8FE[0x2];                                      // 0x08FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0904(0x0010)(NoDestructor)
	int32                                         K2Node_Select_Default_2;                           // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade_1;        // 0x0918(0x00D8)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           K2Node_SetFieldsInStruct_StructOut;                // 0x09F8(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE1[0x3];                                      // 0x0AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0AEC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0AFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextStorage      CallFunc_Map_Find_Value_3;                         // 0x0B08(0x00E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BEA[0x6];                                      // 0x0BEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_ContextUI           CallFunc_Map_Find_Value_4;                         // 0x0BF0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD9[0x7];                                      // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_CustomMapMarker_ContextUI>   CallFunc_Map_Values_Values;                        // 0x0CE0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_CustomMapMarker_ContextUI           CallFunc_Array_Get_Item_2;                         // 0x0CF0(0x00E8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0DDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DDD[0x3];                                      // 0x0DDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameSaveSettings                      K2Node_CustomEvent_GameSettings;                   // 0x0DE0(0x0048)(ConstParm)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2C[0x4];                                      // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default_3;                           // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFocalLocation_ReturnValue;             // 0x0E48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E54[0x4];                                      // 0x0E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_DynamicCast_AsCurve_Float_1;                // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E61[0x3];                                      // 0x0E61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0E64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0E70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0E78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0E7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x0E80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0E94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA1[0x3];                                      // 0x0EA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0EA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0EBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0EC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             K2Node_CustomEvent_Old_Phase;                      // 0x0EDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             K2Node_CustomEvent_New_Phase;                      // 0x0EDD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EDE[0x2];                                      // 0x0EDE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0EE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE5[0x3];                                      // 0x0EE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0EF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFC[0x4];                                      // 0x0EFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F09[0x3];                                      // 0x0F09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0F0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller_1;       // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass");
static_assert(sizeof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass) == 0x000F30, "Wrong size on UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, EntryPoint) == 0x000000, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_Tag) == 0x000010, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000020, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetOptionsSaveGame_ReturnValue) == 0x000028, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetOptionsSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsOptions_Save_Game) == 0x000038, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsOptions_Save_Game' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000048, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetGameSettings_ReturnValue) == 0x000058, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetGameSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Keys_Keys) == 0x0000A0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_MarkerTag) == 0x0000B4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_MarkerTag' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_MarkerInfo) == 0x0000C0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_MarkerInfo' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_Value) == 0x000198, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_ReturnValue) == 0x000280, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000288, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess_2) == 0x000290, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetSize_ReturnValue) == 0x000294, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_MakeStruct_S_CustomMapMarker_ContextUI) == 0x0002A0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_MakeStruct_S_CustomMapMarker_ContextUI' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakVector2D_X) == 0x000388, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakVector2D_Y) == 0x00038C, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_Tag_1) == 0x000390, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_Marker) == 0x000398, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_Marker' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_MakeStruct_S_CustomMapMarker_Fade) == 0x0003E8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_MakeStruct_S_CustomMapMarker_Fade' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_SpawnObject_ReturnValue) == 0x0004C0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_bool_Variable) == 0x0004C8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1) == 0x0004D0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_MakeStruct_S_CustomMapMarker_ContextUI_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_Value_1) == 0x0005B8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_ReturnValue_1) == 0x0006A0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_AddChildToCanvas_ReturnValue) == 0x0006A8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0006B0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetMapMarkerColor_ReturnValue) == 0x0006B8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetMapMarkerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsTexture_2D) == 0x0006C8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess_3) == 0x0006D0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetDisplayName_ReturnValue) == 0x0006D8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Concat_StrStr_ReturnValue) == 0x0006E8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0006F8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_Event_MyGeometry) == 0x000700, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_Event_InDeltaTime) == 0x000738, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Keys_Keys_1) == 0x000740, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Array_Get_Item) == 0x000750, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Array_Length_ReturnValue_1) == 0x000758, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_Value_2) == 0x000760, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_ReturnValue_2) == 0x000848, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_FloatFloat_ReturnValue) == 0x00084C, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Is_MarkerJammed_Is_Jammed) == 0x000850, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Is_MarkerJammed_Is_Jammed' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000858, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000860, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsCurve_Float) == 0x000868, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsCurve_Float' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess_4) == 0x000870, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_IsValid_ReturnValue) == 0x000871, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000872, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000873, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000874, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Subtract_IntInt_ReturnValue) == 0x000878, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetMapMarkerColor_ReturnValue_1) == 0x00087C, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetMapMarkerColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00088C, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BooleanAND_ReturnValue) == 0x00088D, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetMapMarkerColor_ReturnValue_2) == 0x000890, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetMapMarkerColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakVector2D_X_1) == 0x0008A0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakVector2D_Y_1) == 0x0008A4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_int_Array_Index_Variable_1) == 0x0008A8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0008AC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_int_Loop_Counter_Variable) == 0x0008B0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_bool_Variable_1) == 0x0008B4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_IntInt_ReturnValue) == 0x0008B8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_int_Loop_Counter_Variable_1) == 0x0008BC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Less_IntInt_ReturnValue) == 0x0008C0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CreateDelegate_OutputDelegate) == 0x0008C4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_IntInt_ReturnValue_1) == 0x0008D4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_float_Variable) == 0x0008D8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_float_Variable_1) == 0x0008DC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_bool_Variable_2) == 0x0008E0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CreateDelegate_OutputDelegate_1) == 0x0008E4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_Select_Default) == 0x0008F4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_float_Variable_2) == 0x0008F8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_bool_Variable_3) == 0x0008FC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_bool_Variable_4) == 0x0008FD, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_Select_Default_1) == 0x000900, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_MakeStruct_Anchors) == 0x000904, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_Select_Default_2) == 0x000914, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_MakeStruct_S_CustomMapMarker_Fade_1) == 0x000918, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_MakeStruct_S_CustomMapMarker_Fade_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_int_Loop_Counter_Variable_2) == 0x0009F0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_SetFieldsInStruct_StructOut) == 0x0009F8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Less_IntInt_ReturnValue_1) == 0x000AE0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_IntInt_ReturnValue_2) == 0x000AE4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_int_Array_Index_Variable_2) == 0x000AE8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CreateDelegate_OutputDelegate_2) == 0x000AEC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Array_Get_Item_1) == 0x000AFC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_Value_3) == 0x000B08, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_ReturnValue_3) == 0x000BE8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Remove_ReturnValue) == 0x000BE9, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_Value_4) == 0x000BF0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Find_ReturnValue_4) == 0x000CD8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Map_Values_Values) == 0x000CE0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Array_Get_Item_2) == 0x000CF0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Array_Length_ReturnValue_2) == 0x000DD8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Less_IntInt_ReturnValue_2) == 0x000DDC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_GameSettings) == 0x000DE0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_GameSettings' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetUserControllerId_ReturnValue) == 0x000E28, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, Temp_object_Variable) == 0x000E30, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000E38, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_Select_Default_3) == 0x000E40, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetFocalLocation_ReturnValue) == 0x000E48, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetFocalLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsCurve_Float_1) == 0x000E58, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsCurve_Float_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess_5) == 0x000E60, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_FindLookAtRotation_ReturnValue) == 0x000E64, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetFloatValue_ReturnValue) == 0x000E70, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Roll) == 0x000E74, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Pitch) == 0x000E78, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Yaw) == 0x000E7C, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x000E80, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Lerp_ReturnValue) == 0x000E90, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000E94, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_IsValid_ReturnValue_1) == 0x000EA0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_ComposeRotators_ReturnValue) == 0x000EA4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Roll_1) == 0x000EB0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Pitch_1) == 0x000EB4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Yaw_1) == 0x000EB8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Roll_2) == 0x000EBC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Pitch_2) == 0x000EC0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_BreakRotator_Yaw_2) == 0x000EC4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000EC8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000ECC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000ED0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000ED4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000ED8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_Old_Phase) == 0x000EDC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_Old_Phase' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_CustomEvent_New_Phase) == 0x000EDD, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_CustomEvent_New_Phase' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000EE0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_SwitchEnum_CmpSuccess) == 0x000EE4, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000EE8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000EEC, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000EF0, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000EF8, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000F00, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess_6) == 0x000F08, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000F0C, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_MakeVector2D_ReturnValue) == 0x000F10, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000F18, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_AsBP_Player_Controller_1) == 0x000F20, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_AsBP_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass, K2Node_DynamicCast_bSuccess_7) == 0x000F28, "Member 'UI_HorizontalCompass_C_ExecuteUbergraph_UI_HorizontalCompass::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.MatchChanged
// 0x0002 (0x0002 - 0x0000)
struct UI_HorizontalCompass_C_MatchChanged final
{
public:
	E_TeamsMatchPhase                             Old_Phase;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             New_Phase;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HorizontalCompass_C_MatchChanged) == 0x000001, "Wrong alignment on UI_HorizontalCompass_C_MatchChanged");
static_assert(sizeof(UI_HorizontalCompass_C_MatchChanged) == 0x000002, "Wrong size on UI_HorizontalCompass_C_MatchChanged");
static_assert(offsetof(UI_HorizontalCompass_C_MatchChanged, Old_Phase) == 0x000000, "Member 'UI_HorizontalCompass_C_MatchChanged::Old_Phase' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_MatchChanged, New_Phase) == 0x000001, "Member 'UI_HorizontalCompass_C_MatchChanged::New_Phase' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.OnGameSettingsChanged
// 0x0048 (0x0048 - 0x0000)
struct UI_HorizontalCompass_C_OnGameSettingsChanged final
{
public:
	struct FGameSaveSettings                      GameSettings;                                      // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_HorizontalCompass_C_OnGameSettingsChanged) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_OnGameSettingsChanged");
static_assert(sizeof(UI_HorizontalCompass_C_OnGameSettingsChanged) == 0x000048, "Wrong size on UI_HorizontalCompass_C_OnGameSettingsChanged");
static_assert(offsetof(UI_HorizontalCompass_C_OnGameSettingsChanged, GameSettings) == 0x000000, "Member 'UI_HorizontalCompass_C_OnGameSettingsChanged::GameSettings' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.AddFadedMarker
// 0x00E0 (0x00E0 - 0x0000)
struct UI_HorizontalCompass_C_AddFadedMarker final
{
public:
	class FName                                   MarkerTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                MarkerInfo;                                        // 0x0008(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_HorizontalCompass_C_AddFadedMarker) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_AddFadedMarker");
static_assert(sizeof(UI_HorizontalCompass_C_AddFadedMarker) == 0x0000E0, "Wrong size on UI_HorizontalCompass_C_AddFadedMarker");
static_assert(offsetof(UI_HorizontalCompass_C_AddFadedMarker, MarkerTag) == 0x000000, "Member 'UI_HorizontalCompass_C_AddFadedMarker::MarkerTag' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_AddFadedMarker, MarkerInfo) == 0x000008, "Member 'UI_HorizontalCompass_C_AddFadedMarker::MarkerInfo' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.RemoveMapMarkerByTag
// 0x0008 (0x0008 - 0x0000)
struct UI_HorizontalCompass_C_RemoveMapMarkerByTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HorizontalCompass_C_RemoveMapMarkerByTag) == 0x000004, "Wrong alignment on UI_HorizontalCompass_C_RemoveMapMarkerByTag");
static_assert(sizeof(UI_HorizontalCompass_C_RemoveMapMarkerByTag) == 0x000008, "Wrong size on UI_HorizontalCompass_C_RemoveMapMarkerByTag");
static_assert(offsetof(UI_HorizontalCompass_C_RemoveMapMarkerByTag, Tag) == 0x000000, "Member 'UI_HorizontalCompass_C_RemoveMapMarkerByTag::Tag' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.AddMapMarker
// 0x0058 (0x0058 - 0x0000)
struct UI_HorizontalCompass_C_AddMapMarker final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker                     Marker;                                            // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_HorizontalCompass_C_AddMapMarker) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_AddMapMarker");
static_assert(sizeof(UI_HorizontalCompass_C_AddMapMarker) == 0x000058, "Wrong size on UI_HorizontalCompass_C_AddMapMarker");
static_assert(offsetof(UI_HorizontalCompass_C_AddMapMarker, Tag) == 0x000000, "Member 'UI_HorizontalCompass_C_AddMapMarker::Tag' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_AddMapMarker, Marker) == 0x000008, "Member 'UI_HorizontalCompass_C_AddMapMarker::Marker' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_HorizontalCompass_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HorizontalCompass_C_Tick) == 0x000004, "Wrong alignment on UI_HorizontalCompass_C_Tick");
static_assert(sizeof(UI_HorizontalCompass_C_Tick) == 0x00003C, "Wrong size on UI_HorizontalCompass_C_Tick");
static_assert(offsetof(UI_HorizontalCompass_C_Tick, MyGeometry) == 0x000000, "Member 'UI_HorizontalCompass_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_HorizontalCompass_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.OnLoaded_303A9E7341428F48F05BE78A003A4A5B
// 0x0008 (0x0008 - 0x0000)
struct UI_HorizontalCompass_C_OnLoaded_303A9E7341428F48F05BE78A003A4A5B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HorizontalCompass_C_OnLoaded_303A9E7341428F48F05BE78A003A4A5B) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_OnLoaded_303A9E7341428F48F05BE78A003A4A5B");
static_assert(sizeof(UI_HorizontalCompass_C_OnLoaded_303A9E7341428F48F05BE78A003A4A5B) == 0x000008, "Wrong size on UI_HorizontalCompass_C_OnLoaded_303A9E7341428F48F05BE78A003A4A5B");
static_assert(offsetof(UI_HorizontalCompass_C_OnLoaded_303A9E7341428F48F05BE78A003A4A5B, Loaded) == 0x000000, "Member 'UI_HorizontalCompass_C_OnLoaded_303A9E7341428F48F05BE78A003A4A5B::Loaded' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.InitializeRotators
// 0x0040 (0x0040 - 0x0000)
struct UI_HorizontalCompass_C_InitializeRotators final
{
public:
	TArray<class ABP_CompasLevelSetting_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	class ABP_CompasLevelSetting_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCompassRotator_Compass_Rotator;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCompassRotator_Landscape_Rotator;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCompassRotator_Valid_Landscape;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HorizontalCompass_C_InitializeRotators) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_InitializeRotators");
static_assert(sizeof(UI_HorizontalCompass_C_InitializeRotators) == 0x000040, "Wrong size on UI_HorizontalCompass_C_InitializeRotators");
static_assert(offsetof(UI_HorizontalCompass_C_InitializeRotators, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'UI_HorizontalCompass_C_InitializeRotators::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_InitializeRotators, CallFunc_Array_Get_Item) == 0x000010, "Member 'UI_HorizontalCompass_C_InitializeRotators::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_InitializeRotators, CallFunc_GetCompassRotator_Compass_Rotator) == 0x000018, "Member 'UI_HorizontalCompass_C_InitializeRotators::CallFunc_GetCompassRotator_Compass_Rotator' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_InitializeRotators, CallFunc_GetCompassRotator_Landscape_Rotator) == 0x000024, "Member 'UI_HorizontalCompass_C_InitializeRotators::CallFunc_GetCompassRotator_Landscape_Rotator' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_InitializeRotators, CallFunc_GetCompassRotator_Valid_Landscape) == 0x000030, "Member 'UI_HorizontalCompass_C_InitializeRotators::CallFunc_GetCompassRotator_Valid_Landscape' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_InitializeRotators, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'UI_HorizontalCompass_C_InitializeRotators::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_InitializeRotators, CallFunc_NegateRotator_ReturnValue) == 0x000034, "Member 'UI_HorizontalCompass_C_InitializeRotators::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.UpdateCompassVisiblity
// 0x0080 (0x0080 - 0x0000)
struct UI_HorizontalCompass_C_UpdateCompassVisiblity final
{
public:
	struct FGameSaveSettings                      GameSettings;                                      // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HorizontalCompass_C_UpdateCompassVisiblity) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_UpdateCompassVisiblity");
static_assert(sizeof(UI_HorizontalCompass_C_UpdateCompassVisiblity) == 0x000080, "Wrong size on UI_HorizontalCompass_C_UpdateCompassVisiblity");
static_assert(offsetof(UI_HorizontalCompass_C_UpdateCompassVisiblity, GameSettings) == 0x000000, "Member 'UI_HorizontalCompass_C_UpdateCompassVisiblity::GameSettings' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_UpdateCompassVisiblity, Temp_bool_Variable) == 0x000048, "Member 'UI_HorizontalCompass_C_UpdateCompassVisiblity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_UpdateCompassVisiblity, Temp_struct_Variable) == 0x00004C, "Member 'UI_HorizontalCompass_C_UpdateCompassVisiblity::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_UpdateCompassVisiblity, Temp_struct_Variable_1) == 0x00005C, "Member 'UI_HorizontalCompass_C_UpdateCompassVisiblity::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_UpdateCompassVisiblity, K2Node_Select_Default) == 0x00006C, "Member 'UI_HorizontalCompass_C_UpdateCompassVisiblity::K2Node_Select_Default' has a wrong offset!");

// Function UI_HorizontalCompass.UI_HorizontalCompass_C.Is MarkerJammed
// 0x0128 (0x0128 - 0x0000)
struct UI_HorizontalCompass_C_Is_MarkerJammed final
{
public:
	struct FS_CustomMapMarker                     Marker;                                            // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Is_Jammed;                                         // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EMapMarkerType>                          Jammed_Marker_Types;                               // 0x0058(0x0050)(Edit, BlueprintVisible)
	TSet<EMapMarkerType>                          K2Node_MakeVariable_MakeVariableOutput;            // 0x00A8(0x0050)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HorizontalCompass_C_Is_MarkerJammed) == 0x000008, "Wrong alignment on UI_HorizontalCompass_C_Is_MarkerJammed");
static_assert(sizeof(UI_HorizontalCompass_C_Is_MarkerJammed) == 0x000128, "Wrong size on UI_HorizontalCompass_C_Is_MarkerJammed");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, Marker) == 0x000000, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::Marker' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, Is_Jammed) == 0x000050, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::Is_Jammed' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, Jammed_Marker_Types) == 0x000058, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::Jammed_Marker_Types' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, K2Node_MakeVariable_MakeVariableOutput) == 0x0000A8, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000F8, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, CallFunc_Set_Contains_ReturnValue) == 0x000101, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, CallFunc_K2_GetPawn_ReturnValue) == 0x000108, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, K2Node_DynamicCast_AsBP_Character_Script) == 0x000118, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HorizontalCompass_C_Is_MarkerJammed, K2Node_SwitchEnum_CmpSuccess) == 0x000121, "Member 'UI_HorizontalCompass_C_Is_MarkerJammed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

