#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Shop_HighlightMarker

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_Shop_HighlightMarker.UI_Shop_HighlightMarker_C.ExecuteUbergraph_UI_Shop_HighlightMarker
// 0x0030 (0x0030 - 0x0000)
struct UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker) == 0x000008, "Wrong alignment on UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker");
static_assert(sizeof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker) == 0x000030, "Wrong size on UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, EntryPoint) == 0x000000, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, K2Node_CustomEvent_Count) == 0x000004, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, K2Node_Event_IsDesignTime) == 0x000021, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, CallFunc_RandomFloatInRange_ReturnValue) == 0x000024, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, CallFunc_BreakVector2D_X) == 0x000028, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'UI_Shop_HighlightMarker_C_ExecuteUbergraph_UI_Shop_HighlightMarker::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function UI_Shop_HighlightMarker.UI_Shop_HighlightMarker_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Shop_HighlightMarker_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Shop_HighlightMarker_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Shop_HighlightMarker_C_PreConstruct");
static_assert(sizeof(UI_Shop_HighlightMarker_C_PreConstruct) == 0x000001, "Wrong size on UI_Shop_HighlightMarker_C_PreConstruct");
static_assert(offsetof(UI_Shop_HighlightMarker_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Shop_HighlightMarker_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Shop_HighlightMarker.UI_Shop_HighlightMarker_C.UpdateHighlightCount
// 0x0004 (0x0004 - 0x0000)
struct UI_Shop_HighlightMarker_C_UpdateHighlightCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Shop_HighlightMarker_C_UpdateHighlightCount) == 0x000004, "Wrong alignment on UI_Shop_HighlightMarker_C_UpdateHighlightCount");
static_assert(sizeof(UI_Shop_HighlightMarker_C_UpdateHighlightCount) == 0x000004, "Wrong size on UI_Shop_HighlightMarker_C_UpdateHighlightCount");
static_assert(offsetof(UI_Shop_HighlightMarker_C_UpdateHighlightCount, Count) == 0x000000, "Member 'UI_Shop_HighlightMarker_C_UpdateHighlightCount::Count' has a wrong offset!");

}

