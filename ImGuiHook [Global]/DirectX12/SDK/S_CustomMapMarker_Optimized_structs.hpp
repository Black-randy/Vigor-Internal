#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_CustomMapMarker_Optimized

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_CustomMapMarker_Optimized.S_CustomMapMarker_Optimized
// 0x0038 (0x0038 - 0x0000)
struct FS_CustomMapMarker_Optimized final
{
public:
	struct FVector                                Location_34_F9336ACB44526DEE73A58BAB9D7DFFB5;      // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                Color_27_E28791234A1D046056338C9EDFAC5134;         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ImageSize_13_365E837B4012074647E2B2B03B05B19F;     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tilt_19_4387855341FF2895C2CDF8A5497B26D4;          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Label_35_2008F82240B6EEEEBE85BD812023CC4C;         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ImageSizeIsRealWorldSize_24_B61FFD3D49A48AB4C61A6489D81D29BD; // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MarkerMapIndex_32_878BF0404B328564E5BF2F893B54B361; // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_CustomMapMarker_Optimized) == 0x000008, "Wrong alignment on FS_CustomMapMarker_Optimized");
static_assert(sizeof(FS_CustomMapMarker_Optimized) == 0x000038, "Wrong size on FS_CustomMapMarker_Optimized");
static_assert(offsetof(FS_CustomMapMarker_Optimized, Location_34_F9336ACB44526DEE73A58BAB9D7DFFB5) == 0x000000, "Member 'FS_CustomMapMarker_Optimized::Location_34_F9336ACB44526DEE73A58BAB9D7DFFB5' has a wrong offset!");
static_assert(offsetof(FS_CustomMapMarker_Optimized, Color_27_E28791234A1D046056338C9EDFAC5134) == 0x00000C, "Member 'FS_CustomMapMarker_Optimized::Color_27_E28791234A1D046056338C9EDFAC5134' has a wrong offset!");
static_assert(offsetof(FS_CustomMapMarker_Optimized, ImageSize_13_365E837B4012074647E2B2B03B05B19F) == 0x000010, "Member 'FS_CustomMapMarker_Optimized::ImageSize_13_365E837B4012074647E2B2B03B05B19F' has a wrong offset!");
static_assert(offsetof(FS_CustomMapMarker_Optimized, Tilt_19_4387855341FF2895C2CDF8A5497B26D4) == 0x000018, "Member 'FS_CustomMapMarker_Optimized::Tilt_19_4387855341FF2895C2CDF8A5497B26D4' has a wrong offset!");
static_assert(offsetof(FS_CustomMapMarker_Optimized, Label_35_2008F82240B6EEEEBE85BD812023CC4C) == 0x000020, "Member 'FS_CustomMapMarker_Optimized::Label_35_2008F82240B6EEEEBE85BD812023CC4C' has a wrong offset!");
static_assert(offsetof(FS_CustomMapMarker_Optimized, ImageSizeIsRealWorldSize_24_B61FFD3D49A48AB4C61A6489D81D29BD) == 0x000030, "Member 'FS_CustomMapMarker_Optimized::ImageSizeIsRealWorldSize_24_B61FFD3D49A48AB4C61A6489D81D29BD' has a wrong offset!");
static_assert(offsetof(FS_CustomMapMarker_Optimized, MarkerMapIndex_32_878BF0404B328564E5BF2F893B54B361) == 0x000034, "Member 'FS_CustomMapMarker_Optimized::MarkerMapIndex_32_878BF0404B328564E5BF2F893B54B361' has a wrong offset!");

}

