#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootObject_Memento_Troll_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_LootObject_Memento_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootObject_Memento_Troll_Base.BP_LootObject_Memento_Troll_Base_C
// 0x0018 (0x03C8 - 0x03B0)
class ABP_LootObject_Memento_Troll_Base_C : public ABP_LootObject_Memento_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LootObject_Memento_Troll_Base_C; // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Overlap_Volume_Giggle;                             // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Giggle_Interval_Min;                               // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Giggle_Interval_Max;                               // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LootObject_Memento_Troll_Base(int32 EntryPoint);
	void Restore_Gigglebility();
	void Play_Proximity_Sound();
	void BndEvt__Overlap_Volume_Giggle_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootObject_Memento_Troll_Base_C">();
	}
	static class ABP_LootObject_Memento_Troll_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootObject_Memento_Troll_Base_C>();
	}
};
static_assert(alignof(ABP_LootObject_Memento_Troll_Base_C) == 0x000008, "Wrong alignment on ABP_LootObject_Memento_Troll_Base_C");
static_assert(sizeof(ABP_LootObject_Memento_Troll_Base_C) == 0x0003C8, "Wrong size on ABP_LootObject_Memento_Troll_Base_C");
static_assert(offsetof(ABP_LootObject_Memento_Troll_Base_C, UberGraphFrame_BP_LootObject_Memento_Troll_Base_C) == 0x0003B0, "Member 'ABP_LootObject_Memento_Troll_Base_C::UberGraphFrame_BP_LootObject_Memento_Troll_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_LootObject_Memento_Troll_Base_C, Overlap_Volume_Giggle) == 0x0003B8, "Member 'ABP_LootObject_Memento_Troll_Base_C::Overlap_Volume_Giggle' has a wrong offset!");
static_assert(offsetof(ABP_LootObject_Memento_Troll_Base_C, Giggle_Interval_Min) == 0x0003C0, "Member 'ABP_LootObject_Memento_Troll_Base_C::Giggle_Interval_Min' has a wrong offset!");
static_assert(offsetof(ABP_LootObject_Memento_Troll_Base_C, Giggle_Interval_Max) == 0x0003C4, "Member 'ABP_LootObject_Memento_Troll_Base_C::Giggle_Interval_Max' has a wrong offset!");

}

