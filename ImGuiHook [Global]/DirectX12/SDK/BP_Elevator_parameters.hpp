#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Elevator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Elevator.BP_Elevator_C.ExecuteUbergraph_BP_Elevator
// 0x0470 (0x0470 - 0x0000)
struct BP_Elevator_C_ExecuteUbergraph_BP_Elevator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Floor_2;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Floor_1;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Floor;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0040(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_OnlineElevatorControllerComponent_C* CallFunc_GetComponentByClass_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0148(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script_1;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bJumpEnabled;                   // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_CustomEvent_Character;                      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script_2;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTweenFloat*                            K2Node_CustomEvent_Tween_3;                        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenFloat*                            K2Node_CustomEvent_Tween_2;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_ElevatorFloorPosition_C*            CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTweenFloat* Tween)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ElevatorFloorPosition_C*            CallFunc_Array_Get_Item_1;                         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTweenVector* Tween)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B[0x5];                                      // 0x029B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender;                 // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenVector*                           K2Node_CustomEvent_Tween_1;                        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x02C4(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_BreakVector_X_3;                          // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Distance_Between_Floors_Distance;     // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTweenFloat* Tween)>     K2Node_CreateDelegate_OutputDelegate_4;            // 0x02F0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UTweenVector* Tween)>    K2Node_CreateDelegate_OutputDelegate_5;            // 0x0300(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bFrontDoors;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_Select_Default;                             // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_Select_Default_1;                           // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0344(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0358(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0360(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_4;                   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0378(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ElevatorFloorPosition_C*            CallFunc_Array_Get_Item_2;                         // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTweenContainer*                        CallFunc_BP_CreateTweenMoveSceneComponentTo_TweenContainer; // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenVector*                           CallFunc_BP_CreateTweenMoveSceneComponentTo_Tween; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenContainer*                        CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer; // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenFloat*                            CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween; // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenVector*                           CallFunc_BP_AppendTweenMoveSceneComponentTo_ReturnValue; // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenVector*                           CallFunc_BP_AppendTweenMoveSceneComponentTo_ReturnValue_1; // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenContainer*                        CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_1; // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenFloat*                            CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_1; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenVector*                           K2Node_CustomEvent_Tween;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTweenContainer*                        CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_2; // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenFloat*                            CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_2; // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_Select_Default_3;                           // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTweenContainer*                        CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_3; // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTweenFloat*                            CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_3; // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator) == 0x000008, "Wrong alignment on BP_Elevator_C_ExecuteUbergraph_BP_Elevator");
static_assert(sizeof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator) == 0x000470, "Wrong size on BP_Elevator_C_ExecuteUbergraph_BP_Elevator");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, EntryPoint) == 0x000000, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Floor_2) == 0x000008, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Floor_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Floor_1) == 0x00000C, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Floor_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Floor) == 0x000014, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Floor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_GetUserControllerId_ReturnValue) == 0x000018, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000020, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000028, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000030, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000038, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00003C, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000040, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0000D0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_DynamicCast_AsBP_Character_Script) == 0x0000D8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_X) == 0x0000FC, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Y) == 0x000100, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Z) == 0x000104, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00010C, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_X_1) == 0x000118, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Y_1) == 0x00011C, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Z_1) == 0x000120, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000128, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000130, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000138, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000140, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_bFromSweep) == 0x000144, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_SweepResult) == 0x000148, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001D4, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_DynamicCast_AsBP_Character_Script_1) == 0x0001D8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_DynamicCast_AsBP_Character_Script_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001E8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherActor) == 0x0001F0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherComp) == 0x0001F8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000200, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_bJumpEnabled) == 0x000204, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_bJumpEnabled' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Character) == 0x000208, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_DynamicCast_AsBP_Character_Script_2) == 0x000210, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_DynamicCast_AsBP_Character_Script_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_DynamicCast_bSuccess_2) == 0x000218, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_GetTimeSeconds_ReturnValue) == 0x00021C, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BooleanAND_ReturnValue_1) == 0x000220, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Tween_3) == 0x000228, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Tween_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Tween_2) == 0x000230, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Tween_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate) == 0x000238, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Array_Get_Item) == 0x000248, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000250, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_SwitchEnum_CmpSuccess) == 0x000260, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_IsServer_ReturnValue) == 0x000261, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Array_Get_Item_1) == 0x000268, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate_2) == 0x000270, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000280, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_X_2) == 0x00028C, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Y_2) == 0x000290, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Z_2) == 0x000294, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_IsServer_ReturnValue_1) == 0x000298, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_IsServer_ReturnValue_2) == 0x000299, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, Temp_bool_Variable) == 0x00029A, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_Sender) == 0x0002A0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_ComponentBoundEvent_Interacting_Actor) == 0x0002A8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_ComponentBoundEvent_Interacting_Actor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Tween_1) == 0x0002B0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Tween_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0002B8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002C4, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_X_3) == 0x0002D4, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Y_3) == 0x0002D8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BreakVector_Z_3) == 0x0002DC, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002E0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_IsServer_ReturnValue_3) == 0x0002E1, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002E4, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Get_Distance_Between_Floors_Distance) == 0x0002E8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Get_Distance_Between_Floors_Distance' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002EC, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002F0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate_5) == 0x000300, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_bFrontDoors) == 0x000310, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_bFrontDoors' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, Temp_bool_Variable_1) == 0x000311, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_Select_Default) == 0x000318, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000320, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_Select_Default_1) == 0x000330, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000338, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate_6) == 0x000344, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000358, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CreateDelegate_OutputDelegate_7) == 0x000360, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_IsServer_ReturnValue_4) == 0x000370, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_IsServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000378, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, Temp_struct_Variable) == 0x000380, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, Temp_struct_Variable_1) == 0x00038C, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, Temp_bool_Variable_2) == 0x000398, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Array_Get_Item_2) == 0x0003A0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_Select_Default_2) == 0x0003A8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Add_VectorVector_ReturnValue) == 0x0003B4, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0003C0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_VLerp_ReturnValue) == 0x0003CC, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Vector_Distance_ReturnValue) == 0x0003D8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003DC, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0003E0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenMoveSceneComponentTo_TweenContainer) == 0x0003E8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenMoveSceneComponentTo_TweenContainer' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenMoveSceneComponentTo_Tween) == 0x0003F0, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenMoveSceneComponentTo_Tween' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer) == 0x0003F8, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween) == 0x000400, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_AppendTweenMoveSceneComponentTo_ReturnValue) == 0x000408, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_AppendTweenMoveSceneComponentTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_AppendTweenMoveSceneComponentTo_ReturnValue_1) == 0x000410, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_AppendTweenMoveSceneComponentTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_1) == 0x000418, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_1) == 0x000420, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_CustomEvent_Tween) == 0x000428, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_CustomEvent_Tween' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, Temp_bool_Variable_3) == 0x000430, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_2) == 0x000438, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_2) == 0x000440, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, K2Node_Select_Default_3) == 0x000448, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x000450, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_3) == 0x000460, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_TweenContainer_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ExecuteUbergraph_BP_Elevator, CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_3) == 0x000468, "Member 'BP_Elevator_C_ExecuteUbergraph_BP_Elevator::CallFunc_BP_CreateTweenSceneComponentFollowSpline_Tween_3' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.HardStopSoundEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_Elevator_C_HardStopSoundEvent final
{
public:
	class UTweenVector*                           Tween;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_HardStopSoundEvent) == 0x000008, "Wrong alignment on BP_Elevator_C_HardStopSoundEvent");
static_assert(sizeof(BP_Elevator_C_HardStopSoundEvent) == 0x000008, "Wrong size on BP_Elevator_C_HardStopSoundEvent");
static_assert(offsetof(BP_Elevator_C_HardStopSoundEvent, Tween) == 0x000000, "Member 'BP_Elevator_C_HardStopSoundEvent::Tween' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.PlayDoorSoundEffects
// 0x0001 (0x0001 - 0x0000)
struct BP_Elevator_C_PlayDoorSoundEffects final
{
public:
	bool                                          bFrontDoors;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_PlayDoorSoundEffects) == 0x000001, "Wrong alignment on BP_Elevator_C_PlayDoorSoundEffects");
static_assert(sizeof(BP_Elevator_C_PlayDoorSoundEffects) == 0x000001, "Wrong size on BP_Elevator_C_PlayDoorSoundEffects");
static_assert(offsetof(BP_Elevator_C_PlayDoorSoundEffects, bFrontDoors) == 0x000000, "Member 'BP_Elevator_C_PlayDoorSoundEffects::bFrontDoors' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.ElevatorTweenEnded
// 0x0008 (0x0008 - 0x0000)
struct BP_Elevator_C_ElevatorTweenEnded final
{
public:
	class UTweenVector*                           Tween;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_ElevatorTweenEnded) == 0x000008, "Wrong alignment on BP_Elevator_C_ElevatorTweenEnded");
static_assert(sizeof(BP_Elevator_C_ElevatorTweenEnded) == 0x000008, "Wrong size on BP_Elevator_C_ElevatorTweenEnded");
static_assert(offsetof(BP_Elevator_C_ElevatorTweenEnded, Tween) == 0x000000, "Member 'BP_Elevator_C_ElevatorTweenEnded::Tween' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction Start On Client__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature) == 0x000008, "Wrong alignment on BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature");
static_assert(sizeof(BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature) == 0x000010, "Wrong size on BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature");
static_assert(offsetof(BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature, Sender) == 0x000000, "Member 'BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.BackDoor_Closed
// 0x0008 (0x0008 - 0x0000)
struct BP_Elevator_C_BackDoor_Closed final
{
public:
	class UTweenFloat*                            Tween;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_BackDoor_Closed) == 0x000008, "Wrong alignment on BP_Elevator_C_BackDoor_Closed");
static_assert(sizeof(BP_Elevator_C_BackDoor_Closed) == 0x000008, "Wrong size on BP_Elevator_C_BackDoor_Closed");
static_assert(offsetof(BP_Elevator_C_BackDoor_Closed, Tween) == 0x000000, "Member 'BP_Elevator_C_BackDoor_Closed::Tween' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.FrontDoor_Closed
// 0x0008 (0x0008 - 0x0000)
struct BP_Elevator_C_FrontDoor_Closed final
{
public:
	class UTweenFloat*                            Tween;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_FrontDoor_Closed) == 0x000008, "Wrong alignment on BP_Elevator_C_FrontDoor_Closed");
static_assert(sizeof(BP_Elevator_C_FrontDoor_Closed) == 0x000008, "Wrong size on BP_Elevator_C_FrontDoor_Closed");
static_assert(offsetof(BP_Elevator_C_FrontDoor_Closed, Tween) == 0x000000, "Member 'BP_Elevator_C_FrontDoor_Closed::Tween' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.ElevatorBoxTriggered
// 0x0010 (0x0010 - 0x0000)
struct BP_Elevator_C_ElevatorBoxTriggered final
{
public:
	bool                                          bJumpEnabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_ElevatorBoxTriggered) == 0x000008, "Wrong alignment on BP_Elevator_C_ElevatorBoxTriggered");
static_assert(sizeof(BP_Elevator_C_ElevatorBoxTriggered) == 0x000010, "Wrong size on BP_Elevator_C_ElevatorBoxTriggered");
static_assert(offsetof(BP_Elevator_C_ElevatorBoxTriggered, bJumpEnabled) == 0x000000, "Member 'BP_Elevator_C_ElevatorBoxTriggered::bJumpEnabled' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_ElevatorBoxTriggered, Character) == 0x000008, "Member 'BP_Elevator_C_ElevatorBoxTriggered::Character' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Move The Elevator On Client
// 0x0004 (0x0004 - 0x0000)
struct BP_Elevator_C_Move_The_Elevator_On_Client final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_Move_The_Elevator_On_Client) == 0x000004, "Wrong alignment on BP_Elevator_C_Move_The_Elevator_On_Client");
static_assert(sizeof(BP_Elevator_C_Move_The_Elevator_On_Client) == 0x000004, "Wrong size on BP_Elevator_C_Move_The_Elevator_On_Client");
static_assert(offsetof(BP_Elevator_C_Move_The_Elevator_On_Client, Floor) == 0x000000, "Member 'BP_Elevator_C_Move_The_Elevator_On_Client::Floor' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Move The Elevator
// 0x0004 (0x0004 - 0x0000)
struct BP_Elevator_C_Move_The_Elevator final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_Move_The_Elevator) == 0x000004, "Wrong alignment on BP_Elevator_C_Move_The_Elevator");
static_assert(sizeof(BP_Elevator_C_Move_The_Elevator) == 0x000004, "Wrong size on BP_Elevator_C_Move_The_Elevator");
static_assert(offsetof(BP_Elevator_C_Move_The_Elevator, Floor) == 0x000000, "Member 'BP_Elevator_C_Move_The_Elevator::Floor' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Go To Floor
// 0x0004 (0x0004 - 0x0000)
struct BP_Elevator_C_Go_To_Floor final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_Go_To_Floor) == 0x000004, "Wrong alignment on BP_Elevator_C_Go_To_Floor");
static_assert(sizeof(BP_Elevator_C_Go_To_Floor) == 0x000004, "Wrong size on BP_Elevator_C_Go_To_Floor");
static_assert(offsetof(BP_Elevator_C_Go_To_Floor, Floor) == 0x000000, "Member 'BP_Elevator_C_Go_To_Floor::Floor' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Elevator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Elevator_C_ReceiveTick");
static_assert(sizeof(BP_Elevator_C_ReceiveTick) == 0x000004, "Wrong size on BP_Elevator_C_ReceiveTick");
static_assert(offsetof(BP_Elevator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Elevator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.UserConstructionScript
// 0x0228 (0x0228 - 0x0000)
struct BP_Elevator_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_1;           // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_2;           // 0x0088(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_3;           // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_2;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_3;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_2;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_3;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_4;           // 0x0110(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_5;           // 0x0138(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_4;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_5;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_4;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_5;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_4; // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_5; // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_6;           // 0x0198(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_7;           // 0x01C0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_6;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_7;          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_6;                // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_7;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_6; // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_7; // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_4;              // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_5;              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_6;              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_7;              // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_8;              // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_9;              // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_10;             // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_11;             // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Elevator_C_UserConstructionScript");
static_assert(sizeof(BP_Elevator_C_UserConstructionScript) == 0x000228, "Wrong size on BP_Elevator_C_UserConstructionScript");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_1) == 0x000028, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000050, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_1) == 0x000058, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh) == 0x000068, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000078, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000081, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000082, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_2) == 0x000088, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_3) == 0x0000B0, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_2) == 0x0000D8, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_3) == 0x0000E0, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_2) == 0x0000F0, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_3) == 0x000100, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_3) == 0x000108, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x000109, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x00010A, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_4) == 0x000110, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_5) == 0x000138, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_4) == 0x000160, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_5) == 0x000168, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_4) == 0x000170, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_5) == 0x000171, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_4) == 0x000178, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_4) == 0x000180, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_5) == 0x000188, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_5) == 0x000190, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_4) == 0x000191, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_5) == 0x000192, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_6) == 0x000198, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_7) == 0x0001C0, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_6) == 0x0001E8, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_7) == 0x0001F0, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_6) == 0x0001F8, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_7) == 0x0001F9, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_6) == 0x000200, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_6) == 0x000208, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_7) == 0x000210, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_7) == 0x000218, "Member 'BP_Elevator_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_6) == 0x000219, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_7) == 0x00021A, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x00021B, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_1) == 0x00021C, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_2) == 0x00021D, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_3) == 0x00021E, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_4) == 0x00021F, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_5) == 0x000220, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_6) == 0x000221, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_7) == 0x000222, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_8) == 0x000223, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_9) == 0x000224, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_10) == 0x000225, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_11) == 0x000226, "Member 'BP_Elevator_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_11' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.SetDesiredFloor
// 0x000C (0x000C - 0x0000)
struct BP_Elevator_C_SetDesiredFloor final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_SetDesiredFloor) == 0x000004, "Wrong alignment on BP_Elevator_C_SetDesiredFloor");
static_assert(sizeof(BP_Elevator_C_SetDesiredFloor) == 0x00000C, "Wrong size on BP_Elevator_C_SetDesiredFloor");
static_assert(offsetof(BP_Elevator_C_SetDesiredFloor, Floor) == 0x000000, "Member 'BP_Elevator_C_SetDesiredFloor::Floor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_SetDesiredFloor, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'BP_Elevator_C_SetDesiredFloor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_SetDesiredFloor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000005, "Member 'BP_Elevator_C_SetDesiredFloor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_SetDesiredFloor, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000006, "Member 'BP_Elevator_C_SetDesiredFloor::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_SetDesiredFloor, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000007, "Member 'BP_Elevator_C_SetDesiredFloor::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_SetDesiredFloor, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BP_Elevator_C_SetDesiredFloor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Register Level Callers
// 0x0030 (0x0030 - 0x0000)
struct BP_Elevator_C_Register_Level_Callers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Elevator_Caller_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_Register_Level_Callers) == 0x000008, "Wrong alignment on BP_Elevator_C_Register_Level_Callers");
static_assert(sizeof(BP_Elevator_C_Register_Level_Callers) == 0x000030, "Wrong size on BP_Elevator_C_Register_Level_Callers");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Elevator_C_Register_Level_Callers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Elevator_C_Register_Level_Callers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Elevator_C_Register_Level_Callers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Elevator_C_Register_Level_Callers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_Elevator_C_Register_Level_Callers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, CallFunc_Array_Length_ReturnValue_1) == 0x00001C, "Member 'BP_Elevator_C_Register_Level_Callers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Elevator_C_Register_Level_Callers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, CallFunc_Array_Length_ReturnValue_2) == 0x000024, "Member 'BP_Elevator_C_Register_Level_Callers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Register_Level_Callers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_Elevator_C_Register_Level_Callers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Set Elevator Controllers Active
// 0x0028 (0x0028 - 0x0000)
struct BP_Elevator_C_Set_Elevator_Controllers_Active final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Elevator_Caller_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_Set_Elevator_Controllers_Active) == 0x000008, "Wrong alignment on BP_Elevator_C_Set_Elevator_Controllers_Active");
static_assert(sizeof(BP_Elevator_C_Set_Elevator_Controllers_Active) == 0x000028, "Wrong size on BP_Elevator_C_Set_Elevator_Controllers_Active");
static_assert(offsetof(BP_Elevator_C_Set_Elevator_Controllers_Active, Active) == 0x000000, "Member 'BP_Elevator_C_Set_Elevator_Controllers_Active::Active' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Set_Elevator_Controllers_Active, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Elevator_C_Set_Elevator_Controllers_Active::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Set_Elevator_Controllers_Active, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Elevator_C_Set_Elevator_Controllers_Active::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Set_Elevator_Controllers_Active, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Elevator_C_Set_Elevator_Controllers_Active::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Set_Elevator_Controllers_Active, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Elevator_C_Set_Elevator_Controllers_Active::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Set_Elevator_Controllers_Active, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Elevator_C_Set_Elevator_Controllers_Active::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Set_Elevator_Controllers_Active, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Elevator_C_Set_Elevator_Controllers_Active::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Interact
// 0x0010 (0x0010 - 0x0000)
struct BP_Elevator_C_Interact final
{
public:
	int32                                         DesiredFloor;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_Interact) == 0x000004, "Wrong alignment on BP_Elevator_C_Interact");
static_assert(sizeof(BP_Elevator_C_Interact) == 0x000010, "Wrong size on BP_Elevator_C_Interact");
static_assert(offsetof(BP_Elevator_C_Interact, DesiredFloor) == 0x000000, "Member 'BP_Elevator_C_Interact::DesiredFloor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Interact, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Elevator_C_Interact::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Interact, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_Elevator_C_Interact::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Interact, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Elevator_C_Interact::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Interact, CallFunc_Greater_IntInt_ReturnValue) == 0x00000D, "Member 'BP_Elevator_C_Interact::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Hide UI
// 0x0002 (0x0002 - 0x0000)
struct BP_Elevator_C_Hide_UI final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_Hide_UI) == 0x000001, "Wrong alignment on BP_Elevator_C_Hide_UI");
static_assert(sizeof(BP_Elevator_C_Hide_UI) == 0x000002, "Wrong size on BP_Elevator_C_Hide_UI");
static_assert(offsetof(BP_Elevator_C_Hide_UI, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_Elevator_C_Hide_UI::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Hide_UI, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Elevator_C_Hide_UI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Show UI
// 0x0018 (0x0018 - 0x0000)
struct BP_Elevator_C_Show_UI final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Elevator_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Elevator_C_Show_UI) == 0x000008, "Wrong alignment on BP_Elevator_C_Show_UI");
static_assert(sizeof(BP_Elevator_C_Show_UI) == 0x000018, "Wrong size on BP_Elevator_C_Show_UI");
static_assert(offsetof(BP_Elevator_C_Show_UI, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_Elevator_C_Show_UI::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Show_UI, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_Elevator_C_Show_UI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Show_UI, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Elevator_C_Show_UI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Elevator.BP_Elevator_C.Get Distance Between Floors
// 0x0060 (0x0060 - 0x0000)
struct BP_Elevator_C_Get_Distance_Between_Floors final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ElevatorFloorPosition_C*            CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ElevatorFloorPosition_C*            CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ElevatorFloorPosition_C*            CallFunc_Array_Get_Item_2;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_C_Get_Distance_Between_Floors) == 0x000008, "Wrong alignment on BP_Elevator_C_Get_Distance_Between_Floors");
static_assert(sizeof(BP_Elevator_C_Get_Distance_Between_Floors) == 0x000060, "Wrong size on BP_Elevator_C_Get_Distance_Between_Floors");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, Distance) == 0x000000, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::Distance' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00001C, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_Vector_Distance_ReturnValue) == 0x000028, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_Array_Get_Item_2) == 0x000038, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000040, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x00004C, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_C_Get_Distance_Between_Floors, CallFunc_Vector_Distance_ReturnValue_1) == 0x000058, "Member 'BP_Elevator_C_Get_Distance_Between_Floors::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");

}

