#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StaminaComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_StaminaComponent.BP_StaminaComponent_C.ExecuteUbergraph_BP_StaminaComponent
// 0x0220 (0x0220 - 0x0000)
struct BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetSoundByGender_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetSoundByGender_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_GetSoundByGender_ReturnValue_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetSoundByGender_ReturnValue_3;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBreathProperties                      K2Node_Event_BreathProperties_4;                   // 0x0090(0x000C)(ConstParm, NoDestructor)
	struct FBreathProperties                      K2Node_Event_BreathProperties_3;                   // 0x009C(0x000C)(ConstParm, NoDestructor)
	bool                                          K2Node_Event_bForced;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBreathProperties                      K2Node_Event_BreathProperties_2;                   // 0x00AC(0x000C)(ConstParm, NoDestructor)
	struct FBreathProperties                      K2Node_Event_BreathProperties_1;                   // 0x00B8(0x000C)(ConstParm, NoDestructor)
	struct FBreathProperties                      K2Node_Event_BreathProperties;                     // 0x00C4(0x000C)(ConstParm, NoDestructor)
	struct FStaminaEffect                         CallFunc_Array_Get_Item;                           // 0x00D0(0x0050)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_EffectName;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENetRole                                      CallFunc_GetNetworkRole_ReturnValue;               // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameAssetManager*                     CallFunc_GetAssetManagerSystem_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FlameHUD_C*                         K2Node_DynamicCast_AsBP_Flame_HUD;                 // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Item;         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HUD_C*                              K2Node_DynamicCast_AsUI_HUD;                       // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_CheckImmediately;               // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAccurateRealTime_Seconds;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccurateRealTime_PartialSeconds;       // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStaminaValue_ReturnValue;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStaminaValue_ReturnValue_1;            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent) == 0x000008, "Wrong alignment on BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent");
static_assert(sizeof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent) == 0x000220, "Wrong size on BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, EntryPoint) == 0x000000, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000005, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00000C, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetSoundByGender_ReturnValue) == 0x000028, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetSoundByGender_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetSoundByGender_ReturnValue_1) == 0x000030, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetSoundByGender_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsBP_Character_Script) == 0x000038, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsBP_Character_Script_1) == 0x000048, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsBP_Character_Script_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetVelocity_ReturnValue) == 0x000054, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsBP_Character_Script_2) == 0x000060, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsBP_Character_Script_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_VSize_ReturnValue) == 0x00006C, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_MakeVector_ReturnValue_1) == 0x000070, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetSoundByGender_ReturnValue_2) == 0x000080, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetSoundByGender_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetSoundByGender_ReturnValue_3) == 0x000088, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetSoundByGender_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_BreathProperties_4) == 0x000090, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_BreathProperties_4' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_BreathProperties_3) == 0x00009C, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_BreathProperties_3' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_bForced) == 0x0000A8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_bForced' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_BreathProperties_2) == 0x0000AC, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_BreathProperties_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_BreathProperties_1) == 0x0000B8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_BreathProperties_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_BreathProperties) == 0x0000C4, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_BreathProperties' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000120, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000130, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000138, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_MakeVector_ReturnValue_2) == 0x000140, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_Event_EffectName) == 0x000150, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_Event_EffectName' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x000158, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000159, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00015A, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00015B, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_BooleanAND_ReturnValue) == 0x00015C, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetOwner_ReturnValue) == 0x000160, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsHuman_Character) == 0x000168, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsValid_ReturnValue) == 0x000171, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetNetworkRole_ReturnValue) == 0x000172, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetNetworkRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000173, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000178, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsHuman_Character_1) == 0x000188, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsHuman_Character_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess_4) == 0x000190, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetController_ReturnValue) == 0x000198, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetAssetManagerSystem_ReturnValue) == 0x0001A0, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetAssetManagerSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsPlayer_Controller) == 0x0001A8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess_5) == 0x0001B0, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_LoadSoftClassReference_ReturnValue) == 0x0001B8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_LoadSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetHUD_ReturnValue) == 0x0001C0, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsValidClass_ReturnValue) == 0x0001C8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_IsValid_ReturnValue_2) == 0x0001C9, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsBP_Flame_HUD) == 0x0001D0, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsBP_Flame_HUD' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess_6) == 0x0001D8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_ClassDynamicCast_AsConsumable_Item) == 0x0001E0, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_ClassDynamicCast_AsConsumable_Item' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_ClassDynamicCast_bSuccess) == 0x0001E8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_AsUI_HUD) == 0x0001F0, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_AsUI_HUD' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_DynamicCast_bSuccess_7) == 0x0001F8, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, K2Node_CustomEvent_CheckImmediately) == 0x0001F9, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::K2Node_CustomEvent_CheckImmediately' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetAccurateRealTime_Seconds) == 0x0001FC, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetAccurateRealTime_Seconds' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetAccurateRealTime_PartialSeconds) == 0x000200, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetAccurateRealTime_PartialSeconds' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Array_AddUnique_ReturnValue) == 0x000204, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000208, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetStaminaValue_ReturnValue) == 0x00020C, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetStaminaValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000210, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_GetStaminaValue_ReturnValue_1) == 0x000214, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_GetStaminaValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000218, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_Less_FloatFloat_ReturnValue) == 0x000219, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00021A, "Member 'BP_StaminaComponent_C_ExecuteUbergraph_BP_StaminaComponent::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.StartTracking_Stamina
// 0x0001 (0x0001 - 0x0000)
struct BP_StaminaComponent_C_StartTracking_Stamina final
{
public:
	bool                                          CheckImmediately;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_StartTracking_Stamina) == 0x000001, "Wrong alignment on BP_StaminaComponent_C_StartTracking_Stamina");
static_assert(sizeof(BP_StaminaComponent_C_StartTracking_Stamina) == 0x000001, "Wrong size on BP_StaminaComponent_C_StartTracking_Stamina");
static_assert(offsetof(BP_StaminaComponent_C_StartTracking_Stamina, CheckImmediately) == 0x000000, "Member 'BP_StaminaComponent_C_StartTracking_Stamina::CheckImmediately' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.OnEffectRemoved
// 0x0008 (0x0008 - 0x0000)
struct BP_StaminaComponent_C_OnEffectRemoved final
{
public:
	class FName                                   EffectName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StaminaComponent_C_OnEffectRemoved) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_OnEffectRemoved");
static_assert(sizeof(BP_StaminaComponent_C_OnEffectRemoved) == 0x000008, "Wrong size on BP_StaminaComponent_C_OnEffectRemoved");
static_assert(offsetof(BP_StaminaComponent_C_OnEffectRemoved, EffectName) == 0x000000, "Member 'BP_StaminaComponent_C_OnEffectRemoved::EffectName' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.OnBreatheCough
// 0x000C (0x000C - 0x0000)
struct BP_StaminaComponent_C_OnBreatheCough final
{
public:
	struct FBreathProperties                      BreathProperties;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_OnBreatheCough) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_OnBreatheCough");
static_assert(sizeof(BP_StaminaComponent_C_OnBreatheCough) == 0x00000C, "Wrong size on BP_StaminaComponent_C_OnBreatheCough");
static_assert(offsetof(BP_StaminaComponent_C_OnBreatheCough, BreathProperties) == 0x000000, "Member 'BP_StaminaComponent_C_OnBreatheCough::BreathProperties' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.OnBreatheOut
// 0x000C (0x000C - 0x0000)
struct BP_StaminaComponent_C_OnBreatheOut final
{
public:
	struct FBreathProperties                      BreathProperties;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_OnBreatheOut) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_OnBreatheOut");
static_assert(sizeof(BP_StaminaComponent_C_OnBreatheOut) == 0x00000C, "Wrong size on BP_StaminaComponent_C_OnBreatheOut");
static_assert(offsetof(BP_StaminaComponent_C_OnBreatheOut, BreathProperties) == 0x000000, "Member 'BP_StaminaComponent_C_OnBreatheOut::BreathProperties' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.OnBreatheIn
// 0x000C (0x000C - 0x0000)
struct BP_StaminaComponent_C_OnBreatheIn final
{
public:
	struct FBreathProperties                      BreathProperties;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_OnBreatheIn) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_OnBreatheIn");
static_assert(sizeof(BP_StaminaComponent_C_OnBreatheIn) == 0x00000C, "Wrong size on BP_StaminaComponent_C_OnBreatheIn");
static_assert(offsetof(BP_StaminaComponent_C_OnBreatheIn, BreathProperties) == 0x000000, "Member 'BP_StaminaComponent_C_OnBreatheIn::BreathProperties' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.OnHoldBreathEnd
// 0x0010 (0x0010 - 0x0000)
struct BP_StaminaComponent_C_OnHoldBreathEnd final
{
public:
	struct FBreathProperties                      BreathProperties;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bForced;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_OnHoldBreathEnd) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_OnHoldBreathEnd");
static_assert(sizeof(BP_StaminaComponent_C_OnHoldBreathEnd) == 0x000010, "Wrong size on BP_StaminaComponent_C_OnHoldBreathEnd");
static_assert(offsetof(BP_StaminaComponent_C_OnHoldBreathEnd, BreathProperties) == 0x000000, "Member 'BP_StaminaComponent_C_OnHoldBreathEnd::BreathProperties' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_OnHoldBreathEnd, bForced) == 0x00000C, "Member 'BP_StaminaComponent_C_OnHoldBreathEnd::bForced' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.OnHoldBreathStart
// 0x000C (0x000C - 0x0000)
struct BP_StaminaComponent_C_OnHoldBreathStart final
{
public:
	struct FBreathProperties                      BreathProperties;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_OnHoldBreathStart) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_OnHoldBreathStart");
static_assert(sizeof(BP_StaminaComponent_C_OnHoldBreathStart) == 0x00000C, "Wrong size on BP_StaminaComponent_C_OnHoldBreathStart");
static_assert(offsetof(BP_StaminaComponent_C_OnHoldBreathStart, BreathProperties) == 0x000000, "Member 'BP_StaminaComponent_C_OnHoldBreathStart::BreathProperties' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_StaminaComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StaminaComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_ReceiveTick");
static_assert(sizeof(BP_StaminaComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_StaminaComponent_C_ReceiveTick");
static_assert(offsetof(BP_StaminaComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_StaminaComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.UpdateStaminaPostprocess
// 0x0010 (0x0010 - 0x0000)
struct BP_StaminaComponent_C_UpdateStaminaPostprocess final
{
public:
	float                                         CallFunc_GetStaminaValue_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStaminaValue_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_UpdateStaminaPostprocess) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_UpdateStaminaPostprocess");
static_assert(sizeof(BP_StaminaComponent_C_UpdateStaminaPostprocess) == 0x000010, "Wrong size on BP_StaminaComponent_C_UpdateStaminaPostprocess");
static_assert(offsetof(BP_StaminaComponent_C_UpdateStaminaPostprocess, CallFunc_GetStaminaValue_ReturnValue) == 0x000000, "Member 'BP_StaminaComponent_C_UpdateStaminaPostprocess::CallFunc_GetStaminaValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateStaminaPostprocess, CallFunc_GetStaminaValue_ReturnValue_1) == 0x000004, "Member 'BP_StaminaComponent_C_UpdateStaminaPostprocess::CallFunc_GetStaminaValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateStaminaPostprocess, CallFunc_GetFloatValue_ReturnValue) == 0x000008, "Member 'BP_StaminaComponent_C_UpdateStaminaPostprocess::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateStaminaPostprocess, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_StaminaComponent_C_UpdateStaminaPostprocess::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateStaminaPostprocess, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_StaminaComponent_C_UpdateStaminaPostprocess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateStaminaPostprocess, CallFunc_IsLocallyControlled_ReturnValue) == 0x00000E, "Member 'BP_StaminaComponent_C_UpdateStaminaPostprocess::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateStaminaPostprocess, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'BP_StaminaComponent_C_UpdateStaminaPostprocess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.UpdateExhaustionPostprocess
// 0x0018 (0x0018 - 0x0000)
struct BP_StaminaComponent_C_UpdateExhaustionPostprocess final
{
public:
	float                                         CallFunc_GetStaminaValue_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_UpdateExhaustionPostprocess) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_UpdateExhaustionPostprocess");
static_assert(sizeof(BP_StaminaComponent_C_UpdateExhaustionPostprocess) == 0x000018, "Wrong size on BP_StaminaComponent_C_UpdateExhaustionPostprocess");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_GetStaminaValue_ReturnValue) == 0x000000, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_GetStaminaValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_IsLocallyControlled_ReturnValue) == 0x000014, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_UpdateExhaustionPostprocess, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'BP_StaminaComponent_C_UpdateExhaustionPostprocess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.PrintDebugInfo
// 0x0098 (0x0098 - 0x0000)
struct BP_StaminaComponent_C_PrintDebugInfo final
{
public:
	float                                         CallFunc_GetStaminaValue_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartSprinting_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StaminaComponent_C_PrintDebugInfo) == 0x000008, "Wrong alignment on BP_StaminaComponent_C_PrintDebugInfo");
static_assert(sizeof(BP_StaminaComponent_C_PrintDebugInfo) == 0x000098, "Wrong size on BP_StaminaComponent_C_PrintDebugInfo");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_GetStaminaValue_ReturnValue) == 0x000000, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_GetStaminaValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_CanStartSprinting_ReturnValue) == 0x000004, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_CanStartSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Conv_BoolToString_ReturnValue) == 0x000018, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_IsLocallyControlled_ReturnValue) == 0x000048, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_IsShipping_ReturnValue) == 0x000049, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_IsShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_IsSprinting_ReturnValue) == 0x00004A, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000050, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_PrintDebugInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000088, "Member 'BP_StaminaComponent_C_PrintDebugInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.SetHearthbeatRate
// 0x0018 (0x0018 - 0x0000)
struct BP_StaminaComponent_C_SetHearthbeatRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StaminaComponent_C_SetHearthbeatRate) == 0x000008, "Wrong alignment on BP_StaminaComponent_C_SetHearthbeatRate");
static_assert(sizeof(BP_StaminaComponent_C_SetHearthbeatRate) == 0x000018, "Wrong size on BP_StaminaComponent_C_SetHearthbeatRate");
static_assert(offsetof(BP_StaminaComponent_C_SetHearthbeatRate, Value) == 0x000000, "Member 'BP_StaminaComponent_C_SetHearthbeatRate::Value' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_SetHearthbeatRate, Enabled) == 0x000004, "Member 'BP_StaminaComponent_C_SetHearthbeatRate::Enabled' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_SetHearthbeatRate, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_StaminaComponent_C_SetHearthbeatRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_SetHearthbeatRate, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'BP_StaminaComponent_C_SetHearthbeatRate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_SetHearthbeatRate, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BP_StaminaComponent_C_SetHearthbeatRate::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_SetHearthbeatRate, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'BP_StaminaComponent_C_SetHearthbeatRate::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.GetTimeStampAdjustedAnalytics
// 0x0098 (0x0098 - 0x0000)
struct BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics final
{
public:
	float                                         LastTimeStamp;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Seconds_At0_Stamina;                               // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 Seconds_Under25_Stamina;                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<int32>                                 TempAdjusted_Under25_Stamina;                      // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 TempAdjusted_At0_Stamina;                          // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics) == 0x000008, "Wrong alignment on BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics");
static_assert(sizeof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics) == 0x000098, "Wrong size on BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, LastTimeStamp) == 0x000000, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::LastTimeStamp' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, Seconds_At0_Stamina) == 0x000008, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::Seconds_At0_Stamina' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, Seconds_Under25_Stamina) == 0x000018, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::Seconds_Under25_Stamina' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, TempAdjusted_Under25_Stamina) == 0x000028, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::TempAdjusted_Under25_Stamina' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, TempAdjusted_At0_Stamina) == 0x000038, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::TempAdjusted_At0_Stamina' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Array_AddUnique_ReturnValue) == 0x000070, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Array_Get_Item_1) == 0x00007C, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Less_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00008C, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics, CallFunc_Less_IntInt_ReturnValue_3) == 0x000090, "Member 'BP_StaminaComponent_C_GetTimeStampAdjustedAnalytics::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.GetBreathType
// 0x0020 (0x0020 - 0x0000)
struct BP_StaminaComponent_C_GetBreathType final
{
public:
	EBreathType                                   PreviousBreathType;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBreathProperties                      PreviousBreathProperties;                          // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	EBreathType                                   ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBreathType                                   Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBreathType                                   Temp_byte_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   Temp_byte_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   K2Node_Select_Default;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   Temp_byte_Variable_3;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   Temp_byte_Variable_4;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   Temp_byte_Variable_5;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   Temp_byte_Variable_6;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   Temp_byte_Variable_7;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   Temp_byte_Variable_8;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   K2Node_Select_Default_1;                           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StaminaComponent_C_GetBreathType) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_GetBreathType");
static_assert(sizeof(BP_StaminaComponent_C_GetBreathType) == 0x000020, "Wrong size on BP_StaminaComponent_C_GetBreathType");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, PreviousBreathType) == 0x000000, "Member 'BP_StaminaComponent_C_GetBreathType::PreviousBreathType' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, PreviousBreathProperties) == 0x000004, "Member 'BP_StaminaComponent_C_GetBreathType::PreviousBreathProperties' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, ReturnValue) == 0x000010, "Member 'BP_StaminaComponent_C_GetBreathType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_bool_Variable) == 0x000011, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable) == 0x000012, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000013, "Member 'BP_StaminaComponent_C_GetBreathType::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_1) == 0x000014, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_2) == 0x000015, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, K2Node_Select_Default) == 0x000016, "Member 'BP_StaminaComponent_C_GetBreathType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_3) == 0x000017, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_4) == 0x000018, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_5) == 0x000019, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_6) == 0x00001A, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_7) == 0x00001B, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, Temp_byte_Variable_8) == 0x00001C, "Member 'BP_StaminaComponent_C_GetBreathType::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathType, K2Node_Select_Default_1) == 0x00001D, "Member 'BP_StaminaComponent_C_GetBreathType::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.GetBreathProperties
// 0x0044 (0x0044 - 0x0000)
struct BP_StaminaComponent_C_GetBreathProperties final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   NewBreathType;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathType                                   PreviousBreathType;                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBreathProperties                      PreviousBreathProperties;                          // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FBreathProperties                      ReturnValue;                                       // 0x0014(0x000C)(Parm, OutParm, ReturnParm, NoDestructor)
	float                                         CallFunc_GetStaminaValue_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExhausted_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsHoldBreathOverriden_OutBreathLevel;     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoldBreathOverriden_ReturnValue;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBreathType                                   Temp_byte_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StaminaComponent_C_GetBreathProperties) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_GetBreathProperties");
static_assert(sizeof(BP_StaminaComponent_C_GetBreathProperties) == 0x000044, "Wrong size on BP_StaminaComponent_C_GetBreathProperties");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, DeltaTime) == 0x000000, "Member 'BP_StaminaComponent_C_GetBreathProperties::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, NewBreathType) == 0x000004, "Member 'BP_StaminaComponent_C_GetBreathProperties::NewBreathType' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, PreviousBreathType) == 0x000005, "Member 'BP_StaminaComponent_C_GetBreathProperties::PreviousBreathType' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, PreviousBreathProperties) == 0x000008, "Member 'BP_StaminaComponent_C_GetBreathProperties::PreviousBreathProperties' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, ReturnValue) == 0x000014, "Member 'BP_StaminaComponent_C_GetBreathProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_GetStaminaValue_ReturnValue) == 0x000020, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_GetStaminaValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_MapRangeClamped_ReturnValue) == 0x000024, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_IsExhausted_ReturnValue) == 0x000028, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_IsExhausted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00002C, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000030, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000035, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_IsHoldBreathOverriden_OutBreathLevel) == 0x000038, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_IsHoldBreathOverriden_OutBreathLevel' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, CallFunc_IsHoldBreathOverriden_ReturnValue) == 0x00003C, "Member 'BP_StaminaComponent_C_GetBreathProperties::CallFunc_IsHoldBreathOverriden_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, Temp_byte_Variable) == 0x00003D, "Member 'BP_StaminaComponent_C_GetBreathProperties::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathProperties, K2Node_Select_Default) == 0x000040, "Member 'BP_StaminaComponent_C_GetBreathProperties::K2Node_Select_Default' has a wrong offset!");

// Function BP_StaminaComponent.BP_StaminaComponent_C.GetBreathSoundVolume
// 0x0040 (0x0040 - 0x0000)
struct BP_StaminaComponent_C_GetBreathSoundVolume final
{
public:
	EBreathType                                   BreathType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBreathProperties                      BreathProperties;                                  // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          Is1PersonView;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StaminaComponent_C_GetBreathSoundVolume) == 0x000004, "Wrong alignment on BP_StaminaComponent_C_GetBreathSoundVolume");
static_assert(sizeof(BP_StaminaComponent_C_GetBreathSoundVolume) == 0x000040, "Wrong size on BP_StaminaComponent_C_GetBreathSoundVolume");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, BreathType) == 0x000000, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::BreathType' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, BreathProperties) == 0x000004, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::BreathProperties' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, Is1PersonView) == 0x000010, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::Is1PersonView' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, ReturnValue) == 0x000014, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, Temp_bool_Variable) == 0x000018, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000024, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000028, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002D, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002E, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_BooleanOR_ReturnValue) == 0x00002F, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, Temp_bool_Variable_1) == 0x000030, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, CallFunc_BooleanOR_ReturnValue_1) == 0x000031, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, Temp_bool_Variable_2) == 0x000032, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, K2Node_Select_Default) == 0x000034, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, K2Node_Select_Default_1) == 0x000038, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_StaminaComponent_C_GetBreathSoundVolume, K2Node_Select_Default_2) == 0x00003C, "Member 'BP_StaminaComponent_C_GetBreathSoundVolume::K2Node_Select_Default_2' has a wrong offset!");

}

