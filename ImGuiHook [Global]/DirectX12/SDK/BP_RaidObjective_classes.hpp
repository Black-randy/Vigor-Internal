#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RaidObjective

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ERaidObjectiveState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RaidObjective.BP_RaidObjective_C
// 0x00E0 (0x0300 - 0x0220)
class ABP_RaidObjective_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ActiveZone;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class ABP_PlayerController_Raid_C*, struct FDateTime> Attackers_In_Range;                                // 0x0248(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TMap<class ABP_PlayerController_Raid_C*, struct FDateTime> Defenders_In_Range;                                // 0x0298(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	ERaidObjectiveState                           Objective_State;                                   // 0x02E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefenderProgress;                                  // 0x02EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProgressPerSecond;                                 // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackerProgress;                                  // 0x02F4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Objective_Active;                                  // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_RaidObjective(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Reset_States();
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();
	void Progress_Update(float Delta_seconds);
	void Check_State();
	void Check_Progress();
	void Change_State(ERaidObjectiveState New_State);
	void Current_Frame_Progress(float DeltaSeconds, float* Progress);
	void Is_Player_Attacker(class APlayerState* Player_State, bool* Is_Attacker);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RaidObjective_C">();
	}
	static class ABP_RaidObjective_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RaidObjective_C>();
	}
};
static_assert(alignof(ABP_RaidObjective_C) == 0x000008, "Wrong alignment on ABP_RaidObjective_C");
static_assert(sizeof(ABP_RaidObjective_C) == 0x000300, "Wrong size on ABP_RaidObjective_C");
static_assert(offsetof(ABP_RaidObjective_C, UberGraphFrame) == 0x000220, "Member 'ABP_RaidObjective_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, Audio) == 0x000228, "Member 'ABP_RaidObjective_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, ActiveZone) == 0x000230, "Member 'ABP_RaidObjective_C::ActiveZone' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, StaticMesh) == 0x000238, "Member 'ABP_RaidObjective_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_RaidObjective_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, Attackers_In_Range) == 0x000248, "Member 'ABP_RaidObjective_C::Attackers_In_Range' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, Defenders_In_Range) == 0x000298, "Member 'ABP_RaidObjective_C::Defenders_In_Range' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, Objective_State) == 0x0002E8, "Member 'ABP_RaidObjective_C::Objective_State' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, DefenderProgress) == 0x0002EC, "Member 'ABP_RaidObjective_C::DefenderProgress' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, ProgressPerSecond) == 0x0002F0, "Member 'ABP_RaidObjective_C::ProgressPerSecond' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, AttackerProgress) == 0x0002F4, "Member 'ABP_RaidObjective_C::AttackerProgress' has a wrong offset!");
static_assert(offsetof(ABP_RaidObjective_C, Objective_Active) == 0x0002F8, "Member 'ABP_RaidObjective_C::Objective_Active' has a wrong offset!");

}

