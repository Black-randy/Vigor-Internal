#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_Tutorial_withCharacterChoice_2

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "UI_Tutorial_ResetReason_structs.hpp"
#include "BP_GameMode_Tutorial_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameMode_Tutorial_withCharacterChoice_2.BP_GameMode_Tutorial_withCharacterChoice_2_C
// 0x00D8 (0x0548 - 0x0470)
class ABP_GameMode_Tutorial_withCharacterChoice_2_C final : public ABP_GameMode_Tutorial_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GameMode_Tutorial_withCharacterChoice_2_C; // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_TutorialCheckPoint_C*               LastCheckPoint;                                    // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SavedActors;                                       // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         HP;                                                // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResourceGrid                          Backpack;                                          // 0x0498(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ULinkedWeapons*                         Weapons;                                           // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeaponDescriptor>              WeaponsList;                                       // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	EWeaponSlotType                               SelectedSlot;                                      // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnResetAI;                                         // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCabineEventStart;                                // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          CheckAmmoPhase;                                    // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BandageVoiceLineHeard;                             // 0x04F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2[0x6];                                      // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, bool>                       HintTAG_To_ShownBool;                              // 0x04F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnResetAI__DelegateSignature();
	void OnCabineEventStart__DelegateSignature();
	void ExecuteUbergraph_BP_GameMode_Tutorial_withCharacterChoice_2(int32 EntryPoint);
	void CheckTutorialProgressStuff();
	void EnteredIntoCabine();
	void ContinueReset();
	void ResetSequence(class AHumanCharacter* Player, EUI_Tutorial_ResetReason Reason);
	void OnSpectatorHasNobodyToSpectate(class AHumanPlayerController* Player);
	bool OnPlayerDied(class AHumanCharacter* Player, class AHumanCharacter* Killer);
	void ResetTutorialLevel(class AHumanCharacter* Player);
	void SaveLevel(class AHumanCharacter* Player);
	void LoadLevel();
	void ResetAirdropMark();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameMode_Tutorial_withCharacterChoice_2_C">();
	}
	static class ABP_GameMode_Tutorial_withCharacterChoice_2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameMode_Tutorial_withCharacterChoice_2_C>();
	}
};
static_assert(alignof(ABP_GameMode_Tutorial_withCharacterChoice_2_C) == 0x000008, "Wrong alignment on ABP_GameMode_Tutorial_withCharacterChoice_2_C");
static_assert(sizeof(ABP_GameMode_Tutorial_withCharacterChoice_2_C) == 0x000548, "Wrong size on ABP_GameMode_Tutorial_withCharacterChoice_2_C");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, UberGraphFrame_BP_GameMode_Tutorial_withCharacterChoice_2_C) == 0x000470, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::UberGraphFrame_BP_GameMode_Tutorial_withCharacterChoice_2_C' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, LastCheckPoint) == 0x000478, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::LastCheckPoint' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, SavedActors) == 0x000480, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::SavedActors' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, HP) == 0x000490, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::HP' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, Backpack) == 0x000498, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::Backpack' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, Weapons) == 0x0004B0, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::Weapons' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, WeaponsList) == 0x0004B8, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::WeaponsList' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, SelectedSlot) == 0x0004C8, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::SelectedSlot' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, OnResetAI) == 0x0004D0, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::OnResetAI' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, OnCabineEventStart) == 0x0004E0, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::OnCabineEventStart' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, CheckAmmoPhase) == 0x0004F0, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::CheckAmmoPhase' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, BandageVoiceLineHeard) == 0x0004F1, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::BandageVoiceLineHeard' has a wrong offset!");
static_assert(offsetof(ABP_GameMode_Tutorial_withCharacterChoice_2_C, HintTAG_To_ShownBool) == 0x0004F8, "Member 'ABP_GameMode_Tutorial_withCharacterChoice_2_C::HintTAG_To_ShownBool' has a wrong offset!");

}

