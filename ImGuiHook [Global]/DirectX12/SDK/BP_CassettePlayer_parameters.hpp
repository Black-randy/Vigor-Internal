#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CassettePlayer

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "S_CassetteTrackInfo_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CassettePlayer.BP_CassettePlayer_C.ExecuteUbergraph_BP_CassettePlayer
// 0x0410 (0x0410 - 0x0000)
struct BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FCloudRequestResult& RequestResult, struct FCloudBattlePassRewardsClaim& Data)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CassetteTrackInfo                   K2Node_CustomEvent_TrackInfo_1;                    // 0x0030(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_Send_Cassette_Player_Interacted_ReturnValue; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Cassette_Player_Track_Played_ReturnValue; // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CassetteTrack_C*>            CallFunc_GetCassetteTracksFromDataTable_MusicTrackList; // 0x0118(0x0010)(ReferenceParm)
	struct FMusicTrackRow                         K2Node_CustomEvent_TrackInfo;                      // 0x0128(0x0088)()
	bool                                          Temp_bool_Variable_1;                              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AStash* Sender, class UStashComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNotificationParams                    K2Node_MakeStruct_NotificationParams;              // 0x01E0(0x000C)(NoDestructor)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_MusicPlayer_Notification_C*         CallFunc_Create_ReturnValue;                       // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Shelter_C*              K2Node_DynamicCast_AsBP_Player_State_Shelter;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1;       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FCloudRequestResult& RequestResult, struct FCloudBattlePassRewardsClaim& Data)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x025C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsCassettePlayerAvailable_Available;      // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBP_CassetteTrack_C*              K2Node_CustomEvent_Track_Reference;                // 0x0270(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    K2Node_CustomEvent_Previous_Track;                 // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base_1;                 // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x02D0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x02E0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0300(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0310(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 K2Node_CustomEvent_Sender;                         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStashComponent*                        K2Node_CustomEvent_Inventory;                      // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRepairLevel_ReturnValue;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0334(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewLevel)>               K2Node_CreateDelegate_OutputDelegate_7;            // 0x0348(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_NewLevel;                       // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x035C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0370(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_ShelterCassetteCamera_C*            K2Node_DynamicCast_AsBP_Shelter_Cassette_Camera;   // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult;                  // 0x0390(0x0058)(ConstParm)
	struct FCloudBattlePassRewardsClaim           K2Node_CustomEvent_Data;                           // 0x03E8(0x0020)(ConstParm)
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_1;        // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer");
static_assert(sizeof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer) == 0x000410, "Wrong size on BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, EntryPoint) == 0x000000, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, Temp_bool_Variable) == 0x000014, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000020, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_TrackInfo_1) == 0x000030, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_TrackInfo_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_Send_Cassette_Player_Interacted_ReturnValue) == 0x0000F8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_Send_Cassette_Player_Interacted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_Send_Cassette_Player_Track_Played_ReturnValue) == 0x0000F9, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_Send_Cassette_Player_Track_Played_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_ComponentBoundEvent_Sender) == 0x000100, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_ComponentBoundEvent_Interacting_Actor) == 0x000108, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_ComponentBoundEvent_Interacting_Actor' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetCassetteTracksFromDataTable_MusicTrackList) == 0x000118, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetCassetteTracksFromDataTable_MusicTrackList' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_TrackInfo) == 0x000128, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_TrackInfo' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, Temp_bool_Variable_1) == 0x0001B0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, Temp_object_Variable) == 0x0001B8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetUserControllerId_ReturnValue) == 0x0001C0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001C4, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0001D8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_MakeStruct_NotificationParams) == 0x0001E0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_MakeStruct_NotificationParams' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x0001F0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess_1) == 0x0001F8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetNotificationSystem_ReturnValue) == 0x000200, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_Create_ReturnValue) == 0x000208, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValid_ReturnValue_1) == 0x000210, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000214, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000218, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1) == 0x000220, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess_2) == 0x000228, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetStash_ReturnValue) == 0x000230, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsBP_Player_State_Shelter) == 0x000238, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsBP_Player_State_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess_3) == 0x000240, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValid_ReturnValue_2) == 0x000241, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValid_ReturnValue_3) == 0x000242, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetGameMode_ReturnValue_1) == 0x000248, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1) == 0x000250, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess_4) == 0x000258, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x00025C, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsCassettePlayerAvailable_Available) == 0x00026C, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsCassettePlayerAvailable_Available' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_Track_Reference) == 0x000270, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_Track_Reference' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_Previous_Track) == 0x000278, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_Previous_Track' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValid_ReturnValue_4) == 0x000280, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000288, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000290, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsSound_Base) == 0x000298, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess_5) == 0x0002A0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_Select_Default) == 0x0002A8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValid_ReturnValue_5) == 0x0002B0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsSound_Base_1) == 0x0002B8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsSound_Base_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess_6) == 0x0002C0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_Loaded) == 0x0002C8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002D0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002E0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002F0, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002F8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x000300, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000310, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000318, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_IsValid_ReturnValue_6) == 0x000319, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_Sender) == 0x000320, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_Inventory) == 0x000328, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetRepairLevel_ReturnValue) == 0x000330, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetRepairLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_6) == 0x000334, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x000344, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_7) == 0x000348, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_NewLevel) == 0x000358, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_NewLevel' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_8) == 0x00035C, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000370, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_AsBP_Shelter_Cassette_Camera) == 0x000378, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_AsBP_Shelter_Cassette_Camera' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_DynamicCast_bSuccess_7) == 0x000380, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000388, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_RequestResult) == 0x000390, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_RequestResult' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, K2Node_CustomEvent_Data) == 0x0003E8, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer, CallFunc_GetBattlePassSystem_ReturnValue_1) == 0x000408, "Member 'BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer::CallFunc_GetBattlePassSystem_ReturnValue_1' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.BattlepassReward_Event
// 0x0078 (0x0078 - 0x0000)
struct BP_CassettePlayer_C_BattlepassReward_Event final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FCloudBattlePassRewardsClaim           Data;                                              // 0x0058(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CassettePlayer_C_BattlepassReward_Event) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_BattlepassReward_Event");
static_assert(sizeof(BP_CassettePlayer_C_BattlepassReward_Event) == 0x000078, "Wrong size on BP_CassettePlayer_C_BattlepassReward_Event");
static_assert(offsetof(BP_CassettePlayer_C_BattlepassReward_Event, RequestResult) == 0x000000, "Member 'BP_CassettePlayer_C_BattlepassReward_Event::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_BattlepassReward_Event, Data) == 0x000058, "Member 'BP_CassettePlayer_C_BattlepassReward_Event::Data' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.Shelter Level Changed
// 0x0004 (0x0004 - 0x0000)
struct BP_CassettePlayer_C_Shelter_Level_Changed final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_Shelter_Level_Changed) == 0x000004, "Wrong alignment on BP_CassettePlayer_C_Shelter_Level_Changed");
static_assert(sizeof(BP_CassettePlayer_C_Shelter_Level_Changed) == 0x000004, "Wrong size on BP_CassettePlayer_C_Shelter_Level_Changed");
static_assert(offsetof(BP_CassettePlayer_C_Shelter_Level_Changed, NewLevel) == 0x000000, "Member 'BP_CassettePlayer_C_Shelter_Level_Changed::NewLevel' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.StashLoaded
// 0x0010 (0x0010 - 0x0000)
struct BP_CassettePlayer_C_StashLoaded final
{
public:
	class AStash*                                 Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStashComponent*                        Inventory;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_StashLoaded) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_StashLoaded");
static_assert(sizeof(BP_CassettePlayer_C_StashLoaded) == 0x000010, "Wrong size on BP_CassettePlayer_C_StashLoaded");
static_assert(offsetof(BP_CassettePlayer_C_StashLoaded, Sender) == 0x000000, "Member 'BP_CassettePlayer_C_StashLoaded::Sender' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_StashLoaded, Inventory) == 0x000008, "Member 'BP_CassettePlayer_C_StashLoaded::Inventory' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.internal Load and Play Track
// 0x0010 (0x0010 - 0x0000)
struct BP_CassettePlayer_C_Internal_Load_and_Play_Track final
{
public:
	const class UBP_CassetteTrack_C*              Track_Reference;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    Previous_Track;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_Internal_Load_and_Play_Track) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_Internal_Load_and_Play_Track");
static_assert(sizeof(BP_CassettePlayer_C_Internal_Load_and_Play_Track) == 0x000010, "Wrong size on BP_CassettePlayer_C_Internal_Load_and_Play_Track");
static_assert(offsetof(BP_CassettePlayer_C_Internal_Load_and_Play_Track, Track_Reference) == 0x000000, "Member 'BP_CassettePlayer_C_Internal_Load_and_Play_Track::Track_Reference' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_Internal_Load_and_Play_Track, Previous_Track) == 0x000008, "Member 'BP_CassettePlayer_C_Internal_Load_and_Play_Track::Previous_Track' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.Show Next Track Notification
// 0x0088 (0x0088 - 0x0000)
struct BP_CassettePlayer_C_Show_Next_Track_Notification final
{
public:
	struct FMusicTrackRow                         TrackInfo;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_CassettePlayer_C_Show_Next_Track_Notification) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_Show_Next_Track_Notification");
static_assert(sizeof(BP_CassettePlayer_C_Show_Next_Track_Notification) == 0x000088, "Wrong size on BP_CassettePlayer_C_Show_Next_Track_Notification");
static_assert(offsetof(BP_CassettePlayer_C_Show_Next_Track_Notification, TrackInfo) == 0x000000, "Member 'BP_CassettePlayer_C_Show_Next_Track_Notification::TrackInfo' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start On Client__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature");
static_assert(sizeof(BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature) == 0x000010, "Wrong size on BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature");
static_assert(offsetof(BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature, Sender) == 0x000000, "Member 'BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.Analytics Player Played Track
// 0x00C8 (0x00C8 - 0x0000)
struct BP_CassettePlayer_C_Analytics_Player_Played_Track final
{
public:
	struct FS_CassetteTrackInfo                   TrackInfo;                                         // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_Analytics_Player_Played_Track) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_Analytics_Player_Played_Track");
static_assert(sizeof(BP_CassettePlayer_C_Analytics_Player_Played_Track) == 0x0000C8, "Wrong size on BP_CassettePlayer_C_Analytics_Player_Played_Track");
static_assert(offsetof(BP_CassettePlayer_C_Analytics_Player_Played_Track, TrackInfo) == 0x000000, "Member 'BP_CassettePlayer_C_Analytics_Player_Played_Track::TrackInfo' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.OnLoaded_303A9E7341428F48F05BE78A0F49287F
// 0x0008 (0x0008 - 0x0000)
struct BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F");
static_assert(sizeof(BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F) == 0x000008, "Wrong size on BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F");
static_assert(offsetof(BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F, Loaded) == 0x000000, "Member 'BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F::Loaded' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.UserConstructionScript
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CassettePlayer_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_1;           // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_2;           // 0x0088(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_2;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_2;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_UserConstructionScript");
static_assert(sizeof(BP_CassettePlayer_C_UserConstructionScript) == 0x0000D0, "Wrong size on BP_CassettePlayer_C_UserConstructionScript");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_1) == 0x000028, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000050, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_1) == 0x000058, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh) == 0x000068, "Member 'BP_CassettePlayer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_CassettePlayer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000078, "Member 'BP_CassettePlayer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_CassettePlayer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000081, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000082, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_2) == 0x000088, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_2) == 0x0000B0, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x0000B8, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x0000B9, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_2) == 0x0000C0, "Member 'BP_CassettePlayer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'BP_CassettePlayer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0000C9, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0000CA, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_2) == 0x0000CB, "Member 'BP_CassettePlayer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.Initialize
// 0x0020 (0x0020 - 0x0000)
struct BP_CassettePlayer_C_Initialize final
{
public:
	TArray<class UBP_CassetteTrack_C*>            TrackList_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_Initialize) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_Initialize");
static_assert(sizeof(BP_CassettePlayer_C_Initialize) == 0x000020, "Wrong size on BP_CassettePlayer_C_Initialize");
static_assert(offsetof(BP_CassettePlayer_C_Initialize, TrackList_0) == 0x000000, "Member 'BP_CassettePlayer_C_Initialize::TrackList_0' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_Initialize, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_CassettePlayer_C_Initialize::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_Initialize, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_CassettePlayer_C_Initialize::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.SelectTrack
// 0x0030 (0x0030 - 0x0000)
struct BP_CassettePlayer_C_SelectTrack final
{
public:
	class UBP_CassetteTrack_C*                    Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       CassetteMaterial;                                  // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_SelectTrack) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_SelectTrack");
static_assert(sizeof(BP_CassettePlayer_C_SelectTrack) == 0x000030, "Wrong size on BP_CassettePlayer_C_SelectTrack");
static_assert(offsetof(BP_CassettePlayer_C_SelectTrack, Track) == 0x000000, "Member 'BP_CassettePlayer_C_SelectTrack::Track' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_SelectTrack, CassetteMaterial) == 0x000008, "Member 'BP_CassettePlayer_C_SelectTrack::CassetteMaterial' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.ShowUI
// 0x0060 (0x0060 - 0x0000)
struct BP_CassettePlayer_C_ShowUI final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FlameHUD_Shelter_C*                 K2Node_DynamicCast_AsBP_Flame_HUD_Shelter;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuWidget*                            CallFunc_GetGameMenu_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShelterMainTabControl*                 CallFunc_GetShelterUI_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_C*                   CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_ShowUI) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_ShowUI");
static_assert(sizeof(BP_CassettePlayer_C_ShowUI) == 0x000060, "Wrong size on BP_CassettePlayer_C_ShowUI");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_CassettePlayer_C_ShowUI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_GetFlameController_ReturnValue) == 0x000010, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, K2Node_DynamicCast_AsBP_Flame_HUD_Shelter) == 0x000020, "Member 'BP_CassettePlayer_C_ShowUI::K2Node_DynamicCast_AsBP_Flame_HUD_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CassettePlayer_C_ShowUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_GetGameMenu_ReturnValue) == 0x000030, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_GetGameMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_GetShelterUI_ReturnValue) == 0x000040, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_GetShelterUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_GetUserControllerId_ReturnValue) == 0x00004C, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000050, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ShowUI, CallFunc_Create_ReturnValue) == 0x000058, "Member 'BP_CassettePlayer_C_ShowUI::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.HideUI
// 0x0001 (0x0001 - 0x0000)
struct BP_CassettePlayer_C_HideUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_HideUI) == 0x000001, "Wrong alignment on BP_CassettePlayer_C_HideUI");
static_assert(sizeof(BP_CassettePlayer_C_HideUI) == 0x000001, "Wrong size on BP_CassettePlayer_C_HideUI");
static_assert(offsetof(BP_CassettePlayer_C_HideUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CassettePlayer_C_HideUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.PlayTrack
// 0x0058 (0x0058 - 0x0000)
struct BP_CassettePlayer_C_PlayTrack final
{
public:
	class UBP_CassetteTrack_C*                    Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    PreviousTrack;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_PlayTrack) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_PlayTrack");
static_assert(sizeof(BP_CassettePlayer_C_PlayTrack) == 0x000058, "Wrong size on BP_CassettePlayer_C_PlayTrack");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, Track) == 0x000000, "Member 'BP_CassettePlayer_C_PlayTrack::Track' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, PreviousTrack) == 0x000008, "Member 'BP_CassettePlayer_C_PlayTrack::PreviousTrack' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000018, "Member 'BP_CassettePlayer_C_PlayTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CassettePlayer_C_PlayTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_2) == 0x000023, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_3) == 0x000024, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000025, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_CassettePlayer_C_PlayTrack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_4) == 0x000038, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_GetGameMode_ReturnValue_1) == 0x000040, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1) == 0x000048, "Member 'BP_CassettePlayer_C_PlayTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_CassettePlayer_C_PlayTrack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_5) == 0x000051, "Member 'BP_CassettePlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.ResetQueue
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CassettePlayer_C_ResetQueue final
{
public:
	class UBP_CassetteTrack_C*                    IgnoredTrack;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CassetteTrack_C*>            AddAfter;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          LastPlayedTrackFoundAlready;                       // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCassettePlayerAvailable_Available;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CassetteTrack_C*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CassetteTrack_C*                    CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CassetteTrack_C*                    CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_ResetQueue) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_ResetQueue");
static_assert(sizeof(BP_CassettePlayer_C_ResetQueue) == 0x0000A0, "Wrong size on BP_CassettePlayer_C_ResetQueue");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, IgnoredTrack) == 0x000000, "Member 'BP_CassettePlayer_C_ResetQueue::IgnoredTrack' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, AddAfter) == 0x000008, "Member 'BP_CassettePlayer_C_ResetQueue::AddAfter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, LastPlayedTrackFoundAlready) == 0x000018, "Member 'BP_CassettePlayer_C_ResetQueue::LastPlayedTrackFoundAlready' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_CassettePlayer_C_ResetQueue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_CassettePlayer_C_ResetQueue::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_CassettePlayer_C_ResetQueue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'BP_CassettePlayer_C_ResetQueue::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_CassettePlayer_C_ResetQueue::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_IsCassettePlayerAvailable_Available) == 0x00003C, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_IsCassettePlayerAvailable_Available' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'BP_CassettePlayer_C_ResetQueue::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue_1) == 0x00005C, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue_2) == 0x000074, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue_3) == 0x00007C, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue_4) == 0x000094, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_Less_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ResetQueue, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000099, "Member 'BP_CassettePlayer_C_ResetQueue::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.StopTrack
// 0x0010 (0x0010 - 0x0000)
struct BP_CassettePlayer_C_StopTrack final
{
public:
	class UBP_CassetteTrack_C*                    BackupLastPlayedTrack;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_StopTrack) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_StopTrack");
static_assert(sizeof(BP_CassettePlayer_C_StopTrack) == 0x000010, "Wrong size on BP_CassettePlayer_C_StopTrack");
static_assert(offsetof(BP_CassettePlayer_C_StopTrack, BackupLastPlayedTrack) == 0x000000, "Member 'BP_CassettePlayer_C_StopTrack::BackupLastPlayedTrack' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_StopTrack, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CassettePlayer_C_StopTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_StopTrack, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_CassettePlayer_C_StopTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.FadeOutOldTrack
// 0x0001 (0x0001 - 0x0000)
struct BP_CassettePlayer_C_FadeOutOldTrack final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_FadeOutOldTrack) == 0x000001, "Wrong alignment on BP_CassettePlayer_C_FadeOutOldTrack");
static_assert(sizeof(BP_CassettePlayer_C_FadeOutOldTrack) == 0x000001, "Wrong size on BP_CassettePlayer_C_FadeOutOldTrack");
static_assert(offsetof(BP_CassettePlayer_C_FadeOutOldTrack, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CassettePlayer_C_FadeOutOldTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.FadeInLastPlayedTrack
// 0x0020 (0x0020 - 0x0000)
struct BP_CassettePlayer_C_FadeInLastPlayedTrack final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_FadeInLastPlayedTrack) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_FadeInLastPlayedTrack");
static_assert(sizeof(BP_CassettePlayer_C_FadeInLastPlayedTrack) == 0x000020, "Wrong size on BP_CassettePlayer_C_FadeInLastPlayedTrack");
static_assert(offsetof(BP_CassettePlayer_C_FadeInLastPlayedTrack, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'BP_CassettePlayer_C_FadeInLastPlayedTrack::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_FadeInLastPlayedTrack, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CassettePlayer_C_FadeInLastPlayedTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_FadeInLastPlayedTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000010, "Member 'BP_CassettePlayer_C_FadeInLastPlayedTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_FadeInLastPlayedTrack, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CassettePlayer_C_FadeInLastPlayedTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.GetCassetteTracksFromDataTable
// 0x0148 (0x0148 - 0x0000)
struct BP_CassettePlayer_C_GetCassetteTracksFromDataTable final
{
public:
	TArray<class UBP_CassetteTrack_C*>            MusicTrackList;                                    // 0x0000(0x0010)(Parm, OutParm)
	bool                                          TrackUnlocked;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CassetteTrack_C*>            NewMusicTrackList;                                 // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CassetteTrackInfo                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayerUnlockedCassetteTrack_IsUnlocked; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CassetteTrack_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_GetCassetteTracksFromDataTable");
static_assert(sizeof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable) == 0x000148, "Wrong size on BP_CassettePlayer_C_GetCassetteTracksFromDataTable");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, MusicTrackList) == 0x000000, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::MusicTrackList' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, TrackUnlocked) == 0x000010, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::TrackUnlocked' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, NewMusicTrackList) == 0x000018, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::NewMusicTrackList' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000118, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x000119, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_HasPlayerUnlockedCassetteTrack_IsUnlocked) == 0x000120, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_HasPlayerUnlockedCassetteTrack_IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000121, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000128, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_SpawnObject_ReturnValue) == 0x000138, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_GetCassetteTracksFromDataTable, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'BP_CassettePlayer_C_GetCassetteTracksFromDataTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.HasPlayerUnlockedCassetteTrack
// 0x0050 (0x0050 - 0x0000)
struct BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack final
{
public:
	class UClass*                                 CheckedCassetteTrack;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack");
static_assert(sizeof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack) == 0x000050, "Wrong size on BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CheckedCassetteTrack) == 0x000000, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CheckedCassetteTrack' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, IsUnlocked) == 0x000008, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_GetUserControllerId_ReturnValue) == 0x00000C, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000018, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x000028, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_GetStash_ReturnValue) == 0x000038, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_CountOfResource_ReturnValue) == 0x000044, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_Greater_IntInt_ReturnValue) == 0x000049, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.UnlockMusicTracks
// 0x0020 (0x0020 - 0x0000)
struct BP_CassettePlayer_C_UnlockMusicTracks final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPlayerUnlockedCassetteTrack_IsUnlocked; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_UnlockMusicTracks) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_UnlockMusicTracks");
static_assert(sizeof(BP_CassettePlayer_C_UnlockMusicTracks) == 0x000020, "Wrong size on BP_CassettePlayer_C_UnlockMusicTracks");
static_assert(offsetof(BP_CassettePlayer_C_UnlockMusicTracks, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CassettePlayer_C_UnlockMusicTracks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UnlockMusicTracks, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CassettePlayer_C_UnlockMusicTracks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UnlockMusicTracks, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CassettePlayer_C_UnlockMusicTracks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UnlockMusicTracks, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_CassettePlayer_C_UnlockMusicTracks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UnlockMusicTracks, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CassettePlayer_C_UnlockMusicTracks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UnlockMusicTracks, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_CassettePlayer_C_UnlockMusicTracks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_UnlockMusicTracks, CallFunc_HasPlayerUnlockedCassetteTrack_IsUnlocked) == 0x000019, "Member 'BP_CassettePlayer_C_UnlockMusicTracks::CallFunc_HasPlayerUnlockedCassetteTrack_IsUnlocked' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.RefreshCassettePlayerVisibility
// 0x0005 (0x0005 - 0x0000)
struct BP_CassettePlayer_C_RefreshCassettePlayerVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCassettePlayerAvailable_Available;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CassettePlayer_C_RefreshCassettePlayerVisibility) == 0x000001, "Wrong alignment on BP_CassettePlayer_C_RefreshCassettePlayerVisibility");
static_assert(sizeof(BP_CassettePlayer_C_RefreshCassettePlayerVisibility) == 0x000005, "Wrong size on BP_CassettePlayer_C_RefreshCassettePlayerVisibility");
static_assert(offsetof(BP_CassettePlayer_C_RefreshCassettePlayerVisibility, Temp_bool_Variable) == 0x000000, "Member 'BP_CassettePlayer_C_RefreshCassettePlayerVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RefreshCassettePlayerVisibility, Temp_byte_Variable) == 0x000001, "Member 'BP_CassettePlayer_C_RefreshCassettePlayerVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RefreshCassettePlayerVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CassettePlayer_C_RefreshCassettePlayerVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RefreshCassettePlayerVisibility, CallFunc_IsCassettePlayerAvailable_Available) == 0x000003, "Member 'BP_CassettePlayer_C_RefreshCassettePlayerVisibility::CallFunc_IsCassettePlayerAvailable_Available' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RefreshCassettePlayerVisibility, K2Node_Select_Default) == 0x000004, "Member 'BP_CassettePlayer_C_RefreshCassettePlayerVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.IsCassettePlayerAvailable
// 0x0002 (0x0002 - 0x0000)
struct BP_CassettePlayer_C_IsCassettePlayerAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_IsCassettePlayerAvailable) == 0x000001, "Wrong alignment on BP_CassettePlayer_C_IsCassettePlayerAvailable");
static_assert(sizeof(BP_CassettePlayer_C_IsCassettePlayerAvailable) == 0x000002, "Wrong size on BP_CassettePlayer_C_IsCassettePlayerAvailable");
static_assert(offsetof(BP_CassettePlayer_C_IsCassettePlayerAvailable, Available) == 0x000000, "Member 'BP_CassettePlayer_C_IsCassettePlayerAvailable::Available' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_IsCassettePlayerAvailable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_CassettePlayer_C_IsCassettePlayerAvailable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.OnTrackFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_CassettePlayer_C_OnTrackFinished final
{
public:
	class UBP_CassetteTrack_C*                    PrevTrack;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_OnTrackFinished) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_OnTrackFinished");
static_assert(sizeof(BP_CassettePlayer_C_OnTrackFinished) == 0x000010, "Wrong size on BP_CassettePlayer_C_OnTrackFinished");
static_assert(offsetof(BP_CassettePlayer_C_OnTrackFinished, PrevTrack) == 0x000000, "Member 'BP_CassettePlayer_C_OnTrackFinished::PrevTrack' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_OnTrackFinished, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CassettePlayer_C_OnTrackFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.DoesPlayerOwnAtLeastOneCassette
// 0x0038 (0x0038 - 0x0000)
struct BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette final
{
public:
	const class AStash*                           Stash;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OwnsSome;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CassetteBaseClass;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Item_Count_Sum_of_Items_Found;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Get_Item_Count_Types_of_Items_Found;      // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette");
static_assert(sizeof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette) == 0x000038, "Wrong size on BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, Stash) == 0x000000, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::Stash' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, OwnsSome) == 0x000008, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::OwnsSome' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, CassetteBaseClass) == 0x000010, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::CassetteBaseClass' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, CallFunc_Get_Item_Count_Sum_of_Items_Found) == 0x00001C, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::CallFunc_Get_Item_Count_Sum_of_Items_Found' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, CallFunc_Get_Item_Count_Types_of_Items_Found) == 0x000020, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::CallFunc_Get_Item_Count_Types_of_Items_Found' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.ToggleCassetteCamera
// 0x00E0 (0x00E0 - 0x0000)
struct BP_CassettePlayer_C_ToggleCassetteCamera final
{
public:
	bool                                          bShouldUseTheCamera;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInstantTransition;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PreviousViewTarget;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         PlayerController;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Shelter_C*                K2Node_DynamicCast_AsBP_Character_Shelter;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHumanAnimInstace*                      CallFunc_GetAnimInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HumanAnimInstance_C> K2Node_DynamicCast_AsBPI_Human_Anim_Instance;      // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_2;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter_2; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Shelter_C*                K2Node_DynamicCast_AsBP_Character_Shelter_1;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHumanAnimInstace*                      CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HumanAnimInstance_C> K2Node_DynamicCast_AsBPI_Human_Anim_Instance_1;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_ToggleCassetteCamera) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_ToggleCassetteCamera");
static_assert(sizeof(BP_CassettePlayer_C_ToggleCassetteCamera) == 0x0000E0, "Wrong size on BP_CassettePlayer_C_ToggleCassetteCamera");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, bShouldUseTheCamera) == 0x000000, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::bShouldUseTheCamera' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, bInstantTransition) == 0x000001, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::bInstantTransition' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, PreviousViewTarget) == 0x000008, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::PreviousViewTarget' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, PlayerController) == 0x000010, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetUserControllerId_ReturnValue) == 0x000018, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000020, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x000028, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000034, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000040, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1) == 0x000048, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_K2_GetPawn_ReturnValue) == 0x000058, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_AsBP_Character_Shelter) == 0x000060, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_AsBP_Character_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetAnimInstance_ReturnValue) == 0x000070, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_AsBPI_Human_Anim_Instance) == 0x000078, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_AsBPI_Human_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetUserControllerId_ReturnValue_2) == 0x00008C, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetUserControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2) == 0x000090, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_AsBP_Player_Controller_Shelter_2) == 0x000098, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_AsBP_Player_Controller_Shelter_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000A8, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_AsBP_Character_Shelter_1) == 0x0000B0, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_AsBP_Character_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000C0, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_AsBPI_Human_Anim_Instance_1) == 0x0000C8, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_AsBPI_Human_Anim_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ToggleCassetteCamera, K2Node_DynamicCast_bSuccess_6) == 0x0000D8, "Member 'BP_CassettePlayer_C_ToggleCassetteCamera::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.RotateTheCassette
// 0x0058 (0x0058 - 0x0000)
struct BP_CassettePlayer_C_RotateTheCassette final
{
public:
	float                                         InputAxis;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Shelter_C*                K2Node_DynamicCast_AsBP_Character_Shelter;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHumanAnimInstace*                      CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HumanAnimInstance_C> K2Node_DynamicCast_AsBPI_Human_Anim_Instance;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_RotateTheCassette) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_RotateTheCassette");
static_assert(sizeof(BP_CassettePlayer_C_RotateTheCassette) == 0x000058, "Wrong size on BP_CassettePlayer_C_RotateTheCassette");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, InputAxis) == 0x000000, "Member 'BP_CassettePlayer_C_RotateTheCassette::InputAxis' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, CallFunc_GetUserControllerId_ReturnValue) == 0x000004, "Member 'BP_CassettePlayer_C_RotateTheCassette::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000008, "Member 'BP_CassettePlayer_C_RotateTheCassette::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x000010, "Member 'BP_CassettePlayer_C_RotateTheCassette::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CassettePlayer_C_RotateTheCassette::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_CassettePlayer_C_RotateTheCassette::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, K2Node_DynamicCast_AsBP_Character_Shelter) == 0x000028, "Member 'BP_CassettePlayer_C_RotateTheCassette::K2Node_DynamicCast_AsBP_Character_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_CassettePlayer_C_RotateTheCassette::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'BP_CassettePlayer_C_RotateTheCassette::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, K2Node_DynamicCast_AsBPI_Human_Anim_Instance) == 0x000040, "Member 'BP_CassettePlayer_C_RotateTheCassette::K2Node_DynamicCast_AsBPI_Human_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RotateTheCassette, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_CassettePlayer_C_RotateTheCassette::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.AddCassetteStaticMeshToCharacter
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Shelter_C*                K2Node_DynamicCast_AsBP_Character_Shelter;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter) == 0x000010, "Wrong alignment on BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter");
static_assert(sizeof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter) == 0x0000D0, "Wrong size on BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_GetSoftReference_ReturnValue) == 0x000030, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_LoadSoftReference_ReturnValue) == 0x000060, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, K2Node_DynamicCast_AsStatic_Mesh) == 0x000070, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000079, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_GetUserControllerId_ReturnValue) == 0x00007C, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000080, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_SetStaticMesh_ReturnValue) == 0x000088, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x000090, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x0000A0, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, K2Node_DynamicCast_AsBP_Character_Shelter) == 0x0000A8, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::K2Node_DynamicCast_AsBP_Character_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_AddComponent_ReturnValue) == 0x0000B8, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000C0, "Member 'BP_CassettePlayer_C_AddCassetteStaticMeshToCharacter::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.RemoveCassetteStaticMeshFromCharacter
// 0x0038 (0x0038 - 0x0000)
struct BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter final
{
public:
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Shelter_C*                K2Node_DynamicCast_AsBP_Character_Shelter;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter");
static_assert(sizeof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter) == 0x000038, "Wrong size on BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter");
static_assert(offsetof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter, CallFunc_GetUserControllerId_ReturnValue) == 0x000000, "Member 'BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000008, "Member 'BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x000010, "Member 'BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter, K2Node_DynamicCast_AsBP_Character_Shelter) == 0x000028, "Member 'BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter::K2Node_DynamicCast_AsBP_Character_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_CassettePlayer_C_RemoveCassetteStaticMeshFromCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.ChangePreviewCassetteMaterial
// 0x0020 (0x0020 - 0x0000)
struct BP_CassettePlayer_C_ChangePreviewCassetteMaterial final
{
public:
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_ChangePreviewCassetteMaterial) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_ChangePreviewCassetteMaterial");
static_assert(sizeof(BP_CassettePlayer_C_ChangePreviewCassetteMaterial) == 0x000020, "Wrong size on BP_CassettePlayer_C_ChangePreviewCassetteMaterial");
static_assert(offsetof(BP_CassettePlayer_C_ChangePreviewCassetteMaterial, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000000, "Member 'BP_CassettePlayer_C_ChangePreviewCassetteMaterial::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ChangePreviewCassetteMaterial, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_CassettePlayer_C_ChangePreviewCassetteMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ChangePreviewCassetteMaterial, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_CassettePlayer_C_ChangePreviewCassetteMaterial::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ChangePreviewCassetteMaterial, K2Node_DynamicCast_AsMaterial_Instance) == 0x000010, "Member 'BP_CassettePlayer_C_ChangePreviewCassetteMaterial::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_ChangePreviewCassetteMaterial, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CassettePlayer_C_ChangePreviewCassetteMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CassettePlayer.BP_CassettePlayer_C.CheckOwnedCassettes
// 0x02E8 (0x02E8 - 0x0000)
struct BP_CassettePlayer_C_CheckOwnedCassettes final
{
public:
	class UStaticMeshComponent*                   TempStaticMeshToAffect;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempMatIndexToAffect;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Material;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, TSoftObjectPtr<class UMaterialInstance>> CassettesToMaterials;                              // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<class UClass*, int32>                    CassettesToMaterialIndexes;                        // 0x0068(0x0050)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    K2Node_MakeVariable_MakeVariableOutput;            // 0x00E0(0x0050)()
	TMap<class UClass*, TSoftObjectPtr<class UMaterialInstance>> K2Node_MakeVariable_MakeVariableOutput_1;          // 0x0130(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CassetteTrackInfo                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0198(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaterialIndex_ReturnValue_1;           // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue_2;           // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CassettePlayer_C_CheckOwnedCassettes) == 0x000008, "Wrong alignment on BP_CassettePlayer_C_CheckOwnedCassettes");
static_assert(sizeof(BP_CassettePlayer_C_CheckOwnedCassettes) == 0x0002E8, "Wrong size on BP_CassettePlayer_C_CheckOwnedCassettes");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, TempStaticMeshToAffect) == 0x000000, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::TempStaticMeshToAffect' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, TempMatIndexToAffect) == 0x000008, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::TempMatIndexToAffect' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, Material) == 0x000010, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::Material' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CassettesToMaterials) == 0x000018, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CassettesToMaterials' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CassettesToMaterialIndexes) == 0x000068, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CassettesToMaterialIndexes' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000B8, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x0000D0, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, K2Node_MakeVariable_MakeVariableOutput) == 0x0000E0, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, K2Node_MakeVariable_MakeVariableOutput_1) == 0x000130, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, Temp_int_Array_Index_Variable) == 0x00018C, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetDataTableRowFromName_OutRow) == 0x000198, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000260, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetMaterialIndex_ReturnValue) == 0x000264, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetMaterialIndex_ReturnValue_1) == 0x000268, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetMaterialIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00026C, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00026D, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetMaterialIndex_ReturnValue_2) == 0x000270, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetMaterialIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000278, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, K2Node_DynamicCast_AsMaterial_Instance) == 0x000280, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000289, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetClassDisplayName_ReturnValue) == 0x000290, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetUserControllerId_ReturnValue) == 0x0002A0, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_Concat_StrStr_ReturnValue) == 0x0002A8, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0002B8, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x0002C0, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, K2Node_DynamicCast_bSuccess_1) == 0x0002C8, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_GetStash_ReturnValue) == 0x0002D0, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_IsValid_ReturnValue_1) == 0x0002D8, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_IsValid_ReturnValue_2) == 0x0002D9, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_CountOfResource_ReturnValue) == 0x0002DC, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CassettePlayer_C_CheckOwnedCassettes, CallFunc_Greater_IntInt_ReturnValue) == 0x0002E0, "Member 'BP_CassettePlayer_C_CheckOwnedCassettes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

