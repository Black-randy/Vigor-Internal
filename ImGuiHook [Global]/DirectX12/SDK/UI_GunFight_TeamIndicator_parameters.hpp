#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunFight_TeamIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_GunFight_TeamIndicator.UI_GunFight_TeamIndicator_C.ExecuteUbergraph_UI_GunFight_TeamIndicator
// 0x0088 (0x0088 - 0x0000)
struct UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, float>                            CallFunc_Get_Team_Health_and_Alive_Number_Team_Healths; // 0x0008(0x0050)()
	int32                                         CallFunc_Get_Team_Health_and_Alive_Number_Alive_Players; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    K2Node_CustomEvent_Team;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Friendly_Team;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator) == 0x000008, "Wrong alignment on UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator");
static_assert(sizeof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator) == 0x000088, "Wrong size on UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator, EntryPoint) == 0x000000, "Member 'UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator, CallFunc_Get_Team_Health_and_Alive_Number_Team_Healths) == 0x000008, "Member 'UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator::CallFunc_Get_Team_Health_and_Alive_Number_Team_Healths' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator, CallFunc_Get_Team_Health_and_Alive_Number_Alive_Players) == 0x000058, "Member 'UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator::CallFunc_Get_Team_Health_and_Alive_Number_Alive_Players' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator, K2Node_CustomEvent_Team) == 0x000078, "Member 'UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator, K2Node_CustomEvent_Friendly_Team) == 0x000080, "Member 'UI_GunFight_TeamIndicator_C_ExecuteUbergraph_UI_GunFight_TeamIndicator::K2Node_CustomEvent_Friendly_Team' has a wrong offset!");

// Function UI_GunFight_TeamIndicator.UI_GunFight_TeamIndicator_C.Set Team
// 0x0010 (0x0010 - 0x0000)
struct UI_GunFight_TeamIndicator_C_Set_Team final
{
public:
	class UBP_GSC_Team_Raid_C*                    Team;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Friendly_Team;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_GunFight_TeamIndicator_C_Set_Team) == 0x000008, "Wrong alignment on UI_GunFight_TeamIndicator_C_Set_Team");
static_assert(sizeof(UI_GunFight_TeamIndicator_C_Set_Team) == 0x000010, "Wrong size on UI_GunFight_TeamIndicator_C_Set_Team");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Team, Team) == 0x000000, "Member 'UI_GunFight_TeamIndicator_C_Set_Team::Team' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Team, Friendly_Team) == 0x000008, "Member 'UI_GunFight_TeamIndicator_C_Set_Team::Friendly_Team' has a wrong offset!");

// Function UI_GunFight_TeamIndicator.UI_GunFight_TeamIndicator_C.Fill Player Indicators
// 0x0168 (0x0168 - 0x0000)
struct UI_GunFight_TeamIndicator_C_Fill_Player_Indicators final
{
public:
	bool                                          CurrentPlayerKicked;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 KickdPlayerIDs;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 TempKickedPlayerIDs;                               // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Local_Player_Id;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Player_ID;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Team_Index_Index;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x00C0(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0100(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_GunFight_PlayerIndicator_C*         CallFunc_Create_ReturnValue;                       // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators) == 0x000008, "Wrong alignment on UI_GunFight_TeamIndicator_C_Fill_Player_Indicators");
static_assert(sizeof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators) == 0x000168, "Wrong size on UI_GunFight_TeamIndicator_C_Fill_Player_Indicators");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CurrentPlayerKicked) == 0x000000, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CurrentPlayerKicked' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, KickdPlayerIDs) == 0x000008, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::KickdPlayerIDs' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, TempKickedPlayerIDs) == 0x000018, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::TempKickedPlayerIDs' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Local_Player_Id) == 0x000028, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Local_Player_Id' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Current_Player_ID) == 0x00002C, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Current_Player_ID' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_struct_Variable) == 0x000030, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_struct_Variable_1) == 0x000040, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_int_Variable) == 0x000050, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_bool_Variable) == 0x000058, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000068, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_int_Variable_1) == 0x000074, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_struct_Variable_2) == 0x000078, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_struct_Variable_3) == 0x000088, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_GetGameState_ReturnValue_1) == 0x000098, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight) == 0x0000A8, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Not_PreBool_ReturnValue) == 0x0000BA, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Get_Team_Index_Index) == 0x0000BC, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Get_Team_Index_Index' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_Select_Default) == 0x0000C0, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000D0, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_IsValid_ReturnValue_2) == 0x0000D9, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000DA, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_bool_Variable_1) == 0x0000DB, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_struct_Variable_4) == 0x0000DC, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_Select_Default_1) == 0x0000EC, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Get_Members_Member_States) == 0x000100, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_IsValid_ReturnValue_3) == 0x000118, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Array_Contains_ReturnValue) == 0x000119, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00011A, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, Temp_bool_Variable_2) == 0x00011B, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_Select_Default_2) == 0x00011C, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, K2Node_Select_Default_3) == 0x00012C, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000140, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Create_ReturnValue) == 0x000148, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Subtract_IntInt_ReturnValue) == 0x000150, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000154, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000158, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Fill_Player_Indicators, CallFunc_Array_Add_ReturnValue) == 0x000160, "Member 'UI_GunFight_TeamIndicator_C_Fill_Player_Indicators::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function UI_GunFight_TeamIndicator.UI_GunFight_TeamIndicator_C.Get Team Health and Alive Number
// 0x00F0 (0x00F0 - 0x0000)
struct UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number final
{
public:
	TMap<int32, float>                            Team_Healths;                                      // 0x0000(0x0050)(Parm, OutParm)
	int32                                         Alive_Players;                                     // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AliveMembers;                                      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, float>                            TeamHealth;                                        // 0x0058(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x00C0(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number) == 0x000008, "Wrong alignment on UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number");
static_assert(sizeof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number) == 0x0000F0, "Wrong size on UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, Team_Healths) == 0x000000, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::Team_Healths' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, Alive_Players) == 0x000050, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::Alive_Players' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, AliveMembers) == 0x000054, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::AliveMembers' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, TeamHealth) == 0x000058, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::TeamHealth' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, Temp_int_Variable) == 0x0000A8, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_Get_Members_Member_States) == 0x0000C0, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_IsValid_ReturnValue_1) == 0x0000DD, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_GetIsDead_ReturnValue) == 0x0000DE, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_Not_PreBool_ReturnValue) == 0x0000DF, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_GetHealth_ReturnValue) == 0x0000E0, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_IsValid_ReturnValue_2) == 0x0000E4, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_IsValid_ReturnValue_3) == 0x0000E5, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'UI_GunFight_TeamIndicator_C_Get_Team_Health_and_Alive_Number::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function UI_GunFight_TeamIndicator.UI_GunFight_TeamIndicator_C.Set Alive Players
// 0x0080 (0x0080 - 0x0000)
struct UI_GunFight_TeamIndicator_C_Set_Alive_Players final
{
public:
	TMap<int32, float>                            Player_Healths;                                    // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Alive_Players;                                     // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_PlayerIndicator_C*         CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_TeamIndicator_C_Set_Alive_Players) == 0x000008, "Wrong alignment on UI_GunFight_TeamIndicator_C_Set_Alive_Players");
static_assert(sizeof(UI_GunFight_TeamIndicator_C_Set_Alive_Players) == 0x000080, "Wrong size on UI_GunFight_TeamIndicator_C_Set_Alive_Players");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, Player_Healths) == 0x000000, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::Player_Healths' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, Alive_Players) == 0x000050, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::Alive_Players' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, Temp_int_Array_Index_Variable) == 0x000054, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, CallFunc_Array_Get_Item) == 0x000068, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, CallFunc_Map_Find_Value) == 0x000074, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Set_Alive_Players, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00007C, "Member 'UI_GunFight_TeamIndicator_C_Set_Alive_Players::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_GunFight_TeamIndicator.UI_GunFight_TeamIndicator_C.Sort Healths
// 0x0080 (0x0080 - 0x0000)
struct UI_GunFight_TeamIndicator_C_Sort_Healths final
{
public:
	TArray<float>                                 Team_Healths;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Sort_Descending;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Sorted_Healths;                                    // 0x0018(0x0010)(Parm, OutParm)
	TArray<float>                                 _Sorted_Healths;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_GunFight_TeamIndicator_C_Sort_Healths) == 0x000008, "Wrong alignment on UI_GunFight_TeamIndicator_C_Sort_Healths");
static_assert(sizeof(UI_GunFight_TeamIndicator_C_Sort_Healths) == 0x000080, "Wrong size on UI_GunFight_TeamIndicator_C_Sort_Healths");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Team_Healths) == 0x000000, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Team_Healths' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Sort_Descending) == 0x000010, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Sort_Descending' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Sorted_Healths) == 0x000018, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Sorted_Healths' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, _Sorted_Healths) == 0x000028, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::_Sorted_Healths' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Temp_int_Array_Index_Variable) == 0x000048, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Array_Get_Item) == 0x00004C, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Temp_bool_True_if_break_was_hit_Variable) == 0x000068, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Less_FloatFloat_ReturnValue) == 0x000074, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000075, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_BooleanAND_ReturnValue_1) == 0x000077, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_TeamIndicator_C_Sort_Healths, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'UI_GunFight_TeamIndicator_C_Sort_Healths::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

