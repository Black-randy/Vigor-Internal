#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Event_Antenna

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GMComponent_ADM_Event_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMComponent_ADM_Event_Antenna.BP_GMComponent_ADM_Event_Antenna_C
// 0x0048 (0x0220 - 0x01D8)
class UBP_GMComponent_ADM_Event_Antenna_C final : public UBP_GMComponent_ADM_Event_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GMComponent_ADM_Event_Antenna_C; // 0x01D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_ADM_AntennaLocation_C*              Antenna_Location;                                  // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ADM_Antenna_C*                      Antenna;                                           // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scan_Duration;                                     // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scan_Cooldown;                                     // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cooldown_Timer;                                    // 0x01F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ADM_AntennaLocation_C*>      Debug_Antenna_Locations;                           // 0x0200(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_ADM_Antenna_C*>              Debug_Antennas;                                    // 0x0210(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void Spawn_Antenna(bool* Success);
	void Game_Mode_Toggled(bool Game_Mode_Is_Running);
	void Spawn_All_Antennas();
	void Initialize_Component();
	void Antenna_Interaction(class ABP_ADM_Antenna_C* Interacted_Antenna, class AHumanCharacter* Interacting_Character);
	void Cooldown_Expired();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_GMComponent_ADM_Event_Antenna(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMComponent_ADM_Event_Antenna_C">();
	}
	static class UBP_GMComponent_ADM_Event_Antenna_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GMComponent_ADM_Event_Antenna_C>();
	}
};
static_assert(alignof(UBP_GMComponent_ADM_Event_Antenna_C) == 0x000008, "Wrong alignment on UBP_GMComponent_ADM_Event_Antenna_C");
static_assert(sizeof(UBP_GMComponent_ADM_Event_Antenna_C) == 0x000220, "Wrong size on UBP_GMComponent_ADM_Event_Antenna_C");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, UberGraphFrame_BP_GMComponent_ADM_Event_Antenna_C) == 0x0001D8, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::UberGraphFrame_BP_GMComponent_ADM_Event_Antenna_C' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, Antenna_Location) == 0x0001E0, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::Antenna_Location' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, Antenna) == 0x0001E8, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::Antenna' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, Scan_Duration) == 0x0001F0, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::Scan_Duration' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, Scan_Cooldown) == 0x0001F4, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::Scan_Cooldown' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, Cooldown_Timer) == 0x0001F8, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::Cooldown_Timer' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, Debug_Antenna_Locations) == 0x000200, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::Debug_Antenna_Locations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_Antenna_C, Debug_Antennas) == 0x000210, "Member 'UBP_GMComponent_ADM_Event_Antenna_C::Debug_Antennas' has a wrong offset!");

}

