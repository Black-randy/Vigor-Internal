#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Elevator

#include "Basic.hpp"

#include "BP_Elevator_classes.hpp"
#include "BP_Elevator_parameters.hpp"


namespace SDK
{

// Function BP_Elevator.BP_Elevator_C.DoorClosed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::DoorClosed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "DoorClosed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.ElevatorArrived__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::ElevatorArrived__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ElevatorArrived__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.DoorOpened__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::DoorOpened__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "DoorOpened__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.ExecuteUbergraph_BP_Elevator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::ExecuteUbergraph_BP_Elevator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ExecuteUbergraph_BP_Elevator");

	Params::BP_Elevator_C_ExecuteUbergraph_BP_Elevator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.HardStopSoundEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTweenVector*                     Tween                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::HardStopSoundEvent(class UTweenVector* Tween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "HardStopSoundEvent");

	Params::BP_Elevator_C_HardStopSoundEvent Parms{};

	Parms.Tween = Tween;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.DoorSoundEffect_01
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::DoorSoundEffect_01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "DoorSoundEffect_01");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.PlayDoorSoundEffects
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFrontDoors                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Elevator_C::PlayDoorSoundEffects(bool bFrontDoors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "PlayDoorSoundEffects");

	Params::BP_Elevator_C_PlayDoorSoundEffects Parms{};

	Parms.bFrontDoors = bFrontDoors;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.DoorSoundEffect_02
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::DoorSoundEffect_02()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "DoorSoundEffect_02");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.BindElevatorStartAfterDoorClose
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::BindElevatorStartAfterDoorClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "BindElevatorStartAfterDoorClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.ElevatorTweenEnded
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTweenVector*                     Tween                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::ElevatorTweenEnded(class UTweenVector* Tween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ElevatorTweenEnded");

	Params::BP_Elevator_C_ElevatorTweenEnded Parms{};

	Parms.Tween = Tween;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction Start On Client__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UInteractionItemComponent*        Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Interacting_Actor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction Start On Client__DelegateSignature");

	Params::BP_Elevator_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_6_Interaction_Start_On_Client__DelegateSignature Parms{};

	Parms.Sender = Sender;
	Parms.Interacting_Actor = Interacting_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.MoveElevatorByTween
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::MoveElevatorByTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "MoveElevatorByTween");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.ElevatorArrivedEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::ElevatorArrivedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ElevatorArrivedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.BackDoor_Closed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTweenFloat*                      Tween                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::BackDoor_Closed(class UTweenFloat* Tween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "BackDoor_Closed");

	Params::BP_Elevator_C_BackDoor_Closed Parms{};

	Parms.Tween = Tween;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.FrontDoor_Closed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTweenFloat*                      Tween                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::FrontDoor_Closed(class UTweenFloat* Tween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "FrontDoor_Closed");

	Params::BP_Elevator_C_FrontDoor_Closed Parms{};

	Parms.Tween = Tween;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.CheckIfBothDoorClosed
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::CheckIfBothDoorClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "CheckIfBothDoorClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.StartTheElevator
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::StartTheElevator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "StartTheElevator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.OpenExitDoor
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::OpenExitDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "OpenExitDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.CloseDoors
// (BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::CloseDoors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "CloseDoors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.ElevatorBoxTriggered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bJumpEnabled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_Character_Script_C*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::ElevatorBoxTriggered(bool bJumpEnabled, class ABP_Character_Script_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ElevatorBoxTriggered");

	Params::BP_Elevator_C_ElevatorBoxTriggered Parms{};

	Parms.bJumpEnabled = bJumpEnabled;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Elevator_C::BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Elevator_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Elevator_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.Move The Elevator On Client
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Floor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::Move_The_Elevator_On_Client(int32 Floor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Move The Elevator On Client");

	Params::BP_Elevator_C_Move_The_Elevator_On_Client Parms{};

	Parms.Floor = Floor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.Move The Elevator
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Floor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::Move_The_Elevator(int32 Floor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Move The Elevator");

	Params::BP_Elevator_C_Move_The_Elevator Parms{};

	Parms.Floor = Floor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.Go To Floor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Floor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::Go_To_Floor(int32 Floor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Go To Floor");

	Params::BP_Elevator_C_Go_To_Floor Parms{};

	Parms.Floor = Floor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ReceiveTick");

	Params::BP_Elevator_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Elevator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.SetDesiredFloor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Floor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::SetDesiredFloor(int32 Floor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "SetDesiredFloor");

	Params::BP_Elevator_C_SetDesiredFloor Parms{};

	Parms.Floor = Floor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.Hide Floor Level Meshes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::Hide_Floor_Level_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Hide Floor Level Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.Register Level Callers
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::Register_Level_Callers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Register Level Callers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.Set Elevator Controllers Active
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Elevator_C::Set_Elevator_Controllers_Active(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Set Elevator Controllers Active");

	Params::BP_Elevator_C_Set_Elevator_Controllers_Active Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Elevator.BP_Elevator_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::Interact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Interact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.Hide UI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::Hide_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Hide UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.Show UI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Elevator_C::Show_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Show UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Elevator.BP_Elevator_C.Get Distance Between Floors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Elevator_C::Get_Distance_Between_Floors(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Elevator_C", "Get Distance Between Floors");

	Params::BP_Elevator_C_Get_Distance_Between_Floors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}

}

