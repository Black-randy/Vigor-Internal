#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VegetationAffector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FlameUI_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VegetationAffector.BP_VegetationAffector_C
// 0x0030 (0x0250 - 0x0220)
class ABP_VegetationAffector_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   LODMeshAffector;                                   // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CloseAffector;                                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          VegetationReactionOn;                              // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Particles;                                         // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_VegetationAffector(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Toggle_Emitter(bool Active);
	void InitSwitch();
	void DeactivateParticles();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VegetationAffector_C">();
	}
	static class ABP_VegetationAffector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VegetationAffector_C>();
	}
};
static_assert(alignof(ABP_VegetationAffector_C) == 0x000008, "Wrong alignment on ABP_VegetationAffector_C");
static_assert(sizeof(ABP_VegetationAffector_C) == 0x000250, "Wrong size on ABP_VegetationAffector_C");
static_assert(offsetof(ABP_VegetationAffector_C, UberGraphFrame) == 0x000220, "Member 'ABP_VegetationAffector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_C, LODMeshAffector) == 0x000228, "Member 'ABP_VegetationAffector_C::LODMeshAffector' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_C, CloseAffector) == 0x000230, "Member 'ABP_VegetationAffector_C::CloseAffector' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_VegetationAffector_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_C, VegetationReactionOn) == 0x000240, "Member 'ABP_VegetationAffector_C::VegetationReactionOn' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_C, Particles) == 0x000248, "Member 'ABP_VegetationAffector_C::Particles' has a wrong offset!");

}

