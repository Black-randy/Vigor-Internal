#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeatherManagerWIthLighting

#include "Basic.hpp"

#include "BP_WeatherManager_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WeatherManagerWIthLighting.BP_WeatherManagerWithLighting_C
// 0x0038 (0x04B8 - 0x0480)
class ABP_WeatherManagerWithLighting_C : public ABP_WeatherManager_C
{
public:
	class UDirectionalLightComponent*             DirectionalLight;                                  // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        LightDirectionArrow;                               // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Skybox;                                            // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLight;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UExponentialHeightFogComponent*         ExponentialHeightFog;                              // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Lighting;                                          // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void DisableWeather(bool Disable);
	void GetPostProcessComponent(class UPostProcessComponent** OutPostProcessComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WeatherManagerWithLighting_C">();
	}
	static class ABP_WeatherManagerWithLighting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WeatherManagerWithLighting_C>();
	}
};
static_assert(alignof(ABP_WeatherManagerWithLighting_C) == 0x000008, "Wrong alignment on ABP_WeatherManagerWithLighting_C");
static_assert(sizeof(ABP_WeatherManagerWithLighting_C) == 0x0004B8, "Wrong size on ABP_WeatherManagerWithLighting_C");
static_assert(offsetof(ABP_WeatherManagerWithLighting_C, DirectionalLight) == 0x000480, "Member 'ABP_WeatherManagerWithLighting_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(ABP_WeatherManagerWithLighting_C, LightDirectionArrow) == 0x000488, "Member 'ABP_WeatherManagerWithLighting_C::LightDirectionArrow' has a wrong offset!");
static_assert(offsetof(ABP_WeatherManagerWithLighting_C, Skybox) == 0x000490, "Member 'ABP_WeatherManagerWithLighting_C::Skybox' has a wrong offset!");
static_assert(offsetof(ABP_WeatherManagerWithLighting_C, SkyLight) == 0x000498, "Member 'ABP_WeatherManagerWithLighting_C::SkyLight' has a wrong offset!");
static_assert(offsetof(ABP_WeatherManagerWithLighting_C, PostProcess) == 0x0004A0, "Member 'ABP_WeatherManagerWithLighting_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_WeatherManagerWithLighting_C, ExponentialHeightFog) == 0x0004A8, "Member 'ABP_WeatherManagerWithLighting_C::ExponentialHeightFog' has a wrong offset!");
static_assert(offsetof(ABP_WeatherManagerWithLighting_C, Lighting) == 0x0004B0, "Member 'ABP_WeatherManagerWithLighting_C::Lighting' has a wrong offset!");

}

