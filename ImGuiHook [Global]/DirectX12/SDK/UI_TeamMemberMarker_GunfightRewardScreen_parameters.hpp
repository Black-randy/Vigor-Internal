#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TeamMemberMarker_GunfightRewardScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Struct_GunFightStatistics_structs.hpp"


namespace SDK::Params
{

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.ScorePresentationEnded__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature final
{
public:
	class UUI_TeamMemberMarker_GunfightRewardScreen_C* Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Skipped;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature) == 0x000008, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature) == 0x000010, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature, Widget) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature::Widget' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature, Skipped) == 0x000008, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ScorePresentationEnded__DelegateSignature::Skipped' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.CurrentShownScoreChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_CurrentShownScoreChanged__DelegateSignature final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_CurrentShownScoreChanged__DelegateSignature) == 0x000004, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_CurrentShownScoreChanged__DelegateSignature");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_CurrentShownScoreChanged__DelegateSignature) == 0x000004, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_CurrentShownScoreChanged__DelegateSignature");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_CurrentShownScoreChanged__DelegateSignature, Percent) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_CurrentShownScoreChanged__DelegateSignature::Percent' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen
// 0x0118 (0x0118 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimeToFill;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Instant;                        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_GetAnimationToPlay_ProgressBarFill_1;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_GetAnimationToPlay_ProgressBarFill_1_1;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             K2Node_CustomEvent_Statistics;                     // 0x00A8(0x0050)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasMVP;                        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ScoreBoostCount;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen) == 0x000008, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen) == 0x000118, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, EntryPoint) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, Temp_bool_Variable) == 0x000010, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x000018, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_CustomEvent_TimeToFill) == 0x000024, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_CustomEvent_TimeToFill' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_Event_MyGeometry) == 0x00002C, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_Event_InDeltaTime) == 0x000064, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_CustomEvent_Instant) == 0x000068, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_CustomEvent_Instant' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_GetAnimationToPlay_ProgressBarFill_1) == 0x000080, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_GetAnimationToPlay_ProgressBarFill_1' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_GetAnimationToPlay_ProgressBarFill_1_1) == 0x000088, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_GetAnimationToPlay_ProgressBarFill_1_1' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000090, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000098, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000A0, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_CustomEvent_Statistics) == 0x0000A8, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_CustomEvent_Statistics' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_CustomEvent_bWasMVP) == 0x0000F8, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_CustomEvent_bWasMVP' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_CustomEvent_ScoreBoostCount) == 0x0000FC, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_CustomEvent_ScoreBoostCount' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, K2Node_Event_IsDesignTime) == 0x000100, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000108, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000110, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_ExecuteUbergraph_UI_TeamMemberMarker_GunfightRewardScreen::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_PreConstruct) == 0x000001, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_PreConstruct");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_PreConstruct) == 0x000001, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_PreConstruct");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.InitializeValues
// 0x0058 (0x0058 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues final
{
public:
	struct FStruct_GunFightStatistics             Statistics_0;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bWasMVP_0;                                         // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScoreBoostCount_0;                                 // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues) == 0x000008, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues) == 0x000058, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues, Statistics_0) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues::Statistics_0' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues, bWasMVP_0) == 0x000050, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues::bWasMVP_0' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues, ScoreBoostCount_0) == 0x000054, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_InitializeValues::ScoreBoostCount_0' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.HideWidget
// 0x0001 (0x0001 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_HideWidget final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_HideWidget) == 0x000001, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_HideWidget");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_HideWidget) == 0x000001, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_HideWidget");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_HideWidget, Instant) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_HideWidget::Instant' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_Tick) == 0x000004, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_Tick");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_Tick) == 0x00003C, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_Tick");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_Tick, MyGeometry) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.StartScoreAddition
// 0x0004 (0x0004 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_StartScoreAddition final
{
public:
	float                                         TimeToFill_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_StartScoreAddition) == 0x000004, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_StartScoreAddition");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_StartScoreAddition) == 0x000004, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_StartScoreAddition");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_StartScoreAddition, TimeToFill_0) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_StartScoreAddition::TimeToFill_0' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.UpdateScoreNumber
// 0x0020 (0x0020 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber) == 0x000008, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber) == 0x000020, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber, Percent) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber::Percent' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000004, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_UpdateScoreNumber::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.GetAnimationToPlay
// 0x0008 (0x0008 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_GetAnimationToPlay final
{
public:
	class UWidgetAnimation*                       ProgressBarFill_1_0;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_GetAnimationToPlay) == 0x000008, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_GetAnimationToPlay");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_GetAnimationToPlay) == 0x000008, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_GetAnimationToPlay");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_GetAnimationToPlay, ProgressBarFill_1_0) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_GetAnimationToPlay::ProgressBarFill_1_0' has a wrong offset!");

// Function UI_TeamMemberMarker_GunfightRewardScreen.UI_TeamMemberMarker_GunfightRewardScreen_C.SetCorrectScoreCrown
// 0x0020 (0x0020 - 0x0000)
struct UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown) == 0x000008, "Wrong alignment on UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown");
static_assert(sizeof(UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown) == 0x000020, "Wrong size on UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown, Temp_bool_Variable) == 0x000000, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown, Temp_object_Variable) == 0x000008, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown, Temp_object_Variable_1) == 0x000010, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown, K2Node_Select_Default) == 0x000018, "Member 'UI_TeamMemberMarker_GunfightRewardScreen_C_SetCorrectScoreCrown::K2Node_Select_Default' has a wrong offset!");

}

