#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TutorialHint_10

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "FlameUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_TutorialHint_10.UI_TutorialHint_10_C
// 0x0050 (0x0318 - 0x02C8)
class UUI_TutorialHint_10_C final : public UInputActionHintWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Overlay_HintText;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionWidget;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   HintText;                                          // 0x02E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          CloseOnRelease;                                    // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          CloseOnPressed;                                    // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          CloseOnHold;                                       // 0x0302(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	EInputIcon                                    Icon;                                              // 0x0303(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsHoldable;                                        // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EInputIcon>                            VisualIcons;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_UI_TutorialHint_10(int32 EntryPoint);
	void OnPCControlsChange();
	void OnInputModeChanged(int32 PlayerIndex, EInputMode InputMode);
	void Destruct();
	void Construct();
	void CloseUI();
	void BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_10_OnActionHoldEvent__DelegateSignature();
	void BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_7_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_2_OnActionReleasedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void UpdateWindowsIcons();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_TutorialHint_10_C">();
	}
	static class UUI_TutorialHint_10_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_TutorialHint_10_C>();
	}
};
static_assert(alignof(UUI_TutorialHint_10_C) == 0x000008, "Wrong alignment on UUI_TutorialHint_10_C");
static_assert(sizeof(UUI_TutorialHint_10_C) == 0x000318, "Wrong size on UUI_TutorialHint_10_C");
static_assert(offsetof(UUI_TutorialHint_10_C, UberGraphFrame) == 0x0002C8, "Member 'UUI_TutorialHint_10_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, Overlay_HintText) == 0x0002D0, "Member 'UUI_TutorialHint_10_C::Overlay_HintText' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, UI_FlameSafezone) == 0x0002D8, "Member 'UUI_TutorialHint_10_C::UI_FlameSafezone' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, UI_GamepadActionWidget) == 0x0002E0, "Member 'UUI_TutorialHint_10_C::UI_GamepadActionWidget' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, HintText) == 0x0002E8, "Member 'UUI_TutorialHint_10_C::HintText' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, CloseOnRelease) == 0x000300, "Member 'UUI_TutorialHint_10_C::CloseOnRelease' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, CloseOnPressed) == 0x000301, "Member 'UUI_TutorialHint_10_C::CloseOnPressed' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, CloseOnHold) == 0x000302, "Member 'UUI_TutorialHint_10_C::CloseOnHold' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, Icon) == 0x000303, "Member 'UUI_TutorialHint_10_C::Icon' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, IsHoldable) == 0x000304, "Member 'UUI_TutorialHint_10_C::IsHoldable' has a wrong offset!");
static_assert(offsetof(UUI_TutorialHint_10_C, VisualIcons) == 0x000308, "Member 'UUI_TutorialHint_10_C::VisualIcons' has a wrong offset!");

}

