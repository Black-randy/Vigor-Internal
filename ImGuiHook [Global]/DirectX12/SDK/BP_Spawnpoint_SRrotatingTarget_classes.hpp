#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Spawnpoint_SRrotatingTarget

#include "Basic.hpp"

#include "BP_SRTarget_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Spawnpoint_SRrotatingTarget.BP_Spawnpoint_SRrotatingTarget_C
// 0x0018 (0x02E0 - 0x02C8)
class ABP_Spawnpoint_SRrotatingTarget_C final : public ABP_SRTarget_Base_C
{
public:
	class UStaticMeshComponent*                   Wheel;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLightVariant;                                    // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Spawnpoint_SRrotatingTarget_C">();
	}
	static class ABP_Spawnpoint_SRrotatingTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Spawnpoint_SRrotatingTarget_C>();
	}
};
static_assert(alignof(ABP_Spawnpoint_SRrotatingTarget_C) == 0x000008, "Wrong alignment on ABP_Spawnpoint_SRrotatingTarget_C");
static_assert(sizeof(ABP_Spawnpoint_SRrotatingTarget_C) == 0x0002E0, "Wrong size on ABP_Spawnpoint_SRrotatingTarget_C");
static_assert(offsetof(ABP_Spawnpoint_SRrotatingTarget_C, Wheel) == 0x0002C8, "Member 'ABP_Spawnpoint_SRrotatingTarget_C::Wheel' has a wrong offset!");
static_assert(offsetof(ABP_Spawnpoint_SRrotatingTarget_C, Base) == 0x0002D0, "Member 'ABP_Spawnpoint_SRrotatingTarget_C::Base' has a wrong offset!");
static_assert(offsetof(ABP_Spawnpoint_SRrotatingTarget_C, IsLightVariant) == 0x0002D8, "Member 'ABP_Spawnpoint_SRrotatingTarget_C::IsLightVariant' has a wrong offset!");

}

