#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableWardrobe

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_LinkToStash_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InteractableWardrobe.BP_InteractableWardrobe_C
// 0x01E0 (0x0420 - 0x0240)
class ABP_InteractableWardrobe_C final : public ABP_LinkToStash_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_InteractableWardrobe_C;          // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      ValidPlayerStart;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PreviewPosterHelper;                               // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlacementHelperRoot;                               // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Camera;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CameraTransformHelper;                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door_R;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door_L;                                            // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WardrobeMesh;                                      // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          DEBUG_PlacementHelperActive;                       // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CapturedTexture;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WardrobeFavorite_Render_Simple_C*   SceneCapture;                                      // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTextureRenderTarget2D*>         RenderTargets;                                     // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_SeparatePoster_C*>           PosterActors;                                      // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_ShelterWardrobeCamera_C*            WardrobeCamera;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUsingWardrobeCamera;                            // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PrevViewTarget;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FavOutfitSets_SaveGame_C*           FavOutfit_SaveGame;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SaveName;                                          // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          CloudLoaded;                                       // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Shelter_C*                ShelterCharacter;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentOutfitSetCount;                             // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUsingPosterCamera;                              // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            ShelterLevelToOutfitSetSlotCount;                  // 0x0310(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             SceneCaptured;                                     // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         RenderAllPostersCount;                             // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RenderPosterArrayHelper;                           // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMesh*                            DEBUG_PlacementHelperForm;                         // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PosterPlacementTimer;                              // 0x0390(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bActivePosterPlacement;                            // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bValidPosterPlacement;                             // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bValidPosterWallUnderneath;                        // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bValidPosterPlacementNoOverlap;                    // 0x039B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPosterFloatsInFrontOfPlayer;                      // 0x039C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TempPlacementTransform;                            // 0x03A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                     TempLastValidTraceByChannelHits;                   // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UUI_PosterPlacementOverlay_C*           PosterPlacementOverlay;                            // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_IdleWidget_C*                       IdleWidget;                                        // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TempDuplicateVariants;                             // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         LastTraceCharMovementSpeed;                        // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ItemPreview_C*                      OutfitMannequin;                                   // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationContainer                LastShownOutfitSet;                                // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SceneCaptured__DelegateSignature(int32 RenderedPosterID);
	void ExecuteUbergraph_BP_InteractableWardrobe(int32 EntryPoint);
	void SetPlayerVisibility(bool NewHidden);
	void UpdateMannequin(const struct FCustomizationContainer& CustomizationContainer);
	void OpenFavoriteOutfitSetUI();
	void HandlePlacementTraceResults();
	void ReceiveTick(float DeltaSeconds);
	void SaveFavOutfitEvent(bool bCurrentOutfit, int32 OutfitSetIndex, const TArray<struct FCustomizationSlotVariant>& OutfitSetToSave);
	void RemoveIdleWidget();
	void CreateIdleWidget(float IdleTime);
	void RemovePosterPlacementOverlay();
	void OpenPosterPlacementOverlay(int32 PosterID);
	void ScanFromPlayerCamera();
	void CheckPosterForValidPlacement(int32 PosterID);
	void CheckAllPostersForValidPlacement();
	void PosterPlacementLoop();
	void StopPosterPlacement(int32 PosterID, bool DiscardChangesOverride);
	void StartPosterPlacement(int32 PosterID);
	void CustomEvent_2();
	void CustomEvent();
	void CustomEvent_0();
	void ArrayOfPosterRenderLoop(int32 RenderedPosterID);
	void RenderArrayOfPosters(const TArray<int32>& PostersToRender, bool RenderEvenHidden);
	void ClearAfterCaptureCooldown();
	void CaptureCooldown();
	void CheckIfShelterLoaded();
	void ShelterRepairSubLevelLoaded();
	void SaveFavoriteOutfit_PosterData();
	void RenderPoster(int32 PosterID, int32 OutfitSetID_Override, int32 TemplateID_Override, bool RenderEvenHidden);
	void ReceiveBeginPlay();
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_On_Client__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void Initialize_Posters();
	void GetSceneCapture();
	void InitSave();
	void CreateNewRenderTarget(int32 Width, int32 Height, int32 RenderTargetIndex);
	void OpenWardrobeUI(class APlayerController* PlayerController);
	void PrepareSceneForRender(int32 PosterID, int32 OutfitID_Override, int32 TemplateID_Override, bool* bShouldRender);
	void ToggleWardrobeCamera(bool bShouldUseCamera, bool bInstantTransition, class AActor* PrevViewTarget_0);
	void SaveFavOutfit(bool bCurrentOutfit, int32 OutfitSetIndex, TArray<struct FCustomizationSlotVariant>& OutfitSetToSave);
	void EquipFavoriteOutfitSet(int32 Index_0, bool* OutfitChanged);
	void HighlightPoster(int32 PosterID, bool Highlight);
	void UpdatePosterOverlay(int32 PosterID, const struct FS_FavoriteOutfitePosterRenderSettings& PosterSettings);
	void UsePosterCamera(int32 PosterID);
	void GetAllAvailablePosters();
	void PosterID_Comparator(class UObject* ObjectA, class UObject* ObjectB, bool* Result);
	void SetPosterVisibility(int32 PosterID, bool bHidden_0);
	void DEBUG_ReRender_All_Posters();
	void SetPosterLightVisibility(int32 PosterID, bool bHidden_0);
	void RenderAllPosters();
	void ChangePosterModel(int32 PosterID);
	void DEBUG_PrintHelperCoordinates();
	void DEBUG_TogglePosterPlacement();
	void Check_Temp_Placement_for_Other_Poster_Overlaps(class ABP_SeparatePoster_C* CheckerPoster, bool* bNoOverlapping);
	void GetMaxOutfitSetCount(int32* OutfitSetsCurrentMaxCount, int32* TotalMax);
	void ReMinusInitialize_Posters(TArray<class ABP_SeparatePoster_C*>* NewlyAddedPosters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InteractableWardrobe_C">();
	}
	static class ABP_InteractableWardrobe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractableWardrobe_C>();
	}
};
static_assert(alignof(ABP_InteractableWardrobe_C) == 0x000010, "Wrong alignment on ABP_InteractableWardrobe_C");
static_assert(sizeof(ABP_InteractableWardrobe_C) == 0x000420, "Wrong size on ABP_InteractableWardrobe_C");
static_assert(offsetof(ABP_InteractableWardrobe_C, UberGraphFrame_BP_InteractableWardrobe_C) == 0x000240, "Member 'ABP_InteractableWardrobe_C::UberGraphFrame_BP_InteractableWardrobe_C' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, Arrow) == 0x000248, "Member 'ABP_InteractableWardrobe_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, ValidPlayerStart) == 0x000250, "Member 'ABP_InteractableWardrobe_C::ValidPlayerStart' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, PreviewPosterHelper) == 0x000258, "Member 'ABP_InteractableWardrobe_C::PreviewPosterHelper' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, PlacementHelperRoot) == 0x000260, "Member 'ABP_InteractableWardrobe_C::PlacementHelperRoot' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, Camera) == 0x000268, "Member 'ABP_InteractableWardrobe_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, CameraTransformHelper) == 0x000270, "Member 'ABP_InteractableWardrobe_C::CameraTransformHelper' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, Door_R) == 0x000278, "Member 'ABP_InteractableWardrobe_C::Door_R' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, Door_L) == 0x000280, "Member 'ABP_InteractableWardrobe_C::Door_L' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, WardrobeMesh) == 0x000288, "Member 'ABP_InteractableWardrobe_C::WardrobeMesh' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, DEBUG_PlacementHelperActive) == 0x000290, "Member 'ABP_InteractableWardrobe_C::DEBUG_PlacementHelperActive' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, DeltaTime) == 0x000294, "Member 'ABP_InteractableWardrobe_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, CapturedTexture) == 0x000298, "Member 'ABP_InteractableWardrobe_C::CapturedTexture' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, SceneCapture) == 0x0002A0, "Member 'ABP_InteractableWardrobe_C::SceneCapture' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, RenderTargets) == 0x0002A8, "Member 'ABP_InteractableWardrobe_C::RenderTargets' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, PosterActors) == 0x0002B8, "Member 'ABP_InteractableWardrobe_C::PosterActors' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, WardrobeCamera) == 0x0002C8, "Member 'ABP_InteractableWardrobe_C::WardrobeCamera' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, bIsUsingWardrobeCamera) == 0x0002D0, "Member 'ABP_InteractableWardrobe_C::bIsUsingWardrobeCamera' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, PrevViewTarget) == 0x0002D8, "Member 'ABP_InteractableWardrobe_C::PrevViewTarget' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, FavOutfit_SaveGame) == 0x0002E0, "Member 'ABP_InteractableWardrobe_C::FavOutfit_SaveGame' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, SaveName) == 0x0002E8, "Member 'ABP_InteractableWardrobe_C::SaveName' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, CloudLoaded) == 0x0002F8, "Member 'ABP_InteractableWardrobe_C::CloudLoaded' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, ShelterCharacter) == 0x000300, "Member 'ABP_InteractableWardrobe_C::ShelterCharacter' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, CurrentOutfitSetCount) == 0x000308, "Member 'ABP_InteractableWardrobe_C::CurrentOutfitSetCount' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, bIsUsingPosterCamera) == 0x00030C, "Member 'ABP_InteractableWardrobe_C::bIsUsingPosterCamera' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, ShelterLevelToOutfitSetSlotCount) == 0x000310, "Member 'ABP_InteractableWardrobe_C::ShelterLevelToOutfitSetSlotCount' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, SceneCaptured) == 0x000360, "Member 'ABP_InteractableWardrobe_C::SceneCaptured' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, RenderAllPostersCount) == 0x000370, "Member 'ABP_InteractableWardrobe_C::RenderAllPostersCount' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, RenderPosterArrayHelper) == 0x000378, "Member 'ABP_InteractableWardrobe_C::RenderPosterArrayHelper' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, DEBUG_PlacementHelperForm) == 0x000388, "Member 'ABP_InteractableWardrobe_C::DEBUG_PlacementHelperForm' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, PosterPlacementTimer) == 0x000390, "Member 'ABP_InteractableWardrobe_C::PosterPlacementTimer' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, bActivePosterPlacement) == 0x000398, "Member 'ABP_InteractableWardrobe_C::bActivePosterPlacement' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, bValidPosterPlacement) == 0x000399, "Member 'ABP_InteractableWardrobe_C::bValidPosterPlacement' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, bValidPosterWallUnderneath) == 0x00039A, "Member 'ABP_InteractableWardrobe_C::bValidPosterWallUnderneath' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, bValidPosterPlacementNoOverlap) == 0x00039B, "Member 'ABP_InteractableWardrobe_C::bValidPosterPlacementNoOverlap' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, bPosterFloatsInFrontOfPlayer) == 0x00039C, "Member 'ABP_InteractableWardrobe_C::bPosterFloatsInFrontOfPlayer' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, TempPlacementTransform) == 0x0003A0, "Member 'ABP_InteractableWardrobe_C::TempPlacementTransform' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, TempLastValidTraceByChannelHits) == 0x0003D0, "Member 'ABP_InteractableWardrobe_C::TempLastValidTraceByChannelHits' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, PosterPlacementOverlay) == 0x0003E0, "Member 'ABP_InteractableWardrobe_C::PosterPlacementOverlay' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, IdleWidget) == 0x0003E8, "Member 'ABP_InteractableWardrobe_C::IdleWidget' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, TempDuplicateVariants) == 0x0003F0, "Member 'ABP_InteractableWardrobe_C::TempDuplicateVariants' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, LastTraceCharMovementSpeed) == 0x000400, "Member 'ABP_InteractableWardrobe_C::LastTraceCharMovementSpeed' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, OutfitMannequin) == 0x000408, "Member 'ABP_InteractableWardrobe_C::OutfitMannequin' has a wrong offset!");
static_assert(offsetof(ABP_InteractableWardrobe_C, LastShownOutfitSet) == 0x000410, "Member 'ABP_InteractableWardrobe_C::LastShownOutfitSet' has a wrong offset!");

}

