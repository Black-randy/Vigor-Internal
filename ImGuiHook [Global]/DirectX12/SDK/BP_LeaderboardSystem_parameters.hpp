#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LeaderboardSystem

#include "Basic.hpp"

#include "E_LeaderboardsStatsTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.LeaderboardsDataAvailable__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_LeaderboardSystem_C_LeaderboardsDataAvailable__DelegateSignature final
{
public:
	bool                                          IsLeaderboardsDataLoaded;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_LeaderboardsDataAvailable__DelegateSignature) == 0x000001, "Wrong alignment on BP_LeaderboardSystem_C_LeaderboardsDataAvailable__DelegateSignature");
static_assert(sizeof(BP_LeaderboardSystem_C_LeaderboardsDataAvailable__DelegateSignature) == 0x000001, "Wrong size on BP_LeaderboardSystem_C_LeaderboardsDataAvailable__DelegateSignature");
static_assert(offsetof(BP_LeaderboardSystem_C_LeaderboardsDataAvailable__DelegateSignature, IsLeaderboardsDataLoaded) == 0x000000, "Member 'BP_LeaderboardSystem_C_LeaderboardsDataAvailable__DelegateSignature::IsLeaderboardsDataLoaded' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.ExecuteUbergraph_BP_LeaderboardSystem
// 0x0550 (0x0550 - 0x0000)
struct BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfMapAllLoaded_AllLoaded;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Succeeded_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RequestId_1;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeaderboardReadContext                K2Node_CustomEvent_BoardContext;                   // 0x0028(0x0014)(ConstParm, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardData                       K2Node_CustomEvent_LeaderboardData;                // 0x0040(0x0018)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLeaderboardType_OutputValid;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_LeaderboardsStatsTypes                      CallFunc_GetLeaderboardType_LeaderboardType;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1; // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveRequestID_WasLastID;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestIDValid_Valid;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_3;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Succeeded, int32 RequestId, struct FLeaderboardReadContext& BoardContext, struct FLeaderboardData& LeaderboardData)> K2Node_CreateDelegate_OutputDelegate;              // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_CustomEvent_PlayerController_3;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      K2Node_CustomEvent_LeaderboardType;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_CustomEvent_PlayerController_2;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeaderboardType                              K2Node_CustomEvent_BoardType;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Succeeded;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RequestId;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	bool                                          CallFunc_GetLeaderboardName_OutputValid;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetLeaderboardName_LeaderboardName;       // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLeaderboardReadContext                K2Node_MakeStruct_LeaderboardReadContext;          // 0x0140(0x0014)(NoDestructor)
	TDelegate<void(bool Succeeded, int32 RequestId)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_CustomEvent_PlayerController_1;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_CustomEvent_PlayerController;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Succeeded, int32 RequestId)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01F8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0238(0x0040)(HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_1;                     // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0280(0x0010)(ReferenceParm)
	int32                                         CallFunc_BreakDateTime_Year_1;                     // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month_1;                    // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day_1;                      // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour_1;                     // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute_1;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second_1;                   // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond_1;              // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02C8(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0318(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0358(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0398(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03A8(0x0018)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(bool Succeeded, int32 RequestId, struct FLeaderboardReadContext& BoardContext, struct FLeaderboardData& LeaderboardData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x03D8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EE[0x2];                                      // 0x03EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_4;             // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_2; // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB[0x1];                                      // 0x03FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_5;             // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_2;                     // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidLeaderboardRequest_ReturnValue;    // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year_2;                     // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month_2;                    // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day_2;                      // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour_2;                     // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute_2;                   // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second_2;                   // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond_2;              // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0438(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0478(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x04B8(0x0040)(HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetCacheDelay_ReturnValue;                // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0500(0x0010)(ReferenceParm)
	int32                                         CallFunc_ReadLeaderboardData_ReturnValue;          // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0518(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x3];                                      // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfMapAllLoaded_AllLoaded_1;          // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfMapAllLoaded_AllLoaded_2;          // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem");
static_assert(sizeof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem) == 0x000550, "Wrong size on BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, EntryPoint) == 0x000000, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, Temp_int_Variable) == 0x000004, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_CheckIfMapAllLoaded_AllLoaded) == 0x000008, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_CheckIfMapAllLoaded_AllLoaded' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_IntToByte_ReturnValue) == 0x000009, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetValidValue_ReturnValue) == 0x00000A, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, Temp_int_Variable_1) == 0x00000C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000014, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000015, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_MakeLiteralInt_ReturnValue) == 0x000018, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_Succeeded_1) == 0x000020, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_Succeeded_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_RequestId_1) == 0x000024, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_RequestId_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_BoardContext) == 0x000028, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_BoardContext' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_LeaderboardData) == 0x000040, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_LeaderboardData' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, Temp_int_Variable_2) == 0x00005C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetLeaderboardType_OutputValid) == 0x000060, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetLeaderboardType_OutputValid' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetLeaderboardType_LeaderboardType) == 0x000061, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetLeaderboardType_LeaderboardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000068, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1) == 0x00006A, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00006C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_RemoveRequestID_WasLastID) == 0x000071, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_RemoveRequestID_WasLastID' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_IsRequestIDValid_Valid) == 0x000072, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_IsRequestIDValid_Valid' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, Temp_int_Variable_3) == 0x000074, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_IntToByte_ReturnValue_3) == 0x000078, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_IntToByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetValidValue_ReturnValue_1) == 0x000079, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_PlayerController_3) == 0x000090, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_PlayerController_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_LeaderboardType) == 0x000098, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_LeaderboardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_PlayerController_2) == 0x0000A0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_PlayerController_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_BoardType) == 0x0000A8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_BoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_Succeeded) == 0x0000A9, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_RequestId) == 0x0000AC, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_RequestId' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetLeaderboardName_OutputValid) == 0x000120, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetLeaderboardName_OutputValid' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetLeaderboardName_LeaderboardName) == 0x000124, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetLeaderboardName_LeaderboardName' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_LeaderboardReadContext) == 0x000140, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_LeaderboardReadContext' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CreateDelegate_OutputDelegate_1) == 0x000154, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_PlayerController_1) == 0x000168, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000170, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CustomEvent_PlayerController) == 0x000178, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_UtcNow_ReturnValue) == 0x000180, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CreateDelegate_OutputDelegate_2) == 0x000188, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Year) == 0x000198, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Month) == 0x00019C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Day) == 0x0001A0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Hour) == 0x0001A4, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Minute) == 0x0001A8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Second) == 0x0001AC, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Millisecond) == 0x0001B0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001F8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_3) == 0x000238, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_UtcNow_ReturnValue_1) == 0x000278, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_UtcNow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeArray_Array_1) == 0x000280, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Year_1) == 0x000290, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Year_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Month_1) == 0x000294, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Month_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Day_1) == 0x000298, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Day_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Hour_1) == 0x00029C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Hour_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Minute_1) == 0x0002A0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Minute_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Second_1) == 0x0002A4, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Second_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Millisecond_1) == 0x0002A8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Millisecond_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Format_ReturnValue_1) == 0x0002B0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002C8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000308, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_5) == 0x000318, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_6) == 0x000358, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeArray_Array_2) == 0x000398, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Format_ReturnValue_2) == 0x0003A8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Array_Contains_ReturnValue) == 0x0003C0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0003C8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003D8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Array_Find_ReturnValue) == 0x0003E8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0003EC, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BooleanAND_ReturnValue_1) == 0x0003ED, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, Temp_int_Variable_4) == 0x0003F0, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003F4, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_IntToByte_ReturnValue_4) == 0x0003F8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_IntToByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003F9, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_2) == 0x0003FA, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0003FC, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, Temp_int_Variable_5) == 0x000400, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Array_Length_ReturnValue) == 0x000404, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_IntToByte_ReturnValue_5) == 0x000408, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_IntToByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Greater_IntInt_ReturnValue) == 0x000409, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetValidValue_ReturnValue_2) == 0x00040A, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Not_PreBool_ReturnValue) == 0x00040B, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_UtcNow_ReturnValue_2) == 0x000410, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_UtcNow_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_InvalidLeaderboardRequest_ReturnValue) == 0x000418, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_InvalidLeaderboardRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Year_2) == 0x00041C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Year_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Month_2) == 0x000420, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Month_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Day_2) == 0x000424, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Day_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Hour_2) == 0x000428, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Hour_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Minute_2) == 0x00042C, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Minute_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Second_2) == 0x000430, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Second_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_BreakDateTime_Millisecond_2) == 0x000434, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_BreakDateTime_Millisecond_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_7) == 0x000438, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_8) == 0x000478, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeStruct_FormatArgumentData_9) == 0x0004B8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_GetCacheDelay_ReturnValue) == 0x0004F8, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_GetCacheDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, K2Node_MakeArray_Array_3) == 0x000500, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_ReadLeaderboardData_ReturnValue) == 0x000510, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_ReadLeaderboardData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Format_ReturnValue_3) == 0x000518, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000530, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000540, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x000544, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_Less_IntInt_ReturnValue_2) == 0x000548, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_CheckIfMapAllLoaded_AllLoaded_1) == 0x000549, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_CheckIfMapAllLoaded_AllLoaded_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem, CallFunc_CheckIfMapAllLoaded_AllLoaded_2) == 0x00054A, "Member 'BP_LeaderboardSystem_C_ExecuteUbergraph_BP_LeaderboardSystem::CallFunc_CheckIfMapAllLoaded_AllLoaded_2' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.EventFetchTopTenLeaderboard
// 0x0008 (0x0008 - 0x0000)
struct BP_LeaderboardSystem_C_EventFetchTopTenLeaderboard final
{
public:
	class AHumanPlayerController*                 PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LeaderboardSystem_C_EventFetchTopTenLeaderboard) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_EventFetchTopTenLeaderboard");
static_assert(sizeof(BP_LeaderboardSystem_C_EventFetchTopTenLeaderboard) == 0x000008, "Wrong size on BP_LeaderboardSystem_C_EventFetchTopTenLeaderboard");
static_assert(offsetof(BP_LeaderboardSystem_C_EventFetchTopTenLeaderboard, PlayerController) == 0x000000, "Member 'BP_LeaderboardSystem_C_EventFetchTopTenLeaderboard::PlayerController' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.EventFetchFriendsLeaderboards
// 0x0008 (0x0008 - 0x0000)
struct BP_LeaderboardSystem_C_EventFetchFriendsLeaderboards final
{
public:
	class AHumanPlayerController*                 PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LeaderboardSystem_C_EventFetchFriendsLeaderboards) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_EventFetchFriendsLeaderboards");
static_assert(sizeof(BP_LeaderboardSystem_C_EventFetchFriendsLeaderboards) == 0x000008, "Wrong size on BP_LeaderboardSystem_C_EventFetchFriendsLeaderboards");
static_assert(offsetof(BP_LeaderboardSystem_C_EventFetchFriendsLeaderboards, PlayerController) == 0x000000, "Member 'BP_LeaderboardSystem_C_EventFetchFriendsLeaderboards::PlayerController' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.EventLeaderboardWriteFinished
// 0x0008 (0x0008 - 0x0000)
struct BP_LeaderboardSystem_C_EventLeaderboardWriteFinished final
{
public:
	bool                                          Succeeded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LeaderboardSystem_C_EventLeaderboardWriteFinished) == 0x000004, "Wrong alignment on BP_LeaderboardSystem_C_EventLeaderboardWriteFinished");
static_assert(sizeof(BP_LeaderboardSystem_C_EventLeaderboardWriteFinished) == 0x000008, "Wrong size on BP_LeaderboardSystem_C_EventLeaderboardWriteFinished");
static_assert(offsetof(BP_LeaderboardSystem_C_EventLeaderboardWriteFinished, Succeeded) == 0x000000, "Member 'BP_LeaderboardSystem_C_EventLeaderboardWriteFinished::Succeeded' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_EventLeaderboardWriteFinished, RequestId) == 0x000004, "Member 'BP_LeaderboardSystem_C_EventLeaderboardWriteFinished::RequestId' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.EventFetchPlatformLeaderboard
// 0x0018 (0x0018 - 0x0000)
struct BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard final
{
public:
	E_LeaderboardsStatsTypes                      LeaderBoardType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeaderboardType                              BoardType;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard");
static_assert(sizeof(BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard) == 0x000018, "Wrong size on BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard");
static_assert(offsetof(BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard, LeaderBoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard, PlayerController) == 0x000008, "Member 'BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard, BoardType) == 0x000010, "Member 'BP_LeaderboardSystem_C_EventFetchPlatformLeaderboard::BoardType' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.EventFetchAroundPlayerLeaderboards
// 0x0008 (0x0008 - 0x0000)
struct BP_LeaderboardSystem_C_EventFetchAroundPlayerLeaderboards final
{
public:
	class AHumanPlayerController*                 PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LeaderboardSystem_C_EventFetchAroundPlayerLeaderboards) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_EventFetchAroundPlayerLeaderboards");
static_assert(sizeof(BP_LeaderboardSystem_C_EventFetchAroundPlayerLeaderboards) == 0x000008, "Wrong size on BP_LeaderboardSystem_C_EventFetchAroundPlayerLeaderboards");
static_assert(offsetof(BP_LeaderboardSystem_C_EventFetchAroundPlayerLeaderboards, PlayerController) == 0x000000, "Member 'BP_LeaderboardSystem_C_EventFetchAroundPlayerLeaderboards::PlayerController' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.EventReadBoardResponse
// 0x0038 (0x0038 - 0x0000)
struct BP_LeaderboardSystem_C_EventReadBoardResponse final
{
public:
	bool                                          Succeeded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeaderboardReadContext                BoardContext;                                      // 0x0008(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardData                       LeaderboardData;                                   // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_LeaderboardSystem_C_EventReadBoardResponse) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_EventReadBoardResponse");
static_assert(sizeof(BP_LeaderboardSystem_C_EventReadBoardResponse) == 0x000038, "Wrong size on BP_LeaderboardSystem_C_EventReadBoardResponse");
static_assert(offsetof(BP_LeaderboardSystem_C_EventReadBoardResponse, Succeeded) == 0x000000, "Member 'BP_LeaderboardSystem_C_EventReadBoardResponse::Succeeded' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_EventReadBoardResponse, RequestId) == 0x000004, "Member 'BP_LeaderboardSystem_C_EventReadBoardResponse::RequestId' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_EventReadBoardResponse, BoardContext) == 0x000008, "Member 'BP_LeaderboardSystem_C_EventReadBoardResponse::BoardContext' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_EventReadBoardResponse, LeaderboardData) == 0x000020, "Member 'BP_LeaderboardSystem_C_EventReadBoardResponse::LeaderboardData' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.WriteAllLeaderboards
// 0x0178 (0x0178 - 0x0000)
struct BP_LeaderboardSystem_C_WriteAllLeaderboards final
{
public:
	class AHumanPlayerController*                 Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncountersPlayed;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Kills;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AirDrops;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Loot;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KillsPerEncounter;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LootPerEncounter;                                  // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SurvivalRate;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      LeaderBoardType;                                   // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_LeaderboardsStatsTypes>              CallFunc_Map_Keys_Keys;                            // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      CallFunc_Array_Get_Item;                           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_WriteAllLeaderboards) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_WriteAllLeaderboards");
static_assert(sizeof(BP_LeaderboardSystem_C_WriteAllLeaderboards) == 0x000178, "Wrong size on BP_LeaderboardSystem_C_WriteAllLeaderboards");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, Controller) == 0x000000, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::Controller' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, EncountersPlayed) == 0x000008, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::EncountersPlayed' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, Kills) == 0x00000C, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::Kills' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, AirDrops) == 0x000010, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::AirDrops' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, Loot) == 0x000014, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::Loot' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, KillsPerEncounter) == 0x000018, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::KillsPerEncounter' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, LootPerEncounter) == 0x00001C, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::LootPerEncounter' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, SurvivalRate) == 0x000020, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::SurvivalRate' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, LeaderBoardType) == 0x000024, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, K2Node_SwitchEnum_CmpSuccess) == 0x000025, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_UtcNow_ReturnValue) == 0x000030, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_BreakDateTime_Year) == 0x000038, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_BreakDateTime_Month) == 0x00003C, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_BreakDateTime_Day) == 0x000040, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_BreakDateTime_Hour) == 0x000044, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_BreakDateTime_Minute) == 0x000048, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_BreakDateTime_Second) == 0x00004C, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_BreakDateTime_Millisecond) == 0x000050, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_Conv_TextToString_ReturnValue) == 0x000140, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, Temp_int_Loop_Counter_Variable) == 0x000150, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_Map_Keys_Keys) == 0x000158, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_Array_Get_Item) == 0x00016C, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteAllLeaderboards, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'BP_LeaderboardSystem_C_WriteAllLeaderboards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.WriteLeaderboardInt
// 0x0030 (0x0030 - 0x0000)
struct BP_LeaderboardSystem_C_WriteLeaderboardInt final
{
public:
	class AHumanPlayerController*                 Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      LeaderBoardType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidLeaderboardRequest_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_WriteLeaderboardData_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_WriteLeaderboardInt) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_WriteLeaderboardInt");
static_assert(sizeof(BP_LeaderboardSystem_C_WriteLeaderboardInt) == 0x000030, "Wrong size on BP_LeaderboardSystem_C_WriteLeaderboardInt");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, Controller) == 0x000000, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::Controller' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, LeaderBoardType) == 0x000008, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, Value) == 0x00000C, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, CallFunc_InvalidLeaderboardRequest_ReturnValue) == 0x000010, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::CallFunc_InvalidLeaderboardRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, CallFunc_Map_Find_Value) == 0x000014, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, CallFunc_WriteLeaderboardData_ReturnValue) == 0x000020, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::CallFunc_WriteLeaderboardData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardInt, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardInt::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.WriteLeaderboardFloat
// 0x0038 (0x0038 - 0x0000)
struct BP_LeaderboardSystem_C_WriteLeaderboardFloat final
{
public:
	class AHumanPlayerController*                 Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      LeaderBoardType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidLeaderboardRequest_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_WriteLeaderboardData_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_WriteLeaderboardFloat) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_WriteLeaderboardFloat");
static_assert(sizeof(BP_LeaderboardSystem_C_WriteLeaderboardFloat) == 0x000038, "Wrong size on BP_LeaderboardSystem_C_WriteLeaderboardFloat");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, Controller) == 0x000000, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::Controller' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, LeaderBoardType) == 0x000008, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, Value) == 0x00000C, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_InvalidLeaderboardRequest_ReturnValue) == 0x000010, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_InvalidLeaderboardRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_Map_Find_Value) == 0x00001C, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_Map_Find_ReturnValue) == 0x000024, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_WriteLeaderboardData_ReturnValue) == 0x000028, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_WriteLeaderboardData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_WriteLeaderboardFloat, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_LeaderboardSystem_C_WriteLeaderboardFloat::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.StoreLeaderboard
// 0x0028 (0x0028 - 0x0000)
struct BP_LeaderboardSystem_C_StoreLeaderboard final
{
public:
	ELeaderboardType                              BoardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      LeaderBoardType;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardData                       LeaderboardData;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_StoreLeaderboard) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_StoreLeaderboard");
static_assert(sizeof(BP_LeaderboardSystem_C_StoreLeaderboard) == 0x000028, "Wrong size on BP_LeaderboardSystem_C_StoreLeaderboard");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreLeaderboard, BoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_StoreLeaderboard::BoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreLeaderboard, LeaderBoardType) == 0x000001, "Member 'BP_LeaderboardSystem_C_StoreLeaderboard::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreLeaderboard, LeaderboardData) == 0x000008, "Member 'BP_LeaderboardSystem_C_StoreLeaderboard::LeaderboardData' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreLeaderboard, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_LeaderboardSystem_C_StoreLeaderboard::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.StoreRequestID
// 0x0018 (0x0018 - 0x0000)
struct BP_LeaderboardSystem_C_StoreRequestID final
{
public:
	ELeaderboardType                              BoardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LeaderboardSystem_C_StoreRequestID) == 0x000004, "Wrong alignment on BP_LeaderboardSystem_C_StoreRequestID");
static_assert(sizeof(BP_LeaderboardSystem_C_StoreRequestID) == 0x000018, "Wrong size on BP_LeaderboardSystem_C_StoreRequestID");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreRequestID, BoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_StoreRequestID::BoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreRequestID, RequestId) == 0x000004, "Member 'BP_LeaderboardSystem_C_StoreRequestID::RequestId' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreRequestID, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_LeaderboardSystem_C_StoreRequestID::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreRequestID, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_LeaderboardSystem_C_StoreRequestID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreRequestID, CallFunc_Array_Add_ReturnValue_1) == 0x000010, "Member 'BP_LeaderboardSystem_C_StoreRequestID::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_StoreRequestID, CallFunc_Array_Add_ReturnValue_2) == 0x000014, "Member 'BP_LeaderboardSystem_C_StoreRequestID::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.RemoveRequestID
// 0x0058 (0x0058 - 0x0000)
struct BP_LeaderboardSystem_C_RemoveRequestID final
{
public:
	ELeaderboardType                              BoardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasLastID;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ArrayOfIDs;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_RemoveRequestID) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_RemoveRequestID");
static_assert(sizeof(BP_LeaderboardSystem_C_RemoveRequestID) == 0x000058, "Wrong size on BP_LeaderboardSystem_C_RemoveRequestID");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, BoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::BoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, RequestId) == 0x000004, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::RequestId' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, WasLastID) == 0x000008, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::WasLastID' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, ArrayOfIDs) == 0x000010, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::ArrayOfIDs' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_Find_ReturnValue) == 0x000034, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000039, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_Length_ReturnValue_2) == 0x00003C, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_Find_ReturnValue_1) == 0x000044, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Not_PreBool_ReturnValue_2) == 0x000048, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000049, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_Find_ReturnValue_2) == 0x00004C, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_RemoveRequestID, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000050, "Member 'BP_LeaderboardSystem_C_RemoveRequestID::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.SetAvailabilityForCertainStat
// 0x0004 (0x0004 - 0x0000)
struct BP_LeaderboardSystem_C_SetAvailabilityForCertainStat final
{
public:
	ELeaderboardType                              LeaderBoardType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      StatType;                                          // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Available;                                         // 0x0002(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_SetAvailabilityForCertainStat) == 0x000001, "Wrong alignment on BP_LeaderboardSystem_C_SetAvailabilityForCertainStat");
static_assert(sizeof(BP_LeaderboardSystem_C_SetAvailabilityForCertainStat) == 0x000004, "Wrong size on BP_LeaderboardSystem_C_SetAvailabilityForCertainStat");
static_assert(offsetof(BP_LeaderboardSystem_C_SetAvailabilityForCertainStat, LeaderBoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_SetAvailabilityForCertainStat::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_SetAvailabilityForCertainStat, StatType) == 0x000001, "Member 'BP_LeaderboardSystem_C_SetAvailabilityForCertainStat::StatType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_SetAvailabilityForCertainStat, Available) == 0x000002, "Member 'BP_LeaderboardSystem_C_SetAvailabilityForCertainStat::Available' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_SetAvailabilityForCertainStat, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_LeaderboardSystem_C_SetAvailabilityForCertainStat::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.SetLoadedForCertainStat
// 0x0004 (0x0004 - 0x0000)
struct BP_LeaderboardSystem_C_SetLoadedForCertainStat final
{
public:
	ELeaderboardType                              LeaderBoardType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      StatType;                                          // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Available;                                         // 0x0002(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_SetLoadedForCertainStat) == 0x000001, "Wrong alignment on BP_LeaderboardSystem_C_SetLoadedForCertainStat");
static_assert(sizeof(BP_LeaderboardSystem_C_SetLoadedForCertainStat) == 0x000004, "Wrong size on BP_LeaderboardSystem_C_SetLoadedForCertainStat");
static_assert(offsetof(BP_LeaderboardSystem_C_SetLoadedForCertainStat, LeaderBoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_SetLoadedForCertainStat::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_SetLoadedForCertainStat, StatType) == 0x000001, "Member 'BP_LeaderboardSystem_C_SetLoadedForCertainStat::StatType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_SetLoadedForCertainStat, Available) == 0x000002, "Member 'BP_LeaderboardSystem_C_SetLoadedForCertainStat::Available' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_SetLoadedForCertainStat, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_LeaderboardSystem_C_SetLoadedForCertainStat::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.CheckIfMapAllLoaded
// 0x0078 (0x0078 - 0x0000)
struct BP_LeaderboardSystem_C_CheckIfMapAllLoaded final
{
public:
	TMap<E_LeaderboardsStatsTypes, bool>          InMap;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          AllLoaded;                                         // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_CheckIfMapAllLoaded");
static_assert(sizeof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded) == 0x000078, "Wrong size on BP_LeaderboardSystem_C_CheckIfMapAllLoaded");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, InMap) == 0x000000, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::InMap' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, AllLoaded) == 0x000050, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::AllLoaded' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_MakeLiteralInt_ReturnValue) == 0x000054, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, Temp_int_Variable) == 0x000058, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, Temp_int_Variable_1) == 0x00005C, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_GetValidValue_ReturnValue) == 0x000068, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000069, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_Map_Find_Value) == 0x00006A, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_Map_Find_ReturnValue) == 0x00006B, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00006C, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_CheckIfMapAllLoaded, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_LeaderboardSystem_C_CheckIfMapAllLoaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.IsLeaderboardLoaded
// 0x0008 (0x0008 - 0x0000)
struct BP_LeaderboardSystem_C_IsLeaderboardLoaded final
{
public:
	E_LeaderboardsStatsTypes                      Stat;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeaderboardType                              Type;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loaded;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LoadedLeaderboard;                                 // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue_2;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_IsLeaderboardLoaded) == 0x000001, "Wrong alignment on BP_LeaderboardSystem_C_IsLeaderboardLoaded");
static_assert(sizeof(BP_LeaderboardSystem_C_IsLeaderboardLoaded) == 0x000008, "Wrong size on BP_LeaderboardSystem_C_IsLeaderboardLoaded");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, Stat) == 0x000000, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::Stat' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, Type) == 0x000001, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::Type' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, Loaded) == 0x000002, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::Loaded' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, LoadedLeaderboard) == 0x000003, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::LoadedLeaderboard' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, CallFunc_Map_Contains_ReturnValue) == 0x000005, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, CallFunc_Map_Contains_ReturnValue_1) == 0x000006, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsLeaderboardLoaded, CallFunc_Map_Contains_ReturnValue_2) == 0x000007, "Member 'BP_LeaderboardSystem_C_IsLeaderboardLoaded::CallFunc_Map_Contains_ReturnValue_2' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.Get Leaderboard Data
// 0x0088 (0x0088 - 0x0000)
struct BP_LeaderboardSystem_C_Get_Leaderboard_Data final
{
public:
	ELeaderboardType                              BoardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      StatType;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDataValid;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardData                       LeaderboardData;                                   // 0x0008(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardData                       CallFunc_Map_Find_Value;                           // 0x0028(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardData                       CallFunc_Map_Find_Value_1;                         // 0x0048(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardData                       CallFunc_Map_Find_Value_2;                         // 0x0068(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_Get_Leaderboard_Data) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_Get_Leaderboard_Data");
static_assert(sizeof(BP_LeaderboardSystem_C_Get_Leaderboard_Data) == 0x000088, "Wrong size on BP_LeaderboardSystem_C_Get_Leaderboard_Data");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, BoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::BoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, StatType) == 0x000001, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::StatType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, IsDataValid) == 0x000002, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::IsDataValid' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, LeaderboardData) == 0x000008, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::LeaderboardData' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, CallFunc_Map_Find_Value_1) == 0x000048, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, CallFunc_Map_Find_ReturnValue_1) == 0x000060, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, CallFunc_Map_Find_Value_2) == 0x000068, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_Get_Leaderboard_Data, CallFunc_Map_Find_ReturnValue_2) == 0x000080, "Member 'BP_LeaderboardSystem_C_Get_Leaderboard_Data::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.GetLeaderboardName
// 0x0018 (0x0018 - 0x0000)
struct BP_LeaderboardSystem_C_GetLeaderboardName final
{
public:
	E_LeaderboardsStatsTypes                      LeaderBoardType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutputValid;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LeaderboardName;                                   // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_GetLeaderboardName) == 0x000004, "Wrong alignment on BP_LeaderboardSystem_C_GetLeaderboardName");
static_assert(sizeof(BP_LeaderboardSystem_C_GetLeaderboardName) == 0x000018, "Wrong size on BP_LeaderboardSystem_C_GetLeaderboardName");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardName, LeaderBoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_GetLeaderboardName::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardName, OutputValid) == 0x000001, "Member 'BP_LeaderboardSystem_C_GetLeaderboardName::OutputValid' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardName, LeaderboardName) == 0x000004, "Member 'BP_LeaderboardSystem_C_GetLeaderboardName::LeaderboardName' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardName, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_LeaderboardSystem_C_GetLeaderboardName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardName, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BP_LeaderboardSystem_C_GetLeaderboardName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.GetLeaderboardType
// 0x000C (0x000C - 0x0000)
struct BP_LeaderboardSystem_C_GetLeaderboardType final
{
public:
	class FName                                   LeaderboardName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutputValid;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_LeaderboardsStatsTypes                      LeaderBoardType;                                   // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeaderboardsStatsTypes                      CallFunc_Map_Find_Value;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_GetLeaderboardType) == 0x000004, "Wrong alignment on BP_LeaderboardSystem_C_GetLeaderboardType");
static_assert(sizeof(BP_LeaderboardSystem_C_GetLeaderboardType) == 0x00000C, "Wrong size on BP_LeaderboardSystem_C_GetLeaderboardType");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardType, LeaderboardName) == 0x000000, "Member 'BP_LeaderboardSystem_C_GetLeaderboardType::LeaderboardName' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardType, OutputValid) == 0x000008, "Member 'BP_LeaderboardSystem_C_GetLeaderboardType::OutputValid' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardType, LeaderBoardType) == 0x000009, "Member 'BP_LeaderboardSystem_C_GetLeaderboardType::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardType, CallFunc_Map_Find_Value) == 0x00000A, "Member 'BP_LeaderboardSystem_C_GetLeaderboardType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetLeaderboardType, CallFunc_Map_Find_ReturnValue) == 0x00000B, "Member 'BP_LeaderboardSystem_C_GetLeaderboardType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.IsRequestIDValid
// 0x0010 (0x0010 - 0x0000)
struct BP_LeaderboardSystem_C_IsRequestIDValid final
{
public:
	ELeaderboardType                              BoardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LeaderboardSystem_C_IsRequestIDValid) == 0x000004, "Wrong alignment on BP_LeaderboardSystem_C_IsRequestIDValid");
static_assert(sizeof(BP_LeaderboardSystem_C_IsRequestIDValid) == 0x000010, "Wrong size on BP_LeaderboardSystem_C_IsRequestIDValid");
static_assert(offsetof(BP_LeaderboardSystem_C_IsRequestIDValid, BoardType) == 0x000000, "Member 'BP_LeaderboardSystem_C_IsRequestIDValid::BoardType' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsRequestIDValid, RequestId) == 0x000004, "Member 'BP_LeaderboardSystem_C_IsRequestIDValid::RequestId' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsRequestIDValid, Valid) == 0x000008, "Member 'BP_LeaderboardSystem_C_IsRequestIDValid::Valid' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsRequestIDValid, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_LeaderboardSystem_C_IsRequestIDValid::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsRequestIDValid, CallFunc_Array_Contains_ReturnValue) == 0x00000A, "Member 'BP_LeaderboardSystem_C_IsRequestIDValid::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsRequestIDValid, CallFunc_Array_Contains_ReturnValue_1) == 0x00000B, "Member 'BP_LeaderboardSystem_C_IsRequestIDValid::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_IsRequestIDValid, CallFunc_Array_Contains_ReturnValue_2) == 0x00000C, "Member 'BP_LeaderboardSystem_C_IsRequestIDValid::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");

// Function BP_LeaderboardSystem.BP_LeaderboardSystem_C.GetCacheDelay
// 0x0038 (0x0038 - 0x0000)
struct BP_LeaderboardSystem_C_GetCacheDelay final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LeaderboardSystem_C_GetCacheDelay) == 0x000008, "Wrong alignment on BP_LeaderboardSystem_C_GetCacheDelay");
static_assert(sizeof(BP_LeaderboardSystem_C_GetCacheDelay) == 0x000038, "Wrong size on BP_LeaderboardSystem_C_GetCacheDelay");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, ReturnValue) == 0x000000, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, Temp_byte_Variable) == 0x000008, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, Temp_int_Variable) == 0x00000C, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, Temp_int_Variable_1) == 0x000010, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, Temp_int_Variable_2) == 0x000014, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, Temp_int_Variable_3) == 0x000018, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, Temp_int_Variable_4) == 0x00001C, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, Temp_int_Variable_5) == 0x000020, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, CallFunc_GetCurrentPlatform_ReturnValue) == 0x000024, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, K2Node_Select_Default) == 0x000028, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LeaderboardSystem_C_GetCacheDelay, CallFunc_MakeTimespan_ReturnValue) == 0x000030, "Member 'BP_LeaderboardSystem_C_GetCacheDelay::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");

}

