#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootObject_Memento_Vinyl_Base

#include "Basic.hpp"

#include "F_Lootable_StateDescriptor_structs.hpp"
#include "E_Lootable_State_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_LootObject_Memento_Vinyl_Base.BP_LootObject_Memento_Vinyl_Base_C.ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base
// 0x00A0 (0x00A0 - 0x0000)
struct BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0014(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base) == 0x000004, "Wrong alignment on BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base");
static_assert(sizeof(BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base) == 0x0000A0, "Wrong size on BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base, EntryPoint) == 0x000000, "Member 'BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base, CallFunc_MakeRotator_ReturnValue) == 0x000004, "Member 'BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000014, "Member 'BP_LootObject_Memento_Vinyl_Base_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Base::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_LootObject_Memento_Vinyl_Base.BP_LootObject_Memento_Vinyl_Base_C.Apply Materials from State Descriptor
// 0x0048 (0x0048 - 0x0000)
struct BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor final
{
public:
	struct FF_Lootable_StateDescriptor            State_Descriptor;                                  // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Lootable_State                              CallFunc_Get_State_State;                          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor) == 0x000008, "Wrong alignment on BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor");
static_assert(sizeof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor) == 0x000048, "Wrong size on BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor, State_Descriptor) == 0x000000, "Member 'BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor::State_Descriptor' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor, CallFunc_IsDedicatedServer_ReturnValue) == 0x000040, "Member 'BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000041, "Member 'BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor, CallFunc_IsPlaying_ReturnValue) == 0x000042, "Member 'BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor, CallFunc_IsPlaying_ReturnValue_1) == 0x000043, "Member 'BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor, CallFunc_Get_State_State) == 0x000044, "Member 'BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000045, "Member 'BP_LootObject_Memento_Vinyl_Base_C_Apply_Materials_from_State_Descriptor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

