#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mannequin_Lobby

#include "Basic.hpp"

#include "S_JiggleDefinition_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.ExecuteUbergraph_BP_Mannequin_Lobby
// 0x0088 (0x0088 - 0x0000)
struct BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_BoosterCount;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_CustomEvent_PlayerState;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Apply_Customizations_Result;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkinPair                              CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby) == 0x000008, "Wrong alignment on BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby");
static_assert(sizeof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby) == 0x000088, "Wrong size on BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, EntryPoint) == 0x000000, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, K2Node_CustomEvent_BoosterCount) == 0x00000C, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::K2Node_CustomEvent_BoosterCount' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, K2Node_CustomEvent_PlayerState) == 0x000018, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Apply_Customizations_Result) == 0x000030, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Apply_Customizations_Result' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, Temp_int_Variable) == 0x00004C, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, K2Node_Select_Default) == 0x000050, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000070, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000080, "Member 'BP_Mannequin_Lobby_C_ExecuteUbergraph_BP_Mannequin_Lobby::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.InitFromPlayerState
// 0x0008 (0x0008 - 0x0000)
struct BP_Mannequin_Lobby_C_InitFromPlayerState final
{
public:
	class AHumanPlayerState*                      PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_Lobby_C_InitFromPlayerState) == 0x000008, "Wrong alignment on BP_Mannequin_Lobby_C_InitFromPlayerState");
static_assert(sizeof(BP_Mannequin_Lobby_C_InitFromPlayerState) == 0x000008, "Wrong size on BP_Mannequin_Lobby_C_InitFromPlayerState");
static_assert(offsetof(BP_Mannequin_Lobby_C_InitFromPlayerState, PlayerState) == 0x000000, "Member 'BP_Mannequin_Lobby_C_InitFromPlayerState::PlayerState' has a wrong offset!");

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.SetBoosterLevel
// 0x0004 (0x0004 - 0x0000)
struct BP_Mannequin_Lobby_C_SetBoosterLevel final
{
public:
	int32                                         BoosterCount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_Lobby_C_SetBoosterLevel) == 0x000004, "Wrong alignment on BP_Mannequin_Lobby_C_SetBoosterLevel");
static_assert(sizeof(BP_Mannequin_Lobby_C_SetBoosterLevel) == 0x000004, "Wrong size on BP_Mannequin_Lobby_C_SetBoosterLevel");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetBoosterLevel, BoosterCount) == 0x000000, "Member 'BP_Mannequin_Lobby_C_SetBoosterLevel::BoosterCount' has a wrong offset!");

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.Setindex
// 0x0004 (0x0004 - 0x0000)
struct BP_Mannequin_Lobby_C_Setindex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_Lobby_C_Setindex) == 0x000004, "Wrong alignment on BP_Mannequin_Lobby_C_Setindex");
static_assert(sizeof(BP_Mannequin_Lobby_C_Setindex) == 0x000004, "Wrong size on BP_Mannequin_Lobby_C_Setindex");
static_assert(offsetof(BP_Mannequin_Lobby_C_Setindex, Index_0) == 0x000000, "Member 'BP_Mannequin_Lobby_C_Setindex::Index_0' has a wrong offset!");

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.SetPose
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Mannequin_Lobby_C_SetPose final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_LobbyMannequin_C*                  K2Node_DynamicCast_AsABP_Lobby_Mannequin;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_2;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_3;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_Lobby_C_SetPose) == 0x000008, "Wrong alignment on BP_Mannequin_Lobby_C_SetPose");
static_assert(sizeof(BP_Mannequin_Lobby_C_SetPose) == 0x0000E0, "Wrong size on BP_Mannequin_Lobby_C_SetPose");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Value) == 0x000000, "Member 'BP_Mannequin_Lobby_C_SetPose::Value' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable) == 0x000008, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_bool_Variable) == 0x000010, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_1) == 0x000018, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_2) == 0x000020, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_int_Variable) == 0x000028, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, CallFunc_Clamp_ReturnValue) == 0x00002C, "Member 'BP_Mannequin_Lobby_C_SetPose::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_3) == 0x000030, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_4) == 0x000038, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_5) == 0x000040, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_6) == 0x000048, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_7) == 0x000050, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_8) == 0x000058, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_9) == 0x000060, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_10) == 0x000068, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_11) == 0x000070, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_12) == 0x000078, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_13) == 0x000080, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_14) == 0x000088, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_object_Variable_15) == 0x000090, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_bool_Variable_1) == 0x000098, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, Temp_int_Variable_1) == 0x00009C, "Member 'BP_Mannequin_Lobby_C_SetPose::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, CallFunc_GetAnimInstance_ReturnValue) == 0x0000A0, "Member 'BP_Mannequin_Lobby_C_SetPose::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, K2Node_DynamicCast_AsABP_Lobby_Mannequin) == 0x0000A8, "Member 'BP_Mannequin_Lobby_C_SetPose::K2Node_DynamicCast_AsABP_Lobby_Mannequin' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_Mannequin_Lobby_C_SetPose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, K2Node_Select_Default) == 0x0000B8, "Member 'BP_Mannequin_Lobby_C_SetPose::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_Mannequin_Lobby_C_SetPose::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_Mannequin_Lobby_C_SetPose::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, CallFunc_Clamp_ReturnValue_1) == 0x0000CC, "Member 'BP_Mannequin_Lobby_C_SetPose::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, K2Node_Select_Default_2) == 0x0000D0, "Member 'BP_Mannequin_Lobby_C_SetPose::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetPose, K2Node_Select_Default_3) == 0x0000D8, "Member 'BP_Mannequin_Lobby_C_SetPose::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.SetWeaponSK2
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Mannequin_Lobby_C_SetWeaponSK2 final
{
public:
	struct FSkinPair                              SkinPair;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSkin*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetClassDefaultObject_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetSkeletalMeshLink_ReturnValue;          // 0x0060(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplySkinExtraGeometry_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplyWeaponSkinVisual_ReturnValue;        // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_Lobby_C_SetWeaponSK2) == 0x000008, "Wrong alignment on BP_Mannequin_Lobby_C_SetWeaponSK2");
static_assert(sizeof(BP_Mannequin_Lobby_C_SetWeaponSK2) == 0x0000C0, "Wrong size on BP_Mannequin_Lobby_C_SetWeaponSK2");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, SkinPair) == 0x000000, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::SkinPair' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, Mesh) == 0x000010, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::Mesh' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_GetChildrenComponents_Children) == 0x000020, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000038, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, K2Node_ClassDynamicCast_AsWeapon) == 0x000040, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::K2Node_ClassDynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, K2Node_ClassDynamicCast_bSuccess) == 0x000048, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_GetClassDefaultObject_ReturnValue_1) == 0x000050, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_GetClassDefaultObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_GetSkeletalMeshLink_ReturnValue) == 0x000060, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_GetSkeletalMeshLink_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000088, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_LoadSoftReference_ReturnValue) == 0x000098, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_ApplySkinExtraGeometry_ReturnValue) == 0x0000A0, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_ApplySkinExtraGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x0000A8, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000B2, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_ApplyWeaponSkinVisual_ReturnValue) == 0x0000B3, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_ApplyWeaponSkinVisual_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_Array_Contains_ReturnValue) == 0x0000B8, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_Less_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_SetWeaponSK2, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_Mannequin_Lobby_C_SetWeaponSK2::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.Apply Customizations
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Mannequin_Lobby_C_Apply_Customizations final
{
public:
	struct FCustomizationContainer                SourceCustomizationsArray;                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationSlotVariant              CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	TSubclassOf<class AGender>                    CallFunc_GetGender_Gender;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_GetGender_IsFemale;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Slot_Archetype; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyCustomizationOnMannequin_ReturnValue; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mannequin_Lobby_C_Apply_Customizations) == 0x000008, "Wrong alignment on BP_Mannequin_Lobby_C_Apply_Customizations");
static_assert(sizeof(BP_Mannequin_Lobby_C_Apply_Customizations) == 0x0000C0, "Wrong size on BP_Mannequin_Lobby_C_Apply_Customizations");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, SourceCustomizationsArray) == 0x000000, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::SourceCustomizationsArray' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, Result) == 0x000010, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::Result' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, Temp_bool_True_if_break_was_hit_Variable) == 0x000011, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_GetGender_Gender) == 0x000030, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_GetGender_Gender' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_GetGender_IsFemale) == 0x000038, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_GetGender_IsFemale' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, K2Node_ClassDynamicCast_AsCustomization_Slot_Archetype) == 0x000040, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::K2Node_ClassDynamicCast_AsCustomization_Slot_Archetype' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, K2Node_ClassDynamicCast_bSuccess) == 0x000048, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_GetUserControllerId_ReturnValue) == 0x0000A8, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0000B0, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_ApplyCustomizationOnMannequin_ReturnValue) == 0x0000B8, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_ApplyCustomizationOnMannequin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_Apply_Customizations, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'BP_Mannequin_Lobby_C_Apply_Customizations::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Mannequin_Lobby.BP_Mannequin_Lobby_C.CheckForCustomizationsWithJiggle
// 0x0250 (0x0250 - 0x0000)
struct BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle final
{
public:
	int32                                         NewLocalVar_0;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             JiggleDefinitions;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_LobbyMannequin_C*                  K2Node_DynamicCast_AsABP_Lobby_Mannequin;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0048(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0070(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2; // 0x00A0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class USkeletalMesh>>   K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item;                           // 0x00E0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0110(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AGender>                    CallFunc_GetGender_ReturnValue;                    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FS_JiggleDefinition                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0130(0x00D0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       K2Node_Select_Default;                             // 0x0208(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1; // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle) == 0x000008, "Wrong alignment on BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle");
static_assert(sizeof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle) == 0x000250, "Wrong size on BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, NewLocalVar_0) == 0x000000, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, JiggleDefinitions) == 0x000008, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::JiggleDefinitions' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, IsMale) == 0x000010, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::IsMale' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, Temp_bool_True_if_break_was_hit_Variable) == 0x000011, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, Temp_bool_Variable) == 0x000024, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, Temp_bool_Variable_1) == 0x000030, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, K2Node_DynamicCast_AsABP_Lobby_Mannequin) == 0x000038, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::K2Node_DynamicCast_AsABP_Lobby_Mannequin' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000048, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000070, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2) == 0x0000A0, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000110, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_GetGender_ReturnValue) == 0x000128, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_GetGender_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000130, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_ClassIsChildOf_ReturnValue) == 0x000201, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Array_Length_ReturnValue_1) == 0x000204, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, K2Node_Select_Default) == 0x000208, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_Less_IntInt_ReturnValue_1) == 0x000230, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000238, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, K2Node_DynamicCast_AsAnim_Sequence) == 0x000240, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, K2Node_DynamicCast_bSuccess_1) == 0x000248, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000249, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1) == 0x00024A, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle, K2Node_Select_Default_1) == 0x00024B, "Member 'BP_Mannequin_Lobby_C_CheckForCustomizationsWithJiggle::K2Node_Select_Default_1' has a wrong offset!");

}

