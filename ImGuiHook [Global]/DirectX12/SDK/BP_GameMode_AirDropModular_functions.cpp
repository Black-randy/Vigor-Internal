#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_AirDropModular

#include "Basic.hpp"

#include "BP_GameMode_AirDropModular_classes.hpp"
#include "BP_GameMode_AirDropModular_parameters.hpp"


namespace SDK
{

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Container Spawned__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Container_Spawned__DelegateSignature(class ABP_AirDropContainer_Base_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Container Spawned__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Container Touched Down__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Container_Touched_Down__DelegateSignature(class ABP_AirDropContainer_Base_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Container Touched Down__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Drop Zone Determined__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropLocation_C*            Drop_Zone_Actor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Drop_Zone_Determined__DelegateSignature(class ABP_AirDropLocation_C* Drop_Zone_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Drop Zone Determined__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature Parms{};

	Parms.Drop_Zone_Actor = Drop_Zone_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Spawn Container__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropLocation_C*            Drop_Zone_Actor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Spawn_Container__DelegateSignature(class ABP_AirDropLocation_C* Drop_Zone_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Spawn Container__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature Parms{};

	Parms.Drop_Zone_Actor = Drop_Zone_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Game Mode Toggled__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Game_Mode_Is_Running                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_AirDropModular_C::Game_Mode_Toggled__DelegateSignature(bool Game_Mode_Is_Running)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Game Mode Toggled__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature Parms{};

	Parms.Game_Mode_Is_Running = Game_Mode_Is_Running;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Radiation Wave Activated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_AirDropModular_C::Radiation_Wave_Activated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Radiation Wave Activated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Radiation Wave Determined__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_AirDropModular_C::Radiation_Wave_Determined__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Radiation Wave Determined__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Player Opened Debug UI__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Player_Opened_Debug_UI__DelegateSignature(class ABP_PlayerController_AirDropModular_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Player Opened Debug UI__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Player Closed Debug UI__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Player_Closed_Debug_UI__DelegateSignature(class ABP_PlayerController_AirDropModular_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Player Closed Debug UI__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Airdrop Timer Notify__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimerHandle                     Airdrop_Timer                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   Airdrop_Timer_Duration                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Airdrop_Timer_Notify__DelegateSignature(const struct FTimerHandle& Airdrop_Timer, int32 Airdrop_Timer_Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Airdrop Timer Notify__DelegateSignature");

	Params::BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature Parms{};

	Parms.Airdrop_Timer = std::move(Airdrop_Timer);
	Parms.Airdrop_Timer_Duration = Airdrop_Timer_Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.ExecuteUbergraph_BP_GameMode_AirDropModular
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::ExecuteUbergraph_BP_GameMode_AirDropModular(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "ExecuteUbergraph_BP_GameMode_AirDropModular");

	Params::BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.K2_PostLogin
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::K2_PostLogin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "K2_PostLogin");

	Params::BP_GameMode_AirDropModular_C_K2_PostLogin Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.SLM_DelayedOnPostLogin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::SLM_DelayedOnPostLogin(class APlayerController* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "SLM_DelayedOnPostLogin");

	Params::BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.SubLevelsLoaded_DelayedBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SLM_Load_Complete                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_AirDropModular_C::SubLevelsLoaded_DelayedBeginPlay(bool SLM_Load_Complete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "SubLevelsLoaded_DelayedBeginPlay");

	Params::BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay Parms{};

	Parms.SLM_Load_Complete = SLM_Load_Complete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Destroy ADM Component
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GMComponent_ADM_Base_C*       ADM_GMComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Destroy_ADM_Component(class UBP_GMComponent_ADM_Base_C* ADM_GMComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Destroy ADM Component");

	Params::BP_GameMode_AirDropModular_C_Destroy_ADM_Component Parms{};

	Parms.ADM_GMComponent = ADM_GMComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Add ADM Component
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Module_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Add_ADM_Component(class UClass* Module_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Add ADM Component");

	Params::BP_GameMode_AirDropModular_C_Add_ADM_Component Parms{};

	Parms.Module_Type = Module_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.K2_OnLogout
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::K2_OnLogout(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "K2_OnLogout");

	Params::BP_GameMode_AirDropModular_C_K2_OnLogout Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Deregister Debug UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Deregister_Debug_UI(class ABP_PlayerController_AirDropModular_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Deregister Debug UI");

	Params::BP_GameMode_AirDropModular_C_Deregister_Debug_UI Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Register Debug UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Register_Debug_UI(class ABP_PlayerController_AirDropModular_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Register Debug UI");

	Params::BP_GameMode_AirDropModular_C_Register_Debug_UI Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Container Touched Down_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Container_Touched_Down_Event(class ABP_AirDropContainer_Base_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Container Touched Down_Event");

	Params::BP_GameMode_AirDropModular_C_Container_Touched_Down_Event Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Start Analytics
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_AirDropModular_C::Start_Analytics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Start Analytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get All ADM Components
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_GMComponent_ADM_Base_C*>Components                                             (Parm, OutParm, ContainsInstancedReference)

void ABP_GameMode_AirDropModular_C::Get_All_ADM_Components(TArray<class UBP_GMComponent_ADM_Base_C*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Get All ADM Components");

	Params::BP_GameMode_AirDropModular_C_Get_All_ADM_Components Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Register ADM Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GMComponent_ADM_Base_C*       Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Assigned_ID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_AirDropModular_C::Register_ADM_Component(class UBP_GMComponent_ADM_Base_C* Component, int32* Assigned_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Register ADM Component");

	Params::BP_GameMode_AirDropModular_C_Register_ADM_Component Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (Assigned_ID != nullptr)
		*Assigned_ID = Parms.Assigned_ID;
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Deregister ADM Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GMComponent_ADM_Base_C*       Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Successful                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_AirDropModular_C::Deregister_ADM_Component(class UBP_GMComponent_ADM_Base_C* Component, bool* Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Deregister ADM Component");

	Params::BP_GameMode_AirDropModular_C_Deregister_ADM_Component Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (Successful != nullptr)
		*Successful = Parms.Successful;
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Print Component List
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_AirDropModular_C::Print_Component_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Print Component List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Game Mode Description
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Game_Mode_Description                                  (Parm, OutParm)

void ABP_GameMode_AirDropModular_C::Get_Game_Mode_Description(class FText* Game_Mode_Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Get Game Mode Description");

	Params::BP_GameMode_AirDropModular_C_Get_Game_Mode_Description Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Game_Mode_Description != nullptr)
		*Game_Mode_Description = std::move(Parms.Game_Mode_Description);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Set Game Mode Description
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             New_Game_Mode_Description                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Duplicated_to_Game_State                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_AirDropModular_C::Set_Game_Mode_Description(const class FText& New_Game_Mode_Description, bool* Duplicated_to_Game_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Set Game Mode Description");

	Params::BP_GameMode_AirDropModular_C_Set_Game_Mode_Description Parms{};

	Parms.New_Game_Mode_Description = std::move(New_Game_Mode_Description);

	UObject::ProcessEvent(Func, &Parms);

	if (Duplicated_to_Game_State != nullptr)
		*Duplicated_to_Game_State = Parms.Duplicated_to_Game_State;
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Is Game Mode Running
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is_Game_Mode_Running_0                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_AirDropModular_C::Get_Is_Game_Mode_Running(bool* Is_Game_Mode_Running_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Get Is Game Mode Running");

	Params::BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Game_Mode_Running_0 != nullptr)
		*Is_Game_Mode_Running_0 = Parms.Is_Game_Mode_Running_0;
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Set Is Game Mode Running
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Running                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_AirDropModular_C::Set_Is_Game_Mode_Running(bool Running)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Set Is Game Mode Running");

	Params::BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running Parms{};

	Parms.Running = Running;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.IsWinner
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsWinner_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_AirDropModular_C::IsWinner(class APlayerController* PlayerController, bool* Param_IsWinner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "IsWinner");

	Params::BP_GameMode_AirDropModular_C_IsWinner Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsWinner_0 != nullptr)
		*Param_IsWinner_0 = Parms.Param_IsWinner_0;
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Rewards For Player
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Rewards                                                (Parm, OutParm)

void ABP_GameMode_AirDropModular_C::Get_Rewards_For_Player(class APlayerController* Controller, TArray<class FString>* Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Get Rewards For Player");

	Params::BP_GameMode_AirDropModular_C_Get_Rewards_For_Player Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.ReadyToStartMatch
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_AirDropModular_C::ReadyToStartMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "ReadyToStartMatch");

	Params::BP_GameMode_AirDropModular_C_ReadyToStartMatch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Module Descriptions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     Module_Descriptions                                    (Parm, OutParm)

void ABP_GameMode_AirDropModular_C::Get_Module_Descriptions(TArray<class FText>* Module_Descriptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Get Module Descriptions");

	Params::BP_GameMode_AirDropModular_C_Get_Module_Descriptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Module_Descriptions != nullptr)
		*Module_Descriptions = std::move(Parms.Module_Descriptions);
}


// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Default Game Mode Description
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             Game_Mode_Description                                  (Parm, OutParm)

void ABP_GameMode_AirDropModular_C::Get_Default_Game_Mode_Description(class FText* Game_Mode_Description) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_AirDropModular_C", "Get Default Game Mode Description");

	Params::BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Game_Mode_Description != nullptr)
		*Game_Mode_Description = std::move(Parms.Game_Mode_Description);
}

}

