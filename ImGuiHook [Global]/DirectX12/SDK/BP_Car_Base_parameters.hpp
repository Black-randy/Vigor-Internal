#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Car_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_Car_Colours_structs.hpp"
#include "Engine_structs.hpp"
#include "S_CustomMapMarker_structs.hpp"
#include "S_CustomMapMarker_Fade_structs.hpp"


namespace SDK::Params
{

// Function BP_Car_Base.BP_Car_Base_C.ExecuteUbergraph_BP_Car_Base
// 0x0360 (0x0360 - 0x0000)
struct BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWindIntensity_1;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_CurrentWindDirection_1;               // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HeavyRain;                            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentRainAmount_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWetnessAmount_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentRainAmount;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWindIntensity;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_CurrentWindDirection;                 // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWetnessAmount;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_Instigating_Controller;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x00E0(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_Copy_ReturnValue;                           // 0x0130(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker                     K2Node_SetFieldsInStruct_StructOut;                // 0x0190(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_Fade                K2Node_MakeStruct_S_CustomMapMarker_Fade;          // 0x01F0(0x00D8)(HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script_1; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Equipment_Storage_Empty_Is_Empty;      // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB[0x5];                                      // 0x02EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_Event_Looting_Character;                    // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x030C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0328(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAudioComponentPlayState                      CallFunc_GetPlayState_ReturnValue;                 // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x034C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base) == 0x000008, "Wrong alignment on BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base");
static_assert(sizeof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base) == 0x000360, "Wrong size on BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, EntryPoint) == 0x000000, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentWindIntensity_1) == 0x000004, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentWindIntensity_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentWindDirection_1) == 0x000008, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentWindDirection_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_HeavyRain) == 0x000014, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_HeavyRain' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentRainAmount_1) == 0x000018, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentRainAmount_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentWetnessAmount_1) == 0x00001C, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentWetnessAmount_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentRainAmount) == 0x000020, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentRainAmount' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentWindIntensity) == 0x000024, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentWindIntensity' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentWindDirection) == 0x000028, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentWindDirection' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_CurrentWetnessAmount) == 0x000034, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_CurrentWetnessAmount' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_CustomEvent_Instigating_Controller) == 0x000040, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_CustomEvent_Instigating_Controller' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000048, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_IsServer_ReturnValue) == 0x000051, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_Damage) == 0x000054, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_DamageType) == 0x000058, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_InstigatedBy) == 0x000060, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_DamageCauser) == 0x000068, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_RandomFloat_ReturnValue) == 0x000070, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000075, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000078, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000080, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000090, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_AsBP_Game_Instance_1) == 0x000098, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_AsBP_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_RandomFloat_ReturnValue_1) == 0x0000A4, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000A9, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetUserControllerId_ReturnValue) == 0x0000AC, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0000B8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x0000C0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000CC, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_IsServer_ReturnValue_1) == 0x0000D8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_MakeStruct_S_CustomMapMarker) == 0x0000E0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Copy_ReturnValue) == 0x000130, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_Conv_VectorToString_ReturnValue) == 0x000180, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_SetFieldsInStruct_StructOut) == 0x000190, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_Concat_StrStr_ReturnValue) == 0x0001E0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_MakeStruct_S_CustomMapMarker_Fade) == 0x0001F0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_MakeStruct_S_CustomMapMarker_Fade' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_Conv_StringToName_ReturnValue) == 0x0002C8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetUserControllerId_ReturnValue_1) == 0x0002D0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x0002D8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_AsBP_Player_Controller_Script_1) == 0x0002E0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_AsBP_Player_Controller_Script_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_bSuccess_4) == 0x0002E8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_Is_Equipment_Storage_Empty_Is_Empty) == 0x0002E9, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_Is_Equipment_Storage_Empty_Is_Empty' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002EA, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_Event_Looting_Character) == 0x0002F0, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_Event_Looting_Character' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F8, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetController_ReturnValue) == 0x000300, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_BooleanAND_ReturnValue_2) == 0x000308, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_IsServer_ReturnValue_2) == 0x000309, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_CreateDelegate_OutputDelegate) == 0x00030C, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetFlameController_ReturnValue) == 0x000320, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000328, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000330, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetEventSystem_ReturnValue) == 0x000338, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_AsBP_Event_System) == 0x000340, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_DynamicCast_bSuccess_5) == 0x000348, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_GetPlayState_ReturnValue) == 0x000349, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_GetPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x00034C, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00035C, "Member 'BP_Car_Base_C_ExecuteUbergraph_BP_Car_Base::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.Access Loot
// 0x0008 (0x0008 - 0x0000)
struct BP_Car_Base_C_Access_Loot final
{
public:
	class ABP_Character_C*                        Looting_character;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Car_Base_C_Access_Loot) == 0x000008, "Wrong alignment on BP_Car_Base_C_Access_Loot");
static_assert(sizeof(BP_Car_Base_C_Access_Loot) == 0x000008, "Wrong size on BP_Car_Base_C_Access_Loot");
static_assert(offsetof(BP_Car_Base_C_Access_Loot, Looting_character) == 0x000000, "Member 'BP_Car_Base_C_Access_Loot::Looting_character' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_Car_Base_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Car_Base_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_Car_Base_C_ReceiveAnyDamage");
static_assert(sizeof(BP_Car_Base_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_Car_Base_C_ReceiveAnyDamage");
static_assert(offsetof(BP_Car_Base_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_Car_Base_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_Car_Base_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_Car_Base_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_Car_Base_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.Start Alarm
// 0x0008 (0x0008 - 0x0000)
struct BP_Car_Base_C_Start_Alarm final
{
public:
	class AController*                            Instigating_Controller;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Car_Base_C_Start_Alarm) == 0x000008, "Wrong alignment on BP_Car_Base_C_Start_Alarm");
static_assert(sizeof(BP_Car_Base_C_Start_Alarm) == 0x000008, "Wrong size on BP_Car_Base_C_Start_Alarm");
static_assert(offsetof(BP_Car_Base_C_Start_Alarm, Instigating_Controller) == 0x000000, "Member 'BP_Car_Base_C_Start_Alarm::Instigating_Controller' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.AdjustWeather
// 0x0018 (0x0018 - 0x0000)
struct BP_Car_Base_C_AdjustWeather final
{
public:
	float                                         CurrentRainAmount;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWindIntensity;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentWindDirection;                              // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWetnessAmount;                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Car_Base_C_AdjustWeather) == 0x000004, "Wrong alignment on BP_Car_Base_C_AdjustWeather");
static_assert(sizeof(BP_Car_Base_C_AdjustWeather) == 0x000018, "Wrong size on BP_Car_Base_C_AdjustWeather");
static_assert(offsetof(BP_Car_Base_C_AdjustWeather, CurrentRainAmount) == 0x000000, "Member 'BP_Car_Base_C_AdjustWeather::CurrentRainAmount' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_AdjustWeather, CurrentWindIntensity) == 0x000004, "Member 'BP_Car_Base_C_AdjustWeather::CurrentWindIntensity' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_AdjustWeather, CurrentWindDirection) == 0x000008, "Member 'BP_Car_Base_C_AdjustWeather::CurrentWindDirection' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_AdjustWeather, CurrentWetnessAmount) == 0x000014, "Member 'BP_Car_Base_C_AdjustWeather::CurrentWetnessAmount' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.AdjustRainIntensity
// 0x0008 (0x0008 - 0x0000)
struct BP_Car_Base_C_AdjustRainIntensity final
{
public:
	float                                         CurrentRainAmount;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWetnessAmount;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Car_Base_C_AdjustRainIntensity) == 0x000004, "Wrong alignment on BP_Car_Base_C_AdjustRainIntensity");
static_assert(sizeof(BP_Car_Base_C_AdjustRainIntensity) == 0x000008, "Wrong size on BP_Car_Base_C_AdjustRainIntensity");
static_assert(offsetof(BP_Car_Base_C_AdjustRainIntensity, CurrentRainAmount) == 0x000000, "Member 'BP_Car_Base_C_AdjustRainIntensity::CurrentRainAmount' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_AdjustRainIntensity, CurrentWetnessAmount) == 0x000004, "Member 'BP_Car_Base_C_AdjustRainIntensity::CurrentWetnessAmount' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.SetHeavyRain
// 0x0001 (0x0001 - 0x0000)
struct BP_Car_Base_C_SetHeavyRain final
{
public:
	bool                                          HeavyRain;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Car_Base_C_SetHeavyRain) == 0x000001, "Wrong alignment on BP_Car_Base_C_SetHeavyRain");
static_assert(sizeof(BP_Car_Base_C_SetHeavyRain) == 0x000001, "Wrong size on BP_Car_Base_C_SetHeavyRain");
static_assert(offsetof(BP_Car_Base_C_SetHeavyRain, HeavyRain) == 0x000000, "Member 'BP_Car_Base_C_SetHeavyRain::HeavyRain' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.AdjustWindDirection
// 0x000C (0x000C - 0x0000)
struct BP_Car_Base_C_AdjustWindDirection final
{
public:
	struct FVector                                CurrentWindDirection;                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Car_Base_C_AdjustWindDirection) == 0x000004, "Wrong alignment on BP_Car_Base_C_AdjustWindDirection");
static_assert(sizeof(BP_Car_Base_C_AdjustWindDirection) == 0x00000C, "Wrong size on BP_Car_Base_C_AdjustWindDirection");
static_assert(offsetof(BP_Car_Base_C_AdjustWindDirection, CurrentWindDirection) == 0x000000, "Member 'BP_Car_Base_C_AdjustWindDirection::CurrentWindDirection' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.AdjustWindIntensity
// 0x0004 (0x0004 - 0x0000)
struct BP_Car_Base_C_AdjustWindIntensity final
{
public:
	float                                         CurrentWindIntensity;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Car_Base_C_AdjustWindIntensity) == 0x000004, "Wrong alignment on BP_Car_Base_C_AdjustWindIntensity");
static_assert(sizeof(BP_Car_Base_C_AdjustWindIntensity) == 0x000004, "Wrong size on BP_Car_Base_C_AdjustWindIntensity");
static_assert(offsetof(BP_Car_Base_C_AdjustWindIntensity, CurrentWindIntensity) == 0x000000, "Member 'BP_Car_Base_C_AdjustWindIntensity::CurrentWindIntensity' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.UserConstructionScript
// 0x0398 (0x0398 - 0x0000)
struct BP_Car_Base_C_UserConstructionScript final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0018(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00A4(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0150(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x01DC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_4;  // 0x0280(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_5;  // 0x030C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Car_Base_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Car_Base_C_UserConstructionScript");
static_assert(sizeof(BP_Car_Base_C_UserConstructionScript) == 0x000398, "Wrong size on BP_Car_Base_C_UserConstructionScript");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_1) == 0x00000C, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000018, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000A4, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000130, "Member 'BP_Car_Base_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000134, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_2) == 0x000138, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_3) == 0x000144, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000150, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x0001DC, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_4) == 0x000268, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_5) == 0x000274, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_4) == 0x000280, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_5) == 0x00030C, "Member 'BP_Car_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_5' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.SetColours
// 0x0018 (0x0018 - 0x0000)
struct BP_Car_Base_C_SetColours final
{
public:
	struct FS_Car_Colours                         CallFunc_Map_Find_Value;                           // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Car_Base_C_SetColours) == 0x000008, "Wrong alignment on BP_Car_Base_C_SetColours");
static_assert(sizeof(BP_Car_Base_C_SetColours) == 0x000018, "Wrong size on BP_Car_Base_C_SetColours");
static_assert(offsetof(BP_Car_Base_C_SetColours, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_Car_Base_C_SetColours::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetColours, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_Car_Base_C_SetColours::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.SetMeches
// 0x0010 (0x0010 - 0x0000)
struct BP_Car_Base_C_SetMeches final
{
public:
	class UStaticMesh*                            CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Car_Base_C_SetMeches) == 0x000008, "Wrong alignment on BP_Car_Base_C_SetMeches");
static_assert(sizeof(BP_Car_Base_C_SetMeches) == 0x000010, "Wrong size on BP_Car_Base_C_SetMeches");
static_assert(offsetof(BP_Car_Base_C_SetMeches, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_Car_Base_C_SetMeches::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetMeches, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BP_Car_Base_C_SetMeches::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetMeches, CallFunc_SetStaticMesh_ReturnValue) == 0x000009, "Member 'BP_Car_Base_C_SetMeches::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.SetWheels
// 0x0020 (0x0020 - 0x0000)
struct BP_Car_Base_C_SetWheels final
{
public:
	class UStaticMesh*                            WheelMesh;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Car_Base_C_SetWheels) == 0x000008, "Wrong alignment on BP_Car_Base_C_SetWheels");
static_assert(sizeof(BP_Car_Base_C_SetWheels) == 0x000020, "Wrong size on BP_Car_Base_C_SetWheels");
static_assert(offsetof(BP_Car_Base_C_SetWheels, WheelMesh) == 0x000000, "Member 'BP_Car_Base_C_SetWheels::WheelMesh' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetWheels, CallFunc_SetStaticMesh_ReturnValue) == 0x000008, "Member 'BP_Car_Base_C_SetWheels::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetWheels, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000009, "Member 'BP_Car_Base_C_SetWheels::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetWheels, CallFunc_SetStaticMesh_ReturnValue_2) == 0x00000A, "Member 'BP_Car_Base_C_SetWheels::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetWheels, CallFunc_SetStaticMesh_ReturnValue_3) == 0x00000B, "Member 'BP_Car_Base_C_SetWheels::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetWheels, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_Car_Base_C_SetWheels::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_SetWheels, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_Car_Base_C_SetWheels::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.Set Lights Material
// 0x0018 (0x0018 - 0x0000)
struct BP_Car_Base_C_Set_Lights_Material final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Car_Base_C_Set_Lights_Material) == 0x000008, "Wrong alignment on BP_Car_Base_C_Set_Lights_Material");
static_assert(sizeof(BP_Car_Base_C_Set_Lights_Material) == 0x000018, "Wrong size on BP_Car_Base_C_Set_Lights_Material");
static_assert(offsetof(BP_Car_Base_C_Set_Lights_Material, Material) == 0x000000, "Member 'BP_Car_Base_C_Set_Lights_Material::Material' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Set_Lights_Material, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_Car_Base_C_Set_Lights_Material::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Set_Lights_Material, CallFunc_GetNumMaterials_ReturnValue) == 0x00000C, "Member 'BP_Car_Base_C_Set_Lights_Material::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Set_Lights_Material, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_Car_Base_C_Set_Lights_Material::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Car_Base.BP_Car_Base_C.Backup Lights Material
// 0x0078 (0x0078 - 0x0000)
struct BP_Car_Base_C_Backup_Lights_Material final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Car_Base_C_Backup_Lights_Material) == 0x000008, "Wrong alignment on BP_Car_Base_C_Backup_Lights_Material");
static_assert(sizeof(BP_Car_Base_C_Backup_Lights_Material) == 0x000078, "Wrong size on BP_Car_Base_C_Backup_Lights_Material");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_Conv_VectorToString_ReturnValue) == 0x000020, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_GetMaterial_ReturnValue) == 0x000060, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000068, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_GetNumMaterials_ReturnValue) == 0x00006C, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Car_Base_C_Backup_Lights_Material, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_Car_Base_C_Backup_Lights_Material::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

