#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmokeCloud_Simplified

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "F_SmokeCloudConfig_structs.hpp"


namespace SDK::Params
{

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.ExecuteUbergraph_BP_SmokeCloud_Simplified
// 0x0208 (0x0208 - 0x0000)
struct BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FF_SmokeCloudConfig                    K2Node_CustomEvent_Config;                         // 0x0014(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0140(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified) == 0x000008, "Wrong alignment on BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified) == 0x000208, "Wrong size on BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, EntryPoint) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CustomEvent_Config) == 0x000014, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CustomEvent_Config' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, Temp_int_Variable) == 0x000050, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_GetVelocity_ReturnValue) == 0x000078, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_VSize_ReturnValue) == 0x000084, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, Temp_int_Variable_1) == 0x000088, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_BooleanOR_ReturnValue) == 0x00008D, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CreateDelegate_OutputDelegate_3) == 0x000090, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000B8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0000C0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000C8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CustomEvent_Actor_1) == 0x0000D0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x0000D8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_CustomEvent_Actor) == 0x0000E8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0000F0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000F1, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x0000F8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000100, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Abs_ReturnValue_1) == 0x000108, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Abs_ReturnValue_2) == 0x00010C, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000110, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000114, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000118, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000120, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000128, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000130, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000138, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_bFromSweep) == 0x00013C, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_SweepResult) == 0x000140, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_GetObjectClass_ReturnValue) == 0x0001D0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001D8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OtherActor) == 0x0001E0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OtherComp) == 0x0001E8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001F0, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_ClassIsChildOf_ReturnValue) == 0x0001F4, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_GetObjectClass_ReturnValue_1) == 0x0001F8, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000200, "Member 'BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendInEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_SmokeCloud_Simplified_C_BlendInEvent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BlendInEvent) == 0x000008, "Wrong alignment on BP_SmokeCloud_Simplified_C_BlendInEvent");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BlendInEvent) == 0x000008, "Wrong size on BP_SmokeCloud_Simplified_C_BlendInEvent");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendInEvent, Actor) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BlendInEvent::Actor' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendOutEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_SmokeCloud_Simplified_C_BlendOutEvent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BlendOutEvent) == 0x000008, "Wrong alignment on BP_SmokeCloud_Simplified_C_BlendOutEvent");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BlendOutEvent) == 0x000008, "Wrong size on BP_SmokeCloud_Simplified_C_BlendOutEvent");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendOutEvent, Actor) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BlendOutEvent::Actor' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SmokeCloud_Simplified_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SmokeCloud_Simplified_C_ReceiveTick");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_ReceiveTick) == 0x000004, "Wrong size on BP_SmokeCloud_Simplified_C_ReceiveTick");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.Initialize smoke cloud
// 0x0014 (0x0014 - 0x0000)
struct BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud final
{
public:
	struct FF_SmokeCloudConfig                    Config;                                            // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud) == 0x000004, "Wrong alignment on BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud) == 0x000014, "Wrong size on BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud, Config) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud::Config' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.UserConstructionScript
// 0x02B0 (0x02B0 - 0x0000)
struct BP_SmokeCloud_Simplified_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0018(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0028(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCurrentWeatherStringForLightScenarios_LightScenario; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AddCloud_ReturnKey;                       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_AddCloud_ReturnParticleSystem;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_AddCloud_boxSize;                         // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddCloud_InBuilding;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddCloud_bOutBuildingCollision;           // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddCloud_volumeLines;                     // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddCloud_ReturnValue;                     // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0198(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0224(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_SmokeCloud_Simplified_C_UserConstructionScript");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_UserConstructionScript) == 0x0002B0, "Wrong size on BP_SmokeCloud_Simplified_C_UserConstructionScript");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x00000C, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_GetPlayerControllers_ReturnValue) == 0x000018, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000028, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B4, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C0, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, K2Node_DynamicCast_AsBP_Player_Controller) == 0x0000C8, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D4, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_GetObjectName_ReturnValue) == 0x0000E0, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_CheckCurrentWeatherStringForLightScenarios_LightScenario) == 0x000120, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_CheckCurrentWeatherStringForLightScenarios_LightScenario' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000121, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_Round_ReturnValue) == 0x000124, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_AddCloud_ReturnKey) == 0x000128, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_AddCloud_ReturnKey' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_AddCloud_ReturnParticleSystem) == 0x000130, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_AddCloud_ReturnParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_AddCloud_boxSize) == 0x000140, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_AddCloud_boxSize' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_AddCloud_InBuilding) == 0x000170, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_AddCloud_InBuilding' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_AddCloud_bOutBuildingCollision) == 0x000171, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_AddCloud_bOutBuildingCollision' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_AddCloud_volumeLines) == 0x000172, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_AddCloud_volumeLines' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_AddCloud_ReturnValue) == 0x000173, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_AddCloud_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000174, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x000180, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x00018C, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000198, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000224, "Member 'BP_SmokeCloud_Simplified_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.SetBlendWeight
// 0x0070 (0x0070 - 0x0000)
struct BP_SmokeCloud_Simplified_C_SetBlendWeight final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_SetBlendWeight) == 0x000008, "Wrong alignment on BP_SmokeCloud_Simplified_C_SetBlendWeight");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_SetBlendWeight) == 0x000070, "Wrong size on BP_SmokeCloud_Simplified_C_SetBlendWeight");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000060, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_FClamp_ReturnValue) == 0x000064, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000068, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_SetBlendWeight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_SmokeCloud_Simplified_C_SetBlendWeight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendRadiusStartFunction
// 0x0020 (0x0020 - 0x0000)
struct BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction) == 0x000004, "Wrong alignment on BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction) == 0x000020, "Wrong size on BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction, Input) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction::Input' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction, Vector) == 0x000004, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction::Vector' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction, Output) == 0x000010, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction::Output' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction, CallFunc_VSizeXY_ReturnValue) == 0x000014, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendRadiusFunctions
// 0x0028 (0x0028 - 0x0000)
struct BP_SmokeCloud_Simplified_C_BlendRadiusFunctions final
{
public:
	bool                                          InBuilding;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Vector;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendRadiusStartFunction_Output;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendRadiusStartFunction_Output_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions) == 0x000004, "Wrong alignment on BP_SmokeCloud_Simplified_C_BlendRadiusFunctions");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions) == 0x000028, "Wrong size on BP_SmokeCloud_Simplified_C_BlendRadiusFunctions");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, InBuilding) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::InBuilding' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, Vector) == 0x000004, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::Vector' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, CallFunc_SelectFloat_ReturnValue_1) == 0x000014, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, CallFunc_BlendRadiusStartFunction_Output) == 0x000018, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::CallFunc_BlendRadiusStartFunction_Output' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, CallFunc_BlendRadiusStartFunction_Output_1) == 0x000020, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::CallFunc_BlendRadiusStartFunction_Output_1' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendRadiusFunctions, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_SmokeCloud_Simplified_C_BlendRadiusFunctions::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.ToggleInBuildingPostProcess
// 0x0018 (0x0018 - 0x0000)
struct BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInsideBuilding_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess) == 0x000008, "Wrong alignment on BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess) == 0x000018, "Wrong size on BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000008, "Member 'BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess, CallFunc_IsInsideBuilding_ReturnValue) == 0x000011, "Member 'BP_SmokeCloud_Simplified_C_ToggleInBuildingPostProcess::CallFunc_IsInsideBuilding_ReturnValue' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendIn
// 0x000C (0x000C - 0x0000)
struct BP_SmokeCloud_Simplified_C_BlendIn final
{
public:
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BlendIn) == 0x000004, "Wrong alignment on BP_SmokeCloud_Simplified_C_BlendIn");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BlendIn) == 0x00000C, "Wrong size on BP_SmokeCloud_Simplified_C_BlendIn");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendIn, CallFunc_Abs_ReturnValue) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BlendIn::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendIn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_SmokeCloud_Simplified_C_BlendIn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendIn, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_SmokeCloud_Simplified_C_BlendIn::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendOut
// 0x0010 (0x0010 - 0x0000)
struct BP_SmokeCloud_Simplified_C_BlendOut final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SmokeCloud_Simplified_C_BlendOut) == 0x000004, "Wrong alignment on BP_SmokeCloud_Simplified_C_BlendOut");
static_assert(sizeof(BP_SmokeCloud_Simplified_C_BlendOut) == 0x000010, "Wrong size on BP_SmokeCloud_Simplified_C_BlendOut");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendOut, NewParam) == 0x000000, "Member 'BP_SmokeCloud_Simplified_C_BlendOut::NewParam' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendOut, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_SmokeCloud_Simplified_C_BlendOut::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendOut, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_SmokeCloud_Simplified_C_BlendOut::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmokeCloud_Simplified_C_BlendOut, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_SmokeCloud_Simplified_C_BlendOut::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

