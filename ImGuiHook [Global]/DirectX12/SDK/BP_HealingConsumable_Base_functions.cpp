#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingConsumable_Base

#include "Basic.hpp"

#include "BP_HealingConsumable_Base_classes.hpp"
#include "BP_HealingConsumable_Base_parameters.hpp"


namespace SDK
{

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ExecuteUbergraph_BP_HealingConsumable_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::ExecuteUbergraph_BP_HealingConsumable_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "ExecuteUbergraph_BP_HealingConsumable_Base");

	Params::BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ChangeTargetForHealing
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_HealingComponent_C*           NewHealingComp                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::ChangeTargetForHealing(class UBP_HealingComponent_C* NewHealingComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "ChangeTargetForHealing");

	Params::BP_HealingConsumable_Base_C_ChangeTargetForHealing Parms{};

	Parms.NewHealingComp = NewHealingComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.TryChangeTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_HealingConsumable_Base_C::TryChangeTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "TryChangeTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.OnUngotFromHandsImplementable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  ParentCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::OnUngotFromHandsImplementable(class AHumanCharacter* ParentCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "OnUngotFromHandsImplementable");

	Params::BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable Parms{};

	Parms.ParentCharacter = ParentCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.OnGotIntoHandsImplementable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  ParentCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::OnGotIntoHandsImplementable(class AHumanCharacter* ParentCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "OnGotIntoHandsImplementable");

	Params::BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable Parms{};

	Parms.ParentCharacter = ParentCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ChangeTargetSERVER
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_HealingComponent_C*           NewHealingComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::ChangeTargetSERVER(class UBP_HealingComponent_C* NewHealingComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "ChangeTargetSERVER");

	Params::BP_HealingConsumable_Base_C_ChangeTargetSERVER Parms{};

	Parms.NewHealingComponent = NewHealingComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature
// (BlueprintAuthorityOnly, BlueprintEvent)
// Parameters:
// class AItem*                            Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  ItemOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature(class AItem* Item, class AHumanCharacter* ItemOwner, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature");

	Params::BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.ItemOwner = ItemOwner;
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.PlayUsageAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HealingConsumable_Base_C::PlayUsageAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "PlayUsageAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ExpectedHealing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimerDelay                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHealthComponent*                 HealthComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExpHeal                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::ExpectedHealing(float TimerDelay, class UHealthComponent* HealthComponent, float DeltaTime, float* ExpHeal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "ExpectedHealing");

	Params::BP_HealingConsumable_Base_C_ExpectedHealing Parms{};

	Parms.TimerDelay = TimerDelay;
	Parms.HealthComponent = HealthComponent;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (ExpHeal != nullptr)
		*ExpHeal = Parms.ExpHeal;
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ApplyHealToComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_HealingComponent_C*           HealingComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HealingConsumable_Base_C::ApplyHealToComponent(class UBP_HealingComponent_C* HealingComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "ApplyHealToComponent");

	Params::BP_HealingConsumable_Base_C_ApplyHealToComponent Parms{};

	Parms.HealingComponent = HealingComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.GetCustomGripAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    HandAnim                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HealingConsumable_Base_C::GetCustomGripAnimation(class UAnimSequence** HandAnim, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "GetCustomGripAnimation");

	Params::BP_HealingConsumable_Base_C_GetCustomGripAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HandAnim != nullptr)
		*HandAnim = Parms.HandAnim;

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.CanBeUsedImpl
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HealingConsumable_Base_C::CanBeUsedImpl() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "CanBeUsedImpl");

	Params::BP_HealingConsumable_Base_C_CanBeUsedImpl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.CanBeUsedOnTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HealingConsumable_Base_C::CanBeUsedOnTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "CanBeUsedOnTarget");

	Params::BP_HealingConsumable_Base_C_CanBeUsedOnTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.Can Heal Target Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UBP_HealingComponent_C*           HealingComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HealingConsumable_Base_C::Can_Heal_Target_Component(class UBP_HealingComponent_C* HealingComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "Can Heal Target Component");

	Params::BP_HealingConsumable_Base_C_Can_Heal_Target_Component Parms{};

	Parms.HealingComponent = HealingComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.CanBeUsedOnCertainTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HealingConsumable_Base_C::CanBeUsedOnCertainTarget(const class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingConsumable_Base_C", "CanBeUsedOnCertainTarget");

	Params::BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

