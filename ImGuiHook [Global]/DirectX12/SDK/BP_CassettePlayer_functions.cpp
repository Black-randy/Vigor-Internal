#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CassettePlayer

#include "Basic.hpp"

#include "BP_CassettePlayer_classes.hpp"
#include "BP_CassettePlayer_parameters.hpp"


namespace SDK
{

// Function BP_CassettePlayer.BP_CassettePlayer_C.ExecuteUbergraph_BP_CassettePlayer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::ExecuteUbergraph_BP_CassettePlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "ExecuteUbergraph_BP_CassettePlayer");

	Params::BP_CassettePlayer_C_ExecuteUbergraph_BP_CassettePlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_CassettePlayer_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.BattlepassReward_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudBattlePassRewardsClaim     Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_CassettePlayer_C::BattlepassReward_Event(const struct FCloudRequestResult& RequestResult, const struct FCloudBattlePassRewardsClaim& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "BattlepassReward_Event");

	Params::BP_CassettePlayer_C_BattlepassReward_Event Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.AnnounceSelfToGM
// (BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::AnnounceSelfToGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "AnnounceSelfToGM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.Shelter Level Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::Shelter_Level_Changed(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "Shelter Level Changed");

	Params::BP_CassettePlayer_C_Shelter_Level_Changed Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.StashLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStashComponent*                  Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::StashLoaded(class AStash* Sender, class UStashComponent* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "StashLoaded");

	Params::BP_CassettePlayer_C_StashLoaded Parms{};

	Parms.Sender = Sender;
	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.internal Load and Play Track
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CassetteTrack_C*              Track_Reference                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_CassetteTrack_C*              Previous_Track                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::Internal_Load_and_Play_Track(const class UBP_CassetteTrack_C*& Track_Reference, class UBP_CassetteTrack_C* Previous_Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "internal Load and Play Track");

	Params::BP_CassettePlayer_C_Internal_Load_and_Play_Track Parms{};

	Parms.Track_Reference = Track_Reference;
	Parms.Previous_Track = Previous_Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.Onboarding Finished
// (BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::Onboarding_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "Onboarding Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.DelayedCheckForPlayerController
// (BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::DelayedCheckForPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "DelayedCheckForPlayerController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CassettePlayer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.Show Next Track Notification
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMusicTrackRow                   TrackInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_CassettePlayer_C::Show_Next_Track_Notification(const struct FMusicTrackRow& TrackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "Show Next Track Notification");

	Params::BP_CassettePlayer_C_Show_Next_Track_Notification Parms{};

	Parms.TrackInfo = std::move(TrackInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.SongElapsedTime
// (BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::SongElapsedTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "SongElapsedTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start On Client__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UInteractionItemComponent*        Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Interacting_Actor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start On Client__DelegateSignature");

	Params::BP_CassettePlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature Parms{};

	Parms.Sender = Sender;
	Parms.Interacting_Actor = Interacting_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.Analytics Player Played Track
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CassetteTrackInfo             TrackInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CassettePlayer_C::Analytics_Player_Played_Track(const struct FS_CassetteTrackInfo& TrackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "Analytics Player Played Track");

	Params::BP_CassettePlayer_C_Analytics_Player_Played_Track Parms{};

	Parms.TrackInfo = std::move(TrackInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.Analytics Player Interacted
// (BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::Analytics_Player_Interacted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "Analytics Player Interacted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.OnLoaded_303A9E7341428F48F05BE78A0F49287F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::OnLoaded_303A9E7341428F48F05BE78A0F49287F(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "OnLoaded_303A9E7341428F48F05BE78A0F49287F");

	Params::BP_CassettePlayer_C_OnLoaded_303A9E7341428F48F05BE78A0F49287F Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.Initialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_CassetteTrack_C*>      TrackList_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_CassettePlayer_C::Initialize(TArray<class UBP_CassetteTrack_C*>& TrackList_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "Initialize");

	Params::BP_CassettePlayer_C_Initialize Parms{};

	Parms.TrackList_0 = std::move(TrackList_0);

	UObject::ProcessEvent(Func, &Parms);

	TrackList_0 = std::move(Parms.TrackList_0);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.SelectTrack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CassetteTrack_C*              Track                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UMaterialInstance> CassetteMaterial                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CassettePlayer_C::SelectTrack(class UBP_CassetteTrack_C* Track, TSoftObjectPtr<class UMaterialInstance> CassetteMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "SelectTrack");

	Params::BP_CassettePlayer_C_SelectTrack Parms{};

	Parms.Track = Track;
	Parms.CassetteMaterial = CassetteMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.ShowUI
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::ShowUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "ShowUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.HideUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::HideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "HideUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.PlayTrack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CassetteTrack_C*              Track                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::PlayTrack(class UBP_CassetteTrack_C* Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "PlayTrack");

	Params::BP_CassettePlayer_C_PlayTrack Parms{};

	Parms.Track = Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.ResetQueue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CassetteTrack_C*              IgnoredTrack                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::ResetQueue(class UBP_CassetteTrack_C* IgnoredTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "ResetQueue");

	Params::BP_CassettePlayer_C_ResetQueue Parms{};

	Parms.IgnoredTrack = IgnoredTrack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.StopTrack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::StopTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "StopTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.FadeOutOldTrack
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::FadeOutOldTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "FadeOutOldTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.FadeInLastPlayedTrack
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::FadeInLastPlayedTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "FadeInLastPlayedTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.GetCassetteTracksFromDataTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_CassetteTrack_C*>      MusicTrackList                                         (Parm, OutParm)

void ABP_CassettePlayer_C::GetCassetteTracksFromDataTable(TArray<class UBP_CassetteTrack_C*>* MusicTrackList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "GetCassetteTracksFromDataTable");

	Params::BP_CassettePlayer_C_GetCassetteTracksFromDataTable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MusicTrackList != nullptr)
		*MusicTrackList = std::move(Parms.MusicTrackList);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.HasPlayerUnlockedCassetteTrack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CheckedCassetteTrack                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUnlocked                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CassettePlayer_C::HasPlayerUnlockedCassetteTrack(class UClass* CheckedCassetteTrack, bool* IsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "HasPlayerUnlockedCassetteTrack");

	Params::BP_CassettePlayer_C_HasPlayerUnlockedCassetteTrack Parms{};

	Parms.CheckedCassetteTrack = CheckedCassetteTrack;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUnlocked != nullptr)
		*IsUnlocked = Parms.IsUnlocked;
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.UnlockMusicTracks
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::UnlockMusicTracks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "UnlockMusicTracks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.RefreshCassettePlayerVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::RefreshCassettePlayerVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "RefreshCassettePlayerVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.IsCassettePlayerAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CassettePlayer_C::IsCassettePlayerAvailable(bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "IsCassettePlayerAvailable");

	Params::BP_CassettePlayer_C_IsCassettePlayerAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.OnTrackFinished
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::OnTrackFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "OnTrackFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.DoesPlayerOwnAtLeastOneCassette
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Stash                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OwnsSome                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CassettePlayer_C::DoesPlayerOwnAtLeastOneCassette(const class AStash* Stash, bool* OwnsSome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "DoesPlayerOwnAtLeastOneCassette");

	Params::BP_CassettePlayer_C_DoesPlayerOwnAtLeastOneCassette Parms{};

	Parms.Stash = Stash;

	UObject::ProcessEvent(Func, &Parms);

	if (OwnsSome != nullptr)
		*OwnsSome = Parms.OwnsSome;
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.ToggleCassetteCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldUseTheCamera                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInstantTransition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           PreviousViewTarget                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::ToggleCassetteCamera(bool bShouldUseTheCamera, bool bInstantTransition, class AActor* PreviousViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "ToggleCassetteCamera");

	Params::BP_CassettePlayer_C_ToggleCassetteCamera Parms{};

	Parms.bShouldUseTheCamera = bShouldUseTheCamera;
	Parms.bInstantTransition = bInstantTransition;
	Parms.PreviousViewTarget = PreviousViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.RotateTheCassette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InputAxis                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CassettePlayer_C::RotateTheCassette(float InputAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "RotateTheCassette");

	Params::BP_CassettePlayer_C_RotateTheCassette Parms{};

	Parms.InputAxis = InputAxis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.AddCassetteStaticMeshToCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::AddCassetteStaticMeshToCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "AddCassetteStaticMeshToCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.RemoveCassetteStaticMeshFromCharacter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::RemoveCassetteStaticMeshFromCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "RemoveCassetteStaticMeshFromCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.ChangePreviewCassetteMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::ChangePreviewCassetteMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "ChangePreviewCassetteMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CassettePlayer.BP_CassettePlayer_C.CheckOwnedCassettes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CassettePlayer_C::CheckOwnedCassettes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CassettePlayer_C", "CheckOwnedCassettes");

	UObject::ProcessEvent(Func, nullptr);
}

}

