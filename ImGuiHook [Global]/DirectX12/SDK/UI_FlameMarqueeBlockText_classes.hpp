#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_FlameMarqueeBlockText

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_FlameMarqueeBlockText.UI_FlameMarqueeBlockText_C
// 0x00E0 (0x0398 - 0x02B8)
class UUI_FlameMarqueeBlockText_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFlameTextBlock*                        FlameText;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ElapsedShift;                                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShiftPerSecond;                                    // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBefore;                                       // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DelayAfter;                                        // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x02E0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            TextColorAndOpacity;                               // 0x02F8(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateFontInfo                         TextFont;                                          // 0x0320(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              TextShadowOffset;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           TextShadowColor;                                   // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EHorizontalAlignment                          TextAlignment;                                     // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DisplayAsUpperCase;                                // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_FlameMarqueeBlockText(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetText(const class FText& Text_0);
	void SetFont(const struct FSlateFontInfo& Font);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_FlameMarqueeBlockText_C">();
	}
	static class UUI_FlameMarqueeBlockText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_FlameMarqueeBlockText_C>();
	}
};
static_assert(alignof(UUI_FlameMarqueeBlockText_C) == 0x000008, "Wrong alignment on UUI_FlameMarqueeBlockText_C");
static_assert(sizeof(UUI_FlameMarqueeBlockText_C) == 0x000398, "Wrong size on UUI_FlameMarqueeBlockText_C");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_FlameMarqueeBlockText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, FlameText) == 0x0002C0, "Member 'UUI_FlameMarqueeBlockText_C::FlameText' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, ElapsedShift) == 0x0002C8, "Member 'UUI_FlameMarqueeBlockText_C::ElapsedShift' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, ShiftPerSecond) == 0x0002CC, "Member 'UUI_FlameMarqueeBlockText_C::ShiftPerSecond' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, ElapsedTime) == 0x0002D0, "Member 'UUI_FlameMarqueeBlockText_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, DelayBefore) == 0x0002D4, "Member 'UUI_FlameMarqueeBlockText_C::DelayBefore' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, DelayAfter) == 0x0002D8, "Member 'UUI_FlameMarqueeBlockText_C::DelayAfter' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, Text) == 0x0002E0, "Member 'UUI_FlameMarqueeBlockText_C::Text' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, TextColorAndOpacity) == 0x0002F8, "Member 'UUI_FlameMarqueeBlockText_C::TextColorAndOpacity' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, TextFont) == 0x000320, "Member 'UUI_FlameMarqueeBlockText_C::TextFont' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, TextShadowOffset) == 0x000378, "Member 'UUI_FlameMarqueeBlockText_C::TextShadowOffset' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, TextShadowColor) == 0x000380, "Member 'UUI_FlameMarqueeBlockText_C::TextShadowColor' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, TextAlignment) == 0x000390, "Member 'UUI_FlameMarqueeBlockText_C::TextAlignment' has a wrong offset!");
static_assert(offsetof(UUI_FlameMarqueeBlockText_C, DisplayAsUpperCase) == 0x000391, "Member 'UUI_FlameMarqueeBlockText_C::DisplayAsUpperCase' has a wrong offset!");

}

