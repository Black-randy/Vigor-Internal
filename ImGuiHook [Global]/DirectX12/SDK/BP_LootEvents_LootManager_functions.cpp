#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootEvents_LootManager

#include "Basic.hpp"

#include "BP_LootEvents_LootManager_classes.hpp"
#include "BP_LootEvents_LootManager_parameters.hpp"


namespace SDK
{

// Function BP_LootEvents_LootManager.BP_LootEvents_LootManager_C.ExecuteUbergraph_BP_LootEvents_LootManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootEvents_LootManager_C::ExecuteUbergraph_BP_LootEvents_LootManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootEvents_LootManager_C", "ExecuteUbergraph_BP_LootEvents_LootManager");

	Params::BP_LootEvents_LootManager_C_ExecuteUbergraph_BP_LootEvents_LootManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootEvents_LootManager.BP_LootEvents_LootManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LootEvents_LootManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootEvents_LootManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootEvents_LootManager.BP_LootEvents_LootManager_C.Filter out commodities
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_to_filter_out                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Filtered_out_items                                     (Parm, OutParm)

void ABP_LootEvents_LootManager_C::Filter_out_commodities(class UClass* Class_to_filter_out, TArray<class UClass*>* Filtered_out_items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootEvents_LootManager_C", "Filter out commodities");

	Params::BP_LootEvents_LootManager_C_Filter_out_commodities Parms{};

	Parms.Class_to_filter_out = Class_to_filter_out;

	UObject::ProcessEvent(Func, &Parms);

	if (Filtered_out_items != nullptr)
		*Filtered_out_items = std::move(Parms.Filtered_out_items);
}


// Function BP_LootEvents_LootManager.BP_LootEvents_LootManager_C.Select items to spawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_LootEvents_LootConfig                 Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootEvents_LootManager_C::Select_items_to_spawn(const E_LootEvents_LootConfig& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootEvents_LootManager_C", "Select items to spawn");

	Params::BP_LootEvents_LootManager_C_Select_items_to_spawn Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootEvents_LootManager.BP_LootEvents_LootManager_C.OnCommodityParamsModify
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class AActor>               CommodityType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                                   SpawnProbabilityIn                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CapacityMinIn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CapacityMaxIn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubObjectsLimitMinIn                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubObjectsLimitMaxIn                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpawnProbabilityOut                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CapacityMinOut                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CapacityMaxOut                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubObjectsLimitMinOut                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubObjectsLimitMaxOut                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootEvents_LootManager_C::OnCommodityParamsModify(TSubclassOf<class AActor> CommodityType, float SpawnProbabilityIn, int32 CapacityMinIn, int32 CapacityMaxIn, int32 SubObjectsLimitMinIn, int32 SubObjectsLimitMaxIn, float* SpawnProbabilityOut, int32* CapacityMinOut, int32* CapacityMaxOut, int32* SubObjectsLimitMinOut, int32* SubObjectsLimitMaxOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootEvents_LootManager_C", "OnCommodityParamsModify");

	Params::BP_LootEvents_LootManager_C_OnCommodityParamsModify Parms{};

	Parms.CommodityType = CommodityType;
	Parms.SpawnProbabilityIn = SpawnProbabilityIn;
	Parms.CapacityMinIn = CapacityMinIn;
	Parms.CapacityMaxIn = CapacityMaxIn;
	Parms.SubObjectsLimitMinIn = SubObjectsLimitMinIn;
	Parms.SubObjectsLimitMaxIn = SubObjectsLimitMaxIn;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnProbabilityOut != nullptr)
		*SpawnProbabilityOut = Parms.SpawnProbabilityOut;

	if (CapacityMinOut != nullptr)
		*CapacityMinOut = Parms.CapacityMinOut;

	if (CapacityMaxOut != nullptr)
		*CapacityMaxOut = Parms.CapacityMaxOut;

	if (SubObjectsLimitMinOut != nullptr)
		*SubObjectsLimitMinOut = Parms.SubObjectsLimitMinOut;

	if (SubObjectsLimitMaxOut != nullptr)
		*SubObjectsLimitMaxOut = Parms.SubObjectsLimitMaxOut;
}

}

