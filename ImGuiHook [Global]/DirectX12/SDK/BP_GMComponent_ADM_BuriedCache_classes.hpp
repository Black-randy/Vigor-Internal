#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_BuriedCache

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GMComponent_ADM_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMComponent_ADM_BuriedCache.BP_GMComponent_ADM_BuriedCache_C
// 0x0090 (0x01C8 - 0x0138)
class UBP_GMComponent_ADM_BuriedCache_C final : public UBP_GMComponent_ADM_Base_C
{
public:
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GMComponent_ADM_BuriedCache_C;   // 0x0138(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class ABP_ADM_BuriedCache_Location_C*> Cache_Locations;                                   // 0x0140(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_ADM_BuriedCache_C*>          Caches;                                            // 0x0150(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_ADM_BuriedCache_PolaroidManager_C*  Polaroid_Manager;                                  // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ADM_BuriedCache_LootManager_C*      Cache_Loot_Manager;                                // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Polaroid_Item_Types;                               // 0x0170(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Cache_Count;                                       // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Keys_per_Cache;                                    // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ADM_BuriedCache_Location_C*> Debug_Cache_Locations;                             // 0x0188(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_ADM_BuriedCache_C*>          Debug_Caches;                                      // 0x0198(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_ADM_BuriedCache_Location_C*> Dummy_Cache_Locations;                             // 0x01A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          CacheChallengeAvailable;                           // 0x01B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 BuriedCacheKeyClass;                               // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GMComponent_ADM_BuriedCache(int32 EntryPoint);
	void Find_caches(class ABP_PlayerController_Script_C* Player_Controller);
	void Cache_Interaction(class ABP_Character_C* Interacting_Character, class ABP_ADM_BuriedCache_C* Interacted_Cache);
	void Match_Has_Started();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Destroy_Cache_Loot_Manager(bool Result);
	void Destroy_Polaroid_Manager(bool Result);
	void Initialize_Component();
	void Mark_Buried_Cache_Key_Locations(class UBP_PCComponent_ADM_BuriedCache_C* Player);
	void Mark_Dummy_Cache_Locations(class UBP_PCComponent_ADM_BuriedCache_C* Player);
	void Mark_Chosen_Cache_Locations(class UBP_PCComponent_ADM_BuriedCache_C* Player);
	void Get_Buried_Cache_Key(class UBP_PCComponent_ADM_BuriedCache_C* Player);
	void Spawn_All_Caches();
	void Spawn_Caches(bool* Success);
	void GetAllKeyContainers(TArray<class ABP_Lootable_Base_C*>* Buried_Cache_Key_Containers);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMComponent_ADM_BuriedCache_C">();
	}
	static class UBP_GMComponent_ADM_BuriedCache_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GMComponent_ADM_BuriedCache_C>();
	}
};
static_assert(alignof(UBP_GMComponent_ADM_BuriedCache_C) == 0x000008, "Wrong alignment on UBP_GMComponent_ADM_BuriedCache_C");
static_assert(sizeof(UBP_GMComponent_ADM_BuriedCache_C) == 0x0001C8, "Wrong size on UBP_GMComponent_ADM_BuriedCache_C");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, UberGraphFrame_BP_GMComponent_ADM_BuriedCache_C) == 0x000138, "Member 'UBP_GMComponent_ADM_BuriedCache_C::UberGraphFrame_BP_GMComponent_ADM_BuriedCache_C' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Cache_Locations) == 0x000140, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Cache_Locations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Caches) == 0x000150, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Caches' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Polaroid_Manager) == 0x000160, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Polaroid_Manager' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Cache_Loot_Manager) == 0x000168, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Cache_Loot_Manager' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Polaroid_Item_Types) == 0x000170, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Polaroid_Item_Types' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Cache_Count) == 0x000180, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Cache_Count' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Keys_per_Cache) == 0x000184, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Keys_per_Cache' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Debug_Cache_Locations) == 0x000188, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Debug_Cache_Locations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Debug_Caches) == 0x000198, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Debug_Caches' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, Dummy_Cache_Locations) == 0x0001A8, "Member 'UBP_GMComponent_ADM_BuriedCache_C::Dummy_Cache_Locations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, CacheChallengeAvailable) == 0x0001B8, "Member 'UBP_GMComponent_ADM_BuriedCache_C::CacheChallengeAvailable' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_BuriedCache_C, BuriedCacheKeyClass) == 0x0001C0, "Member 'UBP_GMComponent_ADM_BuriedCache_C::BuriedCacheKeyClass' has a wrong offset!");

}

