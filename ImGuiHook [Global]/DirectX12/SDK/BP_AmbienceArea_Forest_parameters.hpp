#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AmbienceArea_Forest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.ExecuteUbergraph_BP_AmbienceArea_Forest
// 0x0628 (0x0628 - 0x0000)
struct BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_4;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_5;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_6;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_7;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Temp_object_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_8;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_9;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_9;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_11; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_11;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_11;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_11;      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_5;           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_5;          // 0x00E8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_10; // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_10;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_10;           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_10;      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_10;             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttenuationShape                             Temp_byte_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_11;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Temp_object_Variable_1;                            // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Event_Sound;                                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlaceOnGround;                        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSoundLocation_Success;                 // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSoundLocation_Location;                // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_10;         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_9;  // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_9;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_9;            // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_9;       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_4;           // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_4;          // 0x01F8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_8;  // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_8;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_8;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_8;       // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_7;  // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_7;           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_7;            // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_7;       // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_3;           // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_3;          // 0x02C8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_6;  // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_6;           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_6;            // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_6;       // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0377(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_12;             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_5;  // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_5;           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_5;            // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_5;       // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x03A8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0456(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0457(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0478(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0508(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0518(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x0525(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0526(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0527(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0528(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0538(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_545[0x3];                                      // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0548(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x05D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_9;    // 0x05F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_10;   // 0x05F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x05F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x05F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAttenuationShape                             Temp_byte_Variable_1;                              // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_11;         // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0600(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_13;             // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_11;   // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_12;         // 0x0613(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0618(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue_1;         // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest");
static_assert(sizeof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest) == 0x000628, "Wrong size on BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, EntryPoint) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_1) == 0x000021, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000028, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000030, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_2) == 0x000031, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000038, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000040, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_3) == 0x000041, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_4) == 0x000048, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000050, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_4) == 0x000051, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_5) == 0x000058, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000060, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_5) == 0x000061, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_6) == 0x000068, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000070, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_6) == 0x000071, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_7) == 0x000078, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000080, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_7) == 0x000081, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, Temp_object_Variable) == 0x0000A0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_8) == 0x0000A8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x0000B0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_8) == 0x0000B1, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_9) == 0x0000B8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_9) == 0x0000C0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_9) == 0x0000C1, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_11) == 0x0000C8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_11) == 0x0000D0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_11) == 0x0000D8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_11) == 0x0000E0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_bFromSweep_5) == 0x0000E4, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_bFromSweep_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_SweepResult_5) == 0x0000E8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_SweepResult_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_10) == 0x000178, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_10) == 0x000180, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_10) == 0x000188, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_10) == 0x000190, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_10) == 0x000198, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, Temp_byte_Variable) == 0x0001A0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_11) == 0x0001A8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, Temp_object_Variable_1) == 0x0001B0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_Event_Sound) == 0x0001B8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_Event_Sound' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_Event_PlaceOnGround) == 0x0001C0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_Event_PlaceOnGround' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetSoundLocation_Success) == 0x0001C1, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetSoundLocation_Success' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetSoundLocation_Location) == 0x0001C4, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetSoundLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_10) == 0x0001D0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_10) == 0x0001D1, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_9) == 0x0001D8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_9) == 0x0001E0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_9) == 0x0001E8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_9) == 0x0001F0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_bFromSweep_4) == 0x0001F4, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_bFromSweep_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_SweepResult_4) == 0x0001F8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_SweepResult_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_8) == 0x000288, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_8) == 0x000290, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_8) == 0x000298, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_8) == 0x0002A0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002A4, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002A5, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue) == 0x0002A6, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_1) == 0x0002A7, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_7) == 0x0002A8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_7) == 0x0002B0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_7) == 0x0002B8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_7) == 0x0002C0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_bFromSweep_3) == 0x0002C4, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_SweepResult_3) == 0x0002C8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_6) == 0x000358, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_6) == 0x000360, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_6) == 0x000368, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_6) == 0x000370, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000374, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000375, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_2) == 0x000376, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_3) == 0x000377, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_12) == 0x000378, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000380, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_4) == 0x000381, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_5) == 0x000388, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_5) == 0x000390, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_5) == 0x000398, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_5) == 0x0003A0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x0003A4, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_SweepResult_2) == 0x0003A8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000438, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000440, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000448, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000450, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000454, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x000455, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_5) == 0x000456, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_6) == 0x000457, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000458, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000460, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000468, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000470, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000474, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000478, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000508, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000510, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000518, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000520, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x000524, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x000525, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_7) == 0x000526, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_8) == 0x000527, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000528, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000530, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000538, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000540, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_bFromSweep) == 0x000544, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_SweepResult) == 0x000548, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0005D8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherActor) == 0x0005E0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherComp) == 0x0005E8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0005F0, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_9) == 0x0005F4, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_10) == 0x0005F5, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_9) == 0x0005F6, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_10) == 0x0005F7, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, Temp_byte_Variable_1) == 0x0005F8, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_11) == 0x0005F9, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_Not_PreBool_ReturnValue_11) == 0x0005FA, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_Select_Default) == 0x000600, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_GetPlayerPawn_ReturnValue_13) == 0x000608, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_GetPlayerPawn_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsOverlappingActor_ReturnValue) == 0x000610, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_EqualEqual_ObjectObject_ReturnValue_11) == 0x000611, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_EqualEqual_ObjectObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_BooleanAND_ReturnValue_11) == 0x000612, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsDedicatedServer_ReturnValue_12) == 0x000613, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsDedicatedServer_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, K2Node_Select_Default_1) == 0x000618, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest, CallFunc_IsOverlappingActor_ReturnValue_1) == 0x000620, "Member 'BP_AmbienceArea_Forest_C_ExecuteUbergraph_BP_AmbienceArea_Forest::CallFunc_IsOverlappingActor_ReturnValue_1' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterBoxCollisionVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterCapsuleCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_BndEvt__OuterSphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_BndEvt__BoxCollisionVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_BndEvt__CapsuleCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.OnPlayProceduralSound
// 0x0010 (0x0010 - 0x0000)
struct BP_AmbienceArea_Forest_C_OnPlayProceduralSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaceOnGround;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_OnPlayProceduralSound) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_OnPlayProceduralSound");
static_assert(sizeof(BP_AmbienceArea_Forest_C_OnPlayProceduralSound) == 0x000010, "Wrong size on BP_AmbienceArea_Forest_C_OnPlayProceduralSound");
static_assert(offsetof(BP_AmbienceArea_Forest_C_OnPlayProceduralSound, Sound) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_OnPlayProceduralSound::Sound' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_OnPlayProceduralSound, PlaceOnGround) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_OnPlayProceduralSound::PlaceOnGround' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_BndEvt__SphereCollisionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.GetSoundLocation
// 0x0078 (0x0078 - 0x0000)
struct BP_AmbienceArea_Forest_C_GetSoundLocation final
{
public:
	bool                                          Procedural;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlaceOnGround;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TestedLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRandomLocation_Location;               // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MovePointCloserToGround_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointInBuilding_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInsideBuilding_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_GetSoundLocation) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_GetSoundLocation");
static_assert(sizeof(BP_AmbienceArea_Forest_C_GetSoundLocation) == 0x000078, "Wrong size on BP_AmbienceArea_Forest_C_GetSoundLocation");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, Procedural) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::Procedural' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, PlaceOnGround) == 0x000001, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::PlaceOnGround' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, Success) == 0x000002, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::Success' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, Location) == 0x000004, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, TestedLocation) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::TestedLocation' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_GetRandomLocation_Location) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_GetRandomLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_MovePointCloserToGround_ReturnValue) == 0x000028, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_MovePointCloserToGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000035, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, Temp_int_Variable) == 0x000038, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_IsPointInBuilding_ReturnValue) == 0x000045, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_IsPointInBuilding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_BooleanOR_ReturnValue) == 0x000046, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_BooleanAND_ReturnValue) == 0x000047, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_GetPlayerPawn_ReturnValue) == 0x000048, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000068, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_IsInsideBuilding_ReturnValue) == 0x000071, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_IsInsideBuilding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_BooleanAND_ReturnValue_1) == 0x000072, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetSoundLocation, CallFunc_BooleanAND_ReturnValue_2) == 0x000073, "Member 'BP_AmbienceArea_Forest_C_GetSoundLocation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.GetRandomLocation
// 0x0118 (0x0118 - 0x0000)
struct BP_AmbienceArea_Forest_C_GetRandomLocation final
{
public:
	bool                                          Procedural;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomPointInCapsule_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CreateVectorFromYawPitch_ReturnValue;     // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_GetRandomLocation) == 0x000004, "Wrong alignment on BP_AmbienceArea_Forest_C_GetRandomLocation");
static_assert(sizeof(BP_AmbienceArea_Forest_C_GetRandomLocation) == 0x000118, "Wrong size on BP_AmbienceArea_Forest_C_GetRandomLocation");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, Procedural) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::Procedural' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, Location) == 0x000004, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_RandomPointInCapsule_ReturnValue) == 0x00002C, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_RandomPointInCapsule_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000044, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000050, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000060, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_CreateVectorFromYawPitch_ReturnValue) == 0x000064, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_CreateVectorFromYawPitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_BreakVector_X_1) == 0x00007C, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_BreakVector_Z_1) == 0x000084, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000094, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000098, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000A4, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000B0, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x0000BC, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0000CC, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000D8, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0000E4, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_RandomUnitVector_ReturnValue) == 0x0000F0, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0000FC, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000100, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_GetRandomLocation, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00010C, "Member 'BP_AmbienceArea_Forest_C_GetRandomLocation::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.StopLoopingSounds
// 0x0034 (0x0034 - 0x0000)
struct BP_AmbienceArea_Forest_C_StopLoopingSounds final
{
public:
	int32                                         Temp_int_LastIndex_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_LastIndex_Variable_1;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_StopLoopingSounds) == 0x000004, "Wrong alignment on BP_AmbienceArea_Forest_C_StopLoopingSounds");
static_assert(sizeof(BP_AmbienceArea_Forest_C_StopLoopingSounds) == 0x000034, "Wrong size on BP_AmbienceArea_Forest_C_StopLoopingSounds");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, Temp_int_LastIndex_Variable) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::Temp_int_LastIndex_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, Temp_int_LastIndex_Variable_1) == 0x000004, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::Temp_int_LastIndex_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, Temp_int_Variable) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, Temp_int_Variable_1) == 0x00000C, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StopLoopingSounds, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AmbienceArea_Forest_C_StopLoopingSounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.StartLoopingSounds
// 0x0048 (0x0048 - 0x0000)
struct BP_AmbienceArea_Forest_C_StartLoopingSounds final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_LastIndex_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSoundLocation_Success;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSoundLocation_Location;                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_StartLoopingSounds) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_StartLoopingSounds");
static_assert(sizeof(BP_AmbienceArea_Forest_C_StartLoopingSounds) == 0x000048, "Wrong size on BP_AmbienceArea_Forest_C_StartLoopingSounds");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, Temp_int_Variable) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, Temp_int_LastIndex_Variable) == 0x000008, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::Temp_int_LastIndex_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, Temp_int_Variable_1) == 0x00000C, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_GetSoundLocation_Success) == 0x000020, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_GetSoundLocation_Success' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_GetSoundLocation_Location) == 0x000024, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_GetSoundLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000030, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_Greater_IntInt_ReturnValue) == 0x000045, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_IsValid_ReturnValue_1) == 0x000046, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_StartLoopingSounds, CallFunc_BooleanAND_ReturnValue) == 0x000047, "Member 'BP_AmbienceArea_Forest_C_StartLoopingSounds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AmbienceArea_Forest.BP_AmbienceArea_Forest_C.MovePointCloserToGround
// 0x01E0 (0x01E0 - 0x0000)
struct BP_AmbienceArea_Forest_C_MovePointCloserToGround final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceOnGround;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00A0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F[0x1];                                      // 0x012F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmbienceArea_Forest_C_MovePointCloserToGround) == 0x000008, "Wrong alignment on BP_AmbienceArea_Forest_C_MovePointCloserToGround");
static_assert(sizeof(BP_AmbienceArea_Forest_C_MovePointCloserToGround) == 0x0001E0, "Wrong size on BP_AmbienceArea_Forest_C_MovePointCloserToGround");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, Point) == 0x000000, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::Point' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, ForceOnGround) == 0x00000C, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::ForceOnGround' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, ReturnValue) == 0x000010, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_X_2) == 0x00004C, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Y_2) == 0x000050, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Z_2) == 0x000054, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, Temp_object_Variable) == 0x000058, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000088, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000094, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000A0, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00012C, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_bBlockingHit) == 0x00012D, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012E, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_Time) == 0x000130, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_Distance) == 0x000134, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_Location) == 0x000138, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_ImpactPoint) == 0x000144, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_ImpactNormal) == 0x00015C, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000180, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_HitBoneName) == 0x000184, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_HitItem) == 0x00018C, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_ElementIndex) == 0x000190, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_FaceIndex) == 0x000194, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakHitResult_TraceEnd) == 0x0001A4, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0001B0, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_X_3) == 0x0001BC, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Y_3) == 0x0001C0, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_BreakVector_Z_3) == 0x0001C4, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001C8, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_FMax_ReturnValue) == 0x0001CC, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmbienceArea_Forest_C_MovePointCloserToGround, CallFunc_MakeVector_ReturnValue_1) == 0x0001D0, "Member 'BP_AmbienceArea_Forest_C_MovePointCloserToGround::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

}

