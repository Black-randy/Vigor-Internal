#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingConsumable_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ExecuteUbergraph_BP_HealingConsumable_Base
// 0x0148 (0x0148 - 0x0000)
struct BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  K2Node_ComponentBoundEvent_Item;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_ComponentBoundEvent_ItemOwner;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_TargetActor;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaminaComponent*                      CallFunc_GetStaminaComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealingComponent_C*                 K2Node_CustomEvent_NewHealingComponent;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_Event_ParentCharacter_1;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_Event_ParentCharacter;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetTargetUnderCursor_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_HealingComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Heal_Target_Component_ReturnValue;    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_1;          // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHealingOthersActive_IsActive;           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHealingOthersActive_IsActive_1;         // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsageInProgress_ReturnValue;            // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue_1;               // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealingComponent_C*                 K2Node_CustomEvent_NewHealingComp;                 // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealingComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealingComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base");
static_assert(sizeof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base) == 0x000148, "Wrong size on BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, EntryPoint) == 0x000000, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_ComponentBoundEvent_Item) == 0x000018, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_ComponentBoundEvent_ItemOwner) == 0x000020, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_ComponentBoundEvent_ItemOwner' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_ComponentBoundEvent_TargetActor) == 0x000028, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_ComponentBoundEvent_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_DynamicCast_AsHuman_Character) == 0x000040, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetStaminaComponent_ReturnValue) == 0x000050, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetStaminaComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_3) == 0x000058, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_4) == 0x000059, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_CustomEvent_NewHealingComponent) == 0x000060, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_CustomEvent_NewHealingComponent' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_Event_ParentCharacter_1) == 0x000068, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_Event_ParentCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_Event_ParentCharacter) == 0x000070, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_Event_ParentCharacter' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetTargetUnderCursor_ReturnValue) == 0x000078, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetTargetUnderCursor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_5) == 0x000088, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_6) == 0x000089, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Can_Heal_Target_Component_ReturnValue) == 0x00008A, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Can_Heal_Target_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00008B, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetGameInstance_ReturnValue) == 0x000090, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetGameInstance_ReturnValue_1) == 0x000098, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_DynamicCast_AsBPI_Game_Instance) == 0x0000A0, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_DynamicCast_AsBPI_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_DynamicCast_AsBPI_Game_Instance_1) == 0x0000B8, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_DynamicCast_AsBPI_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsHealingOthersActive_IsActive) == 0x0000C9, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsHealingOthersActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsHealingOthersActive_IsActive_1) == 0x0000CA, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsHealingOthersActive_IsActive_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsUsageInProgress_ReturnValue) == 0x0000CB, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsUsageInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Not_PreBool_ReturnValue) == 0x0000CC, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetOwner_ReturnValue_1) == 0x0000D0, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetOwner_ReturnValue_2) == 0x0000D8, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetLocalRole_ReturnValue) == 0x0000E0, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetLocalRole_ReturnValue_1) == 0x0000E1, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetLocalRole_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E2, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E3, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_CustomEvent_NewHealingComp) == 0x0000E8, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_CustomEvent_NewHealingComp' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_7) == 0x0000F0, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000F8, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_8) == 0x000100, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x000110, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Not_PreBool_ReturnValue_1) == 0x000111, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Array_Length_ReturnValue_1) == 0x000114, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_IsValid_ReturnValue_9) == 0x000119, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000120, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000128, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, K2Node_CreateDelegate_OutputDelegate) == 0x00012C, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000140, "Member 'BP_HealingConsumable_Base_C_ExecuteUbergraph_BP_HealingConsumable_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ChangeTargetForHealing
// 0x0008 (0x0008 - 0x0000)
struct BP_HealingConsumable_Base_C_ChangeTargetForHealing final
{
public:
	class UBP_HealingComponent_C*                 NewHealingComp;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_ChangeTargetForHealing) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_ChangeTargetForHealing");
static_assert(sizeof(BP_HealingConsumable_Base_C_ChangeTargetForHealing) == 0x000008, "Wrong size on BP_HealingConsumable_Base_C_ChangeTargetForHealing");
static_assert(offsetof(BP_HealingConsumable_Base_C_ChangeTargetForHealing, NewHealingComp) == 0x000000, "Member 'BP_HealingConsumable_Base_C_ChangeTargetForHealing::NewHealingComp' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.OnUngotFromHandsImplementable
// 0x0008 (0x0008 - 0x0000)
struct BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable final
{
public:
	class AHumanCharacter*                        ParentCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable");
static_assert(sizeof(BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable) == 0x000008, "Wrong size on BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable");
static_assert(offsetof(BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable, ParentCharacter) == 0x000000, "Member 'BP_HealingConsumable_Base_C_OnUngotFromHandsImplementable::ParentCharacter' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.OnGotIntoHandsImplementable
// 0x0008 (0x0008 - 0x0000)
struct BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable final
{
public:
	class AHumanCharacter*                        ParentCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable");
static_assert(sizeof(BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable) == 0x000008, "Wrong size on BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable");
static_assert(offsetof(BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable, ParentCharacter) == 0x000000, "Member 'BP_HealingConsumable_Base_C_OnGotIntoHandsImplementable::ParentCharacter' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ChangeTargetSERVER
// 0x0008 (0x0008 - 0x0000)
struct BP_HealingConsumable_Base_C_ChangeTargetSERVER final
{
public:
	class UBP_HealingComponent_C*                 NewHealingComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_ChangeTargetSERVER) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_ChangeTargetSERVER");
static_assert(sizeof(BP_HealingConsumable_Base_C_ChangeTargetSERVER) == 0x000008, "Wrong size on BP_HealingConsumable_Base_C_ChangeTargetSERVER");
static_assert(offsetof(BP_HealingConsumable_Base_C_ChangeTargetSERVER, NewHealingComponent) == 0x000000, "Member 'BP_HealingConsumable_Base_C_ChangeTargetSERVER::NewHealingComponent' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature final
{
public:
	class AItem*                                  Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        ItemOwner;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature");
static_assert(sizeof(BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature) == 0x000018, "Wrong size on BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature");
static_assert(offsetof(BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature, Item) == 0x000000, "Member 'BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature, ItemOwner) == 0x000008, "Member 'BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature::ItemOwner' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature, TargetActor) == 0x000010, "Member 'BP_HealingConsumable_Base_C_BndEvt__Usable_K2Node_ComponentBoundEvent_0_Used__DelegateSignature::TargetActor' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ExpectedHealing
// 0x0018 (0x0018 - 0x0000)
struct BP_HealingConsumable_Base_C_ExpectedHealing final
{
public:
	float                                         TimerDelay;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       HealthComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExpHeal;                                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_ExpectedHealing) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_ExpectedHealing");
static_assert(sizeof(BP_HealingConsumable_Base_C_ExpectedHealing) == 0x000018, "Wrong size on BP_HealingConsumable_Base_C_ExpectedHealing");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExpectedHealing, TimerDelay) == 0x000000, "Member 'BP_HealingConsumable_Base_C_ExpectedHealing::TimerDelay' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExpectedHealing, HealthComponent) == 0x000008, "Member 'BP_HealingConsumable_Base_C_ExpectedHealing::HealthComponent' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExpectedHealing, DeltaTime) == 0x000010, "Member 'BP_HealingConsumable_Base_C_ExpectedHealing::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_ExpectedHealing, ExpHeal) == 0x000014, "Member 'BP_HealingConsumable_Base_C_ExpectedHealing::ExpHeal' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.ApplyHealToComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_HealingConsumable_Base_C_ApplyHealToComponent final
{
public:
	class UBP_HealingComponent_C*                 HealingComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Base_C_ApplyHealToComponent) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_ApplyHealToComponent");
static_assert(sizeof(BP_HealingConsumable_Base_C_ApplyHealToComponent) == 0x000008, "Wrong size on BP_HealingConsumable_Base_C_ApplyHealToComponent");
static_assert(offsetof(BP_HealingConsumable_Base_C_ApplyHealToComponent, HealingComponent) == 0x000000, "Member 'BP_HealingConsumable_Base_C_ApplyHealToComponent::HealingComponent' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.GetCustomGripAnimation
// 0x0040 (0x0040 - 0x0000)
struct BP_HealingConsumable_Base_C_GetCustomGripAnimation final
{
public:
	class UAnimSequence*                          HandAnim;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingConsumable_Base_C_GetCustomGripAnimation) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_GetCustomGripAnimation");
static_assert(sizeof(BP_HealingConsumable_Base_C_GetCustomGripAnimation) == 0x000040, "Wrong size on BP_HealingConsumable_Base_C_GetCustomGripAnimation");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, HandAnim) == 0x000000, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::HandAnim' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, Valid) == 0x000008, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::Valid' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000009, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, K2Node_DynamicCast_AsAnim_Sequence) == 0x000018, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000028, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, K2Node_DynamicCast_AsAnim_Sequence_1) == 0x000030, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::K2Node_DynamicCast_AsAnim_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_GetCustomGripAnimation, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_HealingConsumable_Base_C_GetCustomGripAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.CanBeUsedImpl
// 0x0004 (0x0004 - 0x0000)
struct BP_HealingConsumable_Base_C_CanBeUsedImpl final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Heal_Target_Component_ReturnValue;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBeUsedImpl_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingConsumable_Base_C_CanBeUsedImpl) == 0x000001, "Wrong alignment on BP_HealingConsumable_Base_C_CanBeUsedImpl");
static_assert(sizeof(BP_HealingConsumable_Base_C_CanBeUsedImpl) == 0x000004, "Wrong size on BP_HealingConsumable_Base_C_CanBeUsedImpl");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedImpl, ReturnValue) == 0x000000, "Member 'BP_HealingConsumable_Base_C_CanBeUsedImpl::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedImpl, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HealingConsumable_Base_C_CanBeUsedImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedImpl, CallFunc_Can_Heal_Target_Component_ReturnValue) == 0x000002, "Member 'BP_HealingConsumable_Base_C_CanBeUsedImpl::CallFunc_Can_Heal_Target_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedImpl, CallFunc_CanBeUsedImpl_ReturnValue) == 0x000003, "Member 'BP_HealingConsumable_Base_C_CanBeUsedImpl::CallFunc_CanBeUsedImpl_ReturnValue' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.CanBeUsedOnTarget
// 0x0001 (0x0001 - 0x0000)
struct BP_HealingConsumable_Base_C_CanBeUsedOnTarget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingConsumable_Base_C_CanBeUsedOnTarget) == 0x000001, "Wrong alignment on BP_HealingConsumable_Base_C_CanBeUsedOnTarget");
static_assert(sizeof(BP_HealingConsumable_Base_C_CanBeUsedOnTarget) == 0x000001, "Wrong size on BP_HealingConsumable_Base_C_CanBeUsedOnTarget");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedOnTarget, ReturnValue) == 0x000000, "Member 'BP_HealingConsumable_Base_C_CanBeUsedOnTarget::ReturnValue' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.Can Heal Target Component
// 0x0068 (0x0068 - 0x0000)
struct BP_HealingConsumable_Base_C_Can_Heal_Target_Component final
{
public:
	class UBP_HealingComponent_C*                 HealingComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaminaComponent*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStaminaEffectPlaying_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       CallFunc_GetHealthComponent_HealthComponent;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTrueHealth_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_Can_Heal_Target_Component");
static_assert(sizeof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component) == 0x000068, "Wrong size on BP_HealingConsumable_Base_C_Can_Heal_Target_Component");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, HealingComponent) == 0x000000, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::HealingComponent' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, ReturnValue) == 0x000008, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_IsStaminaEffectPlaying_ReturnValue) == 0x000041, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_IsStaminaEffectPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_IsValid_ReturnValue_2) == 0x000042, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_GetHealthComponent_HealthComponent) == 0x000048, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_GetHealthComponent_HealthComponent' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_IsValid_ReturnValue_3) == 0x000050, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_GetHealth_ReturnValue) == 0x000054, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_GetMaxHealth_ReturnValue) == 0x000058, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_GetTrueHealth_ReturnValue) == 0x00005C, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_GetTrueHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_Less_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000061, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_Can_Heal_Target_Component, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'BP_HealingConsumable_Base_C_Can_Heal_Target_Component::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HealingConsumable_Base.BP_HealingConsumable_Base_C.CanBeUsedOnCertainTarget
// 0x0020 (0x0020 - 0x0000)
struct BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget final
{
public:
	const class AActor*                           Target;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealingComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Heal_Target_Component_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget) == 0x000008, "Wrong alignment on BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget");
static_assert(sizeof(BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget) == 0x000020, "Wrong size on BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget, Target) == 0x000000, "Member 'BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget, ReturnValue) == 0x000008, "Member 'BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget, CallFunc_Can_Heal_Target_Component_ReturnValue) == 0x000018, "Member 'BP_HealingConsumable_Base_C_CanBeUsedOnCertainTarget::CallFunc_Can_Heal_Target_Component_ReturnValue' has a wrong offset!");

}

