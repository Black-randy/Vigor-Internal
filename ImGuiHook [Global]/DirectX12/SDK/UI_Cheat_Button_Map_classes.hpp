#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Cheat_Button_Map

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Cheat_Button_Map.UI_Cheat_Button_Map_C
// 0x0208 (0x04C0 - 0x02B8)
class UUI_Cheat_Button_Map_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Border;                                            // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           Button;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MapImage;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 Selected_game_mode_string;                         // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 BaseString;                                        // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MapNameString;                                     // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FSlateBrush                            PressedStyle;                                      // 0x0310(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HoverStyle;                                        // 0x0398(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            NormalStyle;                                       // 0x0420(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_Cheat_Tab_Map_C*                    Cheat_Tab_Map;                                     // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 GameModeString;                                    // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Cheat_Button_Map(int32 EntryPoint);
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void StartMatchmakingOnlevel(const class FString& MapNameString_0);
	void OpenLevel(class FName LevelName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Cheat_Button_Map_C">();
	}
	static class UUI_Cheat_Button_Map_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Cheat_Button_Map_C>();
	}
};
static_assert(alignof(UUI_Cheat_Button_Map_C) == 0x000008, "Wrong alignment on UUI_Cheat_Button_Map_C");
static_assert(sizeof(UUI_Cheat_Button_Map_C) == 0x0004C0, "Wrong size on UUI_Cheat_Button_Map_C");
static_assert(offsetof(UUI_Cheat_Button_Map_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_Cheat_Button_Map_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, Border) == 0x0002C0, "Member 'UUI_Cheat_Button_Map_C::Border' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, Button) == 0x0002C8, "Member 'UUI_Cheat_Button_Map_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, MapImage) == 0x0002D0, "Member 'UUI_Cheat_Button_Map_C::MapImage' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, Text) == 0x0002D8, "Member 'UUI_Cheat_Button_Map_C::Text' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, Selected_game_mode_string) == 0x0002E0, "Member 'UUI_Cheat_Button_Map_C::Selected_game_mode_string' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, BaseString) == 0x0002F0, "Member 'UUI_Cheat_Button_Map_C::BaseString' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, MapNameString) == 0x000300, "Member 'UUI_Cheat_Button_Map_C::MapNameString' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, PressedStyle) == 0x000310, "Member 'UUI_Cheat_Button_Map_C::PressedStyle' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, HoverStyle) == 0x000398, "Member 'UUI_Cheat_Button_Map_C::HoverStyle' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, NormalStyle) == 0x000420, "Member 'UUI_Cheat_Button_Map_C::NormalStyle' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, Cheat_Tab_Map) == 0x0004A8, "Member 'UUI_Cheat_Button_Map_C::Cheat_Tab_Map' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Map_C, GameModeString) == 0x0004B0, "Member 'UUI_Cheat_Button_Map_C::GameModeString' has a wrong offset!");

}

