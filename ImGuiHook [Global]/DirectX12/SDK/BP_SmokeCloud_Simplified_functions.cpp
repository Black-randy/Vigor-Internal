#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmokeCloud_Simplified

#include "Basic.hpp"

#include "BP_SmokeCloud_Simplified_classes.hpp"
#include "BP_SmokeCloud_Simplified_parameters.hpp"


namespace SDK
{

// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.ExecuteUbergraph_BP_SmokeCloud_Simplified
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::ExecuteUbergraph_BP_SmokeCloud_Simplified(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "ExecuteUbergraph_BP_SmokeCloud_Simplified");

	Params::BP_SmokeCloud_Simplified_C_ExecuteUbergraph_BP_SmokeCloud_Simplified Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SmokeCloud_Simplified_C::BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_SmokeCloud_Simplified_C_BndEvt__BoxVolume_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendInEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::BlendInEvent(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendInEvent");

	Params::BP_SmokeCloud_Simplified_C_BlendInEvent Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendOutEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::BlendOutEvent(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendOutEvent");

	Params::BP_SmokeCloud_Simplified_C_BlendOutEvent Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendInEventProccess
// (BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::BlendInEventProccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendInEventProccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendOutEventProccess
// (BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::BlendOutEventProccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendOutEventProccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.Effect End
// (BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::Effect_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "Effect End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.PPDecrease
// (BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::PPDecrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "PPDecrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.InitialPPIncrease
// (BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::InitialPPIncrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "InitialPPIncrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "ReceiveTick");

	Params::BP_SmokeCloud_Simplified_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.Initialize smoke cloud
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_SmokeCloudConfig              Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::Initialize_smoke_cloud(const struct FF_SmokeCloudConfig& Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "Initialize smoke cloud");

	Params::BP_SmokeCloud_Simplified_C_Initialize_smoke_cloud Parms{};

	Parms.Config = std::move(Config);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.SetBlendWeight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::SetBlendWeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "SetBlendWeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.SetSmokeWeightIncrease
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::SetSmokeWeightIncrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "SetSmokeWeightIncrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendRadiusStartFunction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::BlendRadiusStartFunction(float Input, const struct FVector& Vector, float* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendRadiusStartFunction");

	Params::BP_SmokeCloud_Simplified_C_BlendRadiusStartFunction Parms{};

	Parms.Input = Input;
	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendRadiusFunctions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InBuilding                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmokeCloud_Simplified_C::BlendRadiusFunctions(bool InBuilding, const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendRadiusFunctions");

	Params::BP_SmokeCloud_Simplified_C_BlendRadiusFunctions Parms{};

	Parms.InBuilding = InBuilding;
	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.ToggleInBuildingPostProcess
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::ToggleInBuildingPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "ToggleInBuildingPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmokeCloud_Simplified_C::BlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmokeCloud_Simplified.BP_SmokeCloud_Simplified_C.BlendOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SmokeCloud_Simplified_C::BlendOut(bool NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmokeCloud_Simplified_C", "BlendOut");

	Params::BP_SmokeCloud_Simplified_C_BlendOut Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}

}

