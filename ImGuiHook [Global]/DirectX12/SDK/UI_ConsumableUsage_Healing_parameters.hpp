#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ConsumableUsage_Healing

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_ConsumableUsage_Healing.UI_ConsumableUsage_Healing_C.ExecuteUbergraph_UI_ConsumableUsage_Healing
// 0x0078 (0x0078 - 0x0000)
struct UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HealingConsumable_Base_C*           K2Node_DynamicCast_AsBP_Healing_Consumable_Base;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing) == 0x000008, "Wrong alignment on UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing");
static_assert(sizeof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing) == 0x000078, "Wrong size on UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, EntryPoint) == 0x000000, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, K2Node_DynamicCast_AsBP_Character) == 0x000010, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, K2Node_Event_IsDesignTime) == 0x000019, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, K2Node_Event_MyGeometry) == 0x00001C, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, K2Node_Event_InDeltaTime) == 0x000054, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, K2Node_DynamicCast_AsBP_Healing_Consumable_Base) == 0x000058, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::K2Node_DynamicCast_AsBP_Healing_Consumable_Base' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000061, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000068, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'UI_ConsumableUsage_Healing_C_ExecuteUbergraph_UI_ConsumableUsage_Healing::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UI_ConsumableUsage_Healing.UI_ConsumableUsage_Healing_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_ConsumableUsage_Healing_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableUsage_Healing_C_Tick) == 0x000004, "Wrong alignment on UI_ConsumableUsage_Healing_C_Tick");
static_assert(sizeof(UI_ConsumableUsage_Healing_C_Tick) == 0x00003C, "Wrong size on UI_ConsumableUsage_Healing_C_Tick");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_Tick, MyGeometry) == 0x000000, "Member 'UI_ConsumableUsage_Healing_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_ConsumableUsage_Healing_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_ConsumableUsage_Healing.UI_ConsumableUsage_Healing_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ConsumableUsage_Healing_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ConsumableUsage_Healing_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ConsumableUsage_Healing_C_PreConstruct");
static_assert(sizeof(UI_ConsumableUsage_Healing_C_PreConstruct) == 0x000001, "Wrong size on UI_ConsumableUsage_Healing_C_PreConstruct");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ConsumableUsage_Healing_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_ConsumableUsage_Healing.UI_ConsumableUsage_Healing_C.SetHoldProgress
// 0x0040 (0x0040 - 0x0000)
struct UI_ConsumableUsage_Healing_C_SetHoldProgress final
{
public:
	bool                                          CanBeUsed_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(UI_ConsumableUsage_Healing_C_SetHoldProgress) == 0x000008, "Wrong alignment on UI_ConsumableUsage_Healing_C_SetHoldProgress");
static_assert(sizeof(UI_ConsumableUsage_Healing_C_SetHoldProgress) == 0x000040, "Wrong size on UI_ConsumableUsage_Healing_C_SetHoldProgress");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_SetHoldProgress, CanBeUsed_0) == 0x000000, "Member 'UI_ConsumableUsage_Healing_C_SetHoldProgress::CanBeUsed_0' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_SetHoldProgress, Progress) == 0x000004, "Member 'UI_ConsumableUsage_Healing_C_SetHoldProgress::Progress' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_SetHoldProgress, CallFunc_SelectColor_ReturnValue) == 0x000008, "Member 'UI_ConsumableUsage_Healing_C_SetHoldProgress::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_SetHoldProgress, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'UI_ConsumableUsage_Healing_C_SetHoldProgress::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_ConsumableUsage_Healing.UI_ConsumableUsage_Healing_C.HealSelf
// 0x0030 (0x0030 - 0x0000)
struct UI_ConsumableUsage_Healing_C_HealSelf final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
};
static_assert(alignof(UI_ConsumableUsage_Healing_C_HealSelf) == 0x000008, "Wrong alignment on UI_ConsumableUsage_Healing_C_HealSelf");
static_assert(sizeof(UI_ConsumableUsage_Healing_C_HealSelf) == 0x000030, "Wrong size on UI_ConsumableUsage_Healing_C_HealSelf");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealSelf, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'UI_ConsumableUsage_Healing_C_HealSelf::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealSelf, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'UI_ConsumableUsage_Healing_C_HealSelf::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function UI_ConsumableUsage_Healing.UI_ConsumableUsage_Healing_C.HealOther
// 0x0358 (0x0358 - 0x0000)
struct UI_ConsumableUsage_Healing_C_HealOther final
{
public:
	class ABP_Character_C*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTextBlockStyle                        NicknameStyle;                                     // 0x0008(0x0270)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRichPlayerNicknameWidget_ReturnValue;  // 0x0290(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x02A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02C0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0300(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0318(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0328(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0340(0x0018)()
};
static_assert(alignof(UI_ConsumableUsage_Healing_C_HealOther) == 0x000008, "Wrong alignment on UI_ConsumableUsage_Healing_C_HealOther");
static_assert(sizeof(UI_ConsumableUsage_Healing_C_HealOther) == 0x000358, "Wrong size on UI_ConsumableUsage_Healing_C_HealOther");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, Character) == 0x000000, "Member 'UI_ConsumableUsage_Healing_C_HealOther::Character' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, NicknameStyle) == 0x000008, "Member 'UI_ConsumableUsage_Healing_C_HealOther::NicknameStyle' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, CallFunc_IsValid_ReturnValue) == 0x000278, "Member 'UI_ConsumableUsage_Healing_C_HealOther::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, K2Node_DynamicCast_AsHuman_Player_State) == 0x000280, "Member 'UI_ConsumableUsage_Healing_C_HealOther::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'UI_ConsumableUsage_Healing_C_HealOther::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, CallFunc_GetRichPlayerNicknameWidget_ReturnValue) == 0x000290, "Member 'UI_ConsumableUsage_Healing_C_HealOther::CallFunc_GetRichPlayerNicknameWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, CallFunc_MakeLiteralText_ReturnValue) == 0x0002A8, "Member 'UI_ConsumableUsage_Healing_C_HealOther::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, K2Node_MakeStruct_FormatArgumentData) == 0x0002C0, "Member 'UI_ConsumableUsage_Healing_C_HealOther::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, CallFunc_TextToUpper_ReturnValue) == 0x000300, "Member 'UI_ConsumableUsage_Healing_C_HealOther::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, K2Node_MakeArray_Array) == 0x000318, "Member 'UI_ConsumableUsage_Healing_C_HealOther::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, CallFunc_Format_ReturnValue) == 0x000328, "Member 'UI_ConsumableUsage_Healing_C_HealOther::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_HealOther, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000340, "Member 'UI_ConsumableUsage_Healing_C_HealOther::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");

// Function UI_ConsumableUsage_Healing.UI_ConsumableUsage_Healing_C.GetHoldIcon
// 0x0008 (0x0008 - 0x0000)
struct UI_ConsumableUsage_Healing_C_GetHoldIcon final
{
public:
	class UImage*                                 GamepadIcon_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableUsage_Healing_C_GetHoldIcon) == 0x000008, "Wrong alignment on UI_ConsumableUsage_Healing_C_GetHoldIcon");
static_assert(sizeof(UI_ConsumableUsage_Healing_C_GetHoldIcon) == 0x000008, "Wrong size on UI_ConsumableUsage_Healing_C_GetHoldIcon");
static_assert(offsetof(UI_ConsumableUsage_Healing_C_GetHoldIcon, GamepadIcon_0) == 0x000000, "Member 'UI_ConsumableUsage_Healing_C_GetHoldIcon::GamepadIcon_0' has a wrong offset!");

}

