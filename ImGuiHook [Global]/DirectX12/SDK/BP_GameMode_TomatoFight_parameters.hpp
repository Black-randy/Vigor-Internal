#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_TomatoFight

#include "Basic.hpp"

#include "EFightVariant_structs.hpp"
#include "EGunFightRole_structs.hpp"
#include "Struct_GunFightStatistics_structs.hpp"
#include "EGunFightWinReason_structs.hpp"
#include "Struct_TVTDeathmatch_ScoreValue_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_TVTDeathmatch_KillFeed_structs.hpp"
#include "Struct_GunfightRoundStats_structs.hpp"
#include "FlameUI_structs.hpp"


namespace SDK::Params
{

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.ExecuteUbergraph_BP_GameMode_TomatoFight
// 0x0BF8 (0x0BF8 - 0x0000)
struct BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_2; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_3; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_4; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_5; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_6; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_7; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Userid)>  K2Node_CreateDelegate_OutputDelegate_3;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0138(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Input;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_8;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_8; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_WinnerTeam;                     // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Pause;                          // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_PlayerController_TomatoFight_C*     K2Node_CustomEvent_Controller;                     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_ScoreEvent;                     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAttackersWon;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_1;      // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_1;      // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult_3;                // 0x0218(0x0058)(ConstParm)
	class AHumanPlayerController*                 K2Node_CustomEvent_Player_1;                       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult_2;                // 0x0298(0x0058)(ConstParm)
	class FString                                 K2Node_CustomEvent_MatchId;                        // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult_1;                // 0x0308(0x0058)(ConstParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_9;               // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_9; // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue_1;        // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetMatchId_ReturnValue;                   // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_UnregisterMatch_ReturnValue;              // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     K2Node_CustomEvent_Player_Controller_1;            // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_UserId;                         // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCloudUserIdSet_ReturnValue;             // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RegisterUserToMatch_ReturnValue;          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetMatchId_ReturnValue_1;                 // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Match_ID;                       // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_10;              // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_10; // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult;                  // 0x04B0(0x0058)(ConstParm)
	class AHumanPlayerController*                 K2Node_CustomEvent_Player;                         // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       K2Node_CustomEvent_Reward;                         // 0x0510(0x0010)(ConstParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_11;              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           K2Node_DynamicCast_AsBP_Player_Controller_Teams;   // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_11; // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x3];                                      // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayerTierOfReward_Tier;               // 0x0544(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success; // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Phase_Success;      // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_for_Winner_Winner_Found;            // 0x0553(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_1; // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_2; // 0x0555(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_556[0x2];                                      // 0x0556(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_12;              // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Request_Transition_to_Phase_Success_1;    // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_12; // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x3];                                      // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0578(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Team_With_More_Health_Team_With_More_Health; // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0588(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x05A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA[0x2];                                      // 0x05AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x05AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x05C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x05CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CE[0x2];                                      // 0x05CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunfightRoundStats             K2Node_MakeStruct_Struct_GunfightRoundStats;       // 0x05D4(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_3; // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_4; // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F2[0x2];                                      // 0x05F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player, struct FUserMatchReward& Reward)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x05F4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0604(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0618(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Is_Match_Registration_Done_Match_Registration_Done; // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_TomatoFight_C*            K2Node_CustomEvent_Victim_Character;               // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_CustomEvent_Killer_Character;               // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   K2Node_CustomEvent_DamageType;                     // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Instigating_Item;               // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsHeadshot;                     // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64A[0x6];                                      // 0x064A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1; // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0662(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_663[0x5];                                      // 0x0663(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0678(0x0050)(HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           K2Node_DynamicCast_AsBP_Player_Controller_Teams_1; // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Round_Winner_by_Player_Elimination_Attackers_Won; // 0x06DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Round_Winner_by_Player_Elimination_Defenders_Won; // 0x06DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGunFightWinReason                            K2Node_CustomEvent_Win_Reason_1;                   // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunFightWinReason                            K2Node_CustomEvent_Win_Reason;                     // 0x06DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE[0x2];                                      // 0x06DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_13;              // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_13; // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_5; // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_6; // 0x06F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F3[0x5];                                      // 0x06F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     K2Node_CustomEvent_Player_Controller;              // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1; // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             K2Node_MakeStruct_Struct_GunFightStatistics;       // 0x0728(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A[0x2];                                      // 0x077A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1; // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Are_Teams_Full_Teams_Full;                // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_789[0x3];                                      // 0x0789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_2; // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_3; // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_14;              // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_14; // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x3];                                      // 0x07B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x07C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x07D0(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_2;      // 0x07E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x07E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x3];                                      // 0x07F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_2;      // 0x07F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_15;              // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_15; // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_TeamManager_GunFight_C*         K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight; // 0x0820(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0830(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item_1;                         // 0x0840(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84C[0x4];                                      // 0x084C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0850(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85A[0x6];                                      // 0x085A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_CustomEvent_Character;                      // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_2; // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x087A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B[0x5];                                      // 0x087B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid_1;           // 0x0880(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker_1;                // 0x0889(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_7; // 0x088A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88B[0x5];                                      // 0x088B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_16;              // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_3;      // 0x0898(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_16; // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_3;      // 0x08B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_TeamManager_GunFight_C*         K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight_1; // 0x08B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Survivor_Count_Attacker_Survivors;    // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Survivor_Count_Defender_Survivors;    // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_1;                       // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_CustomEvent_Attacking_Character_1;          // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_3; // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic_1;         // 0x08F8(0x0050)(HasGetValueTypeHash)
	class ABP_PlayerState_TomatoFight_C*          K2Node_CustomEvent_Player_State;                   // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952[0x6];                                      // 0x0952(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_2; // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_962[0x6];                                      // 0x0962(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0978(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EFlamePlatform                                CallFunc_GetPlayerPlatform_ReturnValue;            // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_989[0x7];                                      // 0x0989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0990(0x0018)()
	class FText                                   CallFunc_GetRichPlayerNickname_ReturnValue;        // 0x09A8(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C1[0x7];                                      // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x09C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0A08(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0A18(0x0018)()
	class AController*                            K2Node_Event_ExitingController;                    // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     CallFunc_Array_Get_Item_2;                         // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A49[0x7];                                      // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_4; // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0A59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5A[0x6];                                      // 0x0A5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_3; // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Round_Winner_by_Player_Elimination_Attackers_Won_1; // 0x0A69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Round_Winner_by_Player_Elimination_Defenders_Won_1; // 0x0A6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6B[0x1];                                      // 0x0A6B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0A74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_CustomEvent_Attacking_Character;            // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FCloudRequestResult& RequestResult, const class FString& MatchID)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0A80(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FCloudRequestResult& RequestResult)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0A90(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_4; // 0x0AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB1[0x3];                                      // 0x0AB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Match_ID)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0AB4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Get_Is_Match_Registration_Done_Match_Registration_Done_1; // 0x0AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0AC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC6[0x2];                                      // 0x0AC6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0AD4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0AE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE5[0x3];                                      // 0x0AE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0AEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AED[0x3];                                      // 0x0AED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0AF0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0B00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_7;        // 0x0B08(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0B14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B15[0x3];                                      // 0x0B15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_17;              // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_17; // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B41[0x3];                                      // 0x0B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_18;              // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_18; // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B59[0x3];                                      // 0x0B59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B61[0x3];                                      // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_8;        // 0x0B68(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_19;              // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_19; // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B81[0x7];                                      // 0x0B81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_20;              // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_20; // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_37;                    // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_3;                         // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_5; // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_38;                    // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB1[0x3];                                      // 0x0BB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB9[0x3];                                      // 0x0BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers; // 0x0BC0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD4[0x4];                                      // 0x0BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Teams_C*           CallFunc_Array_Get_Item_4;                         // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE1[0x7];                                      // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_6; // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_39;                    // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight");
static_assert(sizeof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight) == 0x000BF8, "Wrong size on BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, EntryPoint) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Multiply_IntInt_ReturnValue) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Percent_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_1) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_2) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_3) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_2) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_3) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_4) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_4) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_5) == 0x0000B0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_5) == 0x0000B8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate) == 0x0000C4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_6) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_6) == 0x000100, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_6) == 0x000108, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_7) == 0x000110, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_7) == 0x000118, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_7) == 0x000120, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_3) == 0x000124, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetPlayerControllers_ReturnValue) == 0x000138, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Array_Index_Variable_1) == 0x000148, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Length_ReturnValue) == 0x00014C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight) == 0x000158, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_8) == 0x000160, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Input) == 0x000164, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Input' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_InvalidCloudRequest_ReturnValue) == 0x000168, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_InvalidCloudRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Less_IntInt_ReturnValue) == 0x00016C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00016D, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_8) == 0x000170, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_8) == 0x000178, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_9) == 0x000180, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_WinnerTeam) == 0x000184, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_WinnerTeam' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Conv_IntToString_ReturnValue) == 0x000188, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000198, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x0001B0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Defending_Team_Defending_Team) == 0x0001B8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_1) == 0x0001C1, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Pause) == 0x0001C2, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Pause' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0001C4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001C8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Controller) == 0x0001D8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_ScoreEvent) == 0x0001E0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_ScoreEvent' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001E8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_bAttackersWon) == 0x0001F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_bAttackersWon' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Attacking_Team_Attacking_Team_1) == 0x0001F8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Attacking_Team_Attacking_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_2) == 0x000200, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Defending_Team_Defending_Team_1) == 0x000208, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Defending_Team_Defending_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_3) == 0x000210, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_RequestResult_3) == 0x000218, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_RequestResult_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Player_1) == 0x000270, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000278, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000280, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Loop_Counter_Variable_2) == 0x000290, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_RequestResult_2) == 0x000298, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_RequestResult_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_MatchId) == 0x0002F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_MatchId' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Less_IntInt_ReturnValue_1) == 0x000300, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000301, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_2) == 0x000304, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_RequestResult_1) == 0x000308, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_RequestResult_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_9) == 0x000360, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_9) == 0x000368, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_10) == 0x000370, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000371, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_3) == 0x000374, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000378, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000388, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000398, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0003A8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0003B0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_InvalidCloudRequest_ReturnValue_1) == 0x0003C0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_InvalidCloudRequest_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetMatchId_ReturnValue) == 0x0003C8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetMatchId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_UnregisterMatch_ReturnValue) == 0x0003D8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_UnregisterMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0003DC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0003E0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0003F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000400, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Player_Controller_1) == 0x000410, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_UserId) == 0x000418, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_UserId' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsCloudUserIdSet_ReturnValue) == 0x000428, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsCloudUserIdSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_RegisterUserToMatch_ReturnValue) == 0x00042C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_RegisterUserToMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000430, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetMatchId_ReturnValue_1) == 0x000438, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetMatchId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000448, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000458, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_RemoveItem_ReturnValue) == 0x000468, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000470, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Match_ID) == 0x000480, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Match_ID' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Length_ReturnValue_1) == 0x000490, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Less_IntInt_ReturnValue_2) == 0x000494, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_10) == 0x000498, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_10) == 0x0004A0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_10' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_11) == 0x0004A8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_RequestResult) == 0x0004B0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_RequestResult' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Player) == 0x000508, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Reward) == 0x000510, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Reward' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_11) == 0x000520, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Teams) == 0x000528, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_12) == 0x000530, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_11) == 0x000538, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_11' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_13) == 0x000540, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetPlayerTierOfReward_Tier) == 0x000544, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetPlayerTierOfReward_Tier' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00054C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000550, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success) == 0x000551, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Phase_Success) == 0x000552, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Phase_Success' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Check_for_Winner_Winner_Found) == 0x000553, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Check_for_Winner_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success_1) == 0x000554, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success_2) == 0x000555, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_12) == 0x000558, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Phase_Success_1) == 0x000560, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Phase_Success_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_12) == 0x000568, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_12' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_14) == 0x000570, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000574, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000578, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Team_With_More_Health_Team_With_More_Health) == 0x000580, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Team_With_More_Health_Team_With_More_Health' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_5) == 0x000588, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Is_Attacker_Is_Attacker) == 0x000598, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0005A0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_4) == 0x0005A8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_bool_Variable) == 0x0005A9, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_6) == 0x0005AC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x0005C0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Percent_IntInt_ReturnValue_1) == 0x0005C8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0005CC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_bool_Variable_1) == 0x0005CD, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Variable) == 0x0005D0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_MakeStruct_Struct_GunfightRoundStats) == 0x0005D4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_MakeStruct_Struct_GunfightRoundStats' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success_3) == 0x0005F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success_4) == 0x0005F1, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_7) == 0x0005F4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_8) == 0x000604, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000614, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000618, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Is_Match_Registration_Done_Match_Registration_Done) == 0x000620, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Is_Match_Registration_Done_Match_Registration_Done' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Victim_Character) == 0x000628, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Victim_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Killer_Character) == 0x000630, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Killer_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_DamageType) == 0x000638, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Instigating_Item) == 0x000640, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Instigating_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_IsHeadshot) == 0x000648, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_IsHeadshot' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_5) == 0x000649, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetController_ReturnValue) == 0x000650, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1) == 0x000658, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_15) == 0x000660, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_6) == 0x000661, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_7) == 0x000662, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000668, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_16) == 0x000670, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetStatisticGunFight_Statistic) == 0x000678, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetController_ReturnValue_1) == 0x0006C8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Teams_1) == 0x0006D0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_17) == 0x0006D8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_8) == 0x0006D9, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Round_Winner_by_Player_Elimination_Attackers_Won) == 0x0006DA, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Round_Winner_by_Player_Elimination_Attackers_Won' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Round_Winner_by_Player_Elimination_Defenders_Won) == 0x0006DB, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Round_Winner_by_Player_Elimination_Defenders_Won' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Win_Reason_1) == 0x0006DC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Win_Reason_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Win_Reason) == 0x0006DD, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Win_Reason' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_13) == 0x0006E0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_13) == 0x0006E8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_13' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_18) == 0x0006F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success_5) == 0x0006F1, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success_6) == 0x0006F2, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Player_Controller) == 0x0006F8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_9) == 0x000700, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1) == 0x000708, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_19) == 0x000710, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetPlayerName_ReturnValue) == 0x000718, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_MakeStruct_Struct_GunFightStatistics) == 0x000728, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_MakeStruct_Struct_GunFightStatistics' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_10) == 0x000778, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_MakeLiteralByte_ReturnValue) == 0x000779, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1) == 0x00077C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000780, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_FCeil_ReturnValue) == 0x000784, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Are_Teams_Full_Teams_Full) == 0x000788, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Are_Teams_Full_Teams_Full' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_2) == 0x00078C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_3) == 0x000790, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_14) == 0x000798, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_FMax_ReturnValue) == 0x0007A0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_14) == 0x0007A8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_14' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_20) == 0x0007B0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_FFloor_ReturnValue) == 0x0007B4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0007B8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Variable_1) == 0x0007BC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x0007C0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_Event_DeltaSeconds) == 0x0007C8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Array_Index_Variable_2) == 0x0007CC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_9) == 0x0007D0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Attacking_Team_Attacking_Team_2) == 0x0007E0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Attacking_Team_Attacking_Team_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x0007E8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_11) == 0x0007F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_4) == 0x0007F4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Defending_Team_Defending_Team_2) == 0x0007F8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Defending_Team_Defending_Team_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_15) == 0x000800, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_12) == 0x000808, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_15) == 0x000810, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_15' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_21) == 0x000818, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight) == 0x000820, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_22) == 0x000828, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_5) == 0x00082C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Teams_Teams) == 0x000830, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Get_Item_1) == 0x000840, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Length_ReturnValue_2) == 0x000848, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000850, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_23) == 0x000858, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Less_IntInt_ReturnValue_3) == 0x000859, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Character) == 0x000860, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_13) == 0x000868, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_2) == 0x000870, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_24) == 0x000878, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_14) == 0x000879, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_15) == 0x00087A, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_GSC_Team_Raid_1) == 0x000880, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_GSC_Team_Raid_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_25) == 0x000888, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Is_Attacker_Is_Attacker_1) == 0x000889, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Is_Attacker_Is_Attacker_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Request_Transition_to_Next_Phase_Success_7) == 0x00088A, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Request_Transition_to_Next_Phase_Success_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_16) == 0x000890, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Attacking_Team_Attacking_Team_3) == 0x000898, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Attacking_Team_Attacking_Team_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_16) == 0x0008A0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_16' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_26) == 0x0008A8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Defending_Team_Defending_Team_3) == 0x0008B0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Defending_Team_Defending_Team_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight_1) == 0x0008B8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_27) == 0x0008C0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Loop_Counter_Variable_3) == 0x0008C4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Survivor_Count_Attacker_Survivors) == 0x0008C8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Survivor_Count_Attacker_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Survivor_Count_Defender_Survivors) == 0x0008CC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Survivor_Count_Defender_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_6) == 0x0008D0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Damage_1) == 0x0008D4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Attacking_Character_1) == 0x0008D8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Attacking_Character_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_16) == 0x0008E0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_3) == 0x0008E8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_28) == 0x0008F0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetStatisticGunFight_Statistic_1) == 0x0008F8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetStatisticGunFight_Statistic_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Player_State) == 0x000948, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000950, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_17) == 0x000951, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_2) == 0x000958, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_29) == 0x000960, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000961, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State) == 0x000968, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_30) == 0x000970, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetPlayerName_ReturnValue_1) == 0x000978, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetPlayerPlatform_ReturnValue) == 0x000988, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetPlayerPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Conv_StringToText_ReturnValue) == 0x000990, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetRichPlayerNickname_ReturnValue) == 0x0009A8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetRichPlayerNickname_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0009C0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_MakeStruct_FormatArgumentData) == 0x0009C8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_MakeArray_Array) == 0x000A08, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Format_ReturnValue) == 0x000A18, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_Event_ExitingController) == 0x000A30, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Array_Index_Variable_3) == 0x000A38, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Get_Item_2) == 0x000A40, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_18) == 0x000A48, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_4) == 0x000A50, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_31) == 0x000A58, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_IsValid_ReturnValue_19) == 0x000A59, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_3) == 0x000A60, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_32) == 0x000A68, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Round_Winner_by_Player_Elimination_Attackers_Won_1) == 0x000A69, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Round_Winner_by_Player_Elimination_Attackers_Won_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Round_Winner_by_Player_Elimination_Defenders_Won_1) == 0x000A6A, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Round_Winner_by_Player_Elimination_Defenders_Won_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_7) == 0x000A6C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_8) == 0x000A70, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Damage) == 0x000A74, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CustomEvent_Attacking_Character) == 0x000A78, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CustomEvent_Attacking_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_10) == 0x000A80, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_11) == 0x000A90, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_Event_NewPlayer) == 0x000AA0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_4) == 0x000AA8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_33) == 0x000AB0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_12) == 0x000AB4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Is_Match_Registration_Done_Match_Registration_Done_1) == 0x000AC4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Is_Match_Registration_Done_Match_Registration_Done_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Not_PreBool_ReturnValue) == 0x000AC5, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Add_ReturnValue) == 0x000AC8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Array_Index_Variable_4) == 0x000ACC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Add_ReturnValue_1) == 0x000AD0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_13) == 0x000AD4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Not_PreBool_ReturnValue_1) == 0x000AE4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Variable_2) == 0x000AE8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000AEC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_CreateDelegate_OutputDelegate_14) == 0x000AF0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_Select_Default) == 0x000B00, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_7) == 0x000B08, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000B10, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Less_FloatFloat_ReturnValue) == 0x000B14, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_Select_Default_1) == 0x000B18, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000B1C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_FMax_ReturnValue_1) == 0x000B20, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_FFloor_ReturnValue_1) == 0x000B24, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_FFloor_ReturnValue_2) == 0x000B28, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, Temp_int_Loop_Counter_Variable_4) == 0x000B2C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_17) == 0x000B30, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_17) == 0x000B38, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_17' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_34) == 0x000B40, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Add_IntInt_ReturnValue_9) == 0x000B44, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_18) == 0x000B48, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_18) == 0x000B50, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_18' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_35) == 0x000B58, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Add_ReturnValue_2) == 0x000B5C, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Contains_ReturnValue) == 0x000B60, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000B64, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_8) == 0x000B68, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_19) == 0x000B70, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_19) == 0x000B78, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_19' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_36) == 0x000B80, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_GetGameState_ReturnValue_20) == 0x000B88, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_GetGameState_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_20) == 0x000B90, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_20' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_37) == 0x000B98, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_37' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Get_Item_3) == 0x000BA0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_5) == 0x000BA8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_38) == 0x000BB0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_38' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Length_ReturnValue_3) == 0x000BB4, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Less_IntInt_ReturnValue_4) == 0x000BB8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Add_ReturnValue_3) == 0x000BBC, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Get_Member_Controllers_Player_Controllers) == 0x000BC0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Get_Member_Controllers_Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Length_ReturnValue_4) == 0x000BD0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Array_Get_Item_4) == 0x000BD8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, CallFunc_Less_IntInt_ReturnValue_5) == 0x000BE0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_6) == 0x000BE8, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight, K2Node_DynamicCast_bSuccess_39) == 0x000BF0, "Member 'BP_GameMode_TomatoFight_C_ExecuteUbergraph_BP_GameMode_TomatoFight::K2Node_DynamicCast_bSuccess_39' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_TomatoFight_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_K2_PostLogin) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_K2_PostLogin");
static_assert(sizeof(BP_GameMode_TomatoFight_C_K2_PostLogin) == 0x000008, "Wrong size on BP_GameMode_TomatoFight_C_K2_PostLogin");
static_assert(offsetof(BP_GameMode_TomatoFight_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Report Enemy Hit
// 0x0010 (0x0010 - 0x0000)
struct BP_GameMode_TomatoFight_C_Report_Enemy_Hit final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        Attacking_Character;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Report_Enemy_Hit) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Report_Enemy_Hit");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Report_Enemy_Hit) == 0x000010, "Wrong size on BP_GameMode_TomatoFight_C_Report_Enemy_Hit");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Report_Enemy_Hit, Damage) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Report_Enemy_Hit::Damage' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Report_Enemy_Hit, Attacking_Character) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Report_Enemy_Hit::Attacking_Character' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_TomatoFight_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_K2_OnLogout) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_K2_OnLogout");
static_assert(sizeof(BP_GameMode_TomatoFight_C_K2_OnLogout) == 0x000008, "Wrong size on BP_GameMode_TomatoFight_C_K2_OnLogout");
static_assert(offsetof(BP_GameMode_TomatoFight_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Kick Player For Teamkilling
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_TomatoFight_C_Kick_Player_For_Teamkilling final
{
public:
	class ABP_PlayerState_TomatoFight_C*          Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Kick_Player_For_Teamkilling) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Kick_Player_For_Teamkilling");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Kick_Player_For_Teamkilling) == 0x000008, "Wrong size on BP_GameMode_TomatoFight_C_Kick_Player_For_Teamkilling");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Kick_Player_For_Teamkilling, Player_State) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Kick_Player_For_Teamkilling::Player_State' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Report Team Damage
// 0x0010 (0x0010 - 0x0000)
struct BP_GameMode_TomatoFight_C_Report_Team_Damage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        Attacking_Character;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Report_Team_Damage) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Report_Team_Damage");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Report_Team_Damage) == 0x000010, "Wrong size on BP_GameMode_TomatoFight_C_Report_Team_Damage");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Report_Team_Damage, Damage) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Report_Team_Damage::Damage' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Report_Team_Damage, Attacking_Character) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Report_Team_Damage::Attacking_Character' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Objective Used
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_TomatoFight_C_Objective_Used final
{
public:
	class AHumanCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Objective_Used) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Objective_Used");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Objective_Used) == 0x000008, "Wrong size on BP_GameMode_TomatoFight_C_Objective_Used");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Objective_Used, Character) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Objective_Used::Character' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameMode_TomatoFight_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameMode_TomatoFight_C_ReceiveTick");
static_assert(sizeof(BP_GameMode_TomatoFight_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameMode_TomatoFight_C_ReceiveTick");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Player Connected To Match
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_TomatoFight_C_Player_Connected_To_Match final
{
public:
	class ABP_PlayerController_TomatoFight_C*     Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Player_Connected_To_Match) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Player_Connected_To_Match");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Player_Connected_To_Match) == 0x000008, "Wrong size on BP_GameMode_TomatoFight_C_Player_Connected_To_Match");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Connected_To_Match, Player_Controller) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Player_Connected_To_Match::Player_Controller' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Attackers Won
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_TomatoFight_C_Attackers_Won final
{
public:
	EGunFightWinReason                            Win_Reason;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Attackers_Won) == 0x000001, "Wrong alignment on BP_GameMode_TomatoFight_C_Attackers_Won");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Attackers_Won) == 0x000001, "Wrong size on BP_GameMode_TomatoFight_C_Attackers_Won");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Attackers_Won, Win_Reason) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Attackers_Won::Win_Reason' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Defenders Won
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_TomatoFight_C_Defenders_Won final
{
public:
	EGunFightWinReason                            Win_Reason;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Defenders_Won) == 0x000001, "Wrong alignment on BP_GameMode_TomatoFight_C_Defenders_Won");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Defenders_Won) == 0x000001, "Wrong size on BP_GameMode_TomatoFight_C_Defenders_Won");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Defenders_Won, Win_Reason) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Defenders_Won::Win_Reason' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Player Died
// 0x0028 (0x0028 - 0x0000)
struct BP_GameMode_TomatoFight_C_Player_Died final
{
public:
	class ABP_Character_TomatoFight_C*            Victim_Character;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Killer_Character;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   DamageType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Instigating_Item;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHeadshot;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Player_Died) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Player_Died");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Player_Died) == 0x000028, "Wrong size on BP_GameMode_TomatoFight_C_Player_Died");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died, Victim_Character) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Player_Died::Victim_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died, Killer_Character) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Player_Died::Killer_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died, DamageType) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Player_Died::DamageType' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died, Instigating_Item) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Player_Died::Instigating_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died, IsHeadshot) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Player_Died::IsHeadshot' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Players Result Sent To Cloud
// 0x0070 (0x0070 - 0x0000)
struct BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AHumanPlayerController*                 Player;                                            // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       Reward;                                            // 0x0060(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud) == 0x000070, "Wrong size on BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud, RequestResult) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud, Player) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud, Reward) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Players_Result_Sent_To_Cloud::Reward' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Match ID Available
// 0x0010 (0x0010 - 0x0000)
struct BP_GameMode_TomatoFight_C_Match_ID_Available final
{
public:
	class FString                                 Match_ID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Match_ID_Available) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Match_ID_Available");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Match_ID_Available) == 0x000010, "Wrong size on BP_GameMode_TomatoFight_C_Match_ID_Available");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Match_ID_Available, Match_ID) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Match_ID_Available::Match_ID' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Player Cloud Id available
// 0x0010 (0x0010 - 0x0000)
struct BP_GameMode_TomatoFight_C_Player_Cloud_Id_available final
{
public:
	class FString                                 Userid;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Player_Cloud_Id_available) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Player_Cloud_Id_available");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Player_Cloud_Id_available) == 0x000010, "Wrong size on BP_GameMode_TomatoFight_C_Player_Cloud_Id_available");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Cloud_Id_available, Userid) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Player_Cloud_Id_available::Userid' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Register Player Match ID
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_TomatoFight_C_Register_Player_Match_ID final
{
public:
	class ABP_PlayerController_TomatoFight_C*     Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Register_Player_Match_ID) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Register_Player_Match_ID");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Register_Player_Match_ID) == 0x000008, "Wrong size on BP_GameMode_TomatoFight_C_Register_Player_Match_ID");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Register_Player_Match_ID, Player_Controller) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Register_Player_Match_ID::Player_Controller' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Match Unregistered From Cloud
// 0x0058 (0x0058 - 0x0000)
struct BP_GameMode_TomatoFight_C_Match_Unregistered_From_Cloud final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Match_Unregistered_From_Cloud) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Match_Unregistered_From_Cloud");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Match_Unregistered_From_Cloud) == 0x000058, "Wrong size on BP_GameMode_TomatoFight_C_Match_Unregistered_From_Cloud");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Match_Unregistered_From_Cloud, RequestResult) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Match_Unregistered_From_Cloud::RequestResult' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Match Registered To Cloud
// 0x0068 (0x0068 - 0x0000)
struct BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 MatchID;                                           // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud) == 0x000068, "Wrong size on BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud, RequestResult) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud, MatchID) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Match_Registered_To_Cloud::MatchID' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.User Registered To Cloud
// 0x0060 (0x0060 - 0x0000)
struct BP_GameMode_TomatoFight_C_User_Registered_To_Cloud final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AHumanPlayerController*                 Player;                                            // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_User_Registered_To_Cloud) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_User_Registered_To_Cloud");
static_assert(sizeof(BP_GameMode_TomatoFight_C_User_Registered_To_Cloud) == 0x000060, "Wrong size on BP_GameMode_TomatoFight_C_User_Registered_To_Cloud");
static_assert(offsetof(BP_GameMode_TomatoFight_C_User_Registered_To_Cloud, RequestResult) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_User_Registered_To_Cloud::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_User_Registered_To_Cloud, Player) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_User_Registered_To_Cloud::Player' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Cheat_SkipMatch
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_TomatoFight_C_Cheat_SkipMatch final
{
public:
	bool                                          bAttackersWon;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Cheat_SkipMatch) == 0x000001, "Wrong alignment on BP_GameMode_TomatoFight_C_Cheat_SkipMatch");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Cheat_SkipMatch) == 0x000001, "Wrong size on BP_GameMode_TomatoFight_C_Cheat_SkipMatch");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Cheat_SkipMatch, bAttackersWon) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Cheat_SkipMatch::bAttackersWon' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Cheat_AddScore
// 0x0010 (0x0010 - 0x0000)
struct BP_GameMode_TomatoFight_C_Cheat_AddScore final
{
public:
	class ABP_PlayerController_TomatoFight_C*     Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ScoreEvent;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Cheat_AddScore) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Cheat_AddScore");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Cheat_AddScore) == 0x000010, "Wrong size on BP_GameMode_TomatoFight_C_Cheat_AddScore");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Cheat_AddScore, Controller) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Cheat_AddScore::Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Cheat_AddScore, ScoreEvent) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Cheat_AddScore::ScoreEvent' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Set Pause Match
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_TomatoFight_C_Set_Pause_Match final
{
public:
	bool                                          Pause;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Set_Pause_Match) == 0x000001, "Wrong alignment on BP_GameMode_TomatoFight_C_Set_Pause_Match");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Set_Pause_Match) == 0x000001, "Wrong size on BP_GameMode_TomatoFight_C_Set_Pause_Match");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_Pause_Match, Pause) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Set_Pause_Match::Pause' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.CheatEndMatch
// 0x0004 (0x0004 - 0x0000)
struct BP_GameMode_TomatoFight_C_CheatEndMatch final
{
public:
	int32                                         WinnerTeam;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_CheatEndMatch) == 0x000004, "Wrong alignment on BP_GameMode_TomatoFight_C_CheatEndMatch");
static_assert(sizeof(BP_GameMode_TomatoFight_C_CheatEndMatch) == 0x000004, "Wrong size on BP_GameMode_TomatoFight_C_CheatEndMatch");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatEndMatch, WinnerTeam) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_CheatEndMatch::WinnerTeam' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.SetSettingID
// 0x0004 (0x0004 - 0x0000)
struct BP_GameMode_TomatoFight_C_SetSettingID final
{
public:
	int32                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_SetSettingID) == 0x000004, "Wrong alignment on BP_GameMode_TomatoFight_C_SetSettingID");
static_assert(sizeof(BP_GameMode_TomatoFight_C_SetSettingID) == 0x000004, "Wrong size on BP_GameMode_TomatoFight_C_SetSettingID");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SetSettingID, Input) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_SetSettingID::Input' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Find Objective Spawn Positions
// 0x0040 (0x0040 - 0x0000)
struct BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ObjectiveSpawnPoint_GunFight_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ObjectiveSpawnPoint_GunFight_C*     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions) == 0x000040, "Wrong size on BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions, CallFunc_Max_ReturnValue) == 0x00003C, "Member 'BP_GameMode_TomatoFight_C_Find_Objective_Spawn_Positions::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Spawn Objective On Server
// 0x0060 (0x0060 - 0x0000)
struct BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0xD];                                       // 0x0013(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Objective_TomatoFight_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server) == 0x000010, "Wrong alignment on BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server) == 0x000060, "Wrong size on BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Spawn_Objective_On_Server::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Destroy Objective On Server
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_TomatoFight_C_Destroy_Objective_On_Server final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Destroy_Objective_On_Server) == 0x000001, "Wrong alignment on BP_GameMode_TomatoFight_C_Destroy_Objective_On_Server");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Destroy_Objective_On_Server) == 0x000001, "Wrong size on BP_GameMode_TomatoFight_C_Destroy_Objective_On_Server");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Destroy_Objective_On_Server, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Destroy_Objective_On_Server::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Check for Winner
// 0x0038 (0x0038 - 0x0000)
struct BP_GameMode_TomatoFight_C_Check_for_Winner final
{
public:
	bool                                          Winner_Found;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Rounds_To_Win;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Check_for_Winner) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Check_for_Winner");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Check_for_Winner) == 0x000038, "Wrong size on BP_GameMode_TomatoFight_C_Check_for_Winner");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, Winner_Found) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, Rounds_To_Win) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::Rounds_To_Win' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, CallFunc_Get_Defending_Team_Defending_Team) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001A, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00001B, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Check_for_Winner, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Check_for_Winner::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Attacking Team
// 0x0078 (0x0078 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Attacking_Team final
{
public:
	class UBP_GSC_Team_Raid_C*                    Attacking_Team;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_TeamManager_GunFight_C*         K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Attacking_Team) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Attacking_Team");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Attacking_Team) == 0x000078, "Wrong size on BP_GameMode_TomatoFight_C_Get_Attacking_Team");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, Attacking_Team) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, CallFunc_Get_Teams_Teams) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Attacking_Team, CallFunc_Is_Attacker_Is_Attacker) == 0x000071, "Member 'BP_GameMode_TomatoFight_C_Get_Attacking_Team::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Defending Team
// 0x0078 (0x0078 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Defending_Team final
{
public:
	class UBP_GSC_Team_Raid_C*                    Defending_Team;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_TeamManager_GunFight_C*         K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Defending_Team) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Defending_Team");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Defending_Team) == 0x000078, "Wrong size on BP_GameMode_TomatoFight_C_Get_Defending_Team");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, Defending_Team) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_Get_Teams_Teams) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_Is_Attacker_Is_Attacker) == 0x000071, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Defending_Team, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'BP_GameMode_TomatoFight_C_Get_Defending_Team::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Spawn All Players
// 0x0040 (0x0040 - 0x0000)
struct BP_GameMode_TomatoFight_C_Spawn_All_Players final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_TomatoFight_C*> CallFunc_Get_All_Players_All_Players;              // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Get_Player_Spawn_Position_Spawn_Position; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Spawn_All_Players) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Spawn_All_Players");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Spawn_All_Players) == 0x000040, "Wrong size on BP_GameMode_TomatoFight_C_Spawn_All_Players");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, CallFunc_Get_All_Players_All_Players) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::CallFunc_Get_All_Players_All_Players' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_All_Players, CallFunc_Get_Player_Spawn_Position_Spawn_Position) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Spawn_All_Players::CallFunc_Get_Player_Spawn_Position_Spawn_Position' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Round Winner by Player Elimination
// 0x0030 (0x0030 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination final
{
public:
	class ABP_PlayerController_Teams_C*           Killed_Player_Controller;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attackers_Won;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Defenders_Won;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Everyone_Dead_AllDead;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination) == 0x000030, "Wrong size on BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, Killed_Player_Controller) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::Killed_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, Attackers_Won) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::Attackers_Won' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, Defenders_Won) == 0x000009, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::Defenders_Won' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, CallFunc_Is_Everyone_Dead_AllDead) == 0x000029, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::CallFunc_Is_Everyone_Dead_AllDead' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination, CallFunc_Is_Attacker_Is_Attacker) == 0x00002A, "Member 'BP_GameMode_TomatoFight_C_Get_Round_Winner_by_Player_Elimination::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get All Players
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_All_Players final
{
public:
	TArray<class ABP_PlayerController_TomatoFight_C*> All_Players;                                       // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_PlayerController_TomatoFight_C*> Player_Controllers;                                // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers; // 0x0050(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers_1; // 0x0060(0x0010)(ReferenceParm)
	class ABP_PlayerController_Teams_C*           CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_All_Players) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_All_Players");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_All_Players) == 0x0000B0, "Wrong size on BP_GameMode_TomatoFight_C_Get_All_Players");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, All_Players) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::All_Players' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, Player_Controllers) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Get_Defending_Team_Defending_Team) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Get_Member_Controllers_Player_Controllers) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Get_Member_Controllers_Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Get_Member_Controllers_Player_Controllers_1) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Get_Member_Controllers_Player_Controllers_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Array_Add_ReturnValue_1) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_All_Players, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AD, "Member 'BP_GameMode_TomatoFight_C_Get_All_Players::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Spawn Player
// 0x0028 (0x0028 - 0x0000)
struct BP_GameMode_TomatoFight_C_Spawn_Player final
{
public:
	class AActor*                                 Player_Start;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 Player_Controller;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Spawn_Player) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Spawn_Player");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Spawn_Player) == 0x000028, "Wrong size on BP_GameMode_TomatoFight_C_Spawn_Player");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Player, Player_Start) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Spawn_Player::Player_Start' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Player, Player_Controller) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Spawn_Player::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Player, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Spawn_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Player, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_GameMode_TomatoFight_C_Spawn_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Player, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Spawn_Player::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Spawn_Player, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Spawn_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Player Spawn Position
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position final
{
public:
	class ABP_PlayerController_TomatoFight_C*     Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Spawn_Position;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerStart_Raid_C*>         PossibleStarts;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_PlayerStart_Raid_C*                 Selected_Start;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_2; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSpawnForTeam_Random_Secondary_Start;   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSpawnForTeam_Random_Secondary_Start_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position) == 0x0000A8, "Wrong size on BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, Player_Controller) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, Spawn_Position) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::Spawn_Position' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, PossibleStarts) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::PossibleStarts' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, Selected_Start) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::Selected_Start' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Is_Attacker_Is_Attacker) == 0x000041, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_GetGameState_ReturnValue_1) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_GetGameState_ReturnValue_2) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_2) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Not_PreBool_ReturnValue_1) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008A, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_GetSpawnForTeam_Random_Secondary_Start) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_GetSpawnForTeam_Random_Secondary_Start' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, CallFunc_GetSpawnForTeam_Random_Secondary_Start_1) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::CallFunc_GetSpawnForTeam_Random_Secondary_Start_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, Temp_bool_Variable) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position, K2Node_Select_Default) == 0x0000A1, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Spawn_Position::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Remove Objective Markers
// 0x0038 (0x0038 - 0x0000)
struct BP_GameMode_TomatoFight_C_Remove_Objective_Markers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_TomatoFight_C*> CallFunc_Get_All_Players_All_Players;              // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Remove_Objective_Markers");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers) == 0x000038, "Wrong size on BP_GameMode_TomatoFight_C_Remove_Objective_Markers");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Remove_Objective_Markers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Remove_Objective_Markers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Remove_Objective_Markers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers, CallFunc_Get_All_Players_All_Players) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Remove_Objective_Markers::CallFunc_Get_All_Players_All_Players' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Remove_Objective_Markers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Remove_Objective_Markers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Remove_Objective_Markers, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Remove_Objective_Markers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Clean Map Of Corpse Containers
// 0x0038 (0x0038 - 0x0000)
struct BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PhysicsCorpseLoot_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PhysicsCorpseLoot_C*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers) == 0x000038, "Wrong size on BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Clean_Map_Of_Corpse_Containers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Player Statistics
// 0x00C8 (0x00C8 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Player_Statistics final
{
public:
	class AHumanPlayerController*                 Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             Statistic;                                         // 0x0010(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0078(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Player_Statistics) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Player_Statistics");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Player_Statistics) == 0x0000C8, "Wrong size on BP_GameMode_TomatoFight_C_Get_Player_Statistics");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, Player_Controller) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, Found) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::Found' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, Statistic) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Player_Statistics, CallFunc_GetStatisticGunFight_Statistic) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Get_Player_Statistics::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Teleport All Players To Random Spawn
// 0x00F8 (0x00F8 - 0x0000)
struct BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_TomatoFight_C*> CallFunc_Get_All_Players_All_Players;              // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Get_Random_Spawn_Position_Spawn_Position; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Teams_C*                  K2Node_DynamicCast_AsBP_Character_Teams;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0064(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn) == 0x0000F8, "Wrong size on BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_Get_All_Players_All_Players) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_Get_All_Players_All_Players' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_Get_Random_Spawn_Position_Spawn_Position) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_Get_Random_Spawn_Position_Spawn_Position' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, K2Node_DynamicCast_AsBP_Character_Teams) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::K2Node_DynamicCast_AsBP_Character_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000064, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_Teleport_All_Players_To_Random_Spawn::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Random Spawn Position
// 0x0058 (0x0058 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position final
{
public:
	class AActor*                                 Spawn_Position;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerStart_Raid_C*>         K2Node_Select_Default;                             // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Get_Random_Secondary_Spawn_Random_Start;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position) == 0x000058, "Wrong size on BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, Spawn_Position) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::Spawn_Position' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, Temp_bool_Variable) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, CallFunc_RandomInteger_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, K2Node_Select_Default) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, CallFunc_RandomInteger_ReturnValue_1) == 0x000044, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position, CallFunc_Get_Random_Secondary_Spawn_Random_Start) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Get_Random_Spawn_Position::CallFunc_Get_Random_Secondary_Spawn_Random_Start' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Set All Players Invicibility
// 0x0038 (0x0038 - 0x0000)
struct BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility final
{
public:
	bool                                          Set_Invincible;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLockMovement;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerController_TomatoFight_C*> CallFunc_Get_All_Players_All_Players;              // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility) == 0x000038, "Wrong size on BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, Set_Invincible) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::Set_Invincible' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, bLockMovement) == 0x000001, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::bLockMovement' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, CallFunc_Get_All_Players_All_Players) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::CallFunc_Get_All_Players_All_Players' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Set_All_Players_Invicibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Are Teams Full
// 0x0030 (0x0030 - 0x0000)
struct BP_GameMode_TomatoFight_C_Are_Teams_Full final
{
public:
	bool                                          Teams_Full;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_TeamManager_GunFight_C*         K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Are_Teams_Set_and_Full_Teams_Set_and_Full; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Are_Teams_Full) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Are_Teams_Full");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Are_Teams_Full) == 0x000030, "Wrong size on BP_GameMode_TomatoFight_C_Are_Teams_Full");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Are_Teams_Full, Teams_Full) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Are_Teams_Full::Teams_Full' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Are_Teams_Full, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Are_Teams_Full::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Are_Teams_Full, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Are_Teams_Full::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Are_Teams_Full, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Are_Teams_Full::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Are_Teams_Full, K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Are_Teams_Full::K2Node_DynamicCast_AsBP_GSC_Team_Manager_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Are_Teams_Full, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Are_Teams_Full::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Are_Teams_Full, CallFunc_Are_Teams_Set_and_Full_Teams_Set_and_Full) == 0x000029, "Member 'BP_GameMode_TomatoFight_C_Are_Teams_Full::CallFunc_Are_Teams_Set_and_Full_Teams_Set_and_Full' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.PlayerCanRestart
// 0x0030 (0x0030 - 0x0000)
struct BP_GameMode_TomatoFight_C_PlayerCanRestart final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_PlayerCanRestart) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_PlayerCanRestart");
static_assert(sizeof(BP_GameMode_TomatoFight_C_PlayerCanRestart) == 0x000030, "Wrong size on BP_GameMode_TomatoFight_C_PlayerCanRestart");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PlayerCanRestart, Player) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_PlayerCanRestart::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PlayerCanRestart, ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_PlayerCanRestart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PlayerCanRestart, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_PlayerCanRestart::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PlayerCanRestart, CallFunc_MakeLiteralByte_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_PlayerCanRestart::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PlayerCanRestart, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_PlayerCanRestart::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PlayerCanRestart, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_PlayerCanRestart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PlayerCanRestart, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_GameMode_TomatoFight_C_PlayerCanRestart::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Player Died Update Statistic
// 0x0310 (0x0310 - 0x0000)
struct BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic final
{
public:
	class AHumanCharacter*                        Victim_Character;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Killer_Character;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Headshot;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         VictimTeam;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0048(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             K2Node_SetFieldsInStruct_StructOut;                // 0x00A0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_Evaluate_Score_Evaluated_Statistic;       // 0x00F8(0x0050)(HasGetValueTypeHash)
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic_1;         // 0x0158(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             K2Node_SetFieldsInStruct_StructOut_1;              // 0x01B8(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_Evaluate_Score_Evaluated_Statistic_1;     // 0x0210(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             K2Node_SetFieldsInStruct_StructOut_2;              // 0x0270(0x0050)(HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             CallFunc_Evaluate_Score_Evaluated_Statistic_2;     // 0x02C0(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic) == 0x000310, "Wrong size on BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, Victim_Character) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::Victim_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, Killer_Character) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::Killer_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, Is_Headshot) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::Is_Headshot' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, VictimTeam) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::VictimTeam' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_GetStatisticGunFight_Statistic) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Get_Score_Value_From_Table_Score) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Get_Score_Value_From_Table_Score' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_SetFieldsInStruct_StructOut) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_IsValid_ReturnValue_2) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Evaluate_Score_Evaluated_Statistic) == 0x0000F8, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Evaluate_Score_Evaluated_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1) == 0x000148, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_IsValid_ReturnValue_3) == 0x000151, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_GetStatisticGunFight_Statistic_1) == 0x000158, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_GetStatisticGunFight_Statistic_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A8, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001AC, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001B0, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_SetFieldsInStruct_StructOut_1) == 0x0001B8, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Add_IntInt_ReturnValue_4) == 0x000208, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Evaluate_Score_Evaluated_Statistic_1) == 0x000210, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Evaluate_Score_Evaluated_Statistic_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Add_IntInt_ReturnValue_5) == 0x000260, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000264, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, Temp_bool_Variable) == 0x000265, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_Select_Default) == 0x000268, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, K2Node_SetFieldsInStruct_StructOut_2) == 0x000270, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::K2Node_SetFieldsInStruct_StructOut_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic, CallFunc_Evaluate_Score_Evaluated_Statistic_2) == 0x0002C0, "Member 'BP_GameMode_TomatoFight_C_Player_Died_Update_Statistic::CallFunc_Evaluate_Score_Evaluated_Statistic_2' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Increase Objective Statistic
// 0x0130 (0x0130 - 0x0000)
struct BP_GameMode_TomatoFight_C_Increase_Objective_Statistic final
{
public:
	class AHumanCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0038(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             K2Node_SetFieldsInStruct_StructOut;                // 0x0090(0x0050)(HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             CallFunc_Evaluate_Score_Evaluated_Statistic;       // 0x00E0(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Increase_Objective_Statistic");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic) == 0x000130, "Wrong size on BP_GameMode_TomatoFight_C_Increase_Objective_Statistic");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, Character) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, CallFunc_GetStatisticGunFight_Statistic) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, K2Node_SetFieldsInStruct_StructOut) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_Objective_Statistic, CallFunc_Evaluate_Score_Evaluated_Statistic) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_Increase_Objective_Statistic::CallFunc_Evaluate_Score_Evaluated_Statistic' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Team With More Health
// 0x00F8 (0x00F8 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Team_With_More_Health final
{
public:
	class UBP_GSC_Team_Raid_C*                    Team_With_More_Health;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefenderCount;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttackerCount;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefendersHealth;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackersHealth;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_1;      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers; // 0x0068(0x0010)(ReferenceParm)
	class ABP_PlayerController_Teams_C*           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_1;      // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers_1; // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Teams_C*           CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue_1;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue_1;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Team_With_More_Health");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health) == 0x0000F8, "Wrong size on BP_GameMode_TomatoFight_C_Get_Team_With_More_Health");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, Team_With_More_Health) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::Team_With_More_Health' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, DefenderCount) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::DefenderCount' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, AttackerCount) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::AttackerCount' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, DefendersHealth) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::DefendersHealth' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, AttackersHealth) == 0x000014, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::AttackersHealth' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, Temp_int_Variable) == 0x00001C, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Get_Defending_Team_Defending_Team) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Less_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000055, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Get_Defending_Team_Defending_Team_1) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Get_Defending_Team_Defending_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Get_Member_Controllers_Player_Controllers) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Get_Member_Controllers_Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_GetHumanCharacter_ReturnValue) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_GetHealth_ReturnValue) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, Temp_int_Variable_1) == 0x0000A4, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Get_Attacking_Team_Attacking_Team_1) == 0x0000B0, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Get_Attacking_Team_Attacking_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Get_Member_Controllers_Player_Controllers_1) == 0x0000B8, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Get_Member_Controllers_Player_Controllers_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_IsValid_ReturnValue_3) == 0x0000D9, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_GetHumanCharacter_ReturnValue_1) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_GetHumanCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_IsValid_ReturnValue_4) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_IsValid_ReturnValue_5) == 0x0000E9, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_GetHealth_ReturnValue_1) == 0x0000EC, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_GetHealth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Team_With_More_Health, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_Get_Team_With_More_Health::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Assign New Setting ID
// 0x0018 (0x0018 - 0x0000)
struct BP_GameMode_TomatoFight_C_Assign_New_Setting_ID final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Assign_New_Setting_ID) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Assign_New_Setting_ID");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Assign_New_Setting_ID) == 0x000018, "Wrong size on BP_GameMode_TomatoFight_C_Assign_New_Setting_ID");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_New_Setting_ID, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Assign_New_Setting_ID::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_New_Setting_ID, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Assign_New_Setting_ID::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_New_Setting_ID, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Assign_New_Setting_ID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_New_Setting_ID, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_GameMode_TomatoFight_C_Assign_New_Setting_ID::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Replicate Players Kill Feed
// 0x0238 (0x0238 - 0x0000)
struct BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed final
{
public:
	class AHumanCharacter*                        Victim;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Damage_Type;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Instigating_Item;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Headshot;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       VictimNetId;                                       // 0x0028(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       KillerNetID;                                       // 0x0050(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FLinearColor                           Victim_Color;                                      // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Killer_Color;                                      // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Victim_ID;                                         // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Killer_ID;                                         // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Victim_Name;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Killer_Name;                                       // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetPlayerUniqueId_ReturnValue;            // 0x00E8(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_TVTDeathmatch_KillFeed         K2Node_MakeStruct_Struct_TVTDeathmatch_KillFeed;   // 0x0120(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State_1;         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetPlayerUniqueId_ReturnValue_1;          // 0x0200(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed) == 0x000238, "Wrong size on BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Victim) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Victim' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Killer) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Killer' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Damage_Type) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Damage_Type' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Instigating_Item) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Instigating_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Is_Headshot) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Is_Headshot' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, VictimNetId) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::VictimNetId' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, KillerNetID) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::KillerNetID' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Victim_Color) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Victim_Color' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Killer_Color) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Killer_Color' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Victim_ID) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Victim_ID' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Killer_ID) == 0x00009C, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Killer_ID' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Victim_Name) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Victim_Name' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, Killer_Name) == 0x0000B0, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::Killer_Name' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_GetGameState_ReturnValue) == 0x0000C0, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_IsValid_ReturnValue_1) == 0x0000D2, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, K2Node_DynamicCast_AsHuman_Player_State) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_GetPlayerUniqueId_ReturnValue) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_GetPlayerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_GetPlayerName_ReturnValue) == 0x000110, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, K2Node_MakeStruct_Struct_TVTDeathmatch_KillFeed) == 0x000120, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::K2Node_MakeStruct_Struct_TVTDeathmatch_KillFeed' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_IsValid_ReturnValue_2) == 0x0001E8, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, K2Node_DynamicCast_AsHuman_Player_State_1) == 0x0001F0, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::K2Node_DynamicCast_AsHuman_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, K2Node_DynamicCast_bSuccess_2) == 0x0001F8, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_IsValid_ReturnValue_3) == 0x0001F9, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_GetPlayerUniqueId_ReturnValue_1) == 0x000200, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_GetPlayerUniqueId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed, CallFunc_GetPlayerName_ReturnValue_1) == 0x000228, "Member 'BP_GameMode_TomatoFight_C_Replicate_Players_Kill_Feed::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Evaluate Score
// 0x0150 (0x0150 - 0x0000)
struct BP_GameMode_TomatoFight_C_Evaluate_Score final
{
public:
	struct FStruct_GunFightStatistics             Statistic;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             Evaluated_Statistic;                               // 0x0050(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score_1;       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score_2;       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score_3;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score_4;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score_5;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_4;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score_6;       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Score_Value_From_Table_Score_7;       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_5;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_6;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             K2Node_SetFieldsInStruct_StructOut;                // 0x0100(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Evaluate_Score) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Evaluate_Score");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Evaluate_Score) == 0x000150, "Wrong size on BP_GameMode_TomatoFight_C_Evaluate_Score");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, Statistic) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, Evaluated_Statistic) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::Evaluated_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score_1) == 0x0000A4, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Round_ReturnValue) == 0x0000B0, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score_2) == 0x0000B4, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score_3) == 0x0000B8, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score_4) == 0x0000C4, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score_5) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x0000CC, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntInt_ReturnValue_4) == 0x0000D0, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score_6) == 0x0000D4, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Get_Score_Value_From_Table_Score_7) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Get_Score_Value_From_Table_Score_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntInt_ReturnValue_5) == 0x0000DC, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Multiply_IntInt_ReturnValue_6) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Multiply_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000EC, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F4, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000F8, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000FC, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Evaluate_Score, K2Node_SetFieldsInStruct_StructOut) == 0x000100, "Member 'BP_GameMode_TomatoFight_C_Evaluate_Score::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Score Value From Table
// 0x0014 (0x0014 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table final
{
public:
	class FName                                   Score_Type;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_TVTDeathmatch_ScoreValue       CallFunc_GetDataTableRowFromName_OutRow;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table) == 0x000004, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table) == 0x000014, "Wrong size on BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table, Score_Type) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table::Score_Type' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table, Score) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table::Score' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table, CallFunc_GetDataTableRowFromName_OutRow) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Score_Value_From_Table::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Find Barricades
// 0x0038 (0x0038 - 0x0000)
struct BP_GameMode_TomatoFight_C_Find_Barricades final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Barricade_GunFight_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class ABP_Barricade_GunFight_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Find_Barricades) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Find_Barricades");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Find_Barricades) == 0x000038, "Wrong size on BP_GameMode_TomatoFight_C_Find_Barricades");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Find_Barricades, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Find_Barricades::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Set Barricades Active State
// 0x0020 (0x0020 - 0x0000)
struct BP_GameMode_TomatoFight_C_Set_Barricades_Active_State final
{
public:
	bool                                          Is_active;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Set_Barricades_Active_State) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Set_Barricades_Active_State");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Set_Barricades_Active_State) == 0x000020, "Wrong size on BP_GameMode_TomatoFight_C_Set_Barricades_Active_State");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_Barricades_Active_State, Is_active) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Set_Barricades_Active_State::Is_active' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_Barricades_Active_State, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Set_Barricades_Active_State::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_Barricades_Active_State, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Set_Barricades_Active_State::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Set_Barricades_Active_State, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Set_Barricades_Active_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Get Survivor Count
// 0x0090 (0x0090 - 0x0000)
struct BP_GameMode_TomatoFight_C_Get_Survivor_Count final
{
public:
	int32                                         Attacker_Survivors;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Defender_Survivors;                                // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _defender_Survivors;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _attacker_Survivors;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0048(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States_1;              // 0x0058(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue_1;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Get_Survivor_Count) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Get_Survivor_Count");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Get_Survivor_Count) == 0x000090, "Wrong size on BP_GameMode_TomatoFight_C_Get_Survivor_Count");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Attacker_Survivors) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Attacker_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Defender_Survivors) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Defender_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, _defender_Survivors) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::_defender_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, _attacker_Survivors) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::_attacker_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Temp_int_Variable) == 0x00001C, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, Temp_int_Variable_1) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Add_IntInt_ReturnValue_3) == 0x000034, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Get_Defending_Team_Defending_Team) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Get_Members_Member_States) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Get_Members_Member_States_1) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Get_Members_Member_States_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_GetIsDead_ReturnValue) == 0x00007A, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_GetIsDead_ReturnValue_1) == 0x00007B, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_GetIsDead_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_IsValid_ReturnValue_2) == 0x00007C, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_IsValid_ReturnValue_3) == 0x00007D, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Get_Survivor_Count, CallFunc_Less_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_GameMode_TomatoFight_C_Get_Survivor_Count::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Increase TeamDamage Statistic
// 0x0138 (0x0138 - 0x0000)
struct BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0038(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             K2Node_SetFieldsInStruct_StructOut;                // 0x0098(0x0050)(HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             CallFunc_Evaluate_Score_Evaluated_Statistic;       // 0x00E8(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic) == 0x000138, "Wrong size on BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, Damage) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::Damage' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, Character) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_GetStatisticGunFight_Statistic) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_FTrunc_ReturnValue) == 0x00008C, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, K2Node_SetFieldsInStruct_StructOut) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic, CallFunc_Evaluate_Score_Evaluated_Statistic) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_Increase_TeamDamage_Statistic::CallFunc_Evaluate_Score_Evaluated_Statistic' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Assign Roles To Players
// 0x0118 (0x0118 - 0x0000)
struct BP_GameMode_TomatoFight_C_Assign_Roles_To_Players final
{
public:
	TArray<EGunFightRole>                         Available_Roles;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_PlayerState_TomatoFight_C*>  Shufled_Players;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGunFightRole>                         K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_TomatoFight_C*          CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunFightRole                                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_TomatoFight_C*          CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGunFightRole                                 CallFunc_Array_Get_Item_3;                         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x00B8(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States_1;              // 0x00C8(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_4;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_5;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Assign_Roles_To_Players");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players) == 0x000118, "Wrong size on BP_GameMode_TomatoFight_C_Assign_Roles_To_Players");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Available_Roles) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Available_Roles' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Shufled_Players) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Shufled_Players' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Loop_Counter_Variable_2) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Loop_Counter_Variable_3) == 0x000044, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Length_ReturnValue_2) == 0x00006C, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Percent_IntInt_ReturnValue) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Length_ReturnValue_3) == 0x00007C, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Less_IntInt_ReturnValue_1) == 0x000081, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, Temp_int_Array_Index_Variable_3) == 0x000084, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Length_ReturnValue_4) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Get_Item_3) == 0x000099, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Get_Defending_Team_Defending_Team) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Get_Members_Member_States) == 0x0000B8, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Get_Members_Member_States_1) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Get_Members_Member_States_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Get_Item_4) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Get_Item_5) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1) == 0x0000F8, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_AddUnique_ReturnValue) == 0x000108, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Length_ReturnValue_5) == 0x00010C, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Array_Length_ReturnValue_6) == 0x000110, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Less_IntInt_ReturnValue_2) == 0x000114, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Assign_Roles_To_Players, CallFunc_Less_IntInt_ReturnValue_3) == 0x000115, "Member 'BP_GameMode_TomatoFight_C_Assign_Roles_To_Players::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Select Objective Spawn Point
// 0x0018 (0x0018 - 0x0000)
struct BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveSpawnPoint_GunFight_C*     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point) == 0x000018, "Wrong size on BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point, CallFunc_Array_Length_ReturnValue_1) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point, CallFunc_RandomInteger_ReturnValue) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Select_Objective_Spawn_Point::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Show Players Objective Spawn Position
// 0x0030 (0x0030 - 0x0000)
struct BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_TomatoFight_C*> CallFunc_Get_All_Players_All_Players;              // 0x0010(0x0010)(ReferenceParm)
	class ABP_PlayerController_TomatoFight_C*     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position) == 0x000030, "Wrong size on BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, CallFunc_Get_All_Players_All_Players) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::CallFunc_Get_All_Players_All_Players' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_Show_Players_Objective_Spawn_Position::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Increase EnemyHit Statistic
// 0x0148 (0x0148 - 0x0000)
struct BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0028(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             K2Node_SetFieldsInStruct_StructOut;                // 0x0090(0x0050)(HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             CallFunc_Evaluate_Score_Evaluated_Statistic;       // 0x00E8(0x0050)(HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic) == 0x000148, "Wrong size on BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, Damage) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::Damage' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, Character) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_Round_ReturnValue) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_GetStatisticGunFight_Statistic) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_Add_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, K2Node_SetFieldsInStruct_StructOut) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_GetGameState_ReturnValue) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, CallFunc_Evaluate_Score_Evaluated_Statistic) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::CallFunc_Evaluate_Score_Evaluated_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000138, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_GameMode_TomatoFight_C_Increase_EnemyHit_Statistic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Process All Player Results on Match End
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End final
{
public:
	TArray<class ABP_PlayerState_Teams_C*>        WinningStates;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_Winner_Found; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Winning_Team; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Losing_Team; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0050(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States_1;              // 0x0060(0x0010)(ReferenceParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End) == 0x0000A8, "Wrong size on BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, WinningStates) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::WinningStates' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Get_Winning_and_Losing_Teams_Winner_Found) == 0x000034, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Get_Winning_and_Losing_Teams_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Get_Winning_and_Losing_Teams_Winning_Team) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Get_Winning_and_Losing_Teams_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Get_Winning_and_Losing_Teams_Losing_Team) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Get_Winning_and_Losing_Teams_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Get_Members_Member_States) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Get_Members_Member_States_1) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Get_Members_Member_States_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_GetGameState_ReturnValue_1) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End, CallFunc_Array_Contains_ReturnValue) == 0x0000A1, "Member 'BP_GameMode_TomatoFight_C_Process_All_Player_Results_on_Match_End::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.Process Single Player Result
// 0x02A0 (0x02A0 - 0x0000)
struct BP_GameMode_TomatoFight_C_Process_Single_Player_Result final
{
public:
	class ABP_PlayerState_TomatoFight_C*          Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Winner;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          End_Of_Match;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Meaningful_Distance_Traveled;                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Distance_Traveled;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BattlePass_Reward;                                 // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           Player_Controller;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCloudBattlePassMatchEventInfo> Gameplay_Events;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Rewards;                                           // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Accuracy;                                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudDeathCauseType                          Cause_of_Death;                                    // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudMatchEndType                            Result;                                            // 0x004D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_PumpkinFightRewardsDecision_Rewards;      // 0x0050(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_TomatoFightRewardsDecision_Rewards;       // 0x0060(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_SnowballFightRewardsDecision_Rewards;     // 0x0070(0x0010)(ReferenceParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFightVariant                                 CallFunc_GetGameVariant_Variant;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMatchInfoStats                    K2Node_MakeStruct_UserMatchInfoStats;              // 0x00B0(0x0060)()
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0128(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x5];                                      // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserMatchInfo                         K2Node_MakeStruct_UserMatchInfo;                   // 0x01B0(0x00F0)()
};
static_assert(alignof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_Process_Single_Player_Result");
static_assert(sizeof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result) == 0x0002A0, "Wrong size on BP_GameMode_TomatoFight_C_Process_Single_Player_Result");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Player_State) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Is_Winner) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Is_Winner' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, End_Of_Match) == 0x000009, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::End_Of_Match' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Meaningful_Distance_Traveled) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Meaningful_Distance_Traveled' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Distance_Traveled) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Distance_Traveled' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, BattlePass_Reward) == 0x000014, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::BattlePass_Reward' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Score) == 0x00001C, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Score' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Player_Controller) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Gameplay_Events) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Gameplay_Events' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Rewards) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Accuracy) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Accuracy' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Cause_of_Death) == 0x00004C, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Cause_of_Death' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, Result) == 0x00004D, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::Result' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_PumpkinFightRewardsDecision_Rewards) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_PumpkinFightRewardsDecision_Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_TomatoFightRewardsDecision_Rewards) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_TomatoFightRewardsDecision_Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_SnowballFightRewardsDecision_Rewards) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_SnowballFightRewardsDecision_Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_GetGameState_ReturnValue) == 0x000080, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_GetGameVariant_Variant) == 0x000099, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_GetGameVariant_Variant' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_GetHumanCharacter_ReturnValue) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_MakeStruct_UserMatchInfoStats) == 0x0000B0, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_MakeStruct_UserMatchInfoStats' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_MakeArray_Array) == 0x000110, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_GetStatisticGunFight_Statistic) == 0x000128, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_IsValid_ReturnValue_2) == 0x000178, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_IsValid_ReturnValue_3) == 0x000179, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_IsValid_ReturnValue_4) == 0x00017A, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_K2_GetPawn_ReturnValue) == 0x000180, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_DynamicCast_AsBP_Character_Script) == 0x000188, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000191, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_Multiply_IntInt_ReturnValue) == 0x000194, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000198, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_Divide_IntInt_ReturnValue) == 0x00019C, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_FTrunc_ReturnValue) == 0x0001A0, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001A4, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, CallFunc_FTrunc_ReturnValue_1) == 0x0001A8, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_Process_Single_Player_Result, K2Node_MakeStruct_UserMatchInfo) == 0x0001B0, "Member 'BP_GameMode_TomatoFight_C_Process_Single_Player_Result::K2Node_MakeStruct_UserMatchInfo' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.OnPlayerDied
// 0x0018 (0x0018 - 0x0000)
struct BP_GameMode_TomatoFight_C_OnPlayerDied final
{
public:
	class AHumanCharacter*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_OnPlayerDied) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_OnPlayerDied");
static_assert(sizeof(BP_GameMode_TomatoFight_C_OnPlayerDied) == 0x000018, "Wrong size on BP_GameMode_TomatoFight_C_OnPlayerDied");
static_assert(offsetof(BP_GameMode_TomatoFight_C_OnPlayerDied, Player) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_OnPlayerDied::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_OnPlayerDied, Killer) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_OnPlayerDied::Killer' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_OnPlayerDied, ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_OnPlayerDied::ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.GetTeammates
// 0x0078 (0x0078 - 0x0000)
struct BP_GameMode_TomatoFight_C_GetTeammates final
{
public:
	class AHumanPlayerController*                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AHumanPlayerController*>         OutControllerList;                                 // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABP_PlayerController_Teams_C*>   Team_Controllers;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_GetTeammates) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_GetTeammates");
static_assert(sizeof(BP_GameMode_TomatoFight_C_GetTeammates) == 0x000078, "Wrong size on BP_GameMode_TomatoFight_C_GetTeammates");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, Player) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, OutControllerList) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::OutControllerList' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, Team_Controllers) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::Team_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_Get_Members_Member_States) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetTeammates, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_GameMode_TomatoFight_C_GetTeammates::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.ResetAllSpawns
// 0x0050 (0x0050 - 0x0000)
struct BP_GameMode_TomatoFight_C_ResetAllSpawns final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_ResetAllSpawns) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_ResetAllSpawns");
static_assert(sizeof(BP_GameMode_TomatoFight_C_ResetAllSpawns) == 0x000050, "Wrong size on BP_GameMode_TomatoFight_C_ResetAllSpawns");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_ResetAllSpawns, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_GameMode_TomatoFight_C_ResetAllSpawns::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.GetSpawnForTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_GameMode_TomatoFight_C_GetSpawnForTeam final
{
public:
	TArray<class ABP_PlayerStart_Raid_C*>         PlayerStarts_0;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABP_PlayerController_TomatoFight_C*     PlayerController;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Random_Secondary_Start;                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Get_Random_Secondary_Spawn_Random_Start;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_GetSpawnForTeam) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_GetSpawnForTeam");
static_assert(sizeof(BP_GameMode_TomatoFight_C_GetSpawnForTeam) == 0x000038, "Wrong size on BP_GameMode_TomatoFight_C_GetSpawnForTeam");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetSpawnForTeam, PlayerStarts_0) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_GetSpawnForTeam::PlayerStarts_0' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetSpawnForTeam, PlayerController) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_GetSpawnForTeam::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetSpawnForTeam, Random_Secondary_Start) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_GetSpawnForTeam::Random_Secondary_Start' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetSpawnForTeam, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_GetSpawnForTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetSpawnForTeam, CallFunc_RandomInteger_ReturnValue) == 0x000024, "Member 'BP_GameMode_TomatoFight_C_GetSpawnForTeam::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetSpawnForTeam, CallFunc_Get_Random_Secondary_Spawn_Random_Start) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_GetSpawnForTeam::CallFunc_Get_Random_Secondary_Spawn_Random_Start' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetSpawnForTeam, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameMode_TomatoFight_C_GetSpawnForTeam::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.GetPlayerTierOfReward
// 0x0028 (0x0028 - 0x0000)
struct BP_GameMode_TomatoFight_C_GetPlayerTierOfReward final
{
public:
	class ABP_PlayerController_C*                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tier;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Reward;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_GetPlayerTierOfReward) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_GetPlayerTierOfReward");
static_assert(sizeof(BP_GameMode_TomatoFight_C_GetPlayerTierOfReward) == 0x000028, "Wrong size on BP_GameMode_TomatoFight_C_GetPlayerTierOfReward");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetPlayerTierOfReward, Player) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_GetPlayerTierOfReward::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetPlayerTierOfReward, Tier) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_GetPlayerTierOfReward::Tier' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetPlayerTierOfReward, Reward) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_GetPlayerTierOfReward::Reward' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetPlayerTierOfReward, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_GetPlayerTierOfReward::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetPlayerTierOfReward, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_GetPlayerTierOfReward::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.CheatIncreaseScore
// 0x0128 (0x0128 - 0x0000)
struct BP_GameMode_TomatoFight_C_CheatIncreaseScore final
{
public:
	class ABP_PlayerController_TomatoFight_C*     Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ScoreEvent;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             Temp_Statistics;                                   // 0x0010(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_TomatoFight_C*          K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0078(0x0050)(HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             CallFunc_Evaluate_Score_Evaluated_Statistic;       // 0x00C8(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_CheatIncreaseScore) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_CheatIncreaseScore");
static_assert(sizeof(BP_GameMode_TomatoFight_C_CheatIncreaseScore) == 0x000128, "Wrong size on BP_GameMode_TomatoFight_C_CheatIncreaseScore");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, Controller) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, ScoreEvent) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::ScoreEvent' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, Temp_Statistics) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::Temp_Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, K2Node_SwitchName_CmpSuccess) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::K2Node_DynamicCast_AsBP_Player_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_GetStatisticGunFight_Statistic) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_Evaluate_Score_Evaluated_Statistic) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_Evaluate_Score_Evaluated_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_Add_FloatFloat_ReturnValue) == 0x00011C, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x000120, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_CheatIncreaseScore, CallFunc_Add_IntInt_ReturnValue_2) == 0x000124, "Member 'BP_GameMode_TomatoFight_C_CheatIncreaseScore::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.GetGameModeVariant
// 0x0028 (0x0028 - 0x0000)
struct BP_GameMode_TomatoFight_C_GetGameModeVariant final
{
public:
	EFightVariant                                 Variant;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMatchmakingGameMode_ReturnValue;       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_GetGameModeVariant) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_GetGameModeVariant");
static_assert(sizeof(BP_GameMode_TomatoFight_C_GetGameModeVariant) == 0x000028, "Wrong size on BP_GameMode_TomatoFight_C_GetGameModeVariant");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetGameModeVariant, Variant) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_GetGameModeVariant::Variant' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetGameModeVariant, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_GetGameModeVariant::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetGameModeVariant, CallFunc_GetMatchmakingGameMode_ReturnValue) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_GetGameModeVariant::CallFunc_GetMatchmakingGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_GetGameModeVariant, K2Node_SwitchString_CmpSuccess) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_GetGameModeVariant::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.TomatoFightRewardsDecision
// 0x00F8 (0x00F8 - 0x0000)
struct BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision final
{
public:
	bool                                          IsWinner;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Rewards;                                           // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         OwnedRewards;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0048(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0078(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0088(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0098(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00A8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00B8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision");
static_assert(sizeof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision) == 0x0000F8, "Wrong size on BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, IsWinner) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::IsWinner' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Score) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Score' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Rewards) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, OwnedRewards) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_1) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_2) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_3) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_4) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_5) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_6) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_7) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_8) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, Temp_string_Variable_9) == 0x0000B8, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C9, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000CA, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0000CB, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x0000CC, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x0000CD, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x0000CE, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x0000CF, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_2) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_3) == 0x0000DC, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_4) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_5) == 0x0000E4, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_6) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_7) == 0x0000EC, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_8) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision, CallFunc_Array_Add_ReturnValue_9) == 0x0000F4, "Member 'BP_GameMode_TomatoFight_C_TomatoFightRewardsDecision::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.SnowballFightRewardsDecision
// 0x00F8 (0x00F8 - 0x0000)
struct BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision final
{
public:
	bool                                          IsWinner;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Rewards;                                           // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         OwnedRewards;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0048(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0078(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0088(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0098(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00A8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00B8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision");
static_assert(sizeof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision) == 0x0000F8, "Wrong size on BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, IsWinner) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::IsWinner' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Score) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Score' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Rewards) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, OwnedRewards) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_1) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_2) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_3) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_4) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_5) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_6) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_7) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_8) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, Temp_string_Variable_9) == 0x0000B8, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C9, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000CA, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0000CB, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x0000CC, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x0000CD, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x0000CE, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x0000CF, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_2) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_3) == 0x0000DC, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_4) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_5) == 0x0000E4, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_6) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_7) == 0x0000EC, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_8) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision, CallFunc_Array_Add_ReturnValue_9) == 0x0000F4, "Member 'BP_GameMode_TomatoFight_C_SnowballFightRewardsDecision::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.SendRoundFinishAnalytics
// 0x00C8 (0x00C8 - 0x0000)
struct BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics final
{
public:
	class FString                                 Temp_string_Variable;                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers; // 0x0078(0x0010)(ReferenceParm)
	class ABP_PlayerController_Teams_C*           CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_GunFight_Round_Ended_ReturnValue;    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_GunFight_Round_Ended_ReturnValue_1;  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics");
static_assert(sizeof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics) == 0x0000C8, "Wrong size on BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, Temp_string_Variable) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, Temp_string_Variable_1) == 0x000010, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, Temp_bool_Variable) == 0x000020, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, Temp_string_Variable_2) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, Temp_string_Variable_3) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_GetGameState_ReturnValue) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, Temp_bool_Variable_1) == 0x000050, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, K2Node_Select_Default) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_Get_Member_Controllers_Player_Controllers) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_Get_Member_Controllers_Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000090, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0000A4, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, K2Node_Select_Default_1) == 0x0000B0, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_FTrunc_ReturnValue) == 0x0000C0, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_Send_GunFight_Round_Ended_ReturnValue) == 0x0000C4, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_Send_GunFight_Round_Ended_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics, CallFunc_Send_GunFight_Round_Ended_ReturnValue_1) == 0x0000C5, "Member 'BP_GameMode_TomatoFight_C_SendRoundFinishAnalytics::CallFunc_Send_GunFight_Round_Ended_ReturnValue_1' has a wrong offset!");

// Function BP_GameMode_TomatoFight.BP_GameMode_TomatoFight_C.PumpkinFightRewardsDecision
// 0x00F8 (0x00F8 - 0x0000)
struct BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision final
{
public:
	bool                                          IsWinner;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Rewards;                                           // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         OwnedRewards;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0048(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0078(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0088(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0098(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00A8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00B8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision) == 0x000008, "Wrong alignment on BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision");
static_assert(sizeof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision) == 0x0000F8, "Wrong size on BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, IsWinner) == 0x000000, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::IsWinner' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Score) == 0x000004, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Score' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Rewards) == 0x000008, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, OwnedRewards) == 0x000018, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable) == 0x000028, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_1) == 0x000038, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_2) == 0x000048, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_3) == 0x000058, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_4) == 0x000068, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_5) == 0x000078, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_6) == 0x000088, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_7) == 0x000098, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_8) == 0x0000A8, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, Temp_string_Variable_9) == 0x0000B8, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C9, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000CA, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0000CB, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x0000CC, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x0000CD, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x0000CE, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x0000CF, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_2) == 0x0000D8, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_3) == 0x0000DC, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_4) == 0x0000E0, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_5) == 0x0000E4, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_6) == 0x0000E8, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_7) == 0x0000EC, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_8) == 0x0000F0, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision, CallFunc_Array_Add_ReturnValue_9) == 0x0000F4, "Member 'BP_GameMode_TomatoFight_C_PumpkinFightRewardsDecision::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");

}

