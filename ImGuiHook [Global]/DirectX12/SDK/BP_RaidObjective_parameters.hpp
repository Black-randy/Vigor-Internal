#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RaidObjective

#include "Basic.hpp"

#include "ERaidObjectiveState_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_RaidObjective.BP_RaidObjective_C.ExecuteUbergraph_BP_RaidObjective
// 0x01C0 (0x01C0 - 0x0000)
struct BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue_1;                        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue_2;                        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Raid_C*                    K2Node_DynamicCast_AsBP_Game_Mode_Raid;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue_3;                        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Raid_C*                    K2Node_DynamicCast_AsBP_Game_Mode_Raid_1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Map_Find_Value;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Map_Find_Value_1;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue_1;  // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue_1;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Player_Attacker_Is_Attacker;           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0100(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_1;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_1;  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Player_Attacker_Is_Attacker_1;         // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective) == 0x000008, "Wrong alignment on BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective");
static_assert(sizeof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective) == 0x0001C0, "Wrong size on BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, EntryPoint) == 0x000000, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_IsServer_ReturnValue) == 0x000008, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Now_ReturnValue) == 0x000010, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Now_ReturnValue_1) == 0x000018, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Now_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Now_ReturnValue_2) == 0x000020, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Now_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000030, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OtherActor) == 0x000038, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OtherComp) == 0x000040, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000048, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_AsBP_Game_Mode_Raid) == 0x000050, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_AsBP_Game_Mode_Raid' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_AsBP_Character) == 0x000060, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Now_ReturnValue_3) == 0x000070, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Now_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_GetController_ReturnValue) == 0x000078, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_GetGameMode_ReturnValue_1) == 0x000080, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_AsBP_Player_Controller_Raid) == 0x000088, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_AsBP_Player_Controller_Raid' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_AsBP_Game_Mode_Raid_1) == 0x000098, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_AsBP_Game_Mode_Raid_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Map_Find_Value) == 0x0000A8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Map_Remove_ReturnValue) == 0x0000B1, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x0000B8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Map_Find_Value_1) == 0x0000C0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Map_Find_ReturnValue_1) == 0x0000C8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_GetTotalSeconds_ReturnValue) == 0x0000CC, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Subtract_DateTimeDateTime_ReturnValue_1) == 0x0000D0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Subtract_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_GetTotalSeconds_ReturnValue_1) == 0x0000D8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_GetTotalSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_IsValid_ReturnValue) == 0x0000DC, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Is_Player_Attacker_Is_Attacker) == 0x0000DD, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Is_Player_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0000E0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000E8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000F0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000F8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000FC, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_ComponentBoundEvent_SweepResult) == 0x000100, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_AsBP_Character_1) == 0x000190, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_AsBP_Character_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_bSuccess_4) == 0x000198, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_GetController_ReturnValue_1) == 0x0001A0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Map_Remove_ReturnValue_1) == 0x0001A8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_AsBP_Player_Controller_Raid_1) == 0x0001B0, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_AsBP_Player_Controller_Raid_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, K2Node_DynamicCast_bSuccess_5) == 0x0001B8, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_IsServer_ReturnValue_1) == 0x0001B9, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective, CallFunc_Is_Player_Attacker_Is_Attacker_1) == 0x0001BA, "Member 'BP_RaidObjective_C_ExecuteUbergraph_BP_RaidObjective::CallFunc_Is_Player_Attacker_Is_Attacker_1' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_RaidObjective_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaidObjective_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_RaidObjective_C_ReceiveTick");
static_assert(sizeof(BP_RaidObjective_C_ReceiveTick) == 0x000004, "Wrong size on BP_RaidObjective_C_ReceiveTick");
static_assert(offsetof(BP_RaidObjective_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_RaidObjective_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_RaidObjective_C_BndEvt__ActiveZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct BP_RaidObjective_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaidObjective_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_RaidObjective_C_UserConstructionScript");
static_assert(sizeof(BP_RaidObjective_C_UserConstructionScript) == 0x000048, "Wrong size on BP_RaidObjective_C_UserConstructionScript");
static_assert(offsetof(BP_RaidObjective_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_RaidObjective_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000028, "Member 'BP_RaidObjective_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_RaidObjective_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_RaidObjective_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh) == 0x000038, "Member 'BP_RaidObjective_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_RaidObjective_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000041, "Member 'BP_RaidObjective_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.Progress Update
// 0x0044 (0x0044 - 0x0000)
struct BP_RaidObjective_C_Progress_Update final
{
public:
	float                                         Delta_seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Frame_Progress_progress;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Frame_Progress_progress_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Frame_Progress_progress_2;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Current_Frame_Progress_progress_3;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaidObjective_C_Progress_Update) == 0x000004, "Wrong alignment on BP_RaidObjective_C_Progress_Update");
static_assert(sizeof(BP_RaidObjective_C_Progress_Update) == 0x000044, "Wrong size on BP_RaidObjective_C_Progress_Update");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, Delta_seconds) == 0x000000, "Member 'BP_RaidObjective_C_Progress_Update::Delta_seconds' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Current_Frame_Progress_progress) == 0x000004, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Current_Frame_Progress_progress' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Current_Frame_Progress_progress_1) == 0x000008, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Current_Frame_Progress_progress_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_FMax_ReturnValue) == 0x000014, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Current_Frame_Progress_progress_2) == 0x000018, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Current_Frame_Progress_progress_2' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Current_Frame_Progress_progress_3) == 0x000024, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Current_Frame_Progress_progress_3' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_FMax_ReturnValue_1) == 0x000028, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_FMin_ReturnValue_1) == 0x000030, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_FMax_ReturnValue_2) == 0x000038, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_FMax_ReturnValue_3) == 0x00003C, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_RaidObjective_C_Progress_Update::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Progress_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'BP_RaidObjective_C_Progress_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.Check State
// 0x0024 (0x0024 - 0x0000)
struct BP_RaidObjective_C_Check_State final
{
public:
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_2;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_3;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_4;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaidObjective_C_Check_State) == 0x000004, "Wrong alignment on BP_RaidObjective_C_Check_State");
static_assert(sizeof(BP_RaidObjective_C_Check_State) == 0x000024, "Wrong size on BP_RaidObjective_C_Check_State");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Map_Length_ReturnValue) == 0x000000, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Map_Length_ReturnValue_1) == 0x000004, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_RaidObjective_C_Check_State::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000009, "Member 'BP_RaidObjective_C_Check_State::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_RaidObjective_C_Check_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Map_Length_ReturnValue_2) == 0x00000C, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Map_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Map_Length_ReturnValue_3) == 0x000014, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Map_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_BooleanAND_ReturnValue_1) == 0x000019, "Member 'BP_RaidObjective_C_Check_State::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Map_Length_ReturnValue_4) == 0x00001C, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Map_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_State, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000020, "Member 'BP_RaidObjective_C_Check_State::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.Check Progress
// 0x0020 (0x0020 - 0x0000)
struct BP_RaidObjective_C_Check_Progress final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Raid_C*                    K2Node_DynamicCast_AsBP_Game_Mode_Raid;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaidObjective_C_Check_Progress) == 0x000008, "Wrong alignment on BP_RaidObjective_C_Check_Progress");
static_assert(sizeof(BP_RaidObjective_C_Check_Progress) == 0x000020, "Wrong size on BP_RaidObjective_C_Check_Progress");
static_assert(offsetof(BP_RaidObjective_C_Check_Progress, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_RaidObjective_C_Check_Progress::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_Progress, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_RaidObjective_C_Check_Progress::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_Progress, K2Node_DynamicCast_AsBP_Game_Mode_Raid) == 0x000010, "Member 'BP_RaidObjective_C_Check_Progress::K2Node_DynamicCast_AsBP_Game_Mode_Raid' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_Progress, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_RaidObjective_C_Check_Progress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Check_Progress, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_RaidObjective_C_Check_Progress::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.Change State
// 0x0002 (0x0002 - 0x0000)
struct BP_RaidObjective_C_Change_State final
{
public:
	ERaidObjectiveState                           New_State;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaidObjective_C_Change_State) == 0x000001, "Wrong alignment on BP_RaidObjective_C_Change_State");
static_assert(sizeof(BP_RaidObjective_C_Change_State) == 0x000002, "Wrong size on BP_RaidObjective_C_Change_State");
static_assert(offsetof(BP_RaidObjective_C_Change_State, New_State) == 0x000000, "Member 'BP_RaidObjective_C_Change_State::New_State' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Change_State, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_RaidObjective_C_Change_State::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.Current Frame Progress
// 0x000C (0x000C - 0x0000)
struct BP_RaidObjective_C_Current_Frame_Progress final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaidObjective_C_Current_Frame_Progress) == 0x000004, "Wrong alignment on BP_RaidObjective_C_Current_Frame_Progress");
static_assert(sizeof(BP_RaidObjective_C_Current_Frame_Progress) == 0x00000C, "Wrong size on BP_RaidObjective_C_Current_Frame_Progress");
static_assert(offsetof(BP_RaidObjective_C_Current_Frame_Progress, DeltaSeconds) == 0x000000, "Member 'BP_RaidObjective_C_Current_Frame_Progress::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Current_Frame_Progress, Progress) == 0x000004, "Member 'BP_RaidObjective_C_Current_Frame_Progress::Progress' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Current_Frame_Progress, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_RaidObjective_C_Current_Frame_Progress::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RaidObjective.BP_RaidObjective_C.Is Player Attacker
// 0x0048 (0x0048 - 0x0000)
struct BP_RaidObjective_C_Is_Player_Attacker final
{
public:
	class APlayerState*                           Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Attacker;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Raid_C*                    K2Node_DynamicCast_AsBP_Game_Mode_Raid;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RaidObjective_C_Is_Player_Attacker) == 0x000008, "Wrong alignment on BP_RaidObjective_C_Is_Player_Attacker");
static_assert(sizeof(BP_RaidObjective_C_Is_Player_Attacker) == 0x000048, "Wrong size on BP_RaidObjective_C_Is_Player_Attacker");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, Player_State) == 0x000000, "Member 'BP_RaidObjective_C_Is_Player_Attacker::Player_State' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, Is_Attacker) == 0x000008, "Member 'BP_RaidObjective_C_Is_Player_Attacker::Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000010, "Member 'BP_RaidObjective_C_Is_Player_Attacker::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_RaidObjective_C_Is_Player_Attacker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, CallFunc_GetGameMode_ReturnValue) == 0x000020, "Member 'BP_RaidObjective_C_Is_Player_Attacker::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, K2Node_DynamicCast_AsBP_Game_Mode_Raid) == 0x000028, "Member 'BP_RaidObjective_C_Is_Player_Attacker::K2Node_DynamicCast_AsBP_Game_Mode_Raid' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_RaidObjective_C_Is_Player_Attacker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000038, "Member 'BP_RaidObjective_C_Is_Player_Attacker::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'BP_RaidObjective_C_Is_Player_Attacker::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaidObjective_C_Is_Player_Attacker, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_RaidObjective_C_Is_Player_Attacker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

