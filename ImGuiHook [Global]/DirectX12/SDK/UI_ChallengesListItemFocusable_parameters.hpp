#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChallengesListItemFocusable

#include "Basic.hpp"

#include "E_ChallengeManagerState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "E_ChallengeSlotState_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_ChallengesListItemFocusable.UI_ChallengesListItemFocusable_C.ChallengeSlotCancelled__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_ChallengesListItemFocusable_C_ChallengeSlotCancelled__DelegateSignature final
{
public:
	class ABP_ChallengeSlot_C*                    BP_ChallengeSlot_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ChallengesListItemFocusable_C_ChallengeSlotCancelled__DelegateSignature) == 0x000008, "Wrong alignment on UI_ChallengesListItemFocusable_C_ChallengeSlotCancelled__DelegateSignature");
static_assert(sizeof(UI_ChallengesListItemFocusable_C_ChallengeSlotCancelled__DelegateSignature) == 0x000008, "Wrong size on UI_ChallengesListItemFocusable_C_ChallengeSlotCancelled__DelegateSignature");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ChallengeSlotCancelled__DelegateSignature, BP_ChallengeSlot_0) == 0x000000, "Member 'UI_ChallengesListItemFocusable_C_ChallengeSlotCancelled__DelegateSignature::BP_ChallengeSlot_0' has a wrong offset!");

// Function UI_ChallengesListItemFocusable.UI_ChallengesListItemFocusable_C.ExecuteUbergraph_UI_ChallengesListItemFocusable
// 0x0060 (0x0060 - 0x0000)
struct UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_ChallengeSlot_C* Slot)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	E_ChallengeManagerState                       CallFunc_Get_Challenge_Manager_State_State;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AChallengeManager*                      CallFunc_GetChallengeManager_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ChallengeManager_C*                 K2Node_DynamicCast_AsBP_Challenge_Manager;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_Success;                        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ChallengeSlot_C*                    K2Node_CustomEvent_Slot;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable) == 0x000008, "Wrong alignment on UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable");
static_assert(sizeof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable) == 0x000060, "Wrong size on UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, EntryPoint) == 0x000000, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, CallFunc_Get_Challenge_Manager_State_State) == 0x000014, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::CallFunc_Get_Challenge_Manager_State_State' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000015, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, CallFunc_IsValid_ReturnValue) == 0x000016, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, CallFunc_GetChallengeManager_ReturnValue) == 0x000018, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_DynamicCast_AsBP_Challenge_Manager) == 0x000020, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_DynamicCast_AsBP_Challenge_Manager' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_CustomEvent_Success) == 0x00004C, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_CustomEvent_Slot) == 0x000050, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable, K2Node_ComponentBoundEvent_Sender) == 0x000058, "Member 'UI_ChallengesListItemFocusable_C_ExecuteUbergraph_UI_ChallengesListItemFocusable::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");

// Function UI_ChallengesListItemFocusable.UI_ChallengesListItemFocusable_C.BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_ChallengesListItemFocusable_C_BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ChallengesListItemFocusable_C_BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_ChallengesListItemFocusable_C_BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_ChallengesListItemFocusable_C_BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_ChallengesListItemFocusable_C_BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_ChallengesListItemFocusable_C_BndEvt__UI_ChallengesListItemFocusable_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_ChallengesListItemFocusable.UI_ChallengesListItemFocusable_C.OnStateChanged
// 0x0008 (0x0008 - 0x0000)
struct UI_ChallengesListItemFocusable_C_OnStateChanged final
{
public:
	class ABP_ChallengeSlot_C*                    Slot_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ChallengesListItemFocusable_C_OnStateChanged) == 0x000008, "Wrong alignment on UI_ChallengesListItemFocusable_C_OnStateChanged");
static_assert(sizeof(UI_ChallengesListItemFocusable_C_OnStateChanged) == 0x000008, "Wrong size on UI_ChallengesListItemFocusable_C_OnStateChanged");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_OnStateChanged, Slot_0) == 0x000000, "Member 'UI_ChallengesListItemFocusable_C_OnStateChanged::Slot_0' has a wrong offset!");

// Function UI_ChallengesListItemFocusable.UI_ChallengesListItemFocusable_C.OnChallengeCancelled
// 0x0001 (0x0001 - 0x0000)
struct UI_ChallengesListItemFocusable_C_OnChallengeCancelled final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ChallengesListItemFocusable_C_OnChallengeCancelled) == 0x000001, "Wrong alignment on UI_ChallengesListItemFocusable_C_OnChallengeCancelled");
static_assert(sizeof(UI_ChallengesListItemFocusable_C_OnChallengeCancelled) == 0x000001, "Wrong size on UI_ChallengesListItemFocusable_C_OnChallengeCancelled");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_OnChallengeCancelled, Success) == 0x000000, "Member 'UI_ChallengesListItemFocusable_C_OnChallengeCancelled::Success' has a wrong offset!");

// Function UI_ChallengesListItemFocusable.UI_ChallengesListItemFocusable_C.UpdateChallengeState
// 0x0258 (0x0258 - 0x0000)
struct UI_ChallengesListItemFocusable_C_UpdateChallengeState final
{
public:
	class ABP_ChallengeSlot_C*                    ChallengeSlotIn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ItemBattlePassRewardSlot_C*         AltRewardSlot;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USlotVisual*                            RewardSlot;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChallengeCategory                            CallFunc_Get_Challenge_Category_Category;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChallengeReward>               CallFunc_Get_Rewards_List_Rewards;                 // 0x0020(0x0010)(ReferenceParm)
	E_ChallengeSlotState                          CallFunc_Get_Slot_State_Slot_State;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0068(0x0028)()
	struct FDateTime                              CallFunc_Get_Next_Reset_Timestamp_Next_Reset_Timestamp; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Description_Text_Description_Text;    // 0x00A0(0x0018)()
	class FText                                   CallFunc_Get_Title_Text_Title_Text;                // 0x00B8(0x0018)()
	class FText                                   CallFunc_Get_Condition_Text_Condition_Text;        // 0x00D0(0x0018)()
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress;    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Current_Progress_Current_Progress;    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ItemSlotVisual_C*                   CallFunc_Create_ReturnValue;                       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FChallengeReward                       CallFunc_Array_Get_Item;                           // 0x0110(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0128(0x0018)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemRarity                            CallFunc_GetItemRarity_ReturnValue;                // 0x0150(0x0028)(ConstParm)
	class UTexture2D*                             CallFunc_GetIcon_ReturnValue;                      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0188(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0230(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ChallengesListItemFocusable_C_UpdateChallengeState) == 0x000008, "Wrong alignment on UI_ChallengesListItemFocusable_C_UpdateChallengeState");
static_assert(sizeof(UI_ChallengesListItemFocusable_C_UpdateChallengeState) == 0x000258, "Wrong size on UI_ChallengesListItemFocusable_C_UpdateChallengeState");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, ChallengeSlotIn) == 0x000000, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::ChallengeSlotIn' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, AltRewardSlot) == 0x000008, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::AltRewardSlot' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, RewardSlot) == 0x000010, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::RewardSlot' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Challenge_Category_Category) == 0x000018, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Challenge_Category_Category' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Rewards_List_Rewards) == 0x000020, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Rewards_List_Rewards' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Slot_State_Slot_State) == 0x000030, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Slot_State_Slot_State' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, K2Node_MakeStruct_SlateColor_1) == 0x000068, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Next_Reset_Timestamp_Next_Reset_Timestamp) == 0x000090, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Next_Reset_Timestamp_Next_Reset_Timestamp' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, Temp_int_Array_Index_Variable) == 0x000098, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Description_Text_Description_Text) == 0x0000A0, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Description_Text_Description_Text' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Title_Text_Title_Text) == 0x0000B8, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Title_Text_Title_Text' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Condition_Text_Condition_Text) == 0x0000D0, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Condition_Text_Condition_Text' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Maximum_Progress_Maximum_Progress) == 0x0000E8, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Maximum_Progress_Maximum_Progress' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Get_Current_Progress_Current_Progress) == 0x0000EC, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Get_Current_Progress_Current_Progress' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000F0, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Create_ReturnValue) == 0x0000F8, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, K2Node_SwitchEnum_CmpSuccess) == 0x000100, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_AddChild_ReturnValue) == 0x000108, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Array_Get_Item) == 0x000110, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Conv_IntToText_ReturnValue) == 0x000128, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_IsValidClass_ReturnValue) == 0x000140, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000148, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_GetItemRarity_ReturnValue) == 0x000150, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_GetItemRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_GetIcon_ReturnValue) == 0x000178, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000180, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, K2Node_MakeStruct_FormatArgumentData) == 0x000188, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001C8, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001D0, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000210, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, K2Node_MakeArray_Array) == 0x000218, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000228, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Format_ReturnValue) == 0x000230, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, Temp_int_Loop_Counter_Variable) == 0x000248, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Less_IntInt_ReturnValue) == 0x00024C, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_UpdateChallengeState, CallFunc_Add_IntInt_ReturnValue) == 0x000250, "Member 'UI_ChallengesListItemFocusable_C_UpdateChallengeState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function UI_ChallengesListItemFocusable.UI_ChallengesListItemFocusable_C.GetRemainingTime
// 0x0048 (0x0048 - 0x0000)
struct UI_ChallengesListItemFocusable_C_GetRemainingTime final
{
public:
	struct FDateTime                              Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   RemainingTime;                                     // 0x0008(0x0018)(Parm, OutParm)
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_FormatTimespanDHMS_ZeroClamped__TimespanDHMSOut; // 0x0030(0x0018)()
};
static_assert(alignof(UI_ChallengesListItemFocusable_C_GetRemainingTime) == 0x000008, "Wrong alignment on UI_ChallengesListItemFocusable_C_GetRemainingTime");
static_assert(sizeof(UI_ChallengesListItemFocusable_C_GetRemainingTime) == 0x000048, "Wrong size on UI_ChallengesListItemFocusable_C_GetRemainingTime");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_GetRemainingTime, Time) == 0x000000, "Member 'UI_ChallengesListItemFocusable_C_GetRemainingTime::Time' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_GetRemainingTime, RemainingTime) == 0x000008, "Member 'UI_ChallengesListItemFocusable_C_GetRemainingTime::RemainingTime' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_GetRemainingTime, CallFunc_GetCloudTime_ReturnValue) == 0x000020, "Member 'UI_ChallengesListItemFocusable_C_GetRemainingTime::CallFunc_GetCloudTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_GetRemainingTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000028, "Member 'UI_ChallengesListItemFocusable_C_GetRemainingTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ChallengesListItemFocusable_C_GetRemainingTime, CallFunc_FormatTimespanDHMS_ZeroClamped__TimespanDHMSOut) == 0x000030, "Member 'UI_ChallengesListItemFocusable_C_GetRemainingTime::CallFunc_FormatTimespanDHMS_ZeroClamped__TimespanDHMSOut' has a wrong offset!");

}

