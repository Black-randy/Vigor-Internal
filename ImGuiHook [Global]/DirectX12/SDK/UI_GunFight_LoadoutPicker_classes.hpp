#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunFight_LoadoutPicker

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "S_Gunfight_LoadoutSlotInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EGunFight_LoadoutState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GunFight_LoadoutPicker.UI_GunFight_LoadoutPicker_C
// 0x01C8 (0x04A0 - 0x02D8)
class UUI_GunFight_LoadoutPicker_C final : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeInLoadoutPick_Warning;                         // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AFKCheck_FadeIn;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_GameMenu;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_AFK_Check_Notify;                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_LoadoutPickWarning;                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Buttons;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_36;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_260;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                Input_BreakLock;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                Input_DirectionArrows;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                Input_Select;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                InputDown_arrow;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                InputLeft_arrow;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                InputRight_arrow_1;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                InputUp_arrow;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             LoadoutsScrollBox;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        LoadoutWidgetSwitcher;                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_192;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PanelBackground;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CircularProgress_C*                 ProgressBar_RemainingTime;                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StatusImage;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_FocusedLoadoutHint;                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_HC_Count;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_RemainingTime;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_TicketCount;                                  // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_BackgroundLobby_C*                  UI_BackgroundLobby;                                // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Gunfight_LoadoutWidget_C*           UI_Gunfight_LoadoutWidget_01;                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Gunfight_LoadoutWidget_C*           UI_Gunfight_LoadoutWidget_02;                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Gunfight_LoadoutWidget_C*           UI_Gunfight_LoadoutWidget_03;                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Gunfight_LoadoutWidget_C*           UI_Gunfight_LoadoutWidget_04;                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Gunfight_LoadoutWidget_C*           UI_Gunfight_LoadoutWidget_05;                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          LoadoutShown;                                      // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShouldAcceptInput;                                // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CircularProgressTimer;                             // 0x03F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             LoadoutSelected;                                   // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UUI_Gunfight_LoadoutWidget_C*>   LoadoutWidgets;                                    // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         AutoBlockerCounter;                                // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Gunfight_LoadoutWidget_C*           CurrentlyFocusedWidget;                            // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        PlayerController;                                  // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Gunfight_LoadoutSlotInfo>    LoadoutOptions;                                    // 0x0438(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         PreviousLoadoutIndex;                              // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             LoadoutsPrepared;                                  // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         RemainingTicketCount;                              // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         PreRoundTime;                                      // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         HC_Count;                                          // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HC_Blocked;                                        // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingTimerStartTime;                           // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInGameMenu;                                      // 0x0474(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputHeldStartTime;                                // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputLeftStickBlock;                               // 0x047C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeftStickAxisValue;                                // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBreakLockInputHoldStarted;                        // 0x0484(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInPlayerMenu;                                    // 0x0485(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnoughCurrency_ToBreakCurrentLoadout;             // 0x0486(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayerMarkedForKick;                               // 0x0487(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayerPickedALoadout;                              // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Gunfight_LoadoutWidget_C*           PreviousFocusedLoadout;                            // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPendingMenu;                                    // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLockMovement;                                     // 0x0499(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void LoadoutSelected__DelegateSignature(int32 LoadoutIndex);
	void LoadoutsPrepared__DelegateSignature();
	void ExecuteUbergraph_UI_GunFight_LoadoutPicker(int32 EntryPoint);
	void BndEvt__UI_GunFight_LoadoutPicker_InputRight_arrow_1_K2Node_ComponentBoundEvent_2_OnActionReleasedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void StartListeningClose(int32 PlayerIndex, EInputMode InputMode);
	void Close();
	void HandleGameMenuClose();
	void BndEvt__UI_GunFight_LoadoutPicker_Input_Select_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature();
	void ShowPickLoadoutWarning();
	void CheckIfLocalPlayerIsGettingKicked();
	void CustomEvent_0(class UMenuWidget* MenuWidget);
	void OpenPlayerMenu();
	void StopListeningForNavigation();
	void DirectionLeft_Event();
	void StartListeningForNavigation();
	void PlayerMenuReleased();
	void StartListeningForPlayerMenuOpens();
	void PlayErrorAnim(int32 LoadoutIndex);
	void HC_Update();
	void UpdateLoadoutWidgetPlayerCount(int32 LoadoutIndex, int32 PlayerCount);
	void BndEvt__Input_BreakLock_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature();
	void StartListeningForMoveStick();
	void MoveRightInputEvent(float AxisValue);
	void BndEvt__InputLeft_arrow_K2Node_ComponentBoundEvent_10_OnActionReleasedEvent__DelegateSignature();
	void SetInputStartTime(bool Reset);
	void OpenGameMenu();
	void OnGameMenuClosed(class UFlameWidget* FlameWidget);
	void GamemenuHolded();
	void StartListeningForMenuOpens();
	void GamemenuReleased();
	void GamemenuPressed();
	void TimeOutLock();
	void FocusFirstLoadout();
	void SetRemainingPreRoundTime(int32 StartsIn);
	void Destruct();
	void ShowLoadoutsDelayed();
	void PutLoadoutOnCooldown(int32 Index_0);
	void Input_Allow();
	void Input_Block();
	void UpdateLoadoutState(int32 LoadoutIndex, EGunFight_LoadoutState State);
	void BndEvt__Input_BreakLock_K2Node_ComponentBoundEvent_17_OnActionHoldEvent__DelegateSignature();
	void LoadoutBreakLock(class UUI_Gunfight_LoadoutWidget_C* Widget);
	void PreConstruct(bool IsDesignTime);
	void LoadoutWidgetPressed(class UUI_Gunfight_LoadoutWidget_C* Widget);
	void LoadoutWidgetFocused(class UUI_Gunfight_LoadoutWidget_C* Widget);
	void Construct();
	void DesignTime_InitUI();
	void GetAllLoadoutWidgets(TArray<class UUI_Gunfight_LoadoutWidget_C*>* LoadoutWidgets_0);
	void FillLoadoutWidgets();
	void GetAvailableLoadouts(TArray<class UUI_Gunfight_LoadoutWidget_C*>* AvailableLoadoutWidgets);
	void GetLoadoutWidget(int32 Loadout_Index, class UUI_Gunfight_LoadoutWidget_C** LoadoutWidget);
	void SetWidgetSwitcherIndex(int32 Index_0);
	void GetWidgetSwitcherIndex(int32* Index_0);
	void UpdateHC_Text(int32 CrownsBalance);
	void UpdateTicketCount(int32 Count);
	void UpdateTime(const class FText& Time);
	void UpdateLoadoutHint(EGunFight_LoadoutState LoadoutState);
	void UpdateButtonVisibility(EGunFight_LoadoutState LoadoutState);
	void OpenCheatMenu();
	class UWidget* CustomLoadoutNavigationCooldown(EUINavigation Navigation_0);
	void GetAvailableHC(int32* HC);

	class UWidget* GetWidgetToFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GunFight_LoadoutPicker_C">();
	}
	static class UUI_GunFight_LoadoutPicker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GunFight_LoadoutPicker_C>();
	}
};
static_assert(alignof(UUI_GunFight_LoadoutPicker_C) == 0x000008, "Wrong alignment on UUI_GunFight_LoadoutPicker_C");
static_assert(sizeof(UUI_GunFight_LoadoutPicker_C) == 0x0004A0, "Wrong size on UUI_GunFight_LoadoutPicker_C");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UberGraphFrame) == 0x0002D8, "Member 'UUI_GunFight_LoadoutPicker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, FadeInLoadoutPick_Warning) == 0x0002E0, "Member 'UUI_GunFight_LoadoutPicker_C::FadeInLoadoutPick_Warning' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, AFKCheck_FadeIn) == 0x0002E8, "Member 'UUI_GunFight_LoadoutPicker_C::AFKCheck_FadeIn' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, FadeIn) == 0x0002F0, "Member 'UUI_GunFight_LoadoutPicker_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, BackgroundBlur_GameMenu) == 0x0002F8, "Member 'UUI_GunFight_LoadoutPicker_C::BackgroundBlur_GameMenu' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Canvas_AFK_Check_Notify) == 0x000300, "Member 'UUI_GunFight_LoadoutPicker_C::Canvas_AFK_Check_Notify' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Canvas_LoadoutPickWarning) == 0x000308, "Member 'UUI_GunFight_LoadoutPicker_C::Canvas_LoadoutPickWarning' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, HorizontalBox_Buttons) == 0x000310, "Member 'UUI_GunFight_LoadoutPicker_C::HorizontalBox_Buttons' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Image) == 0x000318, "Member 'UUI_GunFight_LoadoutPicker_C::Image' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Image_36) == 0x000320, "Member 'UUI_GunFight_LoadoutPicker_C::Image_36' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Image_260) == 0x000328, "Member 'UUI_GunFight_LoadoutPicker_C::Image_260' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Input_BreakLock) == 0x000330, "Member 'UUI_GunFight_LoadoutPicker_C::Input_BreakLock' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Input_DirectionArrows) == 0x000338, "Member 'UUI_GunFight_LoadoutPicker_C::Input_DirectionArrows' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Input_Select) == 0x000340, "Member 'UUI_GunFight_LoadoutPicker_C::Input_Select' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, InputDown_arrow) == 0x000348, "Member 'UUI_GunFight_LoadoutPicker_C::InputDown_arrow' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, InputLeft_arrow) == 0x000350, "Member 'UUI_GunFight_LoadoutPicker_C::InputLeft_arrow' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, InputRight_arrow_1) == 0x000358, "Member 'UUI_GunFight_LoadoutPicker_C::InputRight_arrow_1' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, InputUp_arrow) == 0x000360, "Member 'UUI_GunFight_LoadoutPicker_C::InputUp_arrow' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LoadoutsScrollBox) == 0x000368, "Member 'UUI_GunFight_LoadoutPicker_C::LoadoutsScrollBox' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LoadoutWidgetSwitcher) == 0x000370, "Member 'UUI_GunFight_LoadoutPicker_C::LoadoutWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Overlay_192) == 0x000378, "Member 'UUI_GunFight_LoadoutPicker_C::Overlay_192' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, PanelBackground) == 0x000380, "Member 'UUI_GunFight_LoadoutPicker_C::PanelBackground' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, ProgressBar_RemainingTime) == 0x000388, "Member 'UUI_GunFight_LoadoutPicker_C::ProgressBar_RemainingTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, StatusImage) == 0x000390, "Member 'UUI_GunFight_LoadoutPicker_C::StatusImage' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Text_FocusedLoadoutHint) == 0x000398, "Member 'UUI_GunFight_LoadoutPicker_C::Text_FocusedLoadoutHint' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Text_HC_Count) == 0x0003A0, "Member 'UUI_GunFight_LoadoutPicker_C::Text_HC_Count' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Text_RemainingTime) == 0x0003A8, "Member 'UUI_GunFight_LoadoutPicker_C::Text_RemainingTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, Text_TicketCount) == 0x0003B0, "Member 'UUI_GunFight_LoadoutPicker_C::Text_TicketCount' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UI_BackgroundLobby) == 0x0003B8, "Member 'UUI_GunFight_LoadoutPicker_C::UI_BackgroundLobby' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UI_FlameSafezone) == 0x0003C0, "Member 'UUI_GunFight_LoadoutPicker_C::UI_FlameSafezone' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UI_Gunfight_LoadoutWidget_01) == 0x0003C8, "Member 'UUI_GunFight_LoadoutPicker_C::UI_Gunfight_LoadoutWidget_01' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UI_Gunfight_LoadoutWidget_02) == 0x0003D0, "Member 'UUI_GunFight_LoadoutPicker_C::UI_Gunfight_LoadoutWidget_02' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UI_Gunfight_LoadoutWidget_03) == 0x0003D8, "Member 'UUI_GunFight_LoadoutPicker_C::UI_Gunfight_LoadoutWidget_03' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UI_Gunfight_LoadoutWidget_04) == 0x0003E0, "Member 'UUI_GunFight_LoadoutPicker_C::UI_Gunfight_LoadoutWidget_04' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, UI_Gunfight_LoadoutWidget_05) == 0x0003E8, "Member 'UUI_GunFight_LoadoutPicker_C::UI_Gunfight_LoadoutWidget_05' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LoadoutShown) == 0x0003F0, "Member 'UUI_GunFight_LoadoutPicker_C::LoadoutShown' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, bShouldAcceptInput) == 0x0003F1, "Member 'UUI_GunFight_LoadoutPicker_C::bShouldAcceptInput' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, CircularProgressTimer) == 0x0003F8, "Member 'UUI_GunFight_LoadoutPicker_C::CircularProgressTimer' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LoadoutSelected) == 0x000400, "Member 'UUI_GunFight_LoadoutPicker_C::LoadoutSelected' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LoadoutWidgets) == 0x000410, "Member 'UUI_GunFight_LoadoutPicker_C::LoadoutWidgets' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, AutoBlockerCounter) == 0x000420, "Member 'UUI_GunFight_LoadoutPicker_C::AutoBlockerCounter' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, CurrentlyFocusedWidget) == 0x000428, "Member 'UUI_GunFight_LoadoutPicker_C::CurrentlyFocusedWidget' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, PlayerController) == 0x000430, "Member 'UUI_GunFight_LoadoutPicker_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LoadoutOptions) == 0x000438, "Member 'UUI_GunFight_LoadoutPicker_C::LoadoutOptions' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, PreviousLoadoutIndex) == 0x000448, "Member 'UUI_GunFight_LoadoutPicker_C::PreviousLoadoutIndex' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LoadoutsPrepared) == 0x000450, "Member 'UUI_GunFight_LoadoutPicker_C::LoadoutsPrepared' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, RemainingTicketCount) == 0x000460, "Member 'UUI_GunFight_LoadoutPicker_C::RemainingTicketCount' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, PreRoundTime) == 0x000464, "Member 'UUI_GunFight_LoadoutPicker_C::PreRoundTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, HC_Count) == 0x000468, "Member 'UUI_GunFight_LoadoutPicker_C::HC_Count' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, HC_Blocked) == 0x00046C, "Member 'UUI_GunFight_LoadoutPicker_C::HC_Blocked' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, RemainingTimerStartTime) == 0x000470, "Member 'UUI_GunFight_LoadoutPicker_C::RemainingTimerStartTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, IsInGameMenu) == 0x000474, "Member 'UUI_GunFight_LoadoutPicker_C::IsInGameMenu' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, InputHeldStartTime) == 0x000478, "Member 'UUI_GunFight_LoadoutPicker_C::InputHeldStartTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, InputLeftStickBlock) == 0x00047C, "Member 'UUI_GunFight_LoadoutPicker_C::InputLeftStickBlock' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, LeftStickAxisValue) == 0x000480, "Member 'UUI_GunFight_LoadoutPicker_C::LeftStickAxisValue' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, bBreakLockInputHoldStarted) == 0x000484, "Member 'UUI_GunFight_LoadoutPicker_C::bBreakLockInputHoldStarted' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, IsInPlayerMenu) == 0x000485, "Member 'UUI_GunFight_LoadoutPicker_C::IsInPlayerMenu' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, bEnoughCurrency_ToBreakCurrentLoadout) == 0x000486, "Member 'UUI_GunFight_LoadoutPicker_C::bEnoughCurrency_ToBreakCurrentLoadout' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, PlayerMarkedForKick) == 0x000487, "Member 'UUI_GunFight_LoadoutPicker_C::PlayerMarkedForKick' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, PlayerPickedALoadout) == 0x000488, "Member 'UUI_GunFight_LoadoutPicker_C::PlayerPickedALoadout' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, PreviousFocusedLoadout) == 0x000490, "Member 'UUI_GunFight_LoadoutPicker_C::PreviousFocusedLoadout' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, HasPendingMenu) == 0x000498, "Member 'UUI_GunFight_LoadoutPicker_C::HasPendingMenu' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_LoadoutPicker_C, bLockMovement) == 0x000499, "Member 'UUI_GunFight_LoadoutPicker_C::bLockMovement' has a wrong offset!");

}

