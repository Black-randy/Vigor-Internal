#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_Teams

#include "Basic.hpp"

#include "E_TeamsMatchPhase_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Match Phase Changed__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature final
{
public:
	E_TeamsMatchPhase                             Old_Phase;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             New_Phase;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature) == 0x000001, "Wrong alignment on BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature");
static_assert(sizeof(BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature) == 0x000002, "Wrong size on BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature");
static_assert(offsetof(BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature, Old_Phase) == 0x000000, "Member 'BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature::Old_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature, New_Phase) == 0x000001, "Member 'BP_GameMode_Teams_C_Match_Phase_Changed__DelegateSignature::New_Phase' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.ExecuteUbergraph_BP_GameMode_Teams
// 0x0390 (0x0390 - 0x0000)
struct BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams_2;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams_3;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer_1;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_NewState;                             // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_TeamsMatchPhase Old_Phase, E_TeamsMatchPhase New_Phase)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams_4;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TeamsMatchPhase                             K2Node_CustomEvent_Old_Phase;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             K2Node_CustomEvent_New_Phase;                      // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Request_Transition_to_Phase_Success;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Request_Transition_to_Phase_Success_1;    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams_5;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams_6;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success; // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_1; // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_2; // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_3; // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_4; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_5; // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_6; // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_7; // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Phase_Success_2;    // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Next_Phase_Success_8; // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x01D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Change_Phase_Phase_Changed;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Are_Loadouts_Loaded_Loadouts_Loaded;      // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerStart_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0210(0x0010)(ReferenceParm)
	class AController*                            K2Node_Event_NewPlayer;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Teams_C*           K2Node_DynamicCast_AsBP_Player_Controller_Teams;   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item_2;                         // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Teams_C*                  K2Node_DynamicCast_AsBP_Character_Teams;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplyLoadoutInfo_ReturnValue;             // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Teams_C*           K2Node_CustomEvent_Player_Controller;              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayerCanRestart_ReturnValue;             // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_1;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool WasSuccess)>              K2Node_CreateDelegate_OutputDelegate_2;            // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_GS_SubLevelManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x02C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x02D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_SLM_Load_Complete;              // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                K2Node_CustomEvent_NewItem;                        // 0x02E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           K2Node_DynamicCast_AsBP_Player_Controller_Teams_1; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_3;                         // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue_1;       // 0x0308(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_Array_Get_Item_4;                         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MapTexture_C*>               CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0338(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_MapTexture_C*                       CallFunc_Array_Get_Item_5;                         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams");
static_assert(sizeof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams) == 0x000390, "Wrong size on BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, EntryPoint) == 0x000000, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue_1) == 0x000028, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000030, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Game_State_Teams_1) == 0x000040, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Game_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Get_Teams_Teams) == 0x000050, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Array_Index_Variable_3) == 0x00007C, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue_2) == 0x000080, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Loop_Counter_Variable_2) == 0x000088, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Game_State_Teams_2) == 0x000090, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Game_State_Teams_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Loop_Counter_Variable_3) == 0x0000A4, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_bool_True_if_break_was_hit_Variable) == 0x0000AC, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Array_Index_Variable_4) == 0x0000B0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue_3) == 0x0000B8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Game_State_Teams_3) == 0x0000C0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Game_State_Teams_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_Event_NewPlayer_1) == 0x0000D0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_Event_NewPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_2) == 0x0000D8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_Event_NewState) == 0x0000DC, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_SwitchName_CmpSuccess) == 0x0000E4, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_Event_DeltaSeconds) == 0x0000E8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Loop_Counter_Variable_4) == 0x0000EC, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue_4) == 0x0000F8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CreateDelegate_OutputDelegate_1) == 0x000100, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Game_State_Teams_4) == 0x000110, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Game_State_Teams_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_4) == 0x000118, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_3) == 0x00012C, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Less_IntInt_ReturnValue) == 0x00012D, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000130, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_5) == 0x000138, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CustomEvent_Old_Phase) == 0x000139, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CustomEvent_Old_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CustomEvent_New_Phase) == 0x00013A, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CustomEvent_New_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000140, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000150, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Concat_StrStr_ReturnValue) == 0x000160, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Phase_Success) == 0x000170, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Phase_Success' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000178, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Phase_Success_1) == 0x000188, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Phase_Success_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue_5) == 0x0001A0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Game_State_Teams_5) == 0x0001A8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Game_State_Teams_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_6) == 0x0001B0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001B4, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue_6) == 0x0001B8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Game_State_Teams_6) == 0x0001C0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Game_State_Teams_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_7) == 0x0001C8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C9, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_4) == 0x0001CA, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001CB, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success) == 0x0001CC, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_1) == 0x0001CD, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_2) == 0x0001CE, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_3) == 0x0001CF, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_4) == 0x0001D0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_5) == 0x0001D1, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_6) == 0x0001D2, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_7) == 0x0001D3, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Phase_Success_2) == 0x0001D4, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Phase_Success_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Request_Transition_to_Next_Phase_Success_8) == 0x0001D5, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Request_Transition_to_Next_Phase_Success_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetPlayerControllers_ReturnValue) == 0x0001D8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Change_Phase_Phase_Changed) == 0x0001E8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Change_Phase_Phase_Changed' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Length_ReturnValue_2) == 0x0001F8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000200, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_8) == 0x000208, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Less_IntInt_ReturnValue_1) == 0x000209, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Are_Loadouts_Loaded_Loadouts_Loaded) == 0x00020A, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Are_Loadouts_Loaded_Loadouts_Loaded' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetAllActorsOfClass_OutActors) == 0x000210, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_Event_NewPlayer) == 0x000220, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Array_Index_Variable_5) == 0x000228, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Player_Controller_Teams) == 0x000230, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Player_Controller_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_9) == 0x000238, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Get_Item_2) == 0x000240, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_5) == 0x000248, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_K2_GetPawn_ReturnValue) == 0x000250, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Character_Teams) == 0x000258, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Character_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_10) == 0x000260, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_ApplyLoadoutInfo_ReturnValue) == 0x000261, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_ApplyLoadoutInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CustomEvent_Player_Controller) == 0x000268, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CustomEvent_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_PlayerCanRestart_ReturnValue) == 0x000270, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_PlayerCanRestart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Player_State_Teams_1) == 0x000278, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Player_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_11) == 0x000280, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Subtract_IntInt_ReturnValue) == 0x000284, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_6) == 0x000288, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00028C, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, Temp_int_Loop_Counter_Variable_5) == 0x000290, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Less_IntInt_ReturnValue_2) == 0x000294, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Add_IntInt_ReturnValue_6) == 0x000298, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00029C, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetGameState_ReturnValue_7) == 0x0002A0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002A8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetComponentByClass_ReturnValue) == 0x0002B8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002C0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0002D0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_7) == 0x0002D8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CustomEvent_SLM_Load_Complete) == 0x0002D9, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CustomEvent_SLM_Load_Complete' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_CustomEvent_NewItem) == 0x0002E0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_CustomEvent_NewItem' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Player_Controller_Teams_1) == 0x0002E8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Player_Controller_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_12) == 0x0002F0, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Add_ReturnValue) == 0x0002F4, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Get_Item_3) == 0x0002F8, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Length_ReturnValue_3) == 0x000300, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Less_IntInt_ReturnValue_3) == 0x000304, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetPlayerControllers_ReturnValue_1) == 0x000308, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetPlayerControllers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Get_Item_4) == 0x000318, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Length_ReturnValue_4) == 0x000320, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000328, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, K2Node_DynamicCast_bSuccess_13) == 0x000330, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Less_IntInt_ReturnValue_4) == 0x000331, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000338, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000348, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Get_Item_5) == 0x000358, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000360, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_IsValid_ReturnValue_8) == 0x000370, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000378, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Array_Length_ReturnValue_5) == 0x000388, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams, CallFunc_Less_IntInt_ReturnValue_5) == 0x00038C, "Member 'BP_GameMode_Teams_C_ExecuteUbergraph_BP_GameMode_Teams::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.PostLogin
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Teams_C_PostLogin final
{
public:
	const class APlayerController*                NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_PostLogin) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_PostLogin");
static_assert(sizeof(BP_GameMode_Teams_C_PostLogin) == 0x000008, "Wrong size on BP_GameMode_Teams_C_PostLogin");
static_assert(offsetof(BP_GameMode_Teams_C_PostLogin, NewItem) == 0x000000, "Member 'BP_GameMode_Teams_C_PostLogin::NewItem' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.SubLevelsReturned
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_Teams_C_SubLevelsReturned final
{
public:
	bool                                          SLM_Load_Complete;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_SubLevelsReturned) == 0x000001, "Wrong alignment on BP_GameMode_Teams_C_SubLevelsReturned");
static_assert(sizeof(BP_GameMode_Teams_C_SubLevelsReturned) == 0x000001, "Wrong size on BP_GameMode_Teams_C_SubLevelsReturned");
static_assert(offsetof(BP_GameMode_Teams_C_SubLevelsReturned, SLM_Load_Complete) == 0x000000, "Member 'BP_GameMode_Teams_C_SubLevelsReturned::SLM_Load_Complete' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Respawn Player
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Teams_C_Respawn_Player final
{
public:
	class ABP_PlayerController_Teams_C*           Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_Respawn_Player) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Respawn_Player");
static_assert(sizeof(BP_GameMode_Teams_C_Respawn_Player) == 0x000008, "Wrong size on BP_GameMode_Teams_C_Respawn_Player");
static_assert(offsetof(BP_GameMode_Teams_C_Respawn_Player, Player_Controller) == 0x000000, "Member 'BP_GameMode_Teams_C_Respawn_Player::Player_Controller' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.K2_OnRestartPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Teams_C_K2_OnRestartPlayer final
{
public:
	class AController*                            NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_K2_OnRestartPlayer) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_K2_OnRestartPlayer");
static_assert(sizeof(BP_GameMode_Teams_C_K2_OnRestartPlayer) == 0x000008, "Wrong size on BP_GameMode_Teams_C_K2_OnRestartPlayer");
static_assert(offsetof(BP_GameMode_Teams_C_K2_OnRestartPlayer, NewPlayer) == 0x000000, "Member 'BP_GameMode_Teams_C_K2_OnRestartPlayer::NewPlayer' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.On Match Phase Changed
// 0x0002 (0x0002 - 0x0000)
struct BP_GameMode_Teams_C_On_Match_Phase_Changed final
{
public:
	E_TeamsMatchPhase                             Old_Phase;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             New_Phase;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_On_Match_Phase_Changed) == 0x000001, "Wrong alignment on BP_GameMode_Teams_C_On_Match_Phase_Changed");
static_assert(sizeof(BP_GameMode_Teams_C_On_Match_Phase_Changed) == 0x000002, "Wrong size on BP_GameMode_Teams_C_On_Match_Phase_Changed");
static_assert(offsetof(BP_GameMode_Teams_C_On_Match_Phase_Changed, Old_Phase) == 0x000000, "Member 'BP_GameMode_Teams_C_On_Match_Phase_Changed::Old_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_On_Match_Phase_Changed, New_Phase) == 0x000001, "Member 'BP_GameMode_Teams_C_On_Match_Phase_Changed::New_Phase' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameMode_Teams_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameMode_Teams_C_ReceiveTick");
static_assert(sizeof(BP_GameMode_Teams_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameMode_Teams_C_ReceiveTick");
static_assert(offsetof(BP_GameMode_Teams_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameMode_Teams_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.K2_OnSetMatchState
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Teams_C_K2_OnSetMatchState final
{
public:
	class FName                                   NewState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_K2_OnSetMatchState) == 0x000004, "Wrong alignment on BP_GameMode_Teams_C_K2_OnSetMatchState");
static_assert(sizeof(BP_GameMode_Teams_C_K2_OnSetMatchState) == 0x000008, "Wrong size on BP_GameMode_Teams_C_K2_OnSetMatchState");
static_assert(offsetof(BP_GameMode_Teams_C_K2_OnSetMatchState, NewState) == 0x000000, "Member 'BP_GameMode_Teams_C_K2_OnSetMatchState::NewState' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Teams_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_K2_PostLogin) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_K2_PostLogin");
static_assert(sizeof(BP_GameMode_Teams_C_K2_PostLogin) == 0x000008, "Wrong size on BP_GameMode_Teams_C_K2_PostLogin");
static_assert(offsetof(BP_GameMode_Teams_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'BP_GameMode_Teams_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.ChoosePlayerStart
// 0x01A0 (0x01A0 - 0x0000)
struct BP_GameMode_Teams_C_ChoosePlayerStart final
{
public:
	class AController*                            Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerStart_C*>              Other_Player_Starts;                               // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_PlayerStart_C*>              Occupied_Matching_Player_Starts;                   // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_PlayerStart_C*>              Free_Matching_Player_Starts;                       // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_PlayerStart_C*>              Player_Starts;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_PlayerStart_C*                      Chosen_Player_Start;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Side_Side;                            // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_2;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerStart_C*                      CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEncroachment_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_ChoosePlayerStart) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_ChoosePlayerStart");
static_assert(sizeof(BP_GameMode_Teams_C_ChoosePlayerStart) == 0x0001A0, "Wrong size on BP_GameMode_Teams_C_ChoosePlayerStart");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Player) == 0x000000, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Other_Player_Starts) == 0x000010, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Other_Player_Starts' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Occupied_Matching_Player_Starts) == 0x000020, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Occupied_Matching_Player_Starts' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Free_Matching_Player_Starts) == 0x000030, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Free_Matching_Player_Starts' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Player_Starts) == 0x000040, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Player_Starts' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Chosen_Player_Start) == 0x000050, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Chosen_Player_Start' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000060, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Get_Side_Side) == 0x00006C, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Get_Side_Side' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Conv_NameToString_ReturnValue) == 0x000078, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Len_ReturnValue) == 0x000088, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_GetDisplayName_ReturnValue) == 0x000098, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000A8, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D8, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E8, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Not_PreBool_ReturnValue) == 0x0000FD, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000104, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Not_PreBool_ReturnValue_1) == 0x00010C, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_RandomInteger_ReturnValue) == 0x000110, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_3) == 0x000114, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_4) == 0x000118, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_RandomInteger_ReturnValue_1) == 0x00011C, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000120, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Not_PreBool_ReturnValue_2) == 0x000121, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_5) == 0x000124, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_6) == 0x000128, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_RandomInteger_ReturnValue_2) == 0x00012C, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_RandomInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000130, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Not_PreBool_ReturnValue_3) == 0x000131, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_GetDisplayName_ReturnValue_2) == 0x000138, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000150, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Add_ReturnValue) == 0x000160, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Add_ReturnValue_1) == 0x000164, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_CheckEncroachment_ReturnValue) == 0x000168, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_CheckEncroachment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Add_ReturnValue_2) == 0x00016C, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000171, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_7) == 0x000174, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_GetDisplayName_ReturnValue_3) == 0x000180, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ChoosePlayerStart, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000190, "Member 'BP_GameMode_Teams_C_ChoosePlayerStart::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.ReadyToStartMatch
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameMode_Teams_C_ReadyToStartMatch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Failure_reason;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Are_Teams_Set_and_Full_Teams_Set_and_Full; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GS_SubLevelManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReadyToStartMatch_ReturnValue;            // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_ReadyToStartMatch) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_ReadyToStartMatch");
static_assert(sizeof(BP_GameMode_Teams_C_ReadyToStartMatch) == 0x0000B0, "Wrong size on BP_GameMode_Teams_C_ReadyToStartMatch");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, ReturnValue) == 0x000000, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, Failure_reason) == 0x000004, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::Failure_reason' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, Temp_string_Variable) == 0x000008, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000020, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, Temp_string_Variable_1) == 0x000030, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_Are_Teams_Set_and_Full_Teams_Set_and_Full) == 0x000041, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_Are_Teams_Set_and_Full_Teams_Set_and_Full' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, Temp_string_Variable_2) == 0x000048, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, Temp_string_Variable_3) == 0x000058, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_GetGameState_ReturnValue_1) == 0x000068, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_Not_PreBool_ReturnValue) == 0x00007D, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_IsValid_ReturnValue_1) == 0x00007E, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, Temp_int_Variable) == 0x000080, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, K2Node_Select_Default) == 0x000088, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A9, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToStartMatch, CallFunc_ReadyToStartMatch_ReturnValue) == 0x0000AA, "Member 'BP_GameMode_Teams_C_ReadyToStartMatch::CallFunc_ReadyToStartMatch_ReturnValue' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Get Sides
// 0x0010 (0x0010 - 0x0000)
struct BP_GameMode_Teams_C_Get_Sides final
{
public:
	TArray<class FName>                           Sides_0;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_GameMode_Teams_C_Get_Sides) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Get_Sides");
static_assert(sizeof(BP_GameMode_Teams_C_Get_Sides) == 0x000010, "Wrong size on BP_GameMode_Teams_C_Get_Sides");
static_assert(offsetof(BP_GameMode_Teams_C_Get_Sides, Sides_0) == 0x000000, "Member 'BP_GameMode_Teams_C_Get_Sides::Sides_0' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Get Sides Count
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Teams_C_Get_Sides_Count final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_Get_Sides_Count) == 0x000004, "Wrong alignment on BP_GameMode_Teams_C_Get_Sides_Count");
static_assert(sizeof(BP_GameMode_Teams_C_Get_Sides_Count) == 0x000008, "Wrong size on BP_GameMode_Teams_C_Get_Sides_Count");
static_assert(offsetof(BP_GameMode_Teams_C_Get_Sides_Count, ReturnValue) == 0x000000, "Member 'BP_GameMode_Teams_C_Get_Sides_Count::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Get_Sides_Count, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_GameMode_Teams_C_Get_Sides_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Store Initial Loadouts
// 0x0078 (0x0078 - 0x0000)
struct BP_GameMode_Teams_C_Store_Initial_Loadouts final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Teams_C*           K2Node_DynamicCast_AsBP_Player_Controller_Teams;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLoadoutInfo                           CallFunc_GetCurrentLoadout_OutLoadout;             // 0x0048(0x0028)()
	bool                                          CallFunc_GetCurrentLoadout_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_Store_Initial_Loadouts) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Store_Initial_Loadouts");
static_assert(sizeof(BP_GameMode_Teams_C_Store_Initial_Loadouts) == 0x000078, "Wrong size on BP_GameMode_Teams_C_Store_Initial_Loadouts");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, CallFunc_GetPlayerControllers_ReturnValue) == 0x000010, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, K2Node_DynamicCast_AsBP_Player_Controller_Teams) == 0x000038, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::K2Node_DynamicCast_AsBP_Player_Controller_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, CallFunc_GetCurrentLoadout_OutLoadout) == 0x000048, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::CallFunc_GetCurrentLoadout_OutLoadout' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Store_Initial_Loadouts, CallFunc_GetCurrentLoadout_ReturnValue) == 0x000070, "Member 'BP_GameMode_Teams_C_Store_Initial_Loadouts::CallFunc_GetCurrentLoadout_ReturnValue' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Request Transition to Phase
// 0x0058 (0x0058 - 0x0000)
struct BP_GameMode_Teams_C_Request_Transition_to_Phase final
{
public:
	E_TeamsMatchPhase                             New_Phase;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TeamsMatchPhase                             Old_Phase;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Match_Phase_Transition_Valid_Transition_Valid; // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             CallFunc_Array_Get_Item;                           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_Request_Transition_to_Phase) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Request_Transition_to_Phase");
static_assert(sizeof(BP_GameMode_Teams_C_Request_Transition_to_Phase) == 0x000058, "Wrong size on BP_GameMode_Teams_C_Request_Transition_to_Phase");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, New_Phase) == 0x000000, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::New_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, Success) == 0x000001, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::Success' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, Old_Phase) == 0x000002, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::Old_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000020, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Is_Match_Phase_Transition_Valid_Transition_Valid) == 0x00004D, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Is_Match_Phase_Transition_Valid_Transition_Valid' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Array_LastIndex_ReturnValue) == 0x000050, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Phase, CallFunc_Array_Get_Item) == 0x000054, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Phase::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Request Transition to Next Phase
// 0x0040 (0x0040 - 0x0000)
struct BP_GameMode_Teams_C_Request_Transition_to_Next_Phase final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Request_Transition_to_Phase_Success;      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Request_Transition_to_Next_Phase");
static_assert(sizeof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase) == 0x000040, "Wrong size on BP_GameMode_Teams_C_Request_Transition_to_Next_Phase");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, Success) == 0x000000, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::Success' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000010, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, CallFunc_GetGameState_ReturnValue_1) == 0x000020, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, CallFunc_Add_ByteByte_ReturnValue) == 0x000028, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, K2Node_DynamicCast_AsBP_Game_State_Teams_1) == 0x000030, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::K2Node_DynamicCast_AsBP_Game_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, CallFunc_GetValidValue_ReturnValue) == 0x000039, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, CallFunc_Less_ByteByte_ReturnValue) == 0x00003A, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Request_Transition_to_Next_Phase, CallFunc_Request_Transition_to_Phase_Success) == 0x00003B, "Member 'BP_GameMode_Teams_C_Request_Transition_to_Next_Phase::CallFunc_Request_Transition_to_Phase_Success' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Is Match Phase Transition Valid
// 0x0050 (0x0050 - 0x0000)
struct BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid final
{
public:
	E_TeamsMatchPhase                             From;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             To;                                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Transition_Valid;                                  // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TeamsMatchPhase                             Phase;                                             // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_9;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TeamsMatchPhase>                     K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             CallFunc_Array_Get_Item;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid");
static_assert(sizeof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid) == 0x000050, "Wrong size on BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, From) == 0x000000, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::From' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, To) == 0x000001, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::To' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, Transition_Valid) == 0x000002, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::Transition_Valid' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, Phase) == 0x000003, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, Temp_int_Variable) == 0x000004, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, Temp_bool_Variable) == 0x000009, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00000A, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000010, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000011, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000012, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, Temp_bool_True_if_break_was_hit_Variable) == 0x000013, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000014, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x000015, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x000016, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x000017, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001A, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001B, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001C, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00001D, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00001E, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00001F, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000020, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_MakeLiteralByte_ReturnValue_9) == 0x000028, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_MakeLiteralByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000030, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00004E, "Member 'BP_GameMode_Teams_C_Is_Match_Phase_Transition_Valid::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Change Phase
// 0x0028 (0x0028 - 0x0000)
struct BP_GameMode_Teams_C_Change_Phase final
{
public:
	bool                                          Phase_Changed;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TeamsMatchPhase                             New_Phase;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             Old_Phase;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TeamsMatchPhase                             CallFunc_Array_Get_Item;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_Change_Phase) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Change_Phase");
static_assert(sizeof(BP_GameMode_Teams_C_Change_Phase) == 0x000028, "Wrong size on BP_GameMode_Teams_C_Change_Phase");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, Phase_Changed) == 0x000000, "Member 'BP_GameMode_Teams_C_Change_Phase::Phase_Changed' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, New_Phase) == 0x000001, "Member 'BP_GameMode_Teams_C_Change_Phase::New_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, Old_Phase) == 0x000002, "Member 'BP_GameMode_Teams_C_Change_Phase::Old_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_Change_Phase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000010, "Member 'BP_GameMode_Teams_C_Change_Phase::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_Teams_C_Change_Phase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_GameMode_Teams_C_Change_Phase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, CallFunc_Array_Get_Item) == 0x00001A, "Member 'BP_GameMode_Teams_C_Change_Phase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_GameMode_Teams_C_Change_Phase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_GameMode_Teams_C_Change_Phase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Change_Phase, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_GameMode_Teams_C_Change_Phase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.ReadyToEndMatch
// 0x0028 (0x0028 - 0x0000)
struct BP_GameMode_Teams_C_ReadyToEndMatch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReadyToEndMatch_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_ReadyToEndMatch) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_ReadyToEndMatch");
static_assert(sizeof(BP_GameMode_Teams_C_ReadyToEndMatch) == 0x000028, "Wrong size on BP_GameMode_Teams_C_ReadyToEndMatch");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToEndMatch, ReturnValue) == 0x000000, "Member 'BP_GameMode_Teams_C_ReadyToEndMatch::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToEndMatch, CallFunc_ReadyToEndMatch_ReturnValue) == 0x000001, "Member 'BP_GameMode_Teams_C_ReadyToEndMatch::CallFunc_ReadyToEndMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToEndMatch, CallFunc_Conv_BoolToString_ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_ReadyToEndMatch::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_ReadyToEndMatch, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_GameMode_Teams_C_ReadyToEndMatch::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.Are Loadouts Loaded
// 0x00C0 (0x00C0 - 0x0000)
struct BP_GameMode_Teams_C_Are_Loadouts_Loaded final
{
public:
	bool                                          Loadouts_Loaded;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Teams_C*           K2Node_DynamicCast_AsBP_Player_Controller_Teams;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Teams_C_Are_Loadouts_Loaded) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_Are_Loadouts_Loaded");
static_assert(sizeof(BP_GameMode_Teams_C_Are_Loadouts_Loaded) == 0x0000C0, "Wrong size on BP_GameMode_Teams_C_Are_Loadouts_Loaded");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, Loadouts_Loaded) == 0x000000, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::Loadouts_Loaded' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, Temp_bool_Variable) == 0x000008, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Conv_BoolToString_ReturnValue) == 0x000010, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_GetPlayerControllers_ReturnValue) == 0x000038, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, K2Node_DynamicCast_AsBP_Player_Controller_Teams) == 0x000060, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::K2Node_DynamicCast_AsBP_Player_Controller_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000070, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_Are_Loadouts_Loaded, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'BP_GameMode_Teams_C_Are_Loadouts_Loaded::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_GameMode_Teams.BP_GameMode_Teams_C.PlayerCanRestart
// 0x0040 (0x0040 - 0x0000)
struct BP_GameMode_Teams_C_PlayerCanRestart final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCanRestart_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Teams_C_PlayerCanRestart) == 0x000008, "Wrong alignment on BP_GameMode_Teams_C_PlayerCanRestart");
static_assert(sizeof(BP_GameMode_Teams_C_PlayerCanRestart) == 0x000040, "Wrong size on BP_GameMode_Teams_C_PlayerCanRestart");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, Player) == 0x000000, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, ReturnValue) == 0x000008, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000010, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_Greater_IntInt_ReturnValue) == 0x00001B, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_PlayerCanRestart_ReturnValue) == 0x00001D, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_PlayerCanRestart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_MakeLiteralByte_ReturnValue) == 0x000028, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000030, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Teams_C_PlayerCanRestart, CallFunc_Less_ByteByte_ReturnValue) == 0x000039, "Member 'BP_GameMode_Teams_C_PlayerCanRestart::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");

}

