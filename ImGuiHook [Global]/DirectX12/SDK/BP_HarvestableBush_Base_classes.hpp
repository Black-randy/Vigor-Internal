#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HarvestableBush_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Lootable_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HarvestableBush_Base.BP_HarvestableBush_Base_C
// 0x0038 (0x03E0 - 0x03A8)
class ABP_HarvestableBush_Base_C : public ABP_Lootable_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HarvestableBush_Base_C;          // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LootingPSC;                                        // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bBushAnim;                                         // 0x03C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DefaultMaterial;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ShakeMaterial;                                     // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FlashCount;                                        // 0x03D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void OnRep_FlashCount();
	void OnRep_bBushAnim();
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature_1(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_PreInteraction_Start_on_Server__DelegateSignature_1(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_4_PreInteraction_End_on_Server__DelegateSignature_1(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor, bool Canceled);
	void ExecuteUbergraph_BP_HarvestableBush_Base(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HarvestableBush_Base_C">();
	}
	static class ABP_HarvestableBush_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HarvestableBush_Base_C>();
	}
};
static_assert(alignof(ABP_HarvestableBush_Base_C) == 0x000008, "Wrong alignment on ABP_HarvestableBush_Base_C");
static_assert(sizeof(ABP_HarvestableBush_Base_C) == 0x0003E0, "Wrong size on ABP_HarvestableBush_Base_C");
static_assert(offsetof(ABP_HarvestableBush_Base_C, UberGraphFrame_BP_HarvestableBush_Base_C) == 0x0003A8, "Member 'ABP_HarvestableBush_Base_C::UberGraphFrame_BP_HarvestableBush_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableBush_Base_C, Sphere) == 0x0003B0, "Member 'ABP_HarvestableBush_Base_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableBush_Base_C, LootingPSC) == 0x0003B8, "Member 'ABP_HarvestableBush_Base_C::LootingPSC' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableBush_Base_C, bBushAnim) == 0x0003C0, "Member 'ABP_HarvestableBush_Base_C::bBushAnim' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableBush_Base_C, DefaultMaterial) == 0x0003C8, "Member 'ABP_HarvestableBush_Base_C::DefaultMaterial' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableBush_Base_C, ShakeMaterial) == 0x0003D0, "Member 'ABP_HarvestableBush_Base_C::ShakeMaterial' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableBush_Base_C, FlashCount) == 0x0003D8, "Member 'ABP_HarvestableBush_Base_C::FlashCount' has a wrong offset!");

}

