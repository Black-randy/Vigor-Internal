#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController_Matches

#include "Basic.hpp"

#include "BP_PlayerController_Matches_classes.hpp"
#include "BP_PlayerController_Matches_parameters.hpp"


namespace SDK
{

// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.ExecuteUbergraph_BP_PlayerController_Matches
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::ExecuteUbergraph_BP_PlayerController_Matches(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "ExecuteUbergraph_BP_PlayerController_Matches");

	Params::BP_PlayerController_Matches_C_ExecuteUbergraph_BP_PlayerController_Matches Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Sample Ping
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Sample_Ping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Sample Ping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.First Radiation Damage Taken
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::First_Radiation_Damage_Taken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "First Radiation Damage Taken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Delayed Match Start Anim Step
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Delayed_Match_Start_Anim_Step()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Delayed Match Start Anim Step");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Delayed Match Start Anim Setup
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Delayed_Match_Start_Anim_Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Delayed Match Start Anim Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.MovePawnToPlayerStartMulticasted
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PlayerStart                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::MovePawnToPlayerStartMulticasted(class AActor* PlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "MovePawnToPlayerStartMulticasted");

	Params::BP_PlayerController_Matches_C_MovePawnToPlayerStartMulticasted Parms{};

	Parms.PlayerStart = PlayerStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Remove Forced Black Screen
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Remove_Forced_Black_Screen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Remove Forced Black Screen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Add Forced Black Screen
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Add_Forced_Black_Screen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Add Forced Black Screen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Remove Forced Level Map
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Remove_Forced_Level_Map()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Remove Forced Level Map");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Add Forced Level Map
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Add_Forced_Level_Map()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Add Forced Level Map");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Delayed Match Start Countdown
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Delayed_Match_Start_Countdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Delayed Match Start Countdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Begin Delayed Match Start
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Delayed_Match_Start_Time_Remaning                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::Begin_Delayed_Match_Start(int32 Delayed_Match_Start_Time_Remaning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Begin Delayed Match Start");

	Params::BP_PlayerController_Matches_C_Begin_Delayed_Match_Start Parms{};

	Parms.Delayed_Match_Start_Time_Remaning = Delayed_Match_Start_Time_Remaning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.LeaveSession
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MapToReturnTo_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::LeaveSession(class FName MapToReturnTo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "LeaveSession");

	Params::BP_PlayerController_Matches_C_LeaveSession Parms{};

	Parms.MapToReturnTo_0 = MapToReturnTo_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.MakeTeamMateMarkerOrRemove
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CustomMapMarker               Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    AutoGenerateTag                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AddToMap                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AddToCompass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Remove                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_Matches_C::MakeTeamMateMarkerOrRemove(class FName Tag, const struct FS_CustomMapMarker& Marker, bool AutoGenerateTag, bool AddToMap, bool AddToCompass, bool Remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "MakeTeamMateMarkerOrRemove");

	Params::BP_PlayerController_Matches_C_MakeTeamMateMarkerOrRemove Parms{};

	Parms.Tag = Tag;
	Parms.Marker = std::move(Marker);
	Parms.AutoGenerateTag = AutoGenerateTag;
	Parms.AddToMap = AddToMap;
	Parms.AddToCompass = AddToCompass;
	Parms.Remove = Remove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Initialize Group ID
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Initialize_Group_ID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Initialize Group ID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Match Has Started
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Match_Has_Started()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Match Has Started");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_Matches_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Is Player Ready for Analytics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Client_Ready                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_Matches_C::Is_Player_Ready_for_Analytics(bool* Is_Client_Ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Is Player Ready for Analytics");

	Params::BP_PlayerController_Matches_C_Is_Player_Ready_for_Analytics Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Client_Ready != nullptr)
		*Is_Client_Ready = Parms.Is_Client_Ready;
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.MovePawnToPlayerStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PlayerStart                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::MovePawnToPlayerStart(class AActor* PlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "MovePawnToPlayerStart");

	Params::BP_PlayerController_Matches_C_MovePawnToPlayerStart Parms{};

	Parms.PlayerStart = PlayerStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.MarkTeamMember
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  TeamMemberCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::MarkTeamMember(class AHumanCharacter* TeamMemberCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "MarkTeamMember");

	Params::BP_PlayerController_Matches_C_MarkTeamMember Parms{};

	Parms.TeamMemberCharacter = TeamMemberCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.FindTeamMember
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  OwningCharacter                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::FindTeamMember(class ABP_Character_C** OwningCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "FindTeamMember");

	Params::BP_PlayerController_Matches_C_FindTeamMember Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OwningCharacter != nullptr)
		*OwningCharacter = Parms.OwningCharacter;
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Is Player Last Alive In Match
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is_Last_In_Match                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_Matches_C::Is_Player_Last_Alive_In_Match(bool* Is_Last_In_Match)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Is Player Last Alive In Match");

	Params::BP_PlayerController_Matches_C_Is_Player_Last_Alive_In_Match Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Last_In_Match != nullptr)
		*Is_Last_In_Match = Parms.Is_Last_In_Match;
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Update Ping Average
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Matches_C::Update_Ping_Average()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Update Ping Average");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.Get Ping Average
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Average_Ping                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::Get_Ping_Average(float* Average_Ping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "Get Ping Average");

	Params::BP_PlayerController_Matches_C_Get_Ping_Average Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Average_Ping != nullptr)
		*Average_Ping = Parms.Average_Ping;
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.GetLobbyStateAndTimes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HasMatchStarted                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DelayedMatchStartIsInEffect                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   RemainingTimeToEncounter                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalTimeToEncounter                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::GetLobbyStateAndTimes(bool* Valid, bool* HasMatchStarted, bool* DelayedMatchStartIsInEffect, int32* RemainingTimeToEncounter, int32* TotalTimeToEncounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "GetLobbyStateAndTimes");

	Params::BP_PlayerController_Matches_C_GetLobbyStateAndTimes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (HasMatchStarted != nullptr)
		*HasMatchStarted = Parms.HasMatchStarted;

	if (DelayedMatchStartIsInEffect != nullptr)
		*DelayedMatchStartIsInEffect = Parms.DelayedMatchStartIsInEffect;

	if (RemainingTimeToEncounter != nullptr)
		*RemainingTimeToEncounter = Parms.RemainingTimeToEncounter;

	if (TotalTimeToEncounter != nullptr)
		*TotalTimeToEncounter = Parms.TotalTimeToEncounter;
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.GetGroupID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           GroupId                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerController_Matches_C::GetGroupID(bool* Valid, class FString* GroupId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "GetGroupID");

	Params::BP_PlayerController_Matches_C_GetGroupID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (GroupId != nullptr)
		*GroupId = std::move(Parms.GroupId);
}


// Function BP_PlayerController_Matches.BP_PlayerController_Matches_C.GetGameScenario
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EGameScenario                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EGameScenario ABP_PlayerController_Matches_C::GetGameScenario() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Matches_C", "GetGameScenario");

	Params::BP_PlayerController_Matches_C_GetGameScenario Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

