#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SRTarget_TrafficSign

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SRTarget_TrafficSign.BP_SRTarget_TrafficSign_C.ExecuteUbergraph_BP_SRTarget_TrafficSign
// 0x01F0 (0x01F0 - 0x0000)
struct BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0058(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_bSimulate;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsActive;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0124(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign) == 0x000008, "Wrong alignment on BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign");
static_assert(sizeof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign) == 0x0001F0, "Wrong size on BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, EntryPoint) == 0x000000, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_Damage) == 0x000004, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_DamageType) == 0x000008, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_HitLocation) == 0x000010, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_HitNormal) == 0x00001C, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_HitComponent) == 0x000028, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_BoneName) == 0x000030, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_ShotFromDirection) == 0x000038, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_InstigatedBy) == 0x000048, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_DamageCauser) == 0x000050, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_HitInfo) == 0x000058, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_CustomEvent_bSimulate) == 0x0000E4, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_CustomEvent_bSimulate' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, Temp_bool_Has_Been_Initd_Variable) == 0x0000E5, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_CustomEvent_HitComponent) == 0x0000E8, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_Event_IsActive) == 0x0000F0, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_Event_IsActive' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000F8, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_ComponentBoundEvent_HitComponent) == 0x000100, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_ComponentBoundEvent_OtherActor) == 0x000108, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_ComponentBoundEvent_OtherComp) == 0x000110, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000118, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_ComponentBoundEvent_Hit) == 0x000124, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, Temp_bool_IsClosed_Variable) == 0x0001B0, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_VSize_ReturnValue) == 0x0001B4, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_MapRangeClamped_ReturnValue) == 0x0001B8, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0001C0, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001C8, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_IsValid_ReturnValue) == 0x0001C9, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, K2Node_CreateDelegate_OutputDelegate) == 0x0001CC, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001E0, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign, CallFunc_IsPlaying_ReturnValue) == 0x0001E8, "Member 'BP_SRTarget_TrafficSign_C_ExecuteUbergraph_BP_SRTarget_TrafficSign::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_SRTarget_TrafficSign.BP_SRTarget_TrafficSign_C.BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_SRTarget_TrafficSign_C_BndEvt__Sign_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_SRTarget_TrafficSign.BP_SRTarget_TrafficSign_C.SetTargetActivity
// 0x0001 (0x0001 - 0x0000)
struct BP_SRTarget_TrafficSign_C_SetTargetActivity final
{
public:
	bool                                          IsActive_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SRTarget_TrafficSign_C_SetTargetActivity) == 0x000001, "Wrong alignment on BP_SRTarget_TrafficSign_C_SetTargetActivity");
static_assert(sizeof(BP_SRTarget_TrafficSign_C_SetTargetActivity) == 0x000001, "Wrong size on BP_SRTarget_TrafficSign_C_SetTargetActivity");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SetTargetActivity, IsActive_0) == 0x000000, "Member 'BP_SRTarget_TrafficSign_C_SetTargetActivity::IsActive_0' has a wrong offset!");

// Function BP_SRTarget_TrafficSign.BP_SRTarget_TrafficSign_C.MulticastedPlayGongSound
// 0x0008 (0x0008 - 0x0000)
struct BP_SRTarget_TrafficSign_C_MulticastedPlayGongSound final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SRTarget_TrafficSign_C_MulticastedPlayGongSound) == 0x000008, "Wrong alignment on BP_SRTarget_TrafficSign_C_MulticastedPlayGongSound");
static_assert(sizeof(BP_SRTarget_TrafficSign_C_MulticastedPlayGongSound) == 0x000008, "Wrong size on BP_SRTarget_TrafficSign_C_MulticastedPlayGongSound");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_MulticastedPlayGongSound, HitComponent) == 0x000000, "Member 'BP_SRTarget_TrafficSign_C_MulticastedPlayGongSound::HitComponent' has a wrong offset!");

// Function BP_SRTarget_TrafficSign.BP_SRTarget_TrafficSign_C.MulticastedSetSimulatePhysics
// 0x0001 (0x0001 - 0x0000)
struct BP_SRTarget_TrafficSign_C_MulticastedSetSimulatePhysics final
{
public:
	bool                                          bSimulate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SRTarget_TrafficSign_C_MulticastedSetSimulatePhysics) == 0x000001, "Wrong alignment on BP_SRTarget_TrafficSign_C_MulticastedSetSimulatePhysics");
static_assert(sizeof(BP_SRTarget_TrafficSign_C_MulticastedSetSimulatePhysics) == 0x000001, "Wrong size on BP_SRTarget_TrafficSign_C_MulticastedSetSimulatePhysics");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_MulticastedSetSimulatePhysics, bSimulate) == 0x000000, "Member 'BP_SRTarget_TrafficSign_C_MulticastedSetSimulatePhysics::bSimulate' has a wrong offset!");

// Function BP_SRTarget_TrafficSign.BP_SRTarget_TrafficSign_C.ReceivePointDamage
// 0x00E8 (0x00E8 - 0x0000)
struct BP_SRTarget_TrafficSign_C_ReceivePointDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0058(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SRTarget_TrafficSign_C_ReceivePointDamage) == 0x000008, "Wrong alignment on BP_SRTarget_TrafficSign_C_ReceivePointDamage");
static_assert(sizeof(BP_SRTarget_TrafficSign_C_ReceivePointDamage) == 0x0000E8, "Wrong size on BP_SRTarget_TrafficSign_C_ReceivePointDamage");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, Damage) == 0x000000, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, HitNormal) == 0x00001C, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, HitComponent) == 0x000028, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, BoneName) == 0x000030, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, ShotFromDirection) == 0x000038, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, InstigatedBy) == 0x000048, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, DamageCauser) == 0x000050, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_ReceivePointDamage, HitInfo) == 0x000058, "Member 'BP_SRTarget_TrafficSign_C_ReceivePointDamage::HitInfo' has a wrong offset!");

// Function BP_SRTarget_TrafficSign.BP_SRTarget_TrafficSign_C.SignHit
// 0x0040 (0x0040 - 0x0000)
struct BP_SRTarget_TrafficSign_C_SignHit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DamageType;                                        // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SRTarget_TrafficSign_C_SignHit) == 0x000008, "Wrong alignment on BP_SRTarget_TrafficSign_C_SignHit");
static_assert(sizeof(BP_SRTarget_TrafficSign_C_SignHit) == 0x000040, "Wrong size on BP_SRTarget_TrafficSign_C_SignHit");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SignHit, HitComponent) == 0x000000, "Member 'BP_SRTarget_TrafficSign_C_SignHit::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SignHit, HitLocation) == 0x000008, "Member 'BP_SRTarget_TrafficSign_C_SignHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SignHit, ShotFromDirection) == 0x000014, "Member 'BP_SRTarget_TrafficSign_C_SignHit::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SignHit, DamageType) == 0x000020, "Member 'BP_SRTarget_TrafficSign_C_SignHit::DamageType' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SignHit, Damage) == 0x000028, "Member 'BP_SRTarget_TrafficSign_C_SignHit::Damage' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SignHit, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002C, "Member 'BP_SRTarget_TrafficSign_C_SignHit::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_TrafficSign_C_SignHit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BP_SRTarget_TrafficSign_C_SignHit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

}

