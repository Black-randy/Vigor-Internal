#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicPlayer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MusicPlayer.BP_MusicPlayer_C.ExecuteUbergraph_BP_MusicPlayer
// 0x0530 (0x0530 - 0x0000)
struct BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ESublevelTheme Theme)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_2;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_3;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_4;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_MusicPlayer_Notification_C*         CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_4;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicTrackRow                         K2Node_CustomEvent_TrackInfo_1;                    // 0x00E0(0x0088)()
	bool                                          CallFunc_Send_Music_Player_Interacted_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Music_Player_Track_Played_ReturnValue; // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_5;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender;                 // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_5;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMusicBlacklisted_Blacklisted;           // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResetQueue_bEmptyQueue;                   // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_197[0x1];                                      // 0x0197(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_MusicTrack_C*>               CallFunc_GetMusicTracksFromDataTable_MusicTrackList; // 0x0198(0x0010)(ReferenceParm)
	struct FMusicTrackRow                         K2Node_CustomEvent_TrackInfo;                      // 0x01A8(0x0088)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	class AStash*                                 K2Node_CustomEvent_Sender;                         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStashComponent*                        K2Node_CustomEvent_Inventory;                      // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRepairLevel_ReturnValue;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AStash* Sender, class UStashComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_NewLevel;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNotificationParams                    K2Node_MakeStruct_NotificationParams;              // 0x0274(0x000C)(NoDestructor)
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResetQueue_bEmptyQueue_1;                 // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A6[0x2];                                      // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Shelter_C*              K2Node_DynamicCast_AsBP_Player_State_Shelter;      // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F3[0x1];                                      // 0x02F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x02F4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMusicPlayerAvailable_Available;         // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMusicPlayerAvailable_Available_1;       // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307[0x1];                                      // 0x0307(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0318(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(int32 NewLevel)>               K2Node_CreateDelegate_OutputDelegate_6;            // 0x03A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_MusicTrack_C*>               CallFunc_GetMusicTracksFromDataTable_MusicTrackList_1; // 0x03B8(0x0010)(ReferenceParm)
	const class UBP_MusicTrack_C*                 K2Node_CustomEvent_Track_Reference;                // 0x03C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       K2Node_CustomEvent_Previous_Track;                 // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             K2Node_DynamicCast_AsSound_Wave;                   // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x041C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0430(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0448(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_ResetQueue_bEmptyQueue_2;                 // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResetQueue_bEmptyQueue_3;                 // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x04D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x04D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x04E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x04F0(0x0010)(ZeroConstructor, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Script_C*                 K2Node_DynamicCast_AsBP_Game_State_Script;         // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESublevelTheme                                K2Node_CustomEvent_Theme;                          // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChristmasTheme_ChristmasOn;             // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513[0x5];                                      // 0x0513(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_6;                // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_6;       // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer");
static_assert(sizeof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer) == 0x000530, "Wrong size on BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, EntryPoint) == 0x000000, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000028, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameMode_ReturnValue_1) == 0x000040, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1) == 0x000050, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, Temp_bool_Variable) == 0x00005A, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameMode_ReturnValue_2) == 0x000070, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, Temp_bool_Variable_1) == 0x000078, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_2) == 0x000080, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetUserControllerId_ReturnValue) == 0x00008C, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameMode_ReturnValue_3) == 0x000090, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000098, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_3) == 0x0000A0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x0000B0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_4) == 0x0000B8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameMode_ReturnValue_4) == 0x0000C0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameMode_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_4) == 0x0000D0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_5) == 0x0000D8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_TrackInfo_1) == 0x0000E0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_TrackInfo_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Send_Music_Player_Interacted_ReturnValue) == 0x000168, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Send_Music_Player_Interacted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Send_Music_Player_Track_Played_ReturnValue) == 0x000169, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Send_Music_Player_Track_Played_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_1) == 0x00016A, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameMode_ReturnValue_5) == 0x000170, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameMode_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_ComponentBoundEvent_Sender) == 0x000178, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_ComponentBoundEvent_Interacting_Actor) == 0x000180, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_ComponentBoundEvent_Interacting_Actor' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_5) == 0x000188, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_5' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_6) == 0x000190, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000191, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_3) == 0x000192, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsMusicBlacklisted_Blacklisted) == 0x000193, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsMusicBlacklisted_Blacklisted' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000194, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000195, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_ResetQueue_bEmptyQueue) == 0x000196, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_ResetQueue_bEmptyQueue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetMusicTracksFromDataTable_MusicTrackList) == 0x000198, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetMusicTracksFromDataTable_MusicTrackList' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_TrackInfo) == 0x0001A8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_TrackInfo' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000230, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_Sender) == 0x000240, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_Inventory) == 0x000248, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetRepairLevel_ReturnValue) == 0x000250, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetRepairLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x000254, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_4) == 0x000255, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, Temp_object_Variable) == 0x000258, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x000260, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_NewLevel) == 0x000270, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_NewLevel' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_MakeStruct_NotificationParams) == 0x000274, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_MakeStruct_NotificationParams' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetNotificationSystem_ReturnValue) == 0x000280, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_5) == 0x000288, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_Loaded) == 0x000290, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Array_Get_Item) == 0x000298, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Array_Length_ReturnValue) == 0x0002A0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_ResetQueue_bEmptyQueue_1) == 0x0002A4, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_ResetQueue_bEmptyQueue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0002A5, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x0002A8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002AC, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0002AD, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002AE, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_BooleanAND_ReturnValue) == 0x0002AF, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002B0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetUserControllerId_ReturnValue_1) == 0x0002C0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_6) == 0x0002C4, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x0002C8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1) == 0x0002D0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Player_Controller_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_7) == 0x0002D8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetStash_ReturnValue) == 0x0002E0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Player_State_Shelter) == 0x0002E8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Player_State_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_8) == 0x0002F0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_7) == 0x0002F1, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_8) == 0x0002F2, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002F4, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_9) == 0x000304, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsMusicPlayerAvailable_Available) == 0x000305, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsMusicPlayerAvailable_Available' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsMusicPlayerAvailable_Available_1) == 0x000306, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsMusicPlayerAvailable_Available_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_RLerp_ReturnValue) == 0x000308, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, Temp_bool_Variable_2) == 0x000314, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000318, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_6) == 0x0003A4, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetMusicTracksFromDataTable_MusicTrackList_1) == 0x0003B8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetMusicTracksFromDataTable_MusicTrackList_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_Track_Reference) == 0x0003C8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_Track_Reference' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_Previous_Track) == 0x0003D0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_Previous_Track' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_10) == 0x0003D8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_11) == 0x0003D9, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0003E0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0003E8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsSound_Wave) == 0x0003F0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsSound_Wave' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_9) == 0x0003F8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_Select_Default) == 0x000400, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_12) == 0x000408, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsSound_Base) == 0x000410, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_10) == 0x000418, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_7) == 0x00041C, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x00042C, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000430, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_MakeRotator_ReturnValue) == 0x000438, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_13) == 0x000444, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000448, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_ResetQueue_bEmptyQueue_2) == 0x0004D4, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_ResetQueue_bEmptyQueue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_14) == 0x0004D5, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_ResetQueue_bEmptyQueue_3) == 0x0004D6, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_ResetQueue_bEmptyQueue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_15) == 0x0004D7, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_8) == 0x0004D8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0004E8, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_9) == 0x0004F0, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameState_ReturnValue) == 0x000500, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_State_Script) == 0x000508, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_State_Script' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_11) == 0x000510, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_CustomEvent_Theme) == 0x000511, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_CustomEvent_Theme' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsChristmasTheme_ChristmasOn) == 0x000512, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsChristmasTheme_ChristmasOn' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_GetGameMode_ReturnValue_6) == 0x000518, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_GetGameMode_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_6) == 0x000520, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_6' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, K2Node_DynamicCast_bSuccess_12) == 0x000528, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer, CallFunc_IsValid_ReturnValue_16) == 0x000529, "Member 'BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.Shelter theme loaded
// 0x0001 (0x0001 - 0x0000)
struct BP_MusicPlayer_C_Shelter_theme_loaded final
{
public:
	ESublevelTheme                                Theme;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_Shelter_theme_loaded) == 0x000001, "Wrong alignment on BP_MusicPlayer_C_Shelter_theme_loaded");
static_assert(sizeof(BP_MusicPlayer_C_Shelter_theme_loaded) == 0x000001, "Wrong size on BP_MusicPlayer_C_Shelter_theme_loaded");
static_assert(offsetof(BP_MusicPlayer_C_Shelter_theme_loaded, Theme) == 0x000000, "Member 'BP_MusicPlayer_C_Shelter_theme_loaded::Theme' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.internal Load and Play Track
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicPlayer_C_Internal_Load_and_Play_Track final
{
public:
	const class UBP_MusicTrack_C*                 Track_Reference;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       Previous_Track;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_Internal_Load_and_Play_Track) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_Internal_Load_and_Play_Track");
static_assert(sizeof(BP_MusicPlayer_C_Internal_Load_and_Play_Track) == 0x000010, "Wrong size on BP_MusicPlayer_C_Internal_Load_and_Play_Track");
static_assert(offsetof(BP_MusicPlayer_C_Internal_Load_and_Play_Track, Track_Reference) == 0x000000, "Member 'BP_MusicPlayer_C_Internal_Load_and_Play_Track::Track_Reference' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Internal_Load_and_Play_Track, Previous_Track) == 0x000008, "Member 'BP_MusicPlayer_C_Internal_Load_and_Play_Track::Previous_Track' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.Shelter Level Changed
// 0x0004 (0x0004 - 0x0000)
struct BP_MusicPlayer_C_Shelter_Level_Changed final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_Shelter_Level_Changed) == 0x000004, "Wrong alignment on BP_MusicPlayer_C_Shelter_Level_Changed");
static_assert(sizeof(BP_MusicPlayer_C_Shelter_Level_Changed) == 0x000004, "Wrong size on BP_MusicPlayer_C_Shelter_Level_Changed");
static_assert(offsetof(BP_MusicPlayer_C_Shelter_Level_Changed, NewLevel) == 0x000000, "Member 'BP_MusicPlayer_C_Shelter_Level_Changed::NewLevel' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.Stash Loaded
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicPlayer_C_Stash_Loaded final
{
public:
	class AStash*                                 Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStashComponent*                        Inventory;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_Stash_Loaded) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_Stash_Loaded");
static_assert(sizeof(BP_MusicPlayer_C_Stash_Loaded) == 0x000010, "Wrong size on BP_MusicPlayer_C_Stash_Loaded");
static_assert(offsetof(BP_MusicPlayer_C_Stash_Loaded, Sender) == 0x000000, "Member 'BP_MusicPlayer_C_Stash_Loaded::Sender' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Stash_Loaded, Inventory) == 0x000008, "Member 'BP_MusicPlayer_C_Stash_Loaded::Inventory' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.Show Next Track Notification
// 0x0088 (0x0088 - 0x0000)
struct BP_MusicPlayer_C_Show_Next_Track_Notification final
{
public:
	struct FMusicTrackRow                         TrackInfo;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MusicPlayer_C_Show_Next_Track_Notification) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_Show_Next_Track_Notification");
static_assert(sizeof(BP_MusicPlayer_C_Show_Next_Track_Notification) == 0x000088, "Wrong size on BP_MusicPlayer_C_Show_Next_Track_Notification");
static_assert(offsetof(BP_MusicPlayer_C_Show_Next_Track_Notification, TrackInfo) == 0x000000, "Member 'BP_MusicPlayer_C_Show_Next_Track_Notification::TrackInfo' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start On Client__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature");
static_assert(sizeof(BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature) == 0x000010, "Wrong size on BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature");
static_assert(offsetof(BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature, Sender) == 0x000000, "Member 'BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.Analytics Player Played Track
// 0x0088 (0x0088 - 0x0000)
struct BP_MusicPlayer_C_Analytics_Player_Played_Track final
{
public:
	struct FMusicTrackRow                         TrackInfo;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MusicPlayer_C_Analytics_Player_Played_Track) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_Analytics_Player_Played_Track");
static_assert(sizeof(BP_MusicPlayer_C_Analytics_Player_Played_Track) == 0x000088, "Wrong size on BP_MusicPlayer_C_Analytics_Player_Played_Track");
static_assert(offsetof(BP_MusicPlayer_C_Analytics_Player_Played_Track, TrackInfo) == 0x000000, "Member 'BP_MusicPlayer_C_Analytics_Player_Played_Track::TrackInfo' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.OnLoaded_303A9E7341428F48F05BE78A40C6C13C
// 0x0008 (0x0008 - 0x0000)
struct BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C");
static_assert(sizeof(BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C) == 0x000008, "Wrong size on BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C");
static_assert(offsetof(BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C, Loaded) == 0x000000, "Member 'BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C::Loaded' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.UserConstructionScript
// 0x0130 (0x0130 - 0x0000)
struct BP_MusicPlayer_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_1;           // 0x0048(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_2;           // 0x0098(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_2;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_2;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_3;           // 0x00E8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_3;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_3;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_UserConstructionScript");
static_assert(sizeof(BP_MusicPlayer_C_UserConstructionScript) == 0x000130, "Wrong size on BP_MusicPlayer_C_UserConstructionScript");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000028, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh) == 0x000038, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_1) == 0x000048, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000070, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_1) == 0x000078, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000080, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000088, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_2) == 0x000098, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0000C0, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_2) == 0x0000C8, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0000D0, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_2) == 0x0000D8, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x0000E0, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_3) == 0x0000E8, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_3) == 0x000110, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x000118, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_3) == 0x000119, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_3) == 0x000120, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_3) == 0x000128, "Member 'BP_MusicPlayer_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000129, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue_3) == 0x00012A, "Member 'BP_MusicPlayer_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.Initialize
// 0x0040 (0x0040 - 0x0000)
struct BP_MusicPlayer_C_Initialize final
{
public:
	TArray<class UBP_MusicTrack_C*>               TrackList_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_CheckBlackListedTracks_bShouldSaveAfterwards; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_Initialize) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_Initialize");
static_assert(sizeof(BP_MusicPlayer_C_Initialize) == 0x000040, "Wrong size on BP_MusicPlayer_C_Initialize");
static_assert(offsetof(BP_MusicPlayer_C_Initialize, TrackList_0) == 0x000000, "Member 'BP_MusicPlayer_C_Initialize::TrackList_0' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Initialize, CallFunc_CheckBlackListedTracks_bShouldSaveAfterwards) == 0x000010, "Member 'BP_MusicPlayer_C_Initialize::CallFunc_CheckBlackListedTracks_bShouldSaveAfterwards' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Initialize, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BP_MusicPlayer_C_Initialize::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Initialize, CallFunc_GetGameMode_ReturnValue_1) == 0x000020, "Member 'BP_MusicPlayer_C_Initialize::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Initialize, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000028, "Member 'BP_MusicPlayer_C_Initialize::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_MusicPlayer_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_Initialize, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_MusicPlayer_C_Initialize::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.SelectTrack
// 0x0008 (0x0008 - 0x0000)
struct BP_MusicPlayer_C_SelectTrack final
{
public:
	class UBP_MusicTrack_C*                       Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_SelectTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_SelectTrack");
static_assert(sizeof(BP_MusicPlayer_C_SelectTrack) == 0x000008, "Wrong size on BP_MusicPlayer_C_SelectTrack");
static_assert(offsetof(BP_MusicPlayer_C_SelectTrack, Track) == 0x000000, "Member 'BP_MusicPlayer_C_SelectTrack::Track' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.ShowUI
// 0x0020 (0x0020 - 0x0000)
struct BP_MusicPlayer_C_ShowUI final
{
public:
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_MusicPlayer_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_ShowUI) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_ShowUI");
static_assert(sizeof(BP_MusicPlayer_C_ShowUI) == 0x000020, "Wrong size on BP_MusicPlayer_C_ShowUI");
static_assert(offsetof(BP_MusicPlayer_C_ShowUI, CallFunc_GetUserControllerId_ReturnValue) == 0x000000, "Member 'BP_MusicPlayer_C_ShowUI::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ShowUI, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000008, "Member 'BP_MusicPlayer_C_ShowUI::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ShowUI, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_MusicPlayer_C_ShowUI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ShowUI, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MusicPlayer_C_ShowUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.HideUI
// 0x0028 (0x0028 - 0x0000)
struct BP_MusicPlayer_C_HideUI final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_HideUI) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_HideUI");
static_assert(sizeof(BP_MusicPlayer_C_HideUI) == 0x000028, "Wrong size on BP_MusicPlayer_C_HideUI");
static_assert(offsetof(BP_MusicPlayer_C_HideUI, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_MusicPlayer_C_HideUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HideUI, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MusicPlayer_C_HideUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HideUI, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_MusicPlayer_C_HideUI::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HideUI, CallFunc_GetMovementComponent_ReturnValue) == 0x000018, "Member 'BP_MusicPlayer_C_HideUI::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HideUI, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000020, "Member 'BP_MusicPlayer_C_HideUI::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.PlayNextTrack
// 0x0068 (0x0068 - 0x0000)
struct BP_MusicPlayer_C_PlayNextTrack final
{
public:
	TArray<class USoundWave*>                     TracksAfterLastTRack;                              // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class USoundWave*>                     TracksBeforeLastTrack;                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class USoundWave*>                     AvailableTracksToPlay;                             // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResetQueue_bEmptyQueue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_MusicPlayer_TrackButton_C*          CallFunc_GetTrackButton_Button;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResetQueue_bEmptyQueue_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_PlayNextTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_PlayNextTrack");
static_assert(sizeof(BP_MusicPlayer_C_PlayNextTrack) == 0x000068, "Wrong size on BP_MusicPlayer_C_PlayNextTrack");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, TracksAfterLastTRack) == 0x000000, "Member 'BP_MusicPlayer_C_PlayNextTrack::TracksAfterLastTRack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, TracksBeforeLastTrack) == 0x000010, "Member 'BP_MusicPlayer_C_PlayNextTrack::TracksBeforeLastTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, AvailableTracksToPlay) == 0x000020, "Member 'BP_MusicPlayer_C_PlayNextTrack::AvailableTracksToPlay' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_ResetQueue_bEmptyQueue) == 0x00003B, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_ResetQueue_bEmptyQueue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_GetTrackButton_Button) == 0x000040, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_GetTrackButton_Button' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_Array_Length_ReturnValue_2) == 0x00004C, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayNextTrack, CallFunc_ResetQueue_bEmptyQueue_1) == 0x000060, "Member 'BP_MusicPlayer_C_PlayNextTrack::CallFunc_ResetQueue_bEmptyQueue_1' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.PlayTrack
// 0x0050 (0x0050 - 0x0000)
struct BP_MusicPlayer_C_PlayTrack final
{
public:
	class UBP_MusicTrack_C*                       Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       PreviousTrack;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_PlayTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_PlayTrack");
static_assert(sizeof(BP_MusicPlayer_C_PlayTrack) == 0x000050, "Wrong size on BP_MusicPlayer_C_PlayTrack");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, Track) == 0x000000, "Member 'BP_MusicPlayer_C_PlayTrack::Track' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, PreviousTrack) == 0x000008, "Member 'BP_MusicPlayer_C_PlayTrack::PreviousTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_MusicPlayer_C_PlayTrack::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000018, "Member 'BP_MusicPlayer_C_PlayTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MusicPlayer_C_PlayTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MusicPlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_MusicPlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000023, "Member 'BP_MusicPlayer_C_PlayTrack::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BP_MusicPlayer_C_PlayTrack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, CallFunc_GetGameMode_ReturnValue_1) == 0x000038, "Member 'BP_MusicPlayer_C_PlayTrack::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1) == 0x000040, "Member 'BP_MusicPlayer_C_PlayTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_MusicPlayer_C_PlayTrack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_MusicPlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PlayTrack, CallFunc_IsValid_ReturnValue_3) == 0x00004A, "Member 'BP_MusicPlayer_C_PlayTrack::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.ResetQueue
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MusicPlayer_C_ResetQueue final
{
public:
	class UBP_MusicTrack_C*                       LastTrack;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEmptyQueue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoopCount;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_MusicTrack_C*>               AddAfter;                                          // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          LastPlayedTrackFoundAlready;                       // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMusicPlayerAvailable_Available;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_ResetQueue) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_ResetQueue");
static_assert(sizeof(BP_MusicPlayer_C_ResetQueue) == 0x0000A0, "Wrong size on BP_MusicPlayer_C_ResetQueue");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, LastTrack) == 0x000000, "Member 'BP_MusicPlayer_C_ResetQueue::LastTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, bEmptyQueue) == 0x000008, "Member 'BP_MusicPlayer_C_ResetQueue::bEmptyQueue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, LoopCount) == 0x00000C, "Member 'BP_MusicPlayer_C_ResetQueue::LoopCount' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, AddAfter) == 0x000010, "Member 'BP_MusicPlayer_C_ResetQueue::AddAfter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, LastPlayedTrackFoundAlready) == 0x000020, "Member 'BP_MusicPlayer_C_ResetQueue::LastPlayedTrackFoundAlready' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MusicPlayer_C_ResetQueue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_MusicPlayer_C_ResetQueue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, Temp_int_Variable) == 0x00003C, "Member 'BP_MusicPlayer_C_ResetQueue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Find_ReturnValue) == 0x00004C, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue_3) == 0x00005C, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_IsMusicPlayerAvailable_Available) == 0x000060, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_IsMusicPlayerAvailable_Available' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue_1) == 0x000064, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, Temp_int_Variable_1) == 0x000068, "Member 'BP_MusicPlayer_C_ResetQueue::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Percent_IntInt_ReturnValue) == 0x00006C, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue_2) == 0x000078, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00007C, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_IsValid_ReturnValue_2) == 0x00007D, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Not_PreBool_ReturnValue_2) == 0x00007E, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_BooleanAND_ReturnValue) == 0x00007F, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Add_IntInt_ReturnValue_4) == 0x000084, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Not_PreBool_ReturnValue_3) == 0x000095, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000096, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_BooleanAND_ReturnValue_1) == 0x000097, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_ResetQueue, CallFunc_Array_Add_ReturnValue_3) == 0x000098, "Member 'BP_MusicPlayer_C_ResetQueue::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.StopTrack
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicPlayer_C_StopTrack final
{
public:
	class UBP_MusicTrack_C*                       BackupLastPlayedTrack;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_StopTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_StopTrack");
static_assert(sizeof(BP_MusicPlayer_C_StopTrack) == 0x000010, "Wrong size on BP_MusicPlayer_C_StopTrack");
static_assert(offsetof(BP_MusicPlayer_C_StopTrack, BackupLastPlayedTrack) == 0x000000, "Member 'BP_MusicPlayer_C_StopTrack::BackupLastPlayedTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_StopTrack, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MusicPlayer_C_StopTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_StopTrack, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_MusicPlayer_C_StopTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_StopTrack, CallFunc_IsValid_ReturnValue_2) == 0x00000A, "Member 'BP_MusicPlayer_C_StopTrack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.FadeOutOldTrack
// 0x0018 (0x0018 - 0x0000)
struct BP_MusicPlayer_C_FadeOutOldTrack final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_FadeOutOldTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_FadeOutOldTrack");
static_assert(sizeof(BP_MusicPlayer_C_FadeOutOldTrack) == 0x000018, "Wrong size on BP_MusicPlayer_C_FadeOutOldTrack");
static_assert(offsetof(BP_MusicPlayer_C_FadeOutOldTrack, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'BP_MusicPlayer_C_FadeOutOldTrack::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeOutOldTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000008, "Member 'BP_MusicPlayer_C_FadeOutOldTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeOutOldTrack, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MusicPlayer_C_FadeOutOldTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeOutOldTrack, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_MusicPlayer_C_FadeOutOldTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeOutOldTrack, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_MusicPlayer_C_FadeOutOldTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeOutOldTrack, CallFunc_IsValid_ReturnValue_2) == 0x000013, "Member 'BP_MusicPlayer_C_FadeOutOldTrack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeOutOldTrack, CallFunc_IsValid_ReturnValue_3) == 0x000014, "Member 'BP_MusicPlayer_C_FadeOutOldTrack::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.FadeInLastPlayedTrack
// 0x0058 (0x0058 - 0x0000)
struct BP_MusicPlayer_C_FadeInLastPlayedTrack final
{
public:
	float                                         PauseTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_FadeInLastPlayedTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_FadeInLastPlayedTrack");
static_assert(sizeof(BP_MusicPlayer_C_FadeInLastPlayedTrack) == 0x000058, "Wrong size on BP_MusicPlayer_C_FadeInLastPlayedTrack");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, PauseTime) == 0x000000, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::PauseTime' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, CallFunc_GetTimeSeconds_ReturnValue) == 0x000004, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, Temp_bool_Variable) == 0x000020, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, CallFunc_FMax_ReturnValue) == 0x000024, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, Temp_float_Variable) == 0x000030, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, CallFunc_GetGameMode_ReturnValue) == 0x000038, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, K2Node_Select_Default) == 0x000040, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000048, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FadeInLastPlayedTrack, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_MusicPlayer_C_FadeInLastPlayedTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.GetMusicTracksFromDataTable
// 0x0190 (0x0190 - 0x0000)
struct BP_MusicPlayer_C_GetMusicTracksFromDataTable final
{
public:
	TArray<class UBP_MusicTrack_C*>               MusicTrackList;                                    // 0x0000(0x0010)(Parm, OutParm)
	bool                                          TrackUnlocked;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_MusicTrack_C*>               NewMusicTrackList;                                 // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicTrackRow                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0088)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicTrackRow                         K2Node_SetFieldsInStruct_StructOut;                // 0x00F0(0x0088)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MusicTrack_C*                       CallFunc_SpawnObject_ReturnValue;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayerUnlockedMusicTrack_IsUnlocked;   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_GetMusicTracksFromDataTable) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_GetMusicTracksFromDataTable");
static_assert(sizeof(BP_MusicPlayer_C_GetMusicTracksFromDataTable) == 0x000190, "Wrong size on BP_MusicPlayer_C_GetMusicTracksFromDataTable");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, MusicTrackList) == 0x000000, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::MusicTrackList' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, TrackUnlocked) == 0x000010, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::TrackUnlocked' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, NewMusicTrackList) == 0x000018, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::NewMusicTrackList' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000038, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E8, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x0000E9, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, K2Node_SetFieldsInStruct_StructOut) == 0x0000F0, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, K2Node_SwitchEnum_CmpSuccess) == 0x000178, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_SpawnObject_ReturnValue) == 0x000180, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_HasPlayerUnlockedMusicTrack_IsUnlocked) == 0x000188, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_HasPlayerUnlockedMusicTrack_IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000189, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetMusicTracksFromDataTable, CallFunc_Array_Add_ReturnValue) == 0x00018C, "Member 'BP_MusicPlayer_C_GetMusicTracksFromDataTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.HasPlayerUnlockedMusicTrack
// 0x0058 (0x0058 - 0x0000)
struct BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack final
{
public:
	class UClass*                                 CheckedMusicTrack;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required_Shelter_Level;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Shelter_C*         K2Node_DynamicCast_AsBP_Player_Controller_Shelter; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRepairLevel_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack");
static_assert(sizeof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack) == 0x000058, "Wrong size on BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CheckedMusicTrack) == 0x000000, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CheckedMusicTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, Required_Shelter_Level) == 0x000008, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::Required_Shelter_Level' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, IsUnlocked) == 0x00000C, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_GetUserControllerId_ReturnValue) == 0x000010, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000018, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_IsValidClass_ReturnValue) == 0x000020, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, K2Node_DynamicCast_AsBP_Player_Controller_Shelter) == 0x000028, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::K2Node_DynamicCast_AsBP_Player_Controller_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_GetStash_ReturnValue) == 0x000038, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_GetRepairLevel_ReturnValue) == 0x000044, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_GetRepairLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_IsValid_ReturnValue_2) == 0x00004A, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_CountOfResource_ReturnValue) == 0x00004C, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.UnlockMusicTracks
// 0x0020 (0x0020 - 0x0000)
struct BP_MusicPlayer_C_UnlockMusicTracks final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPlayerUnlockedMusicTrack_IsUnlocked;   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_UnlockMusicTracks) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_UnlockMusicTracks");
static_assert(sizeof(BP_MusicPlayer_C_UnlockMusicTracks) == 0x000020, "Wrong size on BP_MusicPlayer_C_UnlockMusicTracks");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, CallFunc_HasPlayerUnlockedMusicTrack_IsUnlocked) == 0x000015, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::CallFunc_HasPlayerUnlockedMusicTrack_IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000016, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_UnlockMusicTracks, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_MusicPlayer_C_UnlockMusicTracks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.RefreshMusicPlayerVisibility
// 0x0005 (0x0005 - 0x0000)
struct BP_MusicPlayer_C_RefreshMusicPlayerVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMusicPlayerAvailable_Available;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicPlayer_C_RefreshMusicPlayerVisibility) == 0x000001, "Wrong alignment on BP_MusicPlayer_C_RefreshMusicPlayerVisibility");
static_assert(sizeof(BP_MusicPlayer_C_RefreshMusicPlayerVisibility) == 0x000005, "Wrong size on BP_MusicPlayer_C_RefreshMusicPlayerVisibility");
static_assert(offsetof(BP_MusicPlayer_C_RefreshMusicPlayerVisibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MusicPlayer_C_RefreshMusicPlayerVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_RefreshMusicPlayerVisibility, Temp_byte_Variable) == 0x000001, "Member 'BP_MusicPlayer_C_RefreshMusicPlayerVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_RefreshMusicPlayerVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MusicPlayer_C_RefreshMusicPlayerVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_RefreshMusicPlayerVisibility, CallFunc_IsMusicPlayerAvailable_Available) == 0x000003, "Member 'BP_MusicPlayer_C_RefreshMusicPlayerVisibility::CallFunc_IsMusicPlayerAvailable_Available' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_RefreshMusicPlayerVisibility, K2Node_Select_Default) == 0x000004, "Member 'BP_MusicPlayer_C_RefreshMusicPlayerVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.GetDefaultTrack
// 0x03B8 (0x03B8 - 0x0000)
struct BP_MusicPlayer_C_GetDefaultTrack final
{
public:
	TSoftObjectPtr<class USoundWave>              DefaultSound;                                      // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TMap<TSoftObjectPtr<class USoundWave>, int32> DefSoundToShelterLevel;                            // 0x0028(0x0050)(Edit, BlueprintVisible)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable;                          // 0x0078(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_1;                        // 0x00A0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_2;                        // 0x00C8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_3;                        // 0x00F0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_4;                        // 0x0118(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_5;                        // 0x0140(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_6;                        // 0x0168(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_7;                        // 0x0190(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_8;                        // 0x01B8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_9;                        // 0x01E0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_10;                       // 0x0208(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_11;                       // 0x0230(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_12;                       // 0x0258(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_13;                       // 0x0280(0x0028)(HasGetValueTypeHash)
	TMap<TSoftObjectPtr<class USoundWave>, int32> K2Node_MakeVariable_MakeVariableOutput;            // 0x02A8(0x0050)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundWave>              Temp_softobject_Variable_14;                       // 0x0308(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsMusicBlacklisted_Blacklisted;           // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USoundWave>>      CallFunc_Map_Keys_Keys;                            // 0x0338(0x0010)(ReferenceParm)
	TSoftObjectPtr<class USoundWave>              CallFunc_Array_Get_Item;                           // 0x0348(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMusicBlacklisted_Blacklisted_1;         // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376[0x2];                                      // 0x0376(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundWave>              K2Node_Select_Default;                             // 0x0388(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsMusicBlacklisted_Blacklisted_2;         // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_GetDefaultTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_GetDefaultTrack");
static_assert(sizeof(BP_MusicPlayer_C_GetDefaultTrack) == 0x0003B8, "Wrong size on BP_MusicPlayer_C_GetDefaultTrack");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, DefaultSound) == 0x000000, "Member 'BP_MusicPlayer_C_GetDefaultTrack::DefaultSound' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, DefSoundToShelterLevel) == 0x000028, "Member 'BP_MusicPlayer_C_GetDefaultTrack::DefSoundToShelterLevel' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable) == 0x000078, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_1) == 0x0000A0, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_2) == 0x0000C8, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_3) == 0x0000F0, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_4) == 0x000118, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_5) == 0x000140, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_6) == 0x000168, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_7) == 0x000190, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_8) == 0x0001B8, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_9) == 0x0001E0, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_10) == 0x000208, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_11) == 0x000230, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_12) == 0x000258, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_13) == 0x000280, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, K2Node_MakeVariable_MakeVariableOutput) == 0x0002A8, "Member 'BP_MusicPlayer_C_GetDefaultTrack::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_int_Array_Index_Variable) == 0x0002F8, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_int_Loop_Counter_Variable) == 0x0002FC, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Add_IntInt_ReturnValue) == 0x000300, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_softobject_Variable_14) == 0x000308, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_softobject_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_IsMusicBlacklisted_Blacklisted) == 0x000330, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_IsMusicBlacklisted_Blacklisted' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, Temp_int_Variable) == 0x000334, "Member 'BP_MusicPlayer_C_GetDefaultTrack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Map_Keys_Keys) == 0x000338, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Array_Get_Item) == 0x000348, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Array_Length_ReturnValue) == 0x000370, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Less_IntInt_ReturnValue) == 0x000374, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_IsMusicBlacklisted_Blacklisted_1) == 0x000375, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_IsMusicBlacklisted_Blacklisted_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Map_Find_Value) == 0x000378, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Map_Find_ReturnValue) == 0x00037C, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Clamp_ReturnValue) == 0x000380, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_Greater_IntInt_ReturnValue) == 0x000384, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, K2Node_Select_Default) == 0x000388, "Member 'BP_MusicPlayer_C_GetDefaultTrack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_GetDefaultTrack, CallFunc_IsMusicBlacklisted_Blacklisted_2) == 0x0003B0, "Member 'BP_MusicPlayer_C_GetDefaultTrack::CallFunc_IsMusicBlacklisted_Blacklisted_2' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.IsMusicPlayerAvailable
// 0x0002 (0x0002 - 0x0000)
struct BP_MusicPlayer_C_IsMusicPlayerAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_IsMusicPlayerAvailable) == 0x000001, "Wrong alignment on BP_MusicPlayer_C_IsMusicPlayerAvailable");
static_assert(sizeof(BP_MusicPlayer_C_IsMusicPlayerAvailable) == 0x000002, "Wrong size on BP_MusicPlayer_C_IsMusicPlayerAvailable");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicPlayerAvailable, Available) == 0x000000, "Member 'BP_MusicPlayer_C_IsMusicPlayerAvailable::Available' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicPlayerAvailable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_MusicPlayer_C_IsMusicPlayerAvailable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.FindDefaultTrackForCurrentShelterLevel
// 0x00F0 (0x00F0 - 0x0000)
struct BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel final
{
public:
	TSoftObjectPtr<class USoundWave>              SoftDefTrack;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UBP_MusicTrack_C*>               FilteredTracks;                                    // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              CallFunc_GetDefaultTrack_DefaultSound;             // 0x0050(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromSoftObjectReference_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_PrimaryAssetIdToString_ReturnValue;  // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel");
static_assert(sizeof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel) == 0x0000F0, "Wrong size on BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, SoftDefTrack) == 0x000000, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::SoftDefTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, FilteredTracks) == 0x000028, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::FilteredTracks' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_GetDefaultTrack_DefaultSound) == 0x000050, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_GetDefaultTrack_DefaultSound' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00007C, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x00007D, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Not_PreBool_ReturnValue) == 0x00007E, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_RandomInteger_ReturnValue) == 0x000088, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_AddUnique_ReturnValue) == 0x0000A8, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_IsValid_ReturnValue) == 0x0000AC, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_GetPrimaryAssetIdFromSoftObjectReference_ReturnValue) == 0x0000B0, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_GetPrimaryAssetIdFromSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0000C0, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Conv_PrimaryAssetIdToString_ReturnValue) == 0x0000C8, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Conv_PrimaryAssetIdToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DC, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000DD, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_BooleanAND_ReturnValue) == 0x0000DE, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000DF, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Length_ReturnValue_3) == 0x0000E0, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Array_Length_ReturnValue_4) == 0x0000E4, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E9, "Member 'BP_MusicPlayer_C_FindDefaultTrackForCurrentShelterLevel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.AddTrackBackInQueue
// 0x0020 (0x0020 - 0x0000)
struct BP_MusicPlayer_C_AddTrackBackInQueue final
{
public:
	class UBP_MusicTrack_C*                       Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_MusicTrack_C*>               AddAfter;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          LastPlayedTrackFoundAlready;                       // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_AddTrackBackInQueue) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_AddTrackBackInQueue");
static_assert(sizeof(BP_MusicPlayer_C_AddTrackBackInQueue) == 0x000020, "Wrong size on BP_MusicPlayer_C_AddTrackBackInQueue");
static_assert(offsetof(BP_MusicPlayer_C_AddTrackBackInQueue, Track) == 0x000000, "Member 'BP_MusicPlayer_C_AddTrackBackInQueue::Track' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_AddTrackBackInQueue, AddAfter) == 0x000008, "Member 'BP_MusicPlayer_C_AddTrackBackInQueue::AddAfter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_AddTrackBackInQueue, LastPlayedTrackFoundAlready) == 0x000018, "Member 'BP_MusicPlayer_C_AddTrackBackInQueue::LastPlayedTrackFoundAlready' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.PauseTrack
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicPlayer_C_PauseTrack final
{
public:
	class UBP_MusicTrack_C*                       BackupLastPlayedTrack;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_PauseTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_PauseTrack");
static_assert(sizeof(BP_MusicPlayer_C_PauseTrack) == 0x000010, "Wrong size on BP_MusicPlayer_C_PauseTrack");
static_assert(offsetof(BP_MusicPlayer_C_PauseTrack, BackupLastPlayedTrack) == 0x000000, "Member 'BP_MusicPlayer_C_PauseTrack::BackupLastPlayedTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PauseTrack, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MusicPlayer_C_PauseTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_PauseTrack, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_MusicPlayer_C_PauseTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.CheckBlackListedTracks
// 0x0128 (0x0128 - 0x0000)
struct BP_MusicPlayer_C_CheckBlackListedTracks final
{
public:
	bool                                          bShouldSaveAfterwards;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldSave;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           TempArray;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x00F0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item_3;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_CheckBlackListedTracks) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_CheckBlackListedTracks");
static_assert(sizeof(BP_MusicPlayer_C_CheckBlackListedTracks) == 0x000128, "Wrong size on BP_MusicPlayer_C_CheckBlackListedTracks");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, bShouldSaveAfterwards) == 0x000000, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::bShouldSaveAfterwards' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, bShouldSave) == 0x000001, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::bShouldSave' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, TempArray) == 0x000008, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::TempArray' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_bool_Variable) == 0x000018, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_bool_Variable_1) == 0x000028, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000040, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Map_Length_ReturnValue) == 0x000068, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Map_Length_ReturnValue_1) == 0x000070, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Max_ReturnValue) == 0x00007C, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Array_Index_Variable_2) == 0x00008C, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Contains_ReturnValue) == 0x000099, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Loop_Counter_Variable_2) == 0x00009C, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A4, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Loop_Counter_Variable_3) == 0x0000A8, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BD, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x0000C0, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C8, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Length_ReturnValue_3) == 0x0000D8, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Length_ReturnValue_4) == 0x0000DC, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000E1, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E2, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E3, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1) == 0x0000E8, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x0000F0, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, Temp_int_Array_Index_Variable_3) == 0x000100, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Get_Item_2) == 0x000104, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Get_Item_3) == 0x000110, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Map_Find_Value) == 0x000118, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Map_Find_ReturnValue) == 0x000119, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Array_Length_ReturnValue_5) == 0x00011C, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_CheckBlackListedTracks, CallFunc_Less_IntInt_ReturnValue_3) == 0x000120, "Member 'BP_MusicPlayer_C_CheckBlackListedTracks::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.BlacklistTrack
// 0x0028 (0x0028 - 0x0000)
struct BP_MusicPlayer_C_BlacklistTrack final
{
public:
	class UBP_MusicTrack_C*                       TrackToBlacklist;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldBeBlacklisted;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_BlacklistTrack) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_BlacklistTrack");
static_assert(sizeof(BP_MusicPlayer_C_BlacklistTrack) == 0x000028, "Wrong size on BP_MusicPlayer_C_BlacklistTrack");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, TrackToBlacklist) == 0x000000, "Member 'BP_MusicPlayer_C_BlacklistTrack::TrackToBlacklist' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, bShouldBeBlacklisted) == 0x000008, "Member 'BP_MusicPlayer_C_BlacklistTrack::bShouldBeBlacklisted' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_MusicPlayer_C_BlacklistTrack::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000018, "Member 'BP_MusicPlayer_C_BlacklistTrack::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MusicPlayer_C_BlacklistTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MusicPlayer_C_BlacklistTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, CallFunc_Map_Find_Value) == 0x000022, "Member 'BP_MusicPlayer_C_BlacklistTrack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_BlacklistTrack, CallFunc_Map_Find_ReturnValue) == 0x000023, "Member 'BP_MusicPlayer_C_BlacklistTrack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_MusicPlayer.BP_MusicPlayer_C.IsMusicBlacklisted
// 0x0090 (0x0090 - 0x0000)
struct BP_MusicPlayer_C_IsMusicBlacklisted final
{
public:
	class UBP_MusicTrack_C*                       Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              SoftRefSound;                                      // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Blacklisted;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicTrack_C*                       CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicPlayer_C_IsMusicBlacklisted) == 0x000008, "Wrong alignment on BP_MusicPlayer_C_IsMusicBlacklisted");
static_assert(sizeof(BP_MusicPlayer_C_IsMusicBlacklisted) == 0x000090, "Wrong size on BP_MusicPlayer_C_IsMusicBlacklisted");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, Track) == 0x000000, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::Track' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, SoftRefSound) == 0x000008, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::SoftRefSound' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, Blacklisted) == 0x000030, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::Blacklisted' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_GetGameMode_ReturnValue) == 0x000038, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000040, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000048, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Map_Find_Value) == 0x000058, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Map_Find_ReturnValue) == 0x000059, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000071, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_GetGameMode_ReturnValue_1) == 0x000078, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1) == 0x000080, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::K2Node_DynamicCast_AsBP_Game_Mode_Shelter_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Map_Find_Value_1) == 0x000089, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_MusicPlayer_C_IsMusicBlacklisted, CallFunc_Map_Find_ReturnValue_1) == 0x00008A, "Member 'BP_MusicPlayer_C_IsMusicBlacklisted::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

}

