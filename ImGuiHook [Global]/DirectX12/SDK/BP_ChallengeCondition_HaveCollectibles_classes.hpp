#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengeCondition_HaveCollectibles

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_ChallengeCondition_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChallengeCondition_HaveCollectibles.BP_ChallengeCondition_HaveCollectibles_C
// 0x0068 (0x03E8 - 0x0380)
class ABP_ChallengeCondition_HaveCollectibles_C final : public ABP_ChallengeCondition_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ChallengeCondition_HaveCollectibles_C; // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 CollectibleClass;                                  // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CassetteRelevantSeasonIndex;                       // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldHave_ALL_Collectibles;                       // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RequirementsMet;                                   // 0x0395(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396[0x2];                                      // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDataTable>              AllCollectiblesSoftRef;                            // 0x0398(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UDataTable*                             AllCollectiblesHardRef;                            // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CollectibleClassesToCheck;                         // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           TempRowNames;                                      // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_ChallengeCondition_HaveCollectibles(int32 EntryPoint);
	void StashInitLoop();
	void UnbindEverything();
	void ChallengeCompleted();
	void Player_Arrived_in_Shelter_Event();
	void ReceiveBeginPlay();
	void Get_Maximum_Progress(int32* Maximum_Progress);
	void Get_Condition_Text(class FText* Condition_Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChallengeCondition_HaveCollectibles_C">();
	}
	static class ABP_ChallengeCondition_HaveCollectibles_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChallengeCondition_HaveCollectibles_C>();
	}
};
static_assert(alignof(ABP_ChallengeCondition_HaveCollectibles_C) == 0x000008, "Wrong alignment on ABP_ChallengeCondition_HaveCollectibles_C");
static_assert(sizeof(ABP_ChallengeCondition_HaveCollectibles_C) == 0x0003E8, "Wrong size on ABP_ChallengeCondition_HaveCollectibles_C");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, UberGraphFrame_BP_ChallengeCondition_HaveCollectibles_C) == 0x000380, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::UberGraphFrame_BP_ChallengeCondition_HaveCollectibles_C' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, CollectibleClass) == 0x000388, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::CollectibleClass' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, CassetteRelevantSeasonIndex) == 0x000390, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::CassetteRelevantSeasonIndex' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, ShouldHave_ALL_Collectibles) == 0x000394, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::ShouldHave_ALL_Collectibles' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, RequirementsMet) == 0x000395, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::RequirementsMet' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, AllCollectiblesSoftRef) == 0x000398, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::AllCollectiblesSoftRef' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, AllCollectiblesHardRef) == 0x0003C0, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::AllCollectiblesHardRef' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, CollectibleClassesToCheck) == 0x0003C8, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::CollectibleClassesToCheck' has a wrong offset!");
static_assert(offsetof(ABP_ChallengeCondition_HaveCollectibles_C, TempRowNames) == 0x0003D8, "Member 'ABP_ChallengeCondition_HaveCollectibles_C::TempRowNames' has a wrong offset!");

}

