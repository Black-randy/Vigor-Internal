#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Bombardment_DynamicEvent

#include "Basic.hpp"

#include "BP_Bombardment_DynamicEvent_classes.hpp"
#include "BP_Bombardment_DynamicEvent_parameters.hpp"


namespace SDK
{

// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.ExecuteUbergraph_BP_Bombardment_DynamicEvent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Bombardment_DynamicEvent_C::ExecuteUbergraph_BP_Bombardment_DynamicEvent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "ExecuteUbergraph_BP_Bombardment_DynamicEvent");

	Params::BP_Bombardment_DynamicEvent_C_ExecuteUbergraph_BP_Bombardment_DynamicEvent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Bombardment Stopped
// (BlueprintCallable, BlueprintEvent)

void ABP_Bombardment_DynamicEvent_C::Bombardment_Stopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Bombardment Stopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Spawn Flare On Location
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Bombardment_DynamicEvent_C::Spawn_Flare_On_Location(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Spawn Flare On Location");

	Params::BP_Bombardment_DynamicEvent_C_Spawn_Flare_On_Location Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Spawn Flares
// (BlueprintCallable, BlueprintEvent)

void ABP_Bombardment_DynamicEvent_C::Spawn_Flares()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Spawn Flares");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Drop Mortar Shell
// (BlueprintCallable, BlueprintEvent)

void ABP_Bombardment_DynamicEvent_C::Drop_Mortar_Shell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Drop Mortar Shell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Stop Siren
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Bombardment_DynamicEvent_C::Stop_Siren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Stop Siren");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Start Siren
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Bombardment_DynamicEvent_C::Start_Siren(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Start Siren");

	Params::BP_Bombardment_DynamicEvent_C_Start_Siren Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Start bombardment
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Bombardment_DynamicEvent_C::Start_bombardment(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Start bombardment");

	Params::BP_Bombardment_DynamicEvent_C_Start_bombardment Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Get Random Bombardment Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Location_Found                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Bombardment_DynamicEvent_C::Get_Random_Bombardment_Location(bool* Location_Found, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Get Random Bombardment Location");

	Params::BP_Bombardment_DynamicEvent_C_Get_Random_Bombardment_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location_Found != nullptr)
		*Location_Found = Parms.Location_Found;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Get World MinMax
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Bombardment_DynamicEvent_C::Get_World_MinMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Get World MinMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Bombardment_DynamicEvent.BP_Bombardment_DynamicEvent_C.Get Random Location In Radius
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Bombardment_DynamicEvent_C::Get_Random_Location_In_Radius(float Radius, bool* Success, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Bombardment_DynamicEvent_C", "Get Random Location In Radius");

	Params::BP_Bombardment_DynamicEvent_C_Get_Random_Location_In_Radius Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}

}

