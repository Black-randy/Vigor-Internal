#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Firearm_ABP

#include "Basic.hpp"

#include "Firearm_ABP_classes.hpp"
#include "Firearm_ABP_parameters.hpp"


namespace SDK
{

// Function Firearm_ABP.Firearm_ABP_C.ExecuteUbergraph_Firearm_ABP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFirearm_ABP_C::ExecuteUbergraph_Firearm_ABP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "ExecuteUbergraph_Firearm_ABP");

	Params::Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.BlueprintBeginPlay
// (Event, Public, BlueprintEvent)

void UFirearm_ABP_C::BlueprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "BlueprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.PlayerInvalidState
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::PlayerInvalidState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "PlayerInvalidState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.UpdateIsMagazineEmpty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsEmpty                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFirearm_ABP_C::UpdateIsMagazineEmpty(bool bIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "UpdateIsMagazineEmpty");

	Params::Firearm_ABP_C_UpdateIsMagazineEmpty Parms{};

	Parms.bIsEmpty = bIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.InitializeVariables
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::InitializeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "InitializeVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.RefreshPlayerBipod
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::RefreshPlayerBipod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "RefreshPlayerBipod");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.CheckIfWeShouldHideTheBipod
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::CheckIfWeShouldHideTheBipod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "CheckIfWeShouldHideTheBipod");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.ReceiveFireShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RemainingAmmo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFirearm_ABP_C::ReceiveFireShot(int32 RemainingAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "ReceiveFireShot");

	Params::Firearm_ABP_C_ReceiveFireShot Parms{};

	Parms.RemainingAmmo = RemainingAmmo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFirearm_ABP_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "BlueprintUpdateAnimation");

	Params::Firearm_ABP_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.CheckIfStanceChanged
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::CheckIfStanceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "CheckIfStanceChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.RefreshPlayer
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::RefreshPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "RefreshPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.RefreshStance
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::RefreshStance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "RefreshStance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.CheckIfPlayerRefIsCorrect
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::CheckIfPlayerRefIsCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "CheckIfPlayerRefIsCorrect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.SetStance
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::SetStance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "SetStance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.InitializeReferences
// (BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::InitializeReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "InitializeReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void UFirearm_ABP_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.OnLoaded_303A9E7341428F48F05BE78A97496F05
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFirearm_ABP_C::OnLoaded_303A9E7341428F48F05BE78A97496F05(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "OnLoaded_303A9E7341428F48F05BE78A97496F05");

	Params::Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.OnLoaded_303A9E7341428F48F05BE78AD37B979C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFirearm_ABP_C::OnLoaded_303A9E7341428F48F05BE78AD37B979C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "OnLoaded_303A9E7341428F48F05BE78AD37B979C");

	Params::Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.OnLoaded_303A9E7341428F48F05BE78A1F67D92A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFirearm_ABP_C::OnLoaded_303A9E7341428F48F05BE78A1F67D92A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "OnLoaded_303A9E7341428F48F05BE78A1F67D92A");

	Params::Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.RotateDrum
// (Public, BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::RotateDrum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "RotateDrum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.SetBasicControlVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UFirearm_ABP_C::SetBasicControlVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "SetBasicControlVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Firearm_ABP.Firearm_ABP_C.UpdateWeaponControllVariables
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldFoldBipod_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsCurrentlyEquipped_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFirearm_ABP_C::UpdateWeaponControllVariables(bool bShouldFoldBipod_0, bool bIsCurrentlyEquipped_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "UpdateWeaponControllVariables");

	Params::Firearm_ABP_C_UpdateWeaponControllVariables Parms{};

	Parms.bShouldFoldBipod_0 = bShouldFoldBipod_0;
	Parms.bIsCurrentlyEquipped_0 = bIsCurrentlyEquipped_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.UpdateCharStance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStance                                 NewStance                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFirearm_ABP_C::UpdateCharStance(EStance NewStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "UpdateCharStance");

	Params::Firearm_ABP_C_UpdateCharStance Parms{};

	Parms.NewStance = NewStance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.SetIsEmpty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEmpty__0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFirearm_ABP_C::SetIsEmpty(bool IsEmpty__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "SetIsEmpty");

	Params::Firearm_ABP_C_SetIsEmpty Parms{};

	Parms.IsEmpty__0 = IsEmpty__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Firearm_ABP.Firearm_ABP_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UFirearm_ABP_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Firearm_ABP_C", "AnimGraph");

	Params::Firearm_ABP_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}

}

