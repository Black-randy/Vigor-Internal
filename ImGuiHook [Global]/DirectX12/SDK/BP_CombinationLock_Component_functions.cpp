#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombinationLock_Component

#include "Basic.hpp"

#include "BP_CombinationLock_Component_classes.hpp"
#include "BP_CombinationLock_Component_parameters.hpp"


namespace SDK
{

// Function BP_CombinationLock_Component.BP_CombinationLock_Component_C.On player solved combination__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CombinationLock_PCComponent_C*Player_that_opened_lock                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_CombinationLock_Component_C*  Unlocked_Combination_lock                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombinationLock_Component_C::On_player_solved_combination__DelegateSignature(class UBP_CombinationLock_PCComponent_C* Player_that_opened_lock, class UBP_CombinationLock_Component_C* Unlocked_Combination_lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationLock_Component_C", "On player solved combination__DelegateSignature");

	Params::BP_CombinationLock_Component_C_On_player_solved_combination__DelegateSignature Parms{};

	Parms.Player_that_opened_lock = Player_that_opened_lock;
	Parms.Unlocked_Combination_lock = Unlocked_Combination_lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombinationLock_Component.BP_CombinationLock_Component_C.ExecuteUbergraph_BP_CombinationLock_Component
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombinationLock_Component_C::ExecuteUbergraph_BP_CombinationLock_Component(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationLock_Component_C", "ExecuteUbergraph_BP_CombinationLock_Component");

	Params::BP_CombinationLock_Component_C_ExecuteUbergraph_BP_CombinationLock_Component Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombinationLock_Component.BP_CombinationLock_Component_C.Generate the code
// (BlueprintCallable, BlueprintEvent)

void UBP_CombinationLock_Component_C::Generate_the_code()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationLock_Component_C", "Generate the code");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CombinationLock_Component.BP_CombinationLock_Component_C.Update code
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CombinationLock_PCComponent_C*Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           Last_Set_Code_0                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CombinationLock_Component_C::Update_code(const class UBP_CombinationLock_PCComponent_C* Player, const TArray<int32>& Last_Set_Code_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationLock_Component_C", "Update code");

	Params::BP_CombinationLock_Component_C_Update_code Parms{};

	Parms.Player = Player;
	Parms.Last_Set_Code_0 = std::move(Last_Set_Code_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombinationLock_Component.BP_CombinationLock_Component_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CombinationLock_Component_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationLock_Component_C", "ReceiveTick");

	Params::BP_CombinationLock_Component_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CombinationLock_Component.BP_CombinationLock_Component_C.Is code correct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           Current_code                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_CombinationLock_Component_C::Is_code_correct(TArray<int32>& Current_code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationLock_Component_C", "Is code correct");

	Params::BP_CombinationLock_Component_C_Is_code_correct Parms{};

	Parms.Current_code = std::move(Current_code);

	UObject::ProcessEvent(Func, &Parms);

	Current_code = std::move(Parms.Current_code);

	return Parms.ReturnValue;
}


// Function BP_CombinationLock_Component.BP_CombinationLock_Component_C.Print codes
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CombinationLock_Component_C::Print_codes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationLock_Component_C", "Print codes");

	UObject::ProcessEvent(Func, nullptr);
}

}

