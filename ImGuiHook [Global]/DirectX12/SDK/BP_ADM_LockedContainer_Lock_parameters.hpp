#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_LockedContainer_Lock

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.ExecuteUbergraph_BP_ADM_LockedContainer_Lock
// 0x0288 (0x0288 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable;                          // 0x0008(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_1;                        // 0x0038(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Matches_C*                K2Node_DynamicCast_AsBP_Character_Matches;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable_1;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_Soft_sound;                     // 0x00F0(0x0028)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Fade_in_duration;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             K2Node_CustomEvent_SoftMesh;                       // 0x0120(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x5];                                      // 0x0173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ammount_of_digits_in_code;      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExplosionRadius;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatorController;                 // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DamagingExplosion;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_EnviromentDamageMultiplier;           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetIsValidTypeOfDamage_IsValid;           // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default;                             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ByDamage;                       // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default_1;                           // 0x0200(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_SM_SoftRef;                     // 0x0228(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_2;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_2;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock) == 0x000288, "Wrong size on BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, EntryPoint) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_softobject_Variable) == 0x000008, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_bool_Variable) == 0x000030, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_softobject_Variable_1) == 0x000038, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_bool_Variable_1) == 0x000060, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_object_Variable) == 0x000068, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsDedicatedServer_ReturnValue) == 0x000070, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_bool_Variable_2) == 0x000071, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_ComponentBoundEvent_Sender) == 0x000088, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_ComponentBoundEvent_Interacting_Actor) == 0x000090, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_ComponentBoundEvent_Interacting_Actor' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_Loaded_1) == 0x000098, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_AsBP_Character_Matches) == 0x0000A0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_AsBP_Character_Matches' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_Damage) == 0x0000AC, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_DamageType) == 0x0000B0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_InstigatedBy) == 0x0000B8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_DamageCauser_1) == 0x0000C0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_object_Variable_1) == 0x0000D8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_Loaded) == 0x0000E0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_Soft_sound) == 0x0000F0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_Soft_sound' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_Fade_in_duration) == 0x000118, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_Fade_in_duration' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_SoftMesh) == 0x000120, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_SoftMesh' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000148, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000150, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_AsStatic_Mesh) == 0x000158, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValid_ReturnValue_1) == 0x000161, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000168, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValid_ReturnValue_2) == 0x000170, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000171, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_SetStaticMesh_ReturnValue) == 0x000172, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000178, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_Ammount_of_digits_in_code) == 0x000180, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_Ammount_of_digits_in_code' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValid_ReturnValue_3) == 0x000184, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_Location) == 0x000188, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_ExplosionRadius) == 0x000194, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_ExplosionRadius' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_InstigatorController) == 0x000198, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_InstigatorController' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_DamageCauser) == 0x0001A0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_DamagingExplosion) == 0x0001A8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_DamagingExplosion' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Event_EnviromentDamageMultiplier) == 0x0001AC, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Event_EnviromentDamageMultiplier' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_GetIsValidTypeOfDamage_IsValid) == 0x0001C0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_GetIsValidTypeOfDamage_IsValid' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x0001C8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_bSuccess_2) == 0x0001D0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_bool_Variable_3) == 0x0001D1, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_GetHumanCharacter_ReturnValue) == 0x0001D8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Select_Default) == 0x0001E0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValid_ReturnValue_4) == 0x0001E8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_AsSound_Base) == 0x0001F0, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_ByDamage) == 0x0001F9, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_ByDamage' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Select_Default_1) == 0x000200, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_CustomEvent_SM_SoftRef) == 0x000228, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_CustomEvent_SM_SoftRef' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_LoadSoftReference_ReturnValue) == 0x000250, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x000258, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_IsValid_ReturnValue_5) == 0x000259, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000260, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_bSuccess_4) == 0x000268, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, Temp_bool_Variable_4) == 0x000269, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_SetStaticMesh_ReturnValue_1) == 0x00026A, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_Select_Default_2) == 0x000270, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_AsStatic_Mesh_2) == 0x000278, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_AsStatic_Mesh_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, K2Node_DynamicCast_bSuccess_5) == 0x000280, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000281, "Member 'BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.SetLockMesh
// 0x0028 (0x0028 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_SetLockMesh final
{
public:
	TSoftObjectPtr<class UObject>                 SM_SoftRef;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_SetLockMesh) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_SetLockMesh");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_SetLockMesh) == 0x000028, "Wrong size on BP_ADM_LockedContainer_Lock_C_SetLockMesh");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_SetLockMesh, SM_SoftRef) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_SetLockMesh::SM_SoftRef' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.OnLockSolved
// 0x0001 (0x0001 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_OnLockSolved final
{
public:
	bool                                          ByDamage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_OnLockSolved) == 0x000001, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_OnLockSolved");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_OnLockSolved) == 0x000001, "Wrong size on BP_ADM_LockedContainer_Lock_C_OnLockSolved");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_OnLockSolved, ByDamage) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_OnLockSolved::ByDamage' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.ProccessExplosion
// 0x0028 (0x0028 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_ProccessExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatorController;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamagingExplosion;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnviromentDamageMultiplier;                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_ProccessExplosion");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion) == 0x000028, "Wrong size on BP_ADM_LockedContainer_Lock_C_ProccessExplosion");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion, Location) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_ProccessExplosion::Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion, ExplosionRadius) == 0x00000C, "Member 'BP_ADM_LockedContainer_Lock_C_ProccessExplosion::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion, InstigatorController) == 0x000010, "Member 'BP_ADM_LockedContainer_Lock_C_ProccessExplosion::InstigatorController' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion, DamageCauser) == 0x000018, "Member 'BP_ADM_LockedContainer_Lock_C_ProccessExplosion::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion, DamagingExplosion) == 0x000020, "Member 'BP_ADM_LockedContainer_Lock_C_ProccessExplosion::DamagingExplosion' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ProccessExplosion, EnviromentDamageMultiplier) == 0x000024, "Member 'BP_ADM_LockedContainer_Lock_C_ProccessExplosion::EnviromentDamageMultiplier' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Generate digits in the lock
// 0x0004 (0x0004 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock final
{
public:
	int32                                         Ammount_of_digits_in_code;                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock) == 0x000004, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock) == 0x000004, "Wrong size on BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock, Ammount_of_digits_in_code) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock::Ammount_of_digits_in_code' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Trap_SetStaticMesh
// 0x0028 (0x0028 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh final
{
public:
	TSoftObjectPtr<class UStaticMesh>             SoftMesh;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh) == 0x000028, "Wrong size on BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh, SoftMesh) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh::SoftMesh' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Load soft sound and play
// 0x0030 (0x0030 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play final
{
public:
	TSoftObjectPtr<class UObject>                 Soft_sound;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         Fade_in_duration;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play) == 0x000030, "Wrong size on BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play, Soft_sound) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play::Soft_sound' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play, Fade_in_duration) == 0x000028, "Member 'BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play::Fade_in_duration' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start on Server__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature) == 0x000010, "Wrong size on BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature, Sender) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.OnLoaded_303A9E7341428F48F05BE78A8CF2AD35
// 0x0008 (0x0008 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35) == 0x000008, "Wrong size on BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35, Loaded) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35::Loaded' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.OnLoaded_303A9E7341428F48F05BE78A6556E323
// 0x0008 (0x0008 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323) == 0x000008, "Wrong size on BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323, Loaded) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323::Loaded' has a wrong offset!");

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.GetIsValidTypeOfDamage
// 0x0060 (0x0060 - 0x0000)
struct BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TC_ConcussionTrap_Object_C*         K2Node_DynamicCast_AsBP_TC_Concussion_Trap_Object; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TC_ContactBomb_Object_C*            K2Node_DynamicCast_AsBP_TC_Contact_Bomb_Object;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MortarStrikeShell_C*                K2Node_DynamicCast_AsBP_Mortar_Strike_Shell;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FragGrenade_Thrown_C*               K2Node_DynamicCast_AsBP_Frag_Grenade_Thrown;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage");
static_assert(sizeof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage) == 0x000060, "Wrong size on BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, DamageCauser) == 0x000000, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, IsValid) == 0x000008, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::IsValid' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_AsWeapon) == 0x000010, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_AsBP_TC_Concussion_Trap_Object) == 0x000020, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_AsBP_TC_Concussion_Trap_Object' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_AsBP_TC_Contact_Bomb_Object) == 0x000030, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_AsBP_TC_Contact_Bomb_Object' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_AsBP_Mortar_Strike_Shell) == 0x000040, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_AsBP_Mortar_Strike_Shell' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_bSuccess_3) == 0x000048, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_AsBP_Frag_Grenade_Thrown) == 0x000050, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_AsBP_Frag_Grenade_Thrown' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, K2Node_DynamicCast_bSuccess_4) == 0x000058, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, CallFunc_BooleanOR_ReturnValue) == 0x000059, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, CallFunc_BooleanOR_ReturnValue_1) == 0x00005A, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, CallFunc_BooleanOR_ReturnValue_2) == 0x00005B, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage, CallFunc_BooleanOR_ReturnValue_3) == 0x00005C, "Member 'BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

}

