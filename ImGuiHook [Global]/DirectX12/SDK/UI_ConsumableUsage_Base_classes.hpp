#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ConsumableUsage_Base

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "FlameUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ConsumableUsage_Base.UI_ConsumableUsage_Base_C
// 0x0020 (0x02D8 - 0x02B8)
class UUI_ConsumableUsage_Base_C : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          CanBeUsed;                                         // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AConsumableItem*                        Consumable;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShouldCheckCanBeUsed;                              // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_ConsumableUsage_Base(int32 EntryPoint);
	void OnInputModeChanged(int32 PlayerIndex, EInputMode InputMode);
	void OnPCControlsChange();
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SetHoldProgress(bool CanBeUsed_0, float Progress);
	void UpdateIcons();

	void GetHoldIcon(class UImage** GamepadIcon) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ConsumableUsage_Base_C">();
	}
	static class UUI_ConsumableUsage_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ConsumableUsage_Base_C>();
	}
};
static_assert(alignof(UUI_ConsumableUsage_Base_C) == 0x000008, "Wrong alignment on UUI_ConsumableUsage_Base_C");
static_assert(sizeof(UUI_ConsumableUsage_Base_C) == 0x0002D8, "Wrong size on UUI_ConsumableUsage_Base_C");
static_assert(offsetof(UUI_ConsumableUsage_Base_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_ConsumableUsage_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ConsumableUsage_Base_C, CanBeUsed) == 0x0002C0, "Member 'UUI_ConsumableUsage_Base_C::CanBeUsed' has a wrong offset!");
static_assert(offsetof(UUI_ConsumableUsage_Base_C, Consumable) == 0x0002C8, "Member 'UUI_ConsumableUsage_Base_C::Consumable' has a wrong offset!");
static_assert(offsetof(UUI_ConsumableUsage_Base_C, ShouldCheckCanBeUsed) == 0x0002D0, "Member 'UUI_ConsumableUsage_Base_C::ShouldCheckCanBeUsed' has a wrong offset!");

}

