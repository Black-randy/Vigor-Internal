#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GSC_TeamManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Player Joined Team__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature final
{
public:
	class UBP_GSC_Team_C*                         Team;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature");
static_assert(sizeof(BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature) == 0x000010, "Wrong size on BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature");
static_assert(offsetof(BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature, Team) == 0x000000, "Member 'BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature::Team' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature, Player_State) == 0x000008, "Member 'BP_GSC_TeamManager_C_Player_Joined_Team__DelegateSignature::Player_State' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Player Left Team__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature final
{
public:
	class UBP_GSC_Team_C*                         Team;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature");
static_assert(sizeof(BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature) == 0x000010, "Wrong size on BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature");
static_assert(offsetof(BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature, Team) == 0x000000, "Member 'BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature::Team' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature, Player_State) == 0x000008, "Member 'BP_GSC_TeamManager_C_Player_Left_Team__DelegateSignature::Player_State' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.ExecuteUbergraph_BP_GSC_TeamManager
// 0x0110 (0x0110 - 0x0000)
struct BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Teams_C*                   K2Node_DynamicCast_AsBP_Game_Mode_Teams;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Sides_Count_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_C*                         CallFunc_Add_Team_Team;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           K2Node_CustomEvent_New_Player;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         CallFunc_Find_Team_for_Player_Team;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_Player_Success;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           K2Node_CustomEvent_Leaving_Player;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Remove_Player_ReturnValue;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Round;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Teams_C*                   K2Node_DynamicCast_AsBP_Game_Mode_Teams_1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Get_Sides_Sides;                          // 0x00D0(0x0010)(ReferenceParm)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Sides_Count_ReturnValue_1;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Side_Success;                         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager");
static_assert(sizeof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager) == 0x000110, "Wrong size on BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, EntryPoint) == 0x000000, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_AsBP_Game_Mode_Teams) == 0x000010, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_AsBP_Game_Mode_Teams' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Get_Sides_Count_ReturnValue) == 0x00001C, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Get_Sides_Count_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Add_Team_Team) == 0x000020, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Add_Team_Team' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_CustomEvent_New_Player) == 0x000028, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_CustomEvent_New_Player' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, Temp_int_Variable) == 0x000030, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Find_Team_for_Player_Team) == 0x000038, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Find_Team_for_Player_Team' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Add_Player_Success) == 0x000040, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Add_Player_Success' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000042, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000050, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_CustomEvent_Leaving_Player) == 0x000088, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_CustomEvent_Leaving_Player' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_AsBP_Player_State_Teams_1) == 0x000098, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_AsBP_Player_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Remove_Player_ReturnValue) == 0x0000A9, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Remove_Player_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_IsValid_ReturnValue_3) == 0x0000AA, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_CustomEvent_Round) == 0x0000AC, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_CustomEvent_Round' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_GetGameMode_ReturnValue_1) == 0x0000B0, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_AsBP_Game_Mode_Teams_1) == 0x0000C0, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_AsBP_Game_Mode_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Get_Sides_Sides) == 0x0000D0, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Get_Sides_Sides' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_IsValid_ReturnValue_4) == 0x0000EC, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Less_IntInt_ReturnValue) == 0x0000ED, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Get_Sides_Count_ReturnValue_1) == 0x0000F4, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Get_Sides_Count_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Percent_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_Set_Side_Success) == 0x000108, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_Set_Side_Success' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager, CallFunc_IsDedicatedServer_ReturnValue) == 0x000109, "Member 'BP_GSC_TeamManager_C_ExecuteUbergraph_BP_GSC_TeamManager::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Assign Sides to Teams
// 0x0004 (0x0004 - 0x0000)
struct BP_GSC_TeamManager_C_Assign_Sides_to_Teams final
{
public:
	int32                                         Round;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSC_TeamManager_C_Assign_Sides_to_Teams) == 0x000004, "Wrong alignment on BP_GSC_TeamManager_C_Assign_Sides_to_Teams");
static_assert(sizeof(BP_GSC_TeamManager_C_Assign_Sides_to_Teams) == 0x000004, "Wrong size on BP_GSC_TeamManager_C_Assign_Sides_to_Teams");
static_assert(offsetof(BP_GSC_TeamManager_C_Assign_Sides_to_Teams, Round) == 0x000000, "Member 'BP_GSC_TeamManager_C_Assign_Sides_to_Teams::Round' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Player Leaving
// 0x0008 (0x0008 - 0x0000)
struct BP_GSC_TeamManager_C_Player_Leaving final
{
public:
	class ABP_PlayerController_Teams_C*           Leaving_Player;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSC_TeamManager_C_Player_Leaving) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_Player_Leaving");
static_assert(sizeof(BP_GSC_TeamManager_C_Player_Leaving) == 0x000008, "Wrong size on BP_GSC_TeamManager_C_Player_Leaving");
static_assert(offsetof(BP_GSC_TeamManager_C_Player_Leaving, Leaving_Player) == 0x000000, "Member 'BP_GSC_TeamManager_C_Player_Leaving::Leaving_Player' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.New Player Joining
// 0x0008 (0x0008 - 0x0000)
struct BP_GSC_TeamManager_C_New_Player_Joining final
{
public:
	class ABP_PlayerController_Teams_C*           New_Player;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSC_TeamManager_C_New_Player_Joining) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_New_Player_Joining");
static_assert(sizeof(BP_GSC_TeamManager_C_New_Player_Joining) == 0x000008, "Wrong size on BP_GSC_TeamManager_C_New_Player_Joining");
static_assert(offsetof(BP_GSC_TeamManager_C_New_Player_Joining, New_Player) == 0x000000, "Member 'BP_GSC_TeamManager_C_New_Player_Joining::New_Player' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Add Team
// 0x0050 (0x0050 - 0x0000)
struct BP_GSC_TeamManager_C_Add_Team final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         Team;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         CallFunc_AddComponentToActor_OutNewComponent;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSC_TeamManager_C_Add_Team) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_Add_Team");
static_assert(sizeof(BP_GSC_TeamManager_C_Add_Team) == 0x000050, "Wrong size on BP_GSC_TeamManager_C_Add_Team");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, Size) == 0x000000, "Member 'BP_GSC_TeamManager_C_Add_Team::Size' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, Team) == 0x000008, "Member 'BP_GSC_TeamManager_C_Add_Team::Team' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_GSC_TeamManager_C_Add_Team::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_GSC_TeamManager_C_Add_Team::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, CallFunc_AddComponentToActor_OutNewComponent) == 0x000020, "Member 'BP_GSC_TeamManager_C_Add_Team::CallFunc_AddComponentToActor_OutNewComponent' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, CallFunc_Array_AddUnique_ReturnValue) == 0x000028, "Member 'BP_GSC_TeamManager_C_Add_Team::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_GSC_TeamManager_C_Add_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_GSC_TeamManager_C_Add_Team::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Add_Team, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_GSC_TeamManager_C_Add_Team::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Find Team for Player
// 0x00A0 (0x00A0 - 0x0000)
struct BP_GSC_TeamManager_C_Find_Team_for_Player final
{
public:
	class ABP_PlayerController_Teams_C*           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_C*                         Team;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Smallest_Team_Size;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         Smallest_Team;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Empty_Slot_Count_Empty_Slots;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GSC_TeamManager_C_Find_Team_for_Player) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_Find_Team_for_Player");
static_assert(sizeof(BP_GSC_TeamManager_C_Find_Team_for_Player) == 0x0000A0, "Wrong size on BP_GSC_TeamManager_C_Find_Team_for_Player");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, Player) == 0x000000, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::Player' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, Team) == 0x000008, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::Team' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, Smallest_Team_Size) == 0x000010, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::Smallest_Team_Size' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, Smallest_Team) == 0x000018, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::Smallest_Team' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_GetDisplayName_ReturnValue_1) == 0x000060, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Get_Empty_Slot_Count_Empty_Slots) == 0x000094, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Get_Empty_Slot_Count_Empty_Slots' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Find_Team_for_Player, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_GSC_TeamManager_C_Find_Team_for_Player::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Are Teams Set and Full
// 0x0048 (0x0048 - 0x0000)
struct BP_GSC_TeamManager_C_Are_Teams_Set_and_Full final
{
public:
	bool                                          Teams_Set_and_Full;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Teams_C*                   K2Node_DynamicCast_AsBP_Game_Mode_Teams;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Sides_Count_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Empty_Slot_Count_Empty_Slots;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_Are_Teams_Set_and_Full");
static_assert(sizeof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full) == 0x000048, "Wrong size on BP_GSC_TeamManager_C_Are_Teams_Set_and_Full");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, Teams_Set_and_Full) == 0x000000, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::Teams_Set_and_Full' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, K2Node_DynamicCast_AsBP_Game_Mode_Teams) == 0x000010, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::K2Node_DynamicCast_AsBP_Game_Mode_Teams' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Get_Sides_Count_ReturnValue) == 0x000020, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Get_Sides_Count_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Get_Empty_Slot_Count_Empty_Slots) == 0x000040, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Get_Empty_Slot_Count_Empty_Slots' has a wrong offset!");
static_assert(offsetof(BP_GSC_TeamManager_C_Are_Teams_Set_and_Full, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_GSC_TeamManager_C_Are_Teams_Set_and_Full::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GSC_TeamManager.BP_GSC_TeamManager_C.Get Teams
// 0x0010 (0x0010 - 0x0000)
struct BP_GSC_TeamManager_C_Get_Teams final
{
public:
	TArray<class UBP_GSC_Team_C*>                 Teams_0;                                           // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_GSC_TeamManager_C_Get_Teams) == 0x000008, "Wrong alignment on BP_GSC_TeamManager_C_Get_Teams");
static_assert(sizeof(BP_GSC_TeamManager_C_Get_Teams) == 0x000010, "Wrong size on BP_GSC_TeamManager_C_Get_Teams");
static_assert(offsetof(BP_GSC_TeamManager_C_Get_Teams, Teams_0) == 0x000000, "Member 'BP_GSC_TeamManager_C_Get_Teams::Teams_0' has a wrong offset!");

}

