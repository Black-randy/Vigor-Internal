#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController_AirDropModular

#include "Basic.hpp"

#include "BP_PlayerController_AirDropModular_classes.hpp"
#include "BP_PlayerController_AirDropModular_parameters.hpp"


namespace SDK
{

// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.ExecuteUbergraph_BP_PlayerController_AirDropModular
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_AirDropModular_C::ExecuteUbergraph_BP_PlayerController_AirDropModular(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "ExecuteUbergraph_BP_PlayerController_AirDropModular");

	Params::BP_PlayerController_AirDropModular_C_ExecuteUbergraph_BP_PlayerController_AirDropModular Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.StopLookingForRewardItem
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::StopLookingForRewardItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "StopLookingForRewardItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Client_OtherPlayerLootedAirdrop
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::Client_OtherPlayerLootedAirdrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Client_OtherPlayerLootedAirdrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Client_PriorTo Airdrop
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::Client_PriorTo_Airdrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Client_PriorTo Airdrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Client_PlayerLootedAirdrop
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::Client_PlayerLootedAirdrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Client_PlayerLootedAirdrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.TriggerPlayerMarkedBlink
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_PlayerMarkedStates                    PlayerMarkedState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_AirDropModular_C::TriggerPlayerMarkedBlink(E_PlayerMarkedStates PlayerMarkedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "TriggerPlayerMarkedBlink");

	Params::BP_PlayerController_AirDropModular_C_TriggerPlayerMarkedBlink Parms{};

	Parms.PlayerMarkedState = PlayerMarkedState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.HidePlayerMarkedStatus
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_PlayerMarkedStates                    Player_Marked_State                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_AirDropModular_C::HidePlayerMarkedStatus(E_PlayerMarkedStates Player_Marked_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "HidePlayerMarkedStatus");

	Params::BP_PlayerController_AirDropModular_C_HidePlayerMarkedStatus Parms{};

	Parms.Player_Marked_State = Player_Marked_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Show Player Marked Status
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_PlayerMarkedStates                    Player_Marked_State                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_AirDropModular_C::Show_Player_Marked_Status(E_PlayerMarkedStates Player_Marked_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Show Player Marked Status");

	Params::BP_PlayerController_AirDropModular_C_Show_Player_Marked_Status Parms{};

	Parms.Player_Marked_State = Player_Marked_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.LeaveSession
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MapToReturnTo_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_AirDropModular_C::LeaveSession(class FName MapToReturnTo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "LeaveSession");

	Params::BP_PlayerController_AirDropModular_C_LeaveSession Parms{};

	Parms.MapToReturnTo_0 = MapToReturnTo_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.StartLookingForRewardItem
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::StartLookingForRewardItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "StartLookingForRewardItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.LookForRewardItem
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::LookForRewardItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "LookForRewardItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.PossessedServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Possessed_Character                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_AirDropModular_C::PossessedServer(class ABP_Character_C* Possessed_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "PossessedServer");

	Params::BP_PlayerController_AirDropModular_C_PossessedServer Parms{};

	Parms.Possessed_Character = Possessed_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Destroy ADM Component
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PCComponent_ADM_C*            ADM_PCComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_AirDropModular_C::Destroy_ADM_Component(class UBP_PCComponent_ADM_C* ADM_PCComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Destroy ADM Component");

	Params::BP_PlayerController_AirDropModular_C_Destroy_ADM_Component Parms{};

	Parms.ADM_PCComponent = ADM_PCComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Deregister Debug UI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::Deregister_Debug_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Deregister Debug UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Register Debug UI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::Register_Debug_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Register Debug UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Print Component List
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::Print_Component_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Print Component List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.Match Has Started
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::Match_Has_Started()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "Match Has Started");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_AirDropModular.BP_PlayerController_AirDropModular_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_AirDropModular_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_AirDropModular_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

