#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_TomatoFight

#include "Basic.hpp"

#include "BP_Character_TomatoFight_classes.hpp"
#include "BP_Character_TomatoFight_parameters.hpp"


namespace SDK
{

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ExecuteUbergraph_BP_Character_TomatoFight
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TomatoFight_C::ExecuteUbergraph_BP_Character_TomatoFight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "ExecuteUbergraph_BP_Character_TomatoFight");

	Params::BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.EquipWeapon
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_TomatoFight_C::EquipWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "EquipWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ClientEquipFirstWeapon
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Character_TomatoFight_C::ClientEquipFirstWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "ClientEquipFirstWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TomatoFight_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "ReceiveEndPlay");

	Params::BP_Character_TomatoFight_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.OnTakeDamage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamageType                             DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  InstigatingActor                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class AItem>                InstigatingItemClass                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FHitResultSimplified             HitOptimised                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// TArray<TSubclassOf<class AItem>>        AffectedItems                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper)

void ABP_Character_TomatoFight_C::OnTakeDamage(float DamageAmount, EDamageType DamageType, const class AHumanCharacter* InstigatingActor, TSubclassOf<class AItem> InstigatingItemClass, const struct FHitResultSimplified& HitOptimised, const TArray<TSubclassOf<class AItem>>& AffectedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "OnTakeDamage");

	Params::BP_Character_TomatoFight_C_OnTakeDamage Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageType = DamageType;
	Parms.InstigatingActor = InstigatingActor;
	Parms.InstigatingItemClass = InstigatingItemClass;
	Parms.HitOptimised = std::move(HitOptimised);
	Parms.AffectedItems = std::move(AffectedItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Remove Marker
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_TomatoFight_C::Remove_Marker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "Remove Marker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Add Item To Backpack
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TomatoFight_C::Add_Item_To_Backpack(class UClass* Item_Type, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "Add Item To Backpack");

	Params::BP_Character_TomatoFight_C_Add_Item_To_Backpack Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Add Weapon To Loadout
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Weapon_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ammo_in_Mag_Count                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Chambered_Ammo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Character_TomatoFight_C::Add_Weapon_To_Loadout(class UClass* Weapon_Type, int32 Ammo_in_Mag_Count, bool Chambered_Ammo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "Add Weapon To Loadout");

	Params::BP_Character_TomatoFight_C_Add_Weapon_To_Loadout Parms{};

	Parms.Weapon_Type = Weapon_Type;
	Parms.Ammo_in_Mag_Count = Ammo_in_Mag_Count;
	Parms.Chambered_Ammo = Chambered_Ammo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Get Loadout From Server
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_TomatoFight_C::Get_Loadout_From_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "Get Loadout From Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Die
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamageType                             DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  InstigatingCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class AItem>                InstigatingItem                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Character_TomatoFight_C::Die(float DamageAmount, EDamageType DamageType, class AHumanCharacter* InstigatingCharacter, TSubclassOf<class AItem> InstigatingItem, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "Die");

	Params::BP_Character_TomatoFight_C_Die Parms{};

	Parms.DamageAmount = DamageAmount;
	Parms.DamageType = DamageType;
	Parms.InstigatingCharacter = InstigatingCharacter;
	Parms.InstigatingItem = InstigatingItem;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TomatoFight_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "ReceiveTick");

	Params::BP_Character_TomatoFight_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Character_TomatoFight_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ShouldTakeDamageBP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHumanCharacter*                  InstigatingCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class AItem>                ItemClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// EDamageType                             DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Character_TomatoFight_C::ShouldTakeDamageBP(class AHumanCharacter* InstigatingCharacter, const class AActor* DamageCauser, TSubclassOf<class AItem> ItemClass, EDamageType DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "ShouldTakeDamageBP");

	Params::BP_Character_TomatoFight_C_ShouldTakeDamageBP Parms{};

	Parms.InstigatingCharacter = InstigatingCharacter;
	Parms.DamageCauser = DamageCauser;
	Parms.ItemClass = ItemClass;
	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.GetFightGameMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_GameMode_TomatoFight_C*       FightGamemode                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TomatoFight_C::GetFightGameMode(class ABP_GameMode_TomatoFight_C** FightGamemode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "GetFightGameMode");

	Params::BP_Character_TomatoFight_C_GetFightGameMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FightGamemode != nullptr)
		*FightGamemode = Parms.FightGamemode;
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.GetCountsOfItemsByVariant
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEquipmentStorageComponent*       Equipment_Storage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Sum_of_Items_Found                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TomatoFight_C::GetCountsOfItemsByVariant(class UEquipmentStorageComponent* Equipment_Storage, int32* Sum_of_Items_Found, class UClass** Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "GetCountsOfItemsByVariant");

	Params::BP_Character_TomatoFight_C_GetCountsOfItemsByVariant Parms{};

	Parms.Equipment_Storage = Equipment_Storage;

	UObject::ProcessEvent(Func, &Parms);

	if (Sum_of_Items_Found != nullptr)
		*Sum_of_Items_Found = Parms.Sum_of_Items_Found;

	if (Class_0 != nullptr)
		*Class_0 = Parms.Class_0;
}


// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.GetFightGameState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_GameState_TomatoFight_C*      GameState                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TomatoFight_C::GetFightGameState(class ABP_GameState_TomatoFight_C** GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TomatoFight_C", "GetFightGameState");

	Params::BP_Character_TomatoFight_C_GetFightGameState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GameState != nullptr)
		*GameState = Parms.GameState;
}

}

