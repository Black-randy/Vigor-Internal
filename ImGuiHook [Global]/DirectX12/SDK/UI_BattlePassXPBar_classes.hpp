#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassXPBar

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "E_BattlePassSystem_State_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_BattlePassXPBar.UI_BattlePassXPBar_C
// 0x0030 (0x02E8 - 0x02B8)
class UUI_BattlePassXPBar_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BattlePassLogo;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        LevelCurrent;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        LevelNext;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           XPProgressBar;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 BattlePassSystem;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_BattlePassXPBar(int32 EntryPoint);
	void EventLevelPurchased(bool Success);
	void EventPremiumPurchased(bool Success);
	void EventBattlePassSystemReady();
	void EventUpdateXPBar();
	void EventNewXPAwarded(class AHumanPlayerController* Player, const struct FCloudBattlePassExperienceEvent& Event);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_BattlePassXPBar_C">();
	}
	static class UUI_BattlePassXPBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_BattlePassXPBar_C>();
	}
};
static_assert(alignof(UUI_BattlePassXPBar_C) == 0x000008, "Wrong alignment on UUI_BattlePassXPBar_C");
static_assert(sizeof(UUI_BattlePassXPBar_C) == 0x0002E8, "Wrong size on UUI_BattlePassXPBar_C");
static_assert(offsetof(UUI_BattlePassXPBar_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_BattlePassXPBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassXPBar_C, BattlePassLogo) == 0x0002C0, "Member 'UUI_BattlePassXPBar_C::BattlePassLogo' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassXPBar_C, LevelCurrent) == 0x0002C8, "Member 'UUI_BattlePassXPBar_C::LevelCurrent' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassXPBar_C, LevelNext) == 0x0002D0, "Member 'UUI_BattlePassXPBar_C::LevelNext' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassXPBar_C, XPProgressBar) == 0x0002D8, "Member 'UUI_BattlePassXPBar_C::XPProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassXPBar_C, BattlePassSystem) == 0x0002E0, "Member 'UUI_BattlePassXPBar_C::BattlePassSystem' has a wrong offset!");

}

