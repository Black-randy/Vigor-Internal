#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TruckLootable_Base

#include "Basic.hpp"

#include "BP_TruckLootable_Base_classes.hpp"
#include "BP_TruckLootable_Base_parameters.hpp"


namespace SDK
{

// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.DamageWheels
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       NewHullTransform_0                                     (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_TruckLootable_Base_C::DamageWheels(struct FTransform* NewHullTransform_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "DamageWheels");

	Params::BP_TruckLootable_Base_C_DamageWheels Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewHullTransform_0 != nullptr)
		*NewHullTransform_0 = std::move(Parms.NewHullTransform_0);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.SetWheels
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TruckLootable_Base_C::SetWheels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "SetWheels");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.SetColours
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TruckLootable_Base_C::SetColours()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "SetColours");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.SetMeches
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TruckLootable_Base_C::SetMeches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "SetMeches");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TruckLootable_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.Suspension__FinishedFunc
// (BlueprintEvent)

void ABP_TruckLootable_Base_C::Suspension__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "Suspension__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.Suspension__UpdateFunc
// (BlueprintEvent)

void ABP_TruckLootable_Base_C::Suspension__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "Suspension__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.SetHeavyRain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HeavyRain                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TruckLootable_Base_C::SetHeavyRain(bool HeavyRain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "SetHeavyRain");

	Params::BP_TruckLootable_Base_C_SetHeavyRain Parms{};

	Parms.HeavyRain = HeavyRain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.AdjustWindDirection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CurrentWindDirection                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TruckLootable_Base_C::AdjustWindDirection(const struct FVector& CurrentWindDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "AdjustWindDirection");

	Params::BP_TruckLootable_Base_C_AdjustWindDirection Parms{};

	Parms.CurrentWindDirection = std::move(CurrentWindDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.AdjustWindIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentWindIntensity                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TruckLootable_Base_C::AdjustWindIntensity(float CurrentWindIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "AdjustWindIntensity");

	Params::BP_TruckLootable_Base_C_AdjustWindIntensity Parms{};

	Parms.CurrentWindIntensity = CurrentWindIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.ReceivePointDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_TruckLootable_Base_C::ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "ReceivePointDamage");

	Params::BP_TruckLootable_Base_C_ReceivePointDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.DamagePneuMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TruckLootable_Base_C::DamagePneuMulticast(const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "DamagePneuMulticast");

	Params::BP_TruckLootable_Base_C_DamagePneuMulticast Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.AdjustRainIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentRainAmount                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentWetnessAmount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TruckLootable_Base_C::AdjustRainIntensity(float CurrentRainAmount, float CurrentWetnessAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "AdjustRainIntensity");

	Params::BP_TruckLootable_Base_C_AdjustRainIntensity Parms{};

	Parms.CurrentRainAmount = CurrentRainAmount;
	Parms.CurrentWetnessAmount = CurrentWetnessAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.AdjustWeather
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentRainAmount                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentWindIntensity                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentWindDirection                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentWetnessAmount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TruckLootable_Base_C::AdjustWeather(float CurrentRainAmount, float CurrentWindIntensity, const struct FVector& CurrentWindDirection, float CurrentWetnessAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "AdjustWeather");

	Params::BP_TruckLootable_Base_C_AdjustWeather Parms{};

	Parms.CurrentRainAmount = CurrentRainAmount;
	Parms.CurrentWindIntensity = CurrentWindIntensity;
	Parms.CurrentWindDirection = std::move(CurrentWindDirection);
	Parms.CurrentWetnessAmount = CurrentWetnessAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TruckLootable_Base.BP_TruckLootable_Base_C.ExecuteUbergraph_BP_TruckLootable_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TruckLootable_Base_C::ExecuteUbergraph_BP_TruckLootable_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TruckLootable_Base_C", "ExecuteUbergraph_BP_TruckLootable_Base");

	Params::BP_TruckLootable_Base_C_ExecuteUbergraph_BP_TruckLootable_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

