#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SceneCapture

#include "Basic.hpp"

#include "BP_SceneCapture_classes.hpp"
#include "BP_SceneCapture_parameters.hpp"


namespace SDK
{

// Function BP_SceneCapture.BP_SceneCapture_C.CaptureRefreshed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_SceneCapture_C::CaptureRefreshed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "CaptureRefreshed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneCapture.BP_SceneCapture_C.ExecuteUbergraph_BP_SceneCapture
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SceneCapture_C::ExecuteUbergraph_BP_SceneCapture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "ExecuteUbergraph_BP_SceneCapture");

	Params::BP_SceneCapture_C_ExecuteUbergraph_BP_SceneCapture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SceneCapture.BP_SceneCapture_C.ResetClearContentEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_SceneCapture_C::ResetClearContentEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "ResetClearContentEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneCapture.BP_SceneCapture_C.ClearContentAfterDelay
// (BlueprintCallable, BlueprintEvent)

void ABP_SceneCapture_C::ClearContentAfterDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "ClearContentAfterDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneCapture.BP_SceneCapture_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SceneCapture_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "ReceiveTick");

	Params::BP_SceneCapture_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SceneCapture.BP_SceneCapture_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SceneCapture_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneCapture.BP_SceneCapture_C.InitializeRenderTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SizeX                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SizeY                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SceneCapture_C::InitializeRenderTarget(int32 SizeX, int32 SizeY, class UTextureRenderTarget2D** RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "InitializeRenderTarget");

	Params::BP_SceneCapture_C_InitializeRenderTarget Parms{};

	Parms.SizeX = SizeX;
	Parms.SizeY = SizeY;

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;
}


// Function BP_SceneCapture.BP_SceneCapture_C.ChangeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SceneCaptureState                     NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SceneCapture_C::ChangeState(E_SceneCaptureState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "ChangeState");

	Params::BP_SceneCapture_C_ChangeState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SceneCapture.BP_SceneCapture_C.InitializePrimitiveComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SceneCapture_C::InitializePrimitiveComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "InitializePrimitiveComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneCapture.BP_SceneCapture_C.CheckMipmapsStreaming
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStreaming                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SceneCapture_C::CheckMipmapsStreaming(bool* IsStreaming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "CheckMipmapsStreaming");

	Params::BP_SceneCapture_C_CheckMipmapsStreaming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsStreaming != nullptr)
		*IsStreaming = Parms.IsStreaming;
}


// Function BP_SceneCapture.BP_SceneCapture_C.InitializeNumSceneCaptureIndices
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SceneCapture_C::InitializeNumSceneCaptureIndices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "InitializeNumSceneCaptureIndices");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneCapture.BP_SceneCapture_C.Deinitialize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SceneCapture_C::Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "Deinitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SceneCapture.BP_SceneCapture_C.ClearContent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SceneCapture_C::ClearContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SceneCapture_C", "ClearContent");

	UObject::ProcessEvent(Func, nullptr);
}

}

