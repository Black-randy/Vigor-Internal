#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChallengesListItemSimple

#include "Basic.hpp"

#include "UI_ChallengesListItemSimple_classes.hpp"
#include "UI_ChallengesListItemSimple_parameters.hpp"


namespace SDK
{

// Function UI_ChallengesListItemSimple.UI_ChallengesListItemSimple_C.ExecuteUbergraph_UI_ChallengesListItemSimple
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ChallengesListItemSimple_C::ExecuteUbergraph_UI_ChallengesListItemSimple(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengesListItemSimple_C", "ExecuteUbergraph_UI_ChallengesListItemSimple");

	Params::UI_ChallengesListItemSimple_C_ExecuteUbergraph_UI_ChallengesListItemSimple Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ChallengesListItemSimple.UI_ChallengesListItemSimple_C.EventChallengeManagerReady
// (BlueprintCallable, BlueprintEvent)

void UUI_ChallengesListItemSimple_C::EventChallengeManagerReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengesListItemSimple_C", "EventChallengeManagerReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ChallengesListItemSimple.UI_ChallengesListItemSimple_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ChallengesListItemSimple_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengesListItemSimple_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ChallengesListItemSimple.UI_ChallengesListItemSimple_C.GetRemainingTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDateTime                        Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             RemainingTime                                          (Parm, OutParm)

void UUI_ChallengesListItemSimple_C::GetRemainingTime(const struct FDateTime& Time, class FText* RemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengesListItemSimple_C", "GetRemainingTime");

	Params::UI_ChallengesListItemSimple_C_GetRemainingTime Parms{};

	Parms.Time = std::move(Time);

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingTime != nullptr)
		*RemainingTime = std::move(Parms.RemainingTime);
}


// Function UI_ChallengesListItemSimple.UI_ChallengesListItemSimple_C.UpdateChallengeState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ChallengeSlot_C*              ChallengeSlotIn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ChallengesListItemSimple_C::UpdateChallengeState(class ABP_ChallengeSlot_C* ChallengeSlotIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengesListItemSimple_C", "UpdateChallengeState");

	Params::UI_ChallengesListItemSimple_C_UpdateChallengeState Parms{};

	Parms.ChallengeSlotIn = ChallengeSlotIn;

	UObject::ProcessEvent(Func, &Parms);
}

}

