#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SRTarget_PhysicsBase

#include "Basic.hpp"

#include "BP_SRTarget_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SRTarget_PhysicsBase.BP_SRTarget_PhysicsBase_C
// 0x0038 (0x0300 - 0x02C8)
class ABP_SRTarget_PhysicsBase_C : public ABP_SRTarget_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SRTarget_PhysicsBase_C;          // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                DefaultLocation;                                   // 0x02D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultRotation;                                   // 0x02DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             TargetShotDown;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void TargetShotDown__DelegateSignature();
	void ExecuteUbergraph_BP_SRTarget_PhysicsBase(int32 EntryPoint);
	void ResetTargetShotDownGate();
	void CallOnceTargetShotDown();
	void ResetTarget();
	void StopPhysics();
	void StartPhysics(class UStaticMeshComponent* Mesh);
	void ResetTargetServer();
	void ReplicateTransformTimer();
	void MulticastedHit(const struct FVector& Impulse, const struct FVector& Location, class USoundBase* Sound);
	void ReplicateTransform(const struct FVector& NewLocation, const struct FRotator& NewRotation, const struct FVector& NewVel, const struct FVector& NewAngVel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SRTarget_PhysicsBase_C">();
	}
	static class ABP_SRTarget_PhysicsBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SRTarget_PhysicsBase_C>();
	}
};
static_assert(alignof(ABP_SRTarget_PhysicsBase_C) == 0x000008, "Wrong alignment on ABP_SRTarget_PhysicsBase_C");
static_assert(sizeof(ABP_SRTarget_PhysicsBase_C) == 0x000300, "Wrong size on ABP_SRTarget_PhysicsBase_C");
static_assert(offsetof(ABP_SRTarget_PhysicsBase_C, UberGraphFrame_BP_SRTarget_PhysicsBase_C) == 0x0002C8, "Member 'ABP_SRTarget_PhysicsBase_C::UberGraphFrame_BP_SRTarget_PhysicsBase_C' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_PhysicsBase_C, DefaultLocation) == 0x0002D0, "Member 'ABP_SRTarget_PhysicsBase_C::DefaultLocation' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_PhysicsBase_C, DefaultRotation) == 0x0002DC, "Member 'ABP_SRTarget_PhysicsBase_C::DefaultRotation' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_PhysicsBase_C, StaticMesh) == 0x0002E8, "Member 'ABP_SRTarget_PhysicsBase_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_PhysicsBase_C, TargetShotDown) == 0x0002F0, "Member 'ABP_SRTarget_PhysicsBase_C::TargetShotDown' has a wrong offset!");

}

