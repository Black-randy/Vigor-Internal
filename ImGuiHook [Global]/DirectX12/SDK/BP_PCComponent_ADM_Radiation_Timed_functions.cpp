#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM_Radiation_Timed

#include "Basic.hpp"

#include "BP_PCComponent_ADM_Radiation_Timed_classes.hpp"
#include "BP_PCComponent_ADM_Radiation_Timed_parameters.hpp"


namespace SDK
{

// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.ExecuteUbergraph_BP_PCComponent_ADM_Radiation_Timed
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_Radiation_Timed_C::ExecuteUbergraph_BP_PCComponent_ADM_Radiation_Timed(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "ExecuteUbergraph_BP_PCComponent_ADM_Radiation_Timed");

	Params::BP_PCComponent_ADM_Radiation_Timed_C_ExecuteUbergraph_BP_PCComponent_ADM_Radiation_Timed Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.OnCookieTimerSFXComplete
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Radiation_Timed_C::OnCookieTimerSFXComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "OnCookieTimerSFXComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Play Cookie Timer Sound
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Radiation_Timed_C::Play_Cookie_Timer_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Play Cookie Timer Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Update Text Timer
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Radiation_Timed_C::Update_Text_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Update Text Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Local Timer Expired
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Radiation_Timed_C::Local_Timer_Expired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Local Timer Expired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Set Local Timer on Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Remaning_Time                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Paused                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PCComponent_ADM_Radiation_Timed_C::Set_Local_Timer_on_Client(float Remaning_Time, bool Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Set Local Timer on Client");

	Params::BP_PCComponent_ADM_Radiation_Timed_C_Set_Local_Timer_on_Client Parms{};

	Parms.Remaning_Time = Remaning_Time;
	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Clear Local Timer
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Radiation_Timed_C::Clear_Local_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Clear Local Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Start Radiation Wave
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_Radiation_Timed_C::Start_Radiation_Wave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Start Radiation Wave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Toggle Passive UI Visibility
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PCComponent_ADM_Radiation_Timed_C::Toggle_Passive_UI_Visibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Toggle Passive UI Visibility");

	Params::BP_PCComponent_ADM_Radiation_Timed_C_Toggle_Passive_UI_Visibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_Radiation_Timed.BP_PCComponent_ADM_Radiation_Timed_C.Toggle Local Timer on Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Running                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PCComponent_ADM_Radiation_Timed_C::Toggle_Local_Timer_on_Client(bool Is_Running)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_Radiation_Timed_C", "Toggle Local Timer on Client");

	Params::BP_PCComponent_ADM_Radiation_Timed_C_Toggle_Local_Timer_on_Client Parms{};

	Parms.Is_Running = Is_Running;

	UObject::ProcessEvent(Func, &Parms);
}

}

