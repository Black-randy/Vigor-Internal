#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_ContactBomb_Object

#include "Basic.hpp"

#include "BP_PlacableTrap_Object_Base_classes.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TC_ContactBomb_Object.BP_TC_ContactBomb_Object_C
// 0x0140 (0x05A8 - 0x0468)
class ABP_TC_ContactBomb_Object_C : public ABP_PlacableTrap_Object_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TC_ContactBomb_Object_C;         // 0x0468(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULethalItemComponent*                   LethalItem;                                        // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ExplosionComponent_C*               BP_ExplosionComponent;                             // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       DetonationRadius;                                  // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       TriggerRadius;                                     // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         T_Effect_Alpha_9DF1BA3C420F29C4E9DF70BB109C8826;   // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            T_Effect__Direction_9DF1BA3C420F29C4E9DF70BB109C8826; // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     T_Effect;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Contact_Bomb_Detonation_Radius;                    // 0x04A0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Contact_Bomb_Trigger_Radius;                       // 0x04A4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Contact_bomb_Damage;                               // 0x04A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Contact_bomb_ignored_actor_classes;                // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         ProximityBomb_IgnoredActors;                       // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         Contact_bomb_max_delay;                            // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Target_was_hit;                                    // 0x04D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Did_effects_play_already_;                         // 0x04D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6[0x2];                                      // 0x04D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit_actor;                                         // 0x04D8(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Overlapping_Traps;                                 // 0x0568(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                 Overlapping_actor;                                 // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Overlapping_timer;                                 // 0x0580(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Owning_Player_Character;                           // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ExplosionParticles;                                // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CurrentParticles;                                  // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   Contact_Bomb_Damage_Type;                          // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Contact_Bomb_Detonating_Delay_Variance;            // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TC_ContactBomb_Object(int32 EntryPoint);
	void Trap_play_effects_triggered();
	void OnExplosionCompleted(const TArray<struct FExplosionEffect>& ExplosionEffects);
	void ReceiveBeginPlay();
	void BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Ongoing_overlap();
	void Despawn();
	void Trap_Phase_Activated();
	void Trap_Break(class UObject* Player_that_destroyed_the_trap);
	void Trap_AutoBreak();
	void Trap_Overlaps(const class UObject* ObjectThatOverlappedTrap);
	void Trap_Activate();
	void Trap_Triggered(class UObject* ObjectThatTriggeredTrap);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void T_Effect__UpdateFunc();
	void T_Effect__FinishedFunc();
	void Set_up_variables_from_item(float Contact_bomb_Damage_0, float Contact_Bomb_Detonation_Radius_0, float Contact_Bomb_Trigger_Radius_0, TArray<class UClass*>& Contact_Bomb_Actors_To_Ignore);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TC_ContactBomb_Object_C">();
	}
	static class ABP_TC_ContactBomb_Object_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TC_ContactBomb_Object_C>();
	}
};
static_assert(alignof(ABP_TC_ContactBomb_Object_C) == 0x000008, "Wrong alignment on ABP_TC_ContactBomb_Object_C");
static_assert(sizeof(ABP_TC_ContactBomb_Object_C) == 0x0005A8, "Wrong size on ABP_TC_ContactBomb_Object_C");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, UberGraphFrame_BP_TC_ContactBomb_Object_C) == 0x000468, "Member 'ABP_TC_ContactBomb_Object_C::UberGraphFrame_BP_TC_ContactBomb_Object_C' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, LethalItem) == 0x000470, "Member 'ABP_TC_ContactBomb_Object_C::LethalItem' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, BP_ExplosionComponent) == 0x000478, "Member 'ABP_TC_ContactBomb_Object_C::BP_ExplosionComponent' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, DetonationRadius) == 0x000480, "Member 'ABP_TC_ContactBomb_Object_C::DetonationRadius' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, TriggerRadius) == 0x000488, "Member 'ABP_TC_ContactBomb_Object_C::TriggerRadius' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, T_Effect_Alpha_9DF1BA3C420F29C4E9DF70BB109C8826) == 0x000490, "Member 'ABP_TC_ContactBomb_Object_C::T_Effect_Alpha_9DF1BA3C420F29C4E9DF70BB109C8826' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, T_Effect__Direction_9DF1BA3C420F29C4E9DF70BB109C8826) == 0x000494, "Member 'ABP_TC_ContactBomb_Object_C::T_Effect__Direction_9DF1BA3C420F29C4E9DF70BB109C8826' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, T_Effect) == 0x000498, "Member 'ABP_TC_ContactBomb_Object_C::T_Effect' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Contact_Bomb_Detonation_Radius) == 0x0004A0, "Member 'ABP_TC_ContactBomb_Object_C::Contact_Bomb_Detonation_Radius' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Contact_Bomb_Trigger_Radius) == 0x0004A4, "Member 'ABP_TC_ContactBomb_Object_C::Contact_Bomb_Trigger_Radius' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Contact_bomb_Damage) == 0x0004A8, "Member 'ABP_TC_ContactBomb_Object_C::Contact_bomb_Damage' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Contact_bomb_ignored_actor_classes) == 0x0004B0, "Member 'ABP_TC_ContactBomb_Object_C::Contact_bomb_ignored_actor_classes' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, ProximityBomb_IgnoredActors) == 0x0004C0, "Member 'ABP_TC_ContactBomb_Object_C::ProximityBomb_IgnoredActors' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Contact_bomb_max_delay) == 0x0004D0, "Member 'ABP_TC_ContactBomb_Object_C::Contact_bomb_max_delay' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Target_was_hit) == 0x0004D4, "Member 'ABP_TC_ContactBomb_Object_C::Target_was_hit' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Did_effects_play_already_) == 0x0004D5, "Member 'ABP_TC_ContactBomb_Object_C::Did_effects_play_already_' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Hit_actor) == 0x0004D8, "Member 'ABP_TC_ContactBomb_Object_C::Hit_actor' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Overlapping_Traps) == 0x000568, "Member 'ABP_TC_ContactBomb_Object_C::Overlapping_Traps' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Overlapping_actor) == 0x000578, "Member 'ABP_TC_ContactBomb_Object_C::Overlapping_actor' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Overlapping_timer) == 0x000580, "Member 'ABP_TC_ContactBomb_Object_C::Overlapping_timer' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Owning_Player_Character) == 0x000588, "Member 'ABP_TC_ContactBomb_Object_C::Owning_Player_Character' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, ExplosionParticles) == 0x000590, "Member 'ABP_TC_ContactBomb_Object_C::ExplosionParticles' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, CurrentParticles) == 0x000598, "Member 'ABP_TC_ContactBomb_Object_C::CurrentParticles' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Contact_Bomb_Damage_Type) == 0x0005A0, "Member 'ABP_TC_ContactBomb_Object_C::Contact_Bomb_Damage_Type' has a wrong offset!");
static_assert(offsetof(ABP_TC_ContactBomb_Object_C, Contact_Bomb_Detonating_Delay_Variance) == 0x0005A4, "Member 'ABP_TC_ContactBomb_Object_C::Contact_Bomb_Detonating_Delay_Variance' has a wrong offset!");

}

