#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_LobbyBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "EBooster_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_LobbyBase.UI_LobbyBase_C.TicketActivated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_LobbyBase_C_TicketActivated__DelegateSignature final
{
public:
	class FString                                 ProductSku;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_TicketActivated__DelegateSignature) == 0x000008, "Wrong alignment on UI_LobbyBase_C_TicketActivated__DelegateSignature");
static_assert(sizeof(UI_LobbyBase_C_TicketActivated__DelegateSignature) == 0x000010, "Wrong size on UI_LobbyBase_C_TicketActivated__DelegateSignature");
static_assert(offsetof(UI_LobbyBase_C_TicketActivated__DelegateSignature, ProductSku) == 0x000000, "Member 'UI_LobbyBase_C_TicketActivated__DelegateSignature::ProductSku' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.ExecuteUbergraph_UI_LobbyBase
// 0x0248 (0x0248 - 0x0000)
struct UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBoosterTypes                                 K2Node_Event_Booster;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OrderedCount;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalActiveCount;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxCount;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TicketsUsed;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LobbyComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LobbyComponent_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBooster                                      K2Node_CustomEvent_Booster;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_OrderedCount;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TotalActiveCount;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxCount;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TicketsUsed;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMenuWidget*                            CallFunc_GetGameMenu_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameWidget*                           K2Node_CustomEvent_FlameWidget;                    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeatherManager_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeatherManager_C*>           CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00D8(0x0010)(ReferenceParm)
	class ABP_WeatherManager_C*                   CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBooster                                      K2Node_CustomEvent_BoosterType;                    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineBoostersComponent*               CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Product_Sku;                    // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0130(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeatherManager_C*                   CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ActivateBoosterTickets_ReturnValue;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult;                  // 0x0148(0x0058)(ConstParm)
	struct FBoosterDetails                        K2Node_CustomEvent_Data;                           // 0x01A0(0x0020)(ConstParm)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue_1;         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UserInfoComponent_C*                CallFunc_GetComponentByClass_ReturnValue_3;        // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Booster_Enum_From_Sku_Found;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBooster                                      CallFunc_Get_Booster_Enum_From_Sku_ReturnValue;    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FCloudRequestResult& RequestResult, struct FBoosterDetails& Data)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0200(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Event_ReadyIDs;                             // 0x0220(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_Seconds_1;                            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Seconds;                              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase) == 0x000008, "Wrong alignment on UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase");
static_assert(sizeof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase) == 0x000248, "Wrong size on UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, EntryPoint) == 0x000000, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_Booster) == 0x000004, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_OrderedCount) == 0x000008, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_OrderedCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_TotalActiveCount) == 0x00000C, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_TotalActiveCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_MaxCount) == 0x000010, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_MaxCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_TicketsUsed) == 0x000014, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_TicketsUsed' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002C, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetValidValue_ReturnValue) == 0x000038, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_IsValid_ReturnValue_1) == 0x00005C, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000068, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000078, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, Temp_int_Array_Index_Variable) == 0x000084, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_Booster) == 0x000088, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_OrderedCount) == 0x00008C, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_OrderedCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_TotalActiveCount) == 0x000090, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_TotalActiveCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_MaxCount) == 0x000094, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_MaxCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_TicketsUsed) == 0x000098, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_TicketsUsed' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0000A0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetGameMenu_ReturnValue) == 0x0000A8, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetGameMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_FlameWidget) == 0x0000B0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_FlameWidget' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000D8, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_BoosterType) == 0x0000F4, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_BoosterType' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetFlameController_ReturnValue) == 0x0000F8, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000108, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_IsValid_ReturnValue_4) == 0x000110, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_IsValid_ReturnValue_5) == 0x000111, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x000112, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000114, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, Temp_int_Array_Index_Variable_1) == 0x000118, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_Product_Sku) == 0x000120, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_Product_Sku' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_Count) == 0x000130, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_ActivateBoosterTickets_ReturnValue) == 0x000140, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_ActivateBoosterTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_RequestResult) == 0x000148, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_RequestResult' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CustomEvent_Data) == 0x0001A0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetFlameController_ReturnValue_1) == 0x0001C0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetFlameController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_GetComponentByClass_ReturnValue_3) == 0x0001C8, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Get_Booster_Enum_From_Sku_Found) == 0x0001D0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Get_Booster_Enum_From_Sku_Found' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Get_Booster_Enum_From_Sku_ReturnValue) == 0x0001D1, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Get_Booster_Enum_From_Sku_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets) == 0x0001D4, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001D8, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001DC, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0001DD, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001E0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001F0, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x000200, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000210, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000218, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_ReadyIDs) == 0x000220, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_ReadyIDs' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x000230, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_Seconds_1) == 0x000240, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_Seconds_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase, K2Node_Event_Seconds) == 0x000244, "Member 'UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase::K2Node_Event_Seconds' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.SetBoosterState
// 0x0014 (0x0014 - 0x0000)
struct UI_LobbyBase_C_SetBoosterState final
{
public:
	EBoosterTypes                                 Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OrderedCount;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalActiveCount;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TicketsUsed;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_SetBoosterState) == 0x000004, "Wrong alignment on UI_LobbyBase_C_SetBoosterState");
static_assert(sizeof(UI_LobbyBase_C_SetBoosterState) == 0x000014, "Wrong size on UI_LobbyBase_C_SetBoosterState");
static_assert(offsetof(UI_LobbyBase_C_SetBoosterState, Booster) == 0x000000, "Member 'UI_LobbyBase_C_SetBoosterState::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_SetBoosterState, OrderedCount) == 0x000004, "Member 'UI_LobbyBase_C_SetBoosterState::OrderedCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_SetBoosterState, TotalActiveCount) == 0x000008, "Member 'UI_LobbyBase_C_SetBoosterState::TotalActiveCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_SetBoosterState, MaxCount) == 0x00000C, "Member 'UI_LobbyBase_C_SetBoosterState::MaxCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_SetBoosterState, TicketsUsed) == 0x000010, "Member 'UI_LobbyBase_C_SetBoosterState::TicketsUsed' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.SetRemainingTime
// 0x0004 (0x0004 - 0x0000)
struct UI_LobbyBase_C_SetRemainingTime final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_SetRemainingTime) == 0x000004, "Wrong alignment on UI_LobbyBase_C_SetRemainingTime");
static_assert(sizeof(UI_LobbyBase_C_SetRemainingTime) == 0x000004, "Wrong size on UI_LobbyBase_C_SetRemainingTime");
static_assert(offsetof(UI_LobbyBase_C_SetRemainingTime, Seconds) == 0x000000, "Member 'UI_LobbyBase_C_SetRemainingTime::Seconds' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.SetRemainingTimeEncounter
// 0x0004 (0x0004 - 0x0000)
struct UI_LobbyBase_C_SetRemainingTimeEncounter final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_SetRemainingTimeEncounter) == 0x000004, "Wrong alignment on UI_LobbyBase_C_SetRemainingTimeEncounter");
static_assert(sizeof(UI_LobbyBase_C_SetRemainingTimeEncounter) == 0x000004, "Wrong size on UI_LobbyBase_C_SetRemainingTimeEncounter");
static_assert(offsetof(UI_LobbyBase_C_SetRemainingTimeEncounter, Seconds) == 0x000000, "Member 'UI_LobbyBase_C_SetRemainingTimeEncounter::Seconds' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.RefreshReadyUI
// 0x0010 (0x0010 - 0x0000)
struct UI_LobbyBase_C_RefreshReadyUI final
{
public:
	TArray<int32>                                 ReadyIDs;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_LobbyBase_C_RefreshReadyUI) == 0x000008, "Wrong alignment on UI_LobbyBase_C_RefreshReadyUI");
static_assert(sizeof(UI_LobbyBase_C_RefreshReadyUI) == 0x000010, "Wrong size on UI_LobbyBase_C_RefreshReadyUI");
static_assert(offsetof(UI_LobbyBase_C_RefreshReadyUI, ReadyIDs) == 0x000000, "Member 'UI_LobbyBase_C_RefreshReadyUI::ReadyIDs' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.OnBoosterTicketActivationResponse
// 0x0078 (0x0078 - 0x0000)
struct UI_LobbyBase_C_OnBoosterTicketActivationResponse final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FBoosterDetails                        Data;                                              // 0x0058(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_LobbyBase_C_OnBoosterTicketActivationResponse) == 0x000008, "Wrong alignment on UI_LobbyBase_C_OnBoosterTicketActivationResponse");
static_assert(sizeof(UI_LobbyBase_C_OnBoosterTicketActivationResponse) == 0x000078, "Wrong size on UI_LobbyBase_C_OnBoosterTicketActivationResponse");
static_assert(offsetof(UI_LobbyBase_C_OnBoosterTicketActivationResponse, RequestResult) == 0x000000, "Member 'UI_LobbyBase_C_OnBoosterTicketActivationResponse::RequestResult' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_OnBoosterTicketActivationResponse, Data) == 0x000058, "Member 'UI_LobbyBase_C_OnBoosterTicketActivationResponse::Data' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.ActivateBoosterTicket
// 0x0018 (0x0018 - 0x0000)
struct UI_LobbyBase_C_ActivateBoosterTicket final
{
public:
	class FString                                 Product_Sku;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_ActivateBoosterTicket) == 0x000008, "Wrong alignment on UI_LobbyBase_C_ActivateBoosterTicket");
static_assert(sizeof(UI_LobbyBase_C_ActivateBoosterTicket) == 0x000018, "Wrong size on UI_LobbyBase_C_ActivateBoosterTicket");
static_assert(offsetof(UI_LobbyBase_C_ActivateBoosterTicket, Product_Sku) == 0x000000, "Member 'UI_LobbyBase_C_ActivateBoosterTicket::Product_Sku' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_ActivateBoosterTicket, Count) == 0x000010, "Member 'UI_LobbyBase_C_ActivateBoosterTicket::Count' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.BuyPersonalTicket
// 0x0001 (0x0001 - 0x0000)
struct UI_LobbyBase_C_BuyPersonalTicket final
{
public:
	EBooster                                      BoosterType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_BuyPersonalTicket) == 0x000001, "Wrong alignment on UI_LobbyBase_C_BuyPersonalTicket");
static_assert(sizeof(UI_LobbyBase_C_BuyPersonalTicket) == 0x000001, "Wrong size on UI_LobbyBase_C_BuyPersonalTicket");
static_assert(offsetof(UI_LobbyBase_C_BuyPersonalTicket, BoosterType) == 0x000000, "Member 'UI_LobbyBase_C_BuyPersonalTicket::BoosterType' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.OnGameMenuClosed
// 0x0008 (0x0008 - 0x0000)
struct UI_LobbyBase_C_OnGameMenuClosed final
{
public:
	class UFlameWidget*                           FlameWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_OnGameMenuClosed) == 0x000008, "Wrong alignment on UI_LobbyBase_C_OnGameMenuClosed");
static_assert(sizeof(UI_LobbyBase_C_OnGameMenuClosed) == 0x000008, "Wrong size on UI_LobbyBase_C_OnGameMenuClosed");
static_assert(offsetof(UI_LobbyBase_C_OnGameMenuClosed, FlameWidget) == 0x000000, "Member 'UI_LobbyBase_C_OnGameMenuClosed::FlameWidget' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.BPSetBoosterState
// 0x0014 (0x0014 - 0x0000)
struct UI_LobbyBase_C_BPSetBoosterState final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OrderedCount;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalActiveCount;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TicketsUsed;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_BPSetBoosterState) == 0x000004, "Wrong alignment on UI_LobbyBase_C_BPSetBoosterState");
static_assert(sizeof(UI_LobbyBase_C_BPSetBoosterState) == 0x000014, "Wrong size on UI_LobbyBase_C_BPSetBoosterState");
static_assert(offsetof(UI_LobbyBase_C_BPSetBoosterState, Booster) == 0x000000, "Member 'UI_LobbyBase_C_BPSetBoosterState::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPSetBoosterState, OrderedCount) == 0x000004, "Member 'UI_LobbyBase_C_BPSetBoosterState::OrderedCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPSetBoosterState, TotalActiveCount) == 0x000008, "Member 'UI_LobbyBase_C_BPSetBoosterState::TotalActiveCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPSetBoosterState, MaxCount) == 0x00000C, "Member 'UI_LobbyBase_C_BPSetBoosterState::MaxCount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPSetBoosterState, TicketsUsed) == 0x000010, "Member 'UI_LobbyBase_C_BPSetBoosterState::TicketsUsed' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.BPSet Remaining Time
// 0x0004 (0x0004 - 0x0000)
struct UI_LobbyBase_C_BPSet_Remaining_Time final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_BPSet_Remaining_Time) == 0x000004, "Wrong alignment on UI_LobbyBase_C_BPSet_Remaining_Time");
static_assert(sizeof(UI_LobbyBase_C_BPSet_Remaining_Time) == 0x000004, "Wrong size on UI_LobbyBase_C_BPSet_Remaining_Time");
static_assert(offsetof(UI_LobbyBase_C_BPSet_Remaining_Time, Seconds) == 0x000000, "Member 'UI_LobbyBase_C_BPSet_Remaining_Time::Seconds' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.GetBoosterCost
// 0x0038 (0x0038 - 0x0000)
struct UI_LobbyBase_C_GetBoosterCost final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cost;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cost_before_discount;                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountPercent;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_LobbyComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoosterCost_Cost;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost_before_discount;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_DiscountPercent;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoosterCost_Is_Discounted;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LobbyBase_C_GetBoosterCost) == 0x000008, "Wrong alignment on UI_LobbyBase_C_GetBoosterCost");
static_assert(sizeof(UI_LobbyBase_C_GetBoosterCost) == 0x000038, "Wrong size on UI_LobbyBase_C_GetBoosterCost");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, Booster) == 0x000000, "Member 'UI_LobbyBase_C_GetBoosterCost::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, Cost) == 0x000004, "Member 'UI_LobbyBase_C_GetBoosterCost::Cost' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, Cost_before_discount) == 0x000008, "Member 'UI_LobbyBase_C_GetBoosterCost::Cost_before_discount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, DiscountPercent) == 0x00000C, "Member 'UI_LobbyBase_C_GetBoosterCost::DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_GetBoosterCost_Cost) == 0x000024, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_GetBoosterCost_Cost' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_GetBoosterCost_Cost_before_discount) == 0x000028, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_GetBoosterCost_Cost_before_discount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_GetBoosterCost_DiscountPercent) == 0x00002C, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_GetBoosterCost_DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_GetBoosterCost_Is_Discounted) == 0x000030, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_GetBoosterCost_Is_Discounted' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetBoosterCost, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'UI_LobbyBase_C_GetBoosterCost::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.Get Current Total HC Cost
// 0x0088 (0x0088 - 0x0000)
struct UI_LobbyBase_C_Get_Current_Total_HC_Cost final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sum;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPGet_Activated_Amount_AmountActivated;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost_before_discount;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_DiscountPercent;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCrownBoughtBoosterTicketCount_UsedTickets; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_LobbyComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPGet_Activated_Amount_AmountActivated_1; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_Get_Current_Total_HC_Cost) == 0x000008, "Wrong alignment on UI_LobbyBase_C_Get_Current_Total_HC_Cost");
static_assert(sizeof(UI_LobbyBase_C_Get_Current_Total_HC_Cost) == 0x000088, "Wrong size on UI_LobbyBase_C_Get_Current_Total_HC_Cost");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, ReturnValue) == 0x000000, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, Sum) == 0x000004, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::Sum' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, Temp_int_Variable) == 0x000008, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, Temp_int_Variable_1) == 0x00000C, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001B, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001C, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000024, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_BooleanOR_ReturnValue) == 0x000025, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000026, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_BooleanOR_ReturnValue_1) == 0x000027, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_BPGet_Activated_Amount_AmountActivated) == 0x00002C, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_BPGet_Activated_Amount_AmountActivated' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetBoosterCost_Cost) == 0x000030, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetBoosterCost_Cost' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetBoosterCost_Cost_before_discount) == 0x000034, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetBoosterCost_Cost_before_discount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetBoosterCost_DiscountPercent) == 0x000038, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetBoosterCost_DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_MakeLiteralInt_ReturnValue) == 0x00003C, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets) == 0x000044, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetCrownBoughtBoosterTicketCount_UsedTickets) == 0x00004C, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetCrownBoughtBoosterTicketCount_UsedTickets' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_BPGet_Activated_Amount_AmountActivated_1) == 0x00006C, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_BPGet_Activated_Amount_AmountActivated_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, Temp_bool_Variable) == 0x000070, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000071, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, K2Node_Select_Default) == 0x000074, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Max_ReturnValue) == 0x000078, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Multiply_IntInt_ReturnValue) == 0x00007C, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Current_Total_HC_Cost, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'UI_LobbyBase_C_Get_Current_Total_HC_Cost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.BPSet Remaining Time Encounter
// 0x0004 (0x0004 - 0x0000)
struct UI_LobbyBase_C_BPSet_Remaining_Time_Encounter final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_BPSet_Remaining_Time_Encounter) == 0x000004, "Wrong alignment on UI_LobbyBase_C_BPSet_Remaining_Time_Encounter");
static_assert(sizeof(UI_LobbyBase_C_BPSet_Remaining_Time_Encounter) == 0x000004, "Wrong size on UI_LobbyBase_C_BPSet_Remaining_Time_Encounter");
static_assert(offsetof(UI_LobbyBase_C_BPSet_Remaining_Time_Encounter, Seconds) == 0x000000, "Member 'UI_LobbyBase_C_BPSet_Remaining_Time_Encounter::Seconds' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.GetTotalHardCurrency
// 0x0028 (0x0028 - 0x0000)
struct UI_LobbyBase_C_GetTotalHardCurrency final
{
public:
	int32                                         TotalHC;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LobbyComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LobbyBase_C_GetTotalHardCurrency) == 0x000008, "Wrong alignment on UI_LobbyBase_C_GetTotalHardCurrency");
static_assert(sizeof(UI_LobbyBase_C_GetTotalHardCurrency) == 0x000028, "Wrong size on UI_LobbyBase_C_GetTotalHardCurrency");
static_assert(offsetof(UI_LobbyBase_C_GetTotalHardCurrency, TotalHC) == 0x000000, "Member 'UI_LobbyBase_C_GetTotalHardCurrency::TotalHC' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetTotalHardCurrency, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_LobbyBase_C_GetTotalHardCurrency::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetTotalHardCurrency, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UI_LobbyBase_C_GetTotalHardCurrency::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetTotalHardCurrency, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'UI_LobbyBase_C_GetTotalHardCurrency::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetTotalHardCurrency, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'UI_LobbyBase_C_GetTotalHardCurrency::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.BPUpdate HCs
// 0x00E0 (0x00E0 - 0x0000)
struct UI_LobbyBase_C_BPUpdate_HCs final
{
public:
	class FString                                 ResString;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost_before_discount;      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_DiscountPercent;           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalHardCurrency_TotalHC;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_BPUpdate_HCs) == 0x000008, "Wrong alignment on UI_LobbyBase_C_BPUpdate_HCs");
static_assert(sizeof(UI_LobbyBase_C_BPUpdate_HCs) == 0x0000E0, "Wrong size on UI_LobbyBase_C_BPUpdate_HCs");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, ResString) == 0x000000, "Member 'UI_LobbyBase_C_BPUpdate_HCs::ResString' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, Temp_int_Variable) == 0x000010, "Member 'UI_LobbyBase_C_BPUpdate_HCs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, Temp_int_Variable_1) == 0x000014, "Member 'UI_LobbyBase_C_BPUpdate_HCs::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_GetValidValue_ReturnValue) == 0x000020, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000021, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000038, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_GetBoosterCost_Cost) == 0x000054, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_GetBoosterCost_Cost' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_GetBoosterCost_Cost_before_discount) == 0x000058, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_GetBoosterCost_Cost_before_discount' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_GetBoosterCost_DiscountPercent) == 0x00005C, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_GetBoosterCost_DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000A0, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_GetTotalHardCurrency_TotalHC) == 0x0000A8, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_GetTotalHardCurrency_TotalHC' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000B0, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPUpdate_HCs, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'UI_LobbyBase_C_BPUpdate_HCs::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.OpenCheatMenu
// 0x0020 (0x0020 - 0x0000)
struct UI_LobbyBase_C_OpenCheatMenu final
{
public:
	ESelectionWheelType                           DebugType;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  K2Node_DynamicCast_AsHuman_Player_Character;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LobbyBase_C_OpenCheatMenu) == 0x000008, "Wrong alignment on UI_LobbyBase_C_OpenCheatMenu");
static_assert(sizeof(UI_LobbyBase_C_OpenCheatMenu) == 0x000020, "Wrong size on UI_LobbyBase_C_OpenCheatMenu");
static_assert(offsetof(UI_LobbyBase_C_OpenCheatMenu, DebugType) == 0x000000, "Member 'UI_LobbyBase_C_OpenCheatMenu::DebugType' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_OpenCheatMenu, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'UI_LobbyBase_C_OpenCheatMenu::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_OpenCheatMenu, K2Node_DynamicCast_AsHuman_Player_Character) == 0x000010, "Member 'UI_LobbyBase_C_OpenCheatMenu::K2Node_DynamicCast_AsHuman_Player_Character' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_OpenCheatMenu, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_LobbyBase_C_OpenCheatMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_OpenCheatMenu, CallFunc_IsShipping_ReturnValue) == 0x000019, "Member 'UI_LobbyBase_C_OpenCheatMenu::CallFunc_IsShipping_ReturnValue' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.IsPlayerInGroup
// 0x0020 (0x0020 - 0x0000)
struct UI_LobbyBase_C_IsPlayerInGroup final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LobbyBase_C_IsPlayerInGroup) == 0x000008, "Wrong alignment on UI_LobbyBase_C_IsPlayerInGroup");
static_assert(sizeof(UI_LobbyBase_C_IsPlayerInGroup) == 0x000020, "Wrong size on UI_LobbyBase_C_IsPlayerInGroup");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, Return_Value) == 0x000000, "Member 'UI_LobbyBase_C_IsPlayerInGroup::Return_Value' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_LobbyBase_C_IsPlayerInGroup::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, K2Node_DynamicCast_AsBP_Player_State) == 0x000010, "Member 'UI_LobbyBase_C_IsPlayerInGroup::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_LobbyBase_C_IsPlayerInGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'UI_LobbyBase_C_IsPlayerInGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00001A, "Member 'UI_LobbyBase_C_IsPlayerInGroup::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x00001B, "Member 'UI_LobbyBase_C_IsPlayerInGroup::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_IsPlayerInGroup, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'UI_LobbyBase_C_IsPlayerInGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.DebugLobbyMsg
// 0x0128 (0x0128 - 0x0000)
struct UI_LobbyBase_C_DebugLobbyMsg final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsError;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_3;                           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_DebugLobbyMsg) == 0x000008, "Wrong alignment on UI_LobbyBase_C_DebugLobbyMsg");
static_assert(sizeof(UI_LobbyBase_C_DebugLobbyMsg) == 0x000128, "Wrong size on UI_LobbyBase_C_DebugLobbyMsg");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Message) == 0x000000, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Message' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, IsError) == 0x000010, "Member 'UI_LobbyBase_C_DebugLobbyMsg::IsError' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_bool_Variable) == 0x000011, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_string_Variable) == 0x000018, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_string_Variable_1) == 0x000028, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_bool_Variable_1) == 0x000038, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_string_Variable_2) == 0x000040, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_bool_Variable_2) == 0x000050, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_string_Variable_3) == 0x000058, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_string_Variable_4) == 0x000068, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_bool_Variable_3) == 0x000078, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, K2Node_Select_Default) == 0x000080, "Member 'UI_LobbyBase_C_DebugLobbyMsg::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'UI_LobbyBase_C_DebugLobbyMsg::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_struct_Variable) == 0x0000A0, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'UI_LobbyBase_C_DebugLobbyMsg::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'UI_LobbyBase_C_DebugLobbyMsg::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, Temp_struct_Variable_1) == 0x0000D0, "Member 'UI_LobbyBase_C_DebugLobbyMsg::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E0, "Member 'UI_LobbyBase_C_DebugLobbyMsg::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, K2Node_Select_Default_1) == 0x0000E4, "Member 'UI_LobbyBase_C_DebugLobbyMsg::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, CallFunc_IsServer_ReturnValue) == 0x0000F4, "Member 'UI_LobbyBase_C_DebugLobbyMsg::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, K2Node_Select_Default_2) == 0x0000F8, "Member 'UI_LobbyBase_C_DebugLobbyMsg::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, K2Node_Select_Default_3) == 0x000108, "Member 'UI_LobbyBase_C_DebugLobbyMsg::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_DebugLobbyMsg, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000118, "Member 'UI_LobbyBase_C_DebugLobbyMsg::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.GetMaxBoosterCountPerPlayer
// 0x0008 (0x0008 - 0x0000)
struct UI_LobbyBase_C_GetMaxBoosterCountPerPlayer final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCount;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_GetMaxBoosterCountPerPlayer) == 0x000004, "Wrong alignment on UI_LobbyBase_C_GetMaxBoosterCountPerPlayer");
static_assert(sizeof(UI_LobbyBase_C_GetMaxBoosterCountPerPlayer) == 0x000008, "Wrong size on UI_LobbyBase_C_GetMaxBoosterCountPerPlayer");
static_assert(offsetof(UI_LobbyBase_C_GetMaxBoosterCountPerPlayer, Booster) == 0x000000, "Member 'UI_LobbyBase_C_GetMaxBoosterCountPerPlayer::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetMaxBoosterCountPerPlayer, MaxCount) == 0x000004, "Member 'UI_LobbyBase_C_GetMaxBoosterCountPerPlayer::MaxCount' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.BPRefresh Ready UI
// 0x0010 (0x0010 - 0x0000)
struct UI_LobbyBase_C_BPRefresh_Ready_UI final
{
public:
	TArray<int32>                                 ReadyIDs;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_LobbyBase_C_BPRefresh_Ready_UI) == 0x000008, "Wrong alignment on UI_LobbyBase_C_BPRefresh_Ready_UI");
static_assert(sizeof(UI_LobbyBase_C_BPRefresh_Ready_UI) == 0x000010, "Wrong size on UI_LobbyBase_C_BPRefresh_Ready_UI");
static_assert(offsetof(UI_LobbyBase_C_BPRefresh_Ready_UI, ReadyIDs) == 0x000000, "Member 'UI_LobbyBase_C_BPRefresh_Ready_UI::ReadyIDs' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.BPGet Activated Amount
// 0x0010 (0x0010 - 0x0000)
struct UI_LobbyBase_C_BPGet_Activated_Amount final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmountActivated;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LobbyBase_C_BPGet_Activated_Amount) == 0x000004, "Wrong alignment on UI_LobbyBase_C_BPGet_Activated_Amount");
static_assert(sizeof(UI_LobbyBase_C_BPGet_Activated_Amount) == 0x000010, "Wrong size on UI_LobbyBase_C_BPGet_Activated_Amount");
static_assert(offsetof(UI_LobbyBase_C_BPGet_Activated_Amount, Booster) == 0x000000, "Member 'UI_LobbyBase_C_BPGet_Activated_Amount::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPGet_Activated_Amount, AmountActivated) == 0x000004, "Member 'UI_LobbyBase_C_BPGet_Activated_Amount::AmountActivated' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPGet_Activated_Amount, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_LobbyBase_C_BPGet_Activated_Amount::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_BPGet_Activated_Amount, CallFunc_Map_Find_ReturnValue) == 0x00000C, "Member 'UI_LobbyBase_C_BPGet_Activated_Amount::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.SetActivatedAmount
// 0x0008 (0x0008 - 0x0000)
struct UI_LobbyBase_C_SetActivatedAmount final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmountActivated;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_SetActivatedAmount) == 0x000004, "Wrong alignment on UI_LobbyBase_C_SetActivatedAmount");
static_assert(sizeof(UI_LobbyBase_C_SetActivatedAmount) == 0x000008, "Wrong size on UI_LobbyBase_C_SetActivatedAmount");
static_assert(offsetof(UI_LobbyBase_C_SetActivatedAmount, Booster) == 0x000000, "Member 'UI_LobbyBase_C_SetActivatedAmount::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_SetActivatedAmount, AmountActivated) == 0x000004, "Member 'UI_LobbyBase_C_SetActivatedAmount::AmountActivated' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.SetFocusToBooster
// 0x0001 (0x0001 - 0x0000)
struct UI_LobbyBase_C_SetFocusToBooster final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_SetFocusToBooster) == 0x000001, "Wrong alignment on UI_LobbyBase_C_SetFocusToBooster");
static_assert(sizeof(UI_LobbyBase_C_SetFocusToBooster) == 0x000001, "Wrong size on UI_LobbyBase_C_SetFocusToBooster");
static_assert(offsetof(UI_LobbyBase_C_SetFocusToBooster, Booster) == 0x000000, "Member 'UI_LobbyBase_C_SetFocusToBooster::Booster' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.Get Personal Ticket State
// 0x0110 (0x0110 - 0x0000)
struct UI_LobbyBase_C_Get_Personal_Ticket_State final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoosterDetails                        BoosterDetail;                                     // 0x0008(0x0020)(Parm, OutParm)
	bool                                          Found;                                             // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EBooster                                      Temp_byte_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_UserInfoComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Booster_Ticket_State_Found;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoosterDetails                        CallFunc_Get_Booster_Ticket_State_BoosterDetail;   // 0x00F0(0x0020)()
};
static_assert(alignof(UI_LobbyBase_C_Get_Personal_Ticket_State) == 0x000008, "Wrong alignment on UI_LobbyBase_C_Get_Personal_Ticket_State");
static_assert(sizeof(UI_LobbyBase_C_Get_Personal_Ticket_State) == 0x000110, "Wrong size on UI_LobbyBase_C_Get_Personal_Ticket_State");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Booster) == 0x000000, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, BoosterDetail) == 0x000008, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::BoosterDetail' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Found) == 0x000028, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Found' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable) == 0x000030, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_1) == 0x000040, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_2) == 0x000050, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_3) == 0x000060, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_4) == 0x000070, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_5) == 0x000080, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_6) == 0x000090, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_7) == 0x0000A0, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_string_Variable_8) == 0x0000B0, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, Temp_byte_Variable) == 0x0000C0, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, CallFunc_GetFlameController_ReturnValue) == 0x0000C8, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, K2Node_Select_Default) == 0x0000D0, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E0, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, CallFunc_Get_Booster_Ticket_State_Found) == 0x0000E8, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::CallFunc_Get_Booster_Ticket_State_Found' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_Get_Personal_Ticket_State, CallFunc_Get_Booster_Ticket_State_BoosterDetail) == 0x0000F0, "Member 'UI_LobbyBase_C_Get_Personal_Ticket_State::CallFunc_Get_Booster_Ticket_State_BoosterDetail' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.GetLocalPlayerCloudInfo
// 0x01D8 (0x01D8 - 0x0000)
struct UI_LobbyBase_C_GetLocalPlayerCloudInfo final
{
public:
	bool                                          Found;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserCloudInfo                         User_Cloud_Info;                                   // 0x0008(0x01B0)(Parm, OutParm)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UserInfoComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LobbyBase_C_GetLocalPlayerCloudInfo) == 0x000008, "Wrong alignment on UI_LobbyBase_C_GetLocalPlayerCloudInfo");
static_assert(sizeof(UI_LobbyBase_C_GetLocalPlayerCloudInfo) == 0x0001D8, "Wrong size on UI_LobbyBase_C_GetLocalPlayerCloudInfo");
static_assert(offsetof(UI_LobbyBase_C_GetLocalPlayerCloudInfo, Found) == 0x000000, "Member 'UI_LobbyBase_C_GetLocalPlayerCloudInfo::Found' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetLocalPlayerCloudInfo, User_Cloud_Info) == 0x000008, "Member 'UI_LobbyBase_C_GetLocalPlayerCloudInfo::User_Cloud_Info' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetLocalPlayerCloudInfo, CallFunc_GetFlameController_ReturnValue) == 0x0001B8, "Member 'UI_LobbyBase_C_GetLocalPlayerCloudInfo::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetLocalPlayerCloudInfo, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'UI_LobbyBase_C_GetLocalPlayerCloudInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetLocalPlayerCloudInfo, CallFunc_GetComponentByClass_ReturnValue) == 0x0001C8, "Member 'UI_LobbyBase_C_GetLocalPlayerCloudInfo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetLocalPlayerCloudInfo, CallFunc_IsValid_ReturnValue_1) == 0x0001D0, "Member 'UI_LobbyBase_C_GetLocalPlayerCloudInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.UpdatePersonalBoosterIndicators
// 0x01B0 (0x01B0 - 0x0000)
struct UI_LobbyBase_C_UpdatePersonalBoosterIndicators final
{
public:
	struct FUserCloudInfo                         UserCloudInfo;                                     // 0x0000(0x01B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_LobbyBase_C_UpdatePersonalBoosterIndicators) == 0x000008, "Wrong alignment on UI_LobbyBase_C_UpdatePersonalBoosterIndicators");
static_assert(sizeof(UI_LobbyBase_C_UpdatePersonalBoosterIndicators) == 0x0001B0, "Wrong size on UI_LobbyBase_C_UpdatePersonalBoosterIndicators");
static_assert(offsetof(UI_LobbyBase_C_UpdatePersonalBoosterIndicators, UserCloudInfo) == 0x000000, "Member 'UI_LobbyBase_C_UpdatePersonalBoosterIndicators::UserCloudInfo' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.CanBuyPersonalTicket
// 0x0002 (0x0002 - 0x0000)
struct UI_LobbyBase_C_CanBuyPersonalTicket final
{
public:
	EBooster                                      InputPin;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_LobbyBase_C_CanBuyPersonalTicket) == 0x000001, "Wrong alignment on UI_LobbyBase_C_CanBuyPersonalTicket");
static_assert(sizeof(UI_LobbyBase_C_CanBuyPersonalTicket) == 0x000002, "Wrong size on UI_LobbyBase_C_CanBuyPersonalTicket");
static_assert(offsetof(UI_LobbyBase_C_CanBuyPersonalTicket, InputPin) == 0x000000, "Member 'UI_LobbyBase_C_CanBuyPersonalTicket::InputPin' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_CanBuyPersonalTicket, Return) == 0x000001, "Member 'UI_LobbyBase_C_CanBuyPersonalTicket::Return' has a wrong offset!");

// Function UI_LobbyBase.UI_LobbyBase_C.GetActivatedAmountCPP
// 0x0014 (0x0014 - 0x0000)
struct UI_LobbyBase_C_GetActivatedAmountCPP final
{
public:
	EBoosterTypes                                 Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPGet_Activated_Amount_AmountActivated;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_LobbyBase_C_GetActivatedAmountCPP) == 0x000004, "Wrong alignment on UI_LobbyBase_C_GetActivatedAmountCPP");
static_assert(sizeof(UI_LobbyBase_C_GetActivatedAmountCPP) == 0x000014, "Wrong size on UI_LobbyBase_C_GetActivatedAmountCPP");
static_assert(offsetof(UI_LobbyBase_C_GetActivatedAmountCPP, Booster) == 0x000000, "Member 'UI_LobbyBase_C_GetActivatedAmountCPP::Booster' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetActivatedAmountCPP, ReturnValue) == 0x000004, "Member 'UI_LobbyBase_C_GetActivatedAmountCPP::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetActivatedAmountCPP, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'UI_LobbyBase_C_GetActivatedAmountCPP::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetActivatedAmountCPP, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'UI_LobbyBase_C_GetActivatedAmountCPP::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetActivatedAmountCPP, CallFunc_GetValidValue_ReturnValue) == 0x00000D, "Member 'UI_LobbyBase_C_GetActivatedAmountCPP::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_LobbyBase_C_GetActivatedAmountCPP, CallFunc_BPGet_Activated_Amount_AmountActivated) == 0x000010, "Member 'UI_LobbyBase_C_GetActivatedAmountCPP::CallFunc_BPGet_Activated_Amount_AmountActivated' has a wrong offset!");

}

