#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapTexture

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_GM_SpecificMapInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_MapTexture.BP_MapTexture_C.GetMapOverlayTexture
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MapTexture_C_GetMapOverlayTexture final
{
public:
	class FString                                 GameModeStringName;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             OverlayTexture;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GM_SpecificMapInfo             CallFunc_Map_Find_Value_1;                         // 0x0028(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapTexture_C_GetMapOverlayTexture) == 0x000008, "Wrong alignment on BP_MapTexture_C_GetMapOverlayTexture");
static_assert(sizeof(BP_MapTexture_C_GetMapOverlayTexture) == 0x0000A0, "Wrong size on BP_MapTexture_C_GetMapOverlayTexture");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, GameModeStringName) == 0x000000, "Member 'BP_MapTexture_C_GetMapOverlayTexture::GameModeStringName' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, OverlayTexture) == 0x000010, "Member 'BP_MapTexture_C_GetMapOverlayTexture::OverlayTexture' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_MapTexture_C_GetMapOverlayTexture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_MapTexture_C_GetMapOverlayTexture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, CallFunc_Map_Find_Value_1) == 0x000028, "Member 'BP_MapTexture_C_GetMapOverlayTexture::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, CallFunc_Map_Find_ReturnValue_1) == 0x000080, "Member 'BP_MapTexture_C_GetMapOverlayTexture::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000088, "Member 'BP_MapTexture_C_GetMapOverlayTexture::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, K2Node_DynamicCast_AsTexture_2D) == 0x000090, "Member 'BP_MapTexture_C_GetMapOverlayTexture::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetMapOverlayTexture, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_MapTexture_C_GetMapOverlayTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapTexture.BP_MapTexture_C.GetCustomZoomLimits
// 0x00D0 (0x00D0 - 0x0000)
struct BP_MapTexture_C_GetCustomZoomLimits final
{
public:
	class FString                                 GameModeStringName;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           LowerLimit;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UpperLimit;                                        // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StartOffset;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GM_SpecificMapInfo             CallFunc_Map_Find_Value;                           // 0x0070(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapTexture_C_GetCustomZoomLimits) == 0x000008, "Wrong alignment on BP_MapTexture_C_GetCustomZoomLimits");
static_assert(sizeof(BP_MapTexture_C_GetCustomZoomLimits) == 0x0000D0, "Wrong size on BP_MapTexture_C_GetCustomZoomLimits");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, GameModeStringName) == 0x000000, "Member 'BP_MapTexture_C_GetCustomZoomLimits::GameModeStringName' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, LowerLimit) == 0x000010, "Member 'BP_MapTexture_C_GetCustomZoomLimits::LowerLimit' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, UpperLimit) == 0x000020, "Member 'BP_MapTexture_C_GetCustomZoomLimits::UpperLimit' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, StartOffset) == 0x000030, "Member 'BP_MapTexture_C_GetCustomZoomLimits::StartOffset' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, CallFunc_MakeColor_ReturnValue) == 0x000040, "Member 'BP_MapTexture_C_GetCustomZoomLimits::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, CallFunc_MakeColor_ReturnValue_1) == 0x000050, "Member 'BP_MapTexture_C_GetCustomZoomLimits::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, CallFunc_MakeColor_ReturnValue_2) == 0x000060, "Member 'BP_MapTexture_C_GetCustomZoomLimits::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_MapTexture_C_GetCustomZoomLimits::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MapTexture_C_GetCustomZoomLimits, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'BP_MapTexture_C_GetCustomZoomLimits::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

