#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_lootbox_UI

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_lootbox_UI.BP_lootbox_UI_C
// 0x0190 (0x03B0 - 0x0220)
class ABP_lootbox_UI_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   SceneBackground;                                   // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PostProcessVolume;                                 // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Card3_Texts;                                       // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Card2_Texts;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Card1_Texts;                                       // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Card1_Icon;                                        // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Card3_Icon;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Card2_Icon;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CardMesh;                                          // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CardsCameraShakeCenter;                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CameraStartPosition;                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CameraZoomPosition;                                // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULootBoxComponent*                      LootBox;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CrateBoxSK;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CameraZoomAlpha_Zoom_B93DB03F4602661627215EBC5A8FD41B; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CameraZoomAlpha__Direction_B93DB03F4602661627215EBC5A8FD41B; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CameraZoomAlpha;                                   // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_LootBoxes_C*                        WidgetToReturnData;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpened;                                          // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LootboxOpenTime;                                   // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           OverlayTimer;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, struct FLootBoxInfoCloud> CacheLootbox;                                      // 0x02F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSingleAnimationPlayData               CurrentAnimationData;                              // 0x0348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          CanShake;                                          // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                FFShake;                                           // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CurrentSoundData;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CardImpactFFShake;                                 // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CardImpactTimes;                                   // 0x0380(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                         PreviousCardImpactTime;                            // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveCardIndex;                                   // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartingCratesDataLoaded;                          // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLootBoxPoolItem>               Rewards;                                           // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_lootbox_UI(int32 EntryPoint);
	void Crate_Openned();
	void StartCardImpactTimer();
	void OnCardImpact();
	void CardImpactTimerNextIteration();
	void RequestAllLootboxesData(class AHumanPlayerController* Player, class UUI_LootBoxes_C* WidgetToReturnData_0);
	void BndEvt__LootBox_K2Node_ComponentBoundEvent_2_AllLootBoxesInfoDelegate__DelegateSignature(const struct FCloudRequestResult& RequestResult, const struct FLootBoxesInfoCloud& LootBoxesInfo);
	void ReceiveBeginPlay();
	void OpenOverlay();
	void PlayOpen();
	void StopOpeningLootbox();
	void StartOpeningLootbox();
	void RequestOpenLootBox(class AHumanPlayerController* Controller, class UClass* LootBox_0);
	void BndEvt__LootBox_K2Node_ComponentBoundEvent_0_OpenLootBoxDelegate__DelegateSignature(const struct FCloudRequestResult& RequestResult, const struct FLootBoxOpenedCloudResult& LootBoxItems);
	void RequestLootboxData(class AHumanPlayerController* Player, class UUI_LootBoxes_C* WidgetToReturnData_0, class UClass* LootBox_0);
	void BndEvt__LootBox_K2Node_ComponentBoundEvent_0_LootBoxInfoDelegate__DelegateSignature(const struct FCloudRequestResult& RequestResult, const struct FLootBoxInfoCloud& LootBoxInfo);
	void CameraZoomAlpha__UpdateFunc();
	void CameraZoomAlpha__FinishedFunc();
	void UserConstructionScript();
	void SetLootboxDataFromClass(class UClass* Class_0);
	void FillCards(TArray<struct FLootBoxPoolItem>& Rewards_0);
	void ResetCards();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_lootbox_UI_C">();
	}
	static class ABP_lootbox_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_lootbox_UI_C>();
	}
};
static_assert(alignof(ABP_lootbox_UI_C) == 0x000008, "Wrong alignment on ABP_lootbox_UI_C");
static_assert(sizeof(ABP_lootbox_UI_C) == 0x0003B0, "Wrong size on ABP_lootbox_UI_C");
static_assert(offsetof(ABP_lootbox_UI_C, UberGraphFrame) == 0x000220, "Member 'ABP_lootbox_UI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, SceneBackground) == 0x000228, "Member 'ABP_lootbox_UI_C::SceneBackground' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, SpotLight2) == 0x000230, "Member 'ABP_lootbox_UI_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, SpotLight1) == 0x000238, "Member 'ABP_lootbox_UI_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, PostProcess) == 0x000240, "Member 'ABP_lootbox_UI_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, PostProcessVolume) == 0x000248, "Member 'ABP_lootbox_UI_C::PostProcessVolume' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Card3_Texts) == 0x000250, "Member 'ABP_lootbox_UI_C::Card3_Texts' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Card2_Texts) == 0x000258, "Member 'ABP_lootbox_UI_C::Card2_Texts' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Card1_Texts) == 0x000260, "Member 'ABP_lootbox_UI_C::Card1_Texts' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Card1_Icon) == 0x000268, "Member 'ABP_lootbox_UI_C::Card1_Icon' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Card3_Icon) == 0x000270, "Member 'ABP_lootbox_UI_C::Card3_Icon' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Card2_Icon) == 0x000278, "Member 'ABP_lootbox_UI_C::Card2_Icon' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CardMesh) == 0x000280, "Member 'ABP_lootbox_UI_C::CardMesh' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Camera) == 0x000288, "Member 'ABP_lootbox_UI_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CardsCameraShakeCenter) == 0x000290, "Member 'ABP_lootbox_UI_C::CardsCameraShakeCenter' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CameraStartPosition) == 0x000298, "Member 'ABP_lootbox_UI_C::CameraStartPosition' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CameraZoomPosition) == 0x0002A0, "Member 'ABP_lootbox_UI_C::CameraZoomPosition' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, ParticleSystem) == 0x0002A8, "Member 'ABP_lootbox_UI_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, SpotLight) == 0x0002B0, "Member 'ABP_lootbox_UI_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, LootBox) == 0x0002B8, "Member 'ABP_lootbox_UI_C::LootBox' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CrateBoxSK) == 0x0002C0, "Member 'ABP_lootbox_UI_C::CrateBoxSK' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_lootbox_UI_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CameraZoomAlpha_Zoom_B93DB03F4602661627215EBC5A8FD41B) == 0x0002D0, "Member 'ABP_lootbox_UI_C::CameraZoomAlpha_Zoom_B93DB03F4602661627215EBC5A8FD41B' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CameraZoomAlpha__Direction_B93DB03F4602661627215EBC5A8FD41B) == 0x0002D4, "Member 'ABP_lootbox_UI_C::CameraZoomAlpha__Direction_B93DB03F4602661627215EBC5A8FD41B' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CameraZoomAlpha) == 0x0002D8, "Member 'ABP_lootbox_UI_C::CameraZoomAlpha' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, WidgetToReturnData) == 0x0002E0, "Member 'ABP_lootbox_UI_C::WidgetToReturnData' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, IsOpened) == 0x0002E8, "Member 'ABP_lootbox_UI_C::IsOpened' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, LootboxOpenTime) == 0x0002EC, "Member 'ABP_lootbox_UI_C::LootboxOpenTime' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, OverlayTimer) == 0x0002F0, "Member 'ABP_lootbox_UI_C::OverlayTimer' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CacheLootbox) == 0x0002F8, "Member 'ABP_lootbox_UI_C::CacheLootbox' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CurrentAnimationData) == 0x000348, "Member 'ABP_lootbox_UI_C::CurrentAnimationData' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CanShake) == 0x000360, "Member 'ABP_lootbox_UI_C::CanShake' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, FFShake) == 0x000368, "Member 'ABP_lootbox_UI_C::FFShake' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CurrentSoundData) == 0x000370, "Member 'ABP_lootbox_UI_C::CurrentSoundData' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CardImpactFFShake) == 0x000378, "Member 'ABP_lootbox_UI_C::CardImpactFFShake' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, CardImpactTimes) == 0x000380, "Member 'ABP_lootbox_UI_C::CardImpactTimes' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, PreviousCardImpactTime) == 0x000390, "Member 'ABP_lootbox_UI_C::PreviousCardImpactTime' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, ActiveCardIndex) == 0x000394, "Member 'ABP_lootbox_UI_C::ActiveCardIndex' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, StartingCratesDataLoaded) == 0x000398, "Member 'ABP_lootbox_UI_C::StartingCratesDataLoaded' has a wrong offset!");
static_assert(offsetof(ABP_lootbox_UI_C, Rewards) == 0x0003A0, "Member 'ABP_lootbox_UI_C::Rewards' has a wrong offset!");

}

