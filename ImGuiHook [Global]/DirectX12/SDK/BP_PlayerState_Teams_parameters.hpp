#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_Teams

#include "Basic.hpp"

#include "Struct_GunFightLoadout_structs.hpp"
#include "Struct_TVT_Deathmatch_Weapons_structs.hpp"
#include "Struct_TVTDeathmatch_Items_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "E_BattlePassSystem_State_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.ExecuteUbergraph_BP_PlayerState_Teams
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BattlePassSystem_State                      CallFunc_Get_State_State;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Level;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Premium;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_Level;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams) == 0x000008, "Wrong alignment on BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams");
static_assert(sizeof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams) == 0x000068, "Wrong size on BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, EntryPoint) == 0x000000, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000008, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000010, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_Get_State_State) == 0x000019, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, K2Node_CustomEvent_Level) == 0x00001C, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, K2Node_CustomEvent_Premium) == 0x000020, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::K2Node_CustomEvent_Premium' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_GetBattlePassSystem_ReturnValue_1) == 0x000028, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_GetBattlePassSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_GetLocalRole_ReturnValue) == 0x000030, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, K2Node_DynamicCast_AsBP_Battle_Pass_System_1) == 0x000038, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::K2Node_DynamicCast_AsBP_Battle_Pass_System_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000041, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000044, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_Get_Premium_Status_Premium_Active) == 0x00004C, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_Get_Level_Level) == 0x000050, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, CallFunc_IsDedicatedServer_ReturnValue) == 0x000054, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.Save Battle Pass Info on Server
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Premium;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server) == 0x000004, "Wrong alignment on BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server");
static_assert(sizeof(BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server) == 0x000008, "Wrong size on BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server");
static_assert(offsetof(BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server, Level) == 0x000000, "Member 'BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server::Level' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server, Premium) == 0x000004, "Member 'BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server::Premium' has a wrong offset!");

// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.GetCurrentLoadout
// 0x01C0 (0x01C0 - 0x0000)
struct BP_PlayerState_Teams_C_GetCurrentLoadout final
{
public:
	struct FStruct_GunFightLoadout                Loadout;                                           // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          FoundAny;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_TVT_Deathmatch_Weapons> Weapons;                                           // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FStruct_TVTDeathmatch_Items>    Items;                                             // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightLoadout                K2Node_MakeStruct_Struct_GunFightLoadout;          // 0x0068(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWeapon*>                        CallFunc_GetInventoryWeapons_ReturnValue;          // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	class AWeapon*                                CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBackpackItemSlot>              CallFunc_GetAllConsumablesSlots_ReturnValue;       // 0x00C8(0x0010)(ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x00D8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FBackpackItemSlot                      CallFunc_Array_Get_Item_1;                         // 0x0100(0x0010)(NoDestructor)
	struct FStruct_TVT_Deathmatch_Weapons         K2Node_MakeStruct_Struct_TVT_Deathmatch_Weapons;   // 0x0110(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1; // 0x0148(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_TVTDeathmatch_Items            K2Node_MakeStruct_Struct_TVTDeathmatch_Items;      // 0x0178(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Teams_C_GetCurrentLoadout) == 0x000008, "Wrong alignment on BP_PlayerState_Teams_C_GetCurrentLoadout");
static_assert(sizeof(BP_PlayerState_Teams_C_GetCurrentLoadout) == 0x0001C0, "Wrong size on BP_PlayerState_Teams_C_GetCurrentLoadout");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, Loadout) == 0x000000, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::Loadout' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, FoundAny) == 0x000028, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::FoundAny' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, Weapons) == 0x000030, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::Weapons' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, Items) == 0x000040, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::Items' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, K2Node_MakeStruct_Struct_GunFightLoadout) == 0x000068, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::K2Node_MakeStruct_Struct_GunFightLoadout' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, K2Node_DynamicCast_AsHuman_Character) == 0x000098, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_GetInventoryWeapons_ReturnValue) == 0x0000A8, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_GetInventoryWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_GetObjectClass_ReturnValue) == 0x0000C0, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_GetAllConsumablesSlots_ReturnValue) == 0x0000C8, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_GetAllConsumablesSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0000D8, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, K2Node_MakeStruct_Struct_TVT_Deathmatch_Weapons) == 0x000110, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::K2Node_MakeStruct_Struct_TVT_Deathmatch_Weapons' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1) == 0x000148, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, K2Node_MakeStruct_Struct_TVTDeathmatch_Items) == 0x000178, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::K2Node_MakeStruct_Struct_TVTDeathmatch_Items' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Array_AddUnique_ReturnValue) == 0x0001AC, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Array_Length_ReturnValue_1) == 0x0001B4, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_GetCurrentLoadout, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B8, "Member 'BP_PlayerState_Teams_C_GetCurrentLoadout::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.FindTeammates
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerState_Teams_C_FindTeammates final
{
public:
	TArray<class ABP_PlayerState_C*>              TeammatesPlayerStates;                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_PlayerState_C*>              Ret_Val;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0030(0x0010)(ReferenceParm)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_PlayerState_Teams_C_FindTeammates) == 0x000008, "Wrong alignment on BP_PlayerState_Teams_C_FindTeammates");
static_assert(sizeof(BP_PlayerState_Teams_C_FindTeammates) == 0x000078, "Wrong size on BP_PlayerState_Teams_C_FindTeammates");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, TeammatesPlayerStates) == 0x000000, "Member 'BP_PlayerState_Teams_C_FindTeammates::TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, Ret_Val) == 0x000010, "Member 'BP_PlayerState_Teams_C_FindTeammates::Ret_Val' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PlayerState_Teams_C_FindTeammates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_PlayerState_Teams_C_FindTeammates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_Get_Members_Member_States) == 0x000030, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, K2Node_DynamicCast_AsBP_Player_State) == 0x000050, "Member 'BP_PlayerState_Teams_C_FindTeammates::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PlayerState_Teams_C_FindTeammates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_PlayerState_Teams_C_FindTeammates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Teams_C_FindTeammates, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_PlayerState_Teams_C_FindTeammates::K2Node_MakeArray_Array' has a wrong offset!");

}

