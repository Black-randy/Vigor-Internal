#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ItemInfo_Ammo

#include "Basic.hpp"

#include "UI_ItemInfo_Ammo_classes.hpp"
#include "UI_ItemInfo_Ammo_parameters.hpp"


namespace SDK
{

// Function UI_ItemInfo_Ammo.UI_ItemInfo_Ammo_C.ExecuteUbergraph_UI_ItemInfo_Ammo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ItemInfo_Ammo_C::ExecuteUbergraph_UI_ItemInfo_Ammo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemInfo_Ammo_C", "ExecuteUbergraph_UI_ItemInfo_Ammo");

	Params::UI_ItemInfo_Ammo_C_ExecuteUbergraph_UI_ItemInfo_Ammo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ItemInfo_Ammo.UI_ItemInfo_Ammo_C.Update
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           AmmoClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ItemInfo_Ammo_C::Update(class UClass* AmmoClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemInfo_Ammo_C", "Update");

	Params::UI_ItemInfo_Ammo_C_Update Parms{};

	Parms.AmmoClass = AmmoClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ItemInfo_Ammo.UI_ItemInfo_Ammo_C.MakeCompatibleWeaponsList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   CompatibleWeapons                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             WeaponListOutput                                       (Parm, OutParm)

void UUI_ItemInfo_Ammo_C::MakeCompatibleWeaponsList(TArray<class UClass*>& CompatibleWeapons, class FText* WeaponListOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemInfo_Ammo_C", "MakeCompatibleWeaponsList");

	Params::UI_ItemInfo_Ammo_C_MakeCompatibleWeaponsList Parms{};

	Parms.CompatibleWeapons = std::move(CompatibleWeapons);

	UObject::ProcessEvent(Func, &Parms);

	CompatibleWeapons = std::move(Parms.CompatibleWeapons);

	if (WeaponListOutput != nullptr)
		*WeaponListOutput = std::move(Parms.WeaponListOutput);
}


// Function UI_ItemInfo_Ammo.UI_ItemInfo_Ammo_C.FindCompatibleWeapons
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           AmmoItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   CompatibleWpnClasses                                   (Parm, OutParm)

void UUI_ItemInfo_Ammo_C::FindCompatibleWeapons(class UClass* AmmoItem, TArray<class UClass*>* CompatibleWpnClasses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemInfo_Ammo_C", "FindCompatibleWeapons");

	Params::UI_ItemInfo_Ammo_C_FindCompatibleWeapons Parms{};

	Parms.AmmoItem = AmmoItem;

	UObject::ProcessEvent(Func, &Parms);

	if (CompatibleWpnClasses != nullptr)
		*CompatibleWpnClasses = std::move(Parms.CompatibleWpnClasses);
}


// Function UI_ItemInfo_Ammo.UI_ItemInfo_Ammo_C.SetTheCompatibleWeaponList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             CompatibleWeaponList                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_ItemInfo_Ammo_C::SetTheCompatibleWeaponList(const class FText& CompatibleWeaponList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemInfo_Ammo_C", "SetTheCompatibleWeaponList");

	Params::UI_ItemInfo_Ammo_C_SetTheCompatibleWeaponList Parms{};

	Parms.CompatibleWeaponList = std::move(CompatibleWeaponList);

	UObject::ProcessEvent(Func, &Parms);
}

}

