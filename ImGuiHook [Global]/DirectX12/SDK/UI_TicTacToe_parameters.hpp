#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TicTacToe

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_TTT_SquareStates_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_TicTacToe.UI_TicTacToe_C.ExecuteUbergraph_UI_TicTacToe
// 0x0288 (0x0288 - 0x0000)
struct UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable;                                // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_LastIndex_Variable;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_LastIndex_Variable_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_1;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_1;                              // 0x0074(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_2;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_3;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_10;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_8;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_4;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_LastIndex_Variable_2;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_5;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_LastIndex_Variable_3;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_LastIndex_Variable_4;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_9;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            Temp_byte_Variable_6;                              // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_14;                              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_10;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item;                           // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_11;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_7;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            K2Node_Select_Default;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            K2Node_Select_Default_1;                           // 0x0150(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            Temp_byte_Variable_8;                              // 0x0165(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_1;                         // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17F[0x1];                                      // 0x017F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_3;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_8;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_9;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_10;           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_2;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_3;                    // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_2;                         // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_4;             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_11;           // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_12;           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_4;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_5;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_5;             // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_3;                         // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_13;           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_14;           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_6;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_7;                    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_4;                         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CoordsToIndex_Index_8;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CoordsToIndex_Index_9;                    // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_10;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_11;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_12;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_15;           // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_16;           // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_6;             // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            K2Node_Select_Default_2;                           // 0x0235(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_236[0x2];                                      // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_12;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusedWidget_ReturnValue;             // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_9;                              // 0x0258(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       K2Node_DynamicCast_AsUniform_Grid_Slot;            // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CoordsToIndex_Index_13;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_6;                         // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            Temp_byte_Variable_10;                             // 0x0272(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_273[0x1];                                      // 0x0273(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_18;                              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_13;          // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            Temp_byte_Variable_11;                             // 0x0281(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe) == 0x000008, "Wrong alignment on UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe");
static_assert(sizeof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe) == 0x000288, "Wrong size on UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, EntryPoint) == 0x000000, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable) == 0x000008, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable) == 0x00000C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_LastIndex_Variable) == 0x000010, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_LastIndex_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_1) == 0x000018, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_LastIndex_Variable_1) == 0x000024, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_LastIndex_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralByte_ReturnValue) == 0x000028, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_2) == 0x00002C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_3) == 0x000038, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_3) == 0x000044, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000048, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_4) == 0x00004C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index) == 0x000054, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_1) == 0x000058, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00005C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_4) == 0x000060, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_5) == 0x000064, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_6) == 0x000068, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x00006C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_5) == 0x000070, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_1) == 0x000074, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_7) == 0x000078, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x00007C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_6) == 0x000080, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_2) == 0x000084, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_8) == 0x000088, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x00008C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_7) == 0x000090, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_9) == 0x000094, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000098, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x00009C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_8) == 0x0000A0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_3) == 0x0000A4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_10) == 0x0000A8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000AC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x0000B0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_9) == 0x0000B4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_11) == 0x0000B8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_12) == 0x0000BC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_8) == 0x0000C0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_10) == 0x0000C4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_4) == 0x0000C8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Loop_Counter_Variable_1) == 0x0000CC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_11) == 0x0000D0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Array_Index_Variable_1) == 0x0000D4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_LastIndex_Variable_2) == 0x0000D8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_LastIndex_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_5) == 0x0000DC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_LastIndex_Variable_3) == 0x0000E0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_LastIndex_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_LastIndex_Variable_4) == 0x0000E4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_LastIndex_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_13) == 0x0000E8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_9) == 0x0000EC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_6) == 0x0000ED, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_14) == 0x0000F0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_10) == 0x0000F4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_12) == 0x0000F8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000100, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Get_Item) == 0x000104, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_15) == 0x00010C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_11) == 0x000111, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_13) == 0x000114, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_7) == 0x000118, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_14) == 0x00011C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, K2Node_Select_Default) == 0x000120, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralInt_ReturnValue) == 0x000124, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000128, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000130, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Length_ReturnValue_2) == 0x000134, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000138, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_15) == 0x00013C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Divide_IntInt_ReturnValue) == 0x000140, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Percent_IntInt_ReturnValue) == 0x000144, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000148, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00014C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, K2Node_Select_Default_1) == 0x000150, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000154, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Less_IntInt_ReturnValue_2) == 0x000158, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Length_ReturnValue_3) == 0x00015C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000160, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000164, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_8) == 0x000165, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_16) == 0x000168, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x00016C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_16) == 0x000170, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000174, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000178, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Less_IntInt_ReturnValue_3) == 0x00017C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Get_Item_1) == 0x00017D, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x00017E, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralInt_ReturnValue_3) == 0x000180, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000184, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_8) == 0x000188, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_9) == 0x00018C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_10) == 0x000190, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_2) == 0x000194, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_3) == 0x000198, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Get_Item_2) == 0x00019C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralInt_ReturnValue_4) == 0x0001A0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_11) == 0x0001A4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x0001A8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_12) == 0x0001AC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_4) == 0x0001B0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_5) == 0x0001B4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralInt_ReturnValue_5) == 0x0001B8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Get_Item_3) == 0x0001BC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_13) == 0x0001C0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_14) == 0x0001C4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_6) == 0x0001C8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_7) == 0x0001CC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Get_Item_4) == 0x0001D0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_8) == 0x0001D4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001D8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_9) == 0x0001DC, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_10) == 0x0001E0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_11) == 0x0001E4, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_12) == 0x0001E8, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_12' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, K2Node_MakeArray_Array) == 0x0001F0, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Get_Item_5) == 0x000200, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Length_ReturnValue_4) == 0x000204, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Less_IntInt_ReturnValue_4) == 0x000208, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Length_ReturnValue_5) == 0x00020C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_15) == 0x000210, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_bool_Variable) == 0x000214, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Length_ReturnValue_6) == 0x000218, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Subtract_IntInt_ReturnValue_16) == 0x00021C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Subtract_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_MakeLiteralInt_ReturnValue_6) == 0x000220, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_MakeLiteralInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000224, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Less_IntInt_ReturnValue_5) == 0x000228, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00022C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_RandomInteger_ReturnValue) == 0x000230, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_RandomBool_ReturnValue) == 0x000234, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, K2Node_Select_Default_2) == 0x000235, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_17) == 0x000238, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_17) == 0x00023C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_12) == 0x000240, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_18) == 0x000244, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_GetFocusedWidget_ReturnValue) == 0x000248, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_GetFocusedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_GetParentUserWidget_ReturnValue) == 0x000250, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_9) == 0x000258, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, K2Node_DynamicCast_AsUniform_Grid_Slot) == 0x000260, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::K2Node_DynamicCast_AsUniform_Grid_Slot' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, K2Node_DynamicCast_bSuccess) == 0x000268, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_CoordsToIndex_Index_13) == 0x00026C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_CoordsToIndex_Index_13' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Array_Get_Item_6) == 0x000270, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000271, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_10) == 0x000272, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_int_Variable_18) == 0x000274, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000278, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_LessEqual_IntInt_ReturnValue_13) == 0x000279, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_LessEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Add_IntInt_ReturnValue_19) == 0x00027C, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, CallFunc_Not_PreBool_ReturnValue) == 0x000280, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe, Temp_byte_Variable_11) == 0x000281, "Member 'UI_TicTacToe_C_ExecuteUbergraph_UI_TicTacToe::Temp_byte_Variable_11' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.IndexToCoords
// 0x0014 (0x0014 - 0x0000)
struct UI_TicTacToe_C_IndexToCoords final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Col;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_IndexToCoords) == 0x000004, "Wrong alignment on UI_TicTacToe_C_IndexToCoords");
static_assert(sizeof(UI_TicTacToe_C_IndexToCoords) == 0x000014, "Wrong size on UI_TicTacToe_C_IndexToCoords");
static_assert(offsetof(UI_TicTacToe_C_IndexToCoords, Index_0) == 0x000000, "Member 'UI_TicTacToe_C_IndexToCoords::Index_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_IndexToCoords, Row) == 0x000004, "Member 'UI_TicTacToe_C_IndexToCoords::Row' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_IndexToCoords, Col) == 0x000008, "Member 'UI_TicTacToe_C_IndexToCoords::Col' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_IndexToCoords, CallFunc_Divide_IntInt_ReturnValue) == 0x00000C, "Member 'UI_TicTacToe_C_IndexToCoords::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_IndexToCoords, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'UI_TicTacToe_C_IndexToCoords::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.CoordsToIndex
// 0x0014 (0x0014 - 0x0000)
struct UI_TicTacToe_C_CoordsToIndex final
{
public:
	int32                                         Row;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Col;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_CoordsToIndex) == 0x000004, "Wrong alignment on UI_TicTacToe_C_CoordsToIndex");
static_assert(sizeof(UI_TicTacToe_C_CoordsToIndex) == 0x000014, "Wrong size on UI_TicTacToe_C_CoordsToIndex");
static_assert(offsetof(UI_TicTacToe_C_CoordsToIndex, Row) == 0x000000, "Member 'UI_TicTacToe_C_CoordsToIndex::Row' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CoordsToIndex, Col) == 0x000004, "Member 'UI_TicTacToe_C_CoordsToIndex::Col' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CoordsToIndex, Index_0) == 0x000008, "Member 'UI_TicTacToe_C_CoordsToIndex::Index_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CoordsToIndex, CallFunc_Multiply_IntInt_ReturnValue) == 0x00000C, "Member 'UI_TicTacToe_C_CoordsToIndex::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CoordsToIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UI_TicTacToe_C_CoordsToIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.MakeMoveAt
// 0x0040 (0x0040 - 0x0000)
struct UI_TicTacToe_C_MakeMoveAt final
{
public:
	int32                                         LastMove;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RunAI_SelectedMove;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RunAI_Score;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TTT_Slot_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestAndMarkWinner_IsWinner;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestAndMarkWinner_IsDraw;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TTT_Slot_C*                         CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestAndMarkWinner_IsWinner_1;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestAndMarkWinner_IsDraw_1;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_MakeMoveAt) == 0x000008, "Wrong alignment on UI_TicTacToe_C_MakeMoveAt");
static_assert(sizeof(UI_TicTacToe_C_MakeMoveAt) == 0x000040, "Wrong size on UI_TicTacToe_C_MakeMoveAt");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, LastMove) == 0x000000, "Member 'UI_TicTacToe_C_MakeMoveAt::LastMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_RunAI_SelectedMove) == 0x000014, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_RunAI_SelectedMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_RunAI_Score) == 0x000018, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_RunAI_Score' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_Array_Get_Item) == 0x000020, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_TestAndMarkWinner_IsWinner) == 0x000028, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_TestAndMarkWinner_IsWinner' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_TestAndMarkWinner_IsDraw) == 0x000029, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_TestAndMarkWinner_IsDraw' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_Array_Add_ReturnValue_1) == 0x000038, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_TestAndMarkWinner_IsWinner_1) == 0x00003C, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_TestAndMarkWinner_IsWinner_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_TestAndMarkWinner_IsDraw_1) == 0x00003D, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_TestAndMarkWinner_IsDraw_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MakeMoveAt, CallFunc_BooleanOR_ReturnValue_1) == 0x00003E, "Member 'UI_TicTacToe_C_MakeMoveAt::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.UpdateBoard
// 0x0028 (0x0028 - 0x0000)
struct UI_TicTacToe_C_UpdateBoard final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TTT_Slot_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_1;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_UpdateBoard) == 0x000008, "Wrong alignment on UI_TicTacToe_C_UpdateBoard");
static_assert(sizeof(UI_TicTacToe_C_UpdateBoard) == 0x000028, "Wrong size on UI_TicTacToe_C_UpdateBoard");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UI_TicTacToe_C_UpdateBoard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_TicTacToe_C_UpdateBoard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_TicTacToe_C_UpdateBoard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard, CallFunc_Array_Get_Item) == 0x000010, "Member 'UI_TicTacToe_C_UpdateBoard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'UI_TicTacToe_C_UpdateBoard::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'UI_TicTacToe_C_UpdateBoard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'UI_TicTacToe_C_UpdateBoard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.RunAI
// 0x00B8 (0x00B8 - 0x0000)
struct UI_TicTacToe_C_RunAI final
{
public:
	TArray<E_TTT_SquareStates>                    CurrentState;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         LastMove;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CPUtype;                                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RecursionDepth;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedMove;                                      // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Score;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TTT_SquareStates>                    TryBoard;                                          // 0x0028(0x0010)(Edit, BlueprintVisible)
	float                                         BestVal;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BestIndex;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_FindEmptySquaresNear_EmptyIndices;        // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Log_ReturnValue;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable;                                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateBoardBySearching_Score;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_RunAI) == 0x000008, "Wrong alignment on UI_TicTacToe_C_RunAI");
static_assert(sizeof(UI_TicTacToe_C_RunAI) == 0x0000B8, "Wrong size on UI_TicTacToe_C_RunAI");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CurrentState) == 0x000000, "Member 'UI_TicTacToe_C_RunAI::CurrentState' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, LastMove) == 0x000010, "Member 'UI_TicTacToe_C_RunAI::LastMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CPUtype) == 0x000014, "Member 'UI_TicTacToe_C_RunAI::CPUtype' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, RecursionDepth) == 0x000018, "Member 'UI_TicTacToe_C_RunAI::RecursionDepth' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, SelectedMove) == 0x00001C, "Member 'UI_TicTacToe_C_RunAI::SelectedMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Score) == 0x000020, "Member 'UI_TicTacToe_C_RunAI::Score' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, TryBoard) == 0x000028, "Member 'UI_TicTacToe_C_RunAI::TryBoard' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, BestVal) == 0x000038, "Member 'UI_TicTacToe_C_RunAI::BestVal' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, BestIndex) == 0x00003C, "Member 'UI_TicTacToe_C_RunAI::BestIndex' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'UI_TicTacToe_C_RunAI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000041, "Member 'UI_TicTacToe_C_RunAI::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_FindEmptySquaresNear_EmptyIndices) == 0x000048, "Member 'UI_TicTacToe_C_RunAI::CallFunc_FindEmptySquaresNear_EmptyIndices' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_RandomFloat_ReturnValue) == 0x00005C, "Member 'UI_TicTacToe_C_RunAI::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000060, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'UI_TicTacToe_C_RunAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Log_ReturnValue) == 0x000070, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Log_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'UI_TicTacToe_C_RunAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Array_Get_Item) == 0x000080, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_float_Variable) == 0x000084, "Member 'UI_TicTacToe_C_RunAI::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'UI_TicTacToe_C_RunAI::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_float_Variable_1) == 0x00008C, "Member 'UI_TicTacToe_C_RunAI::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_float_Variable_2) == 0x000090, "Member 'UI_TicTacToe_C_RunAI::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_float_Variable_3) == 0x000094, "Member 'UI_TicTacToe_C_RunAI::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_float_Variable_4) == 0x000098, "Member 'UI_TicTacToe_C_RunAI::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, Temp_byte_Variable) == 0x00009C, "Member 'UI_TicTacToe_C_RunAI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, K2Node_Select_Default) == 0x0000A0, "Member 'UI_TicTacToe_C_RunAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_EvaluateBoardBySearching_Score) == 0x0000A4, "Member 'UI_TicTacToe_C_RunAI::CallFunc_EvaluateBoardBySearching_Score' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_SelectFloat_ReturnValue) == 0x0000AC, "Member 'UI_TicTacToe_C_RunAI::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B0, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B1, "Member 'UI_TicTacToe_C_RunAI::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'UI_TicTacToe_C_RunAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B3, "Member 'UI_TicTacToe_C_RunAI::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_RunAI, CallFunc_BooleanOR_ReturnValue) == 0x0000B4, "Member 'UI_TicTacToe_C_RunAI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.FindEmptySquaresNear
// 0x00B8 (0x00B8 - 0x0000)
struct UI_TicTacToe_C_FindEmptySquaresNear final
{
public:
	TArray<E_TTT_SquareStates>                    CurrentState;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 EmptyIndices;                                      // 0x0010(0x0010)(Parm, OutParm)
	int32                                         MaxIndex;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IncIndex;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DecIndex;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RetVal;                                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item;                           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IndexToCoords_Row;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexToCoords_Col;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_1;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_3;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_FindEmptySquaresNear) == 0x000008, "Wrong alignment on UI_TicTacToe_C_FindEmptySquaresNear");
static_assert(sizeof(UI_TicTacToe_C_FindEmptySquaresNear) == 0x0000B8, "Wrong size on UI_TicTacToe_C_FindEmptySquaresNear");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CurrentState) == 0x000000, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CurrentState' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, EmptyIndices) == 0x000010, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::EmptyIndices' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, MaxIndex) == 0x000020, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::MaxIndex' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CurrentIndex) == 0x000024, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CurrentIndex' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, IncIndex) == 0x000028, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::IncIndex' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, DecIndex) == 0x00002C, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::DecIndex' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, RetVal) == 0x000030, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::RetVal' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, Temp_bool_Variable) == 0x000044, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, Temp_bool_Variable_1) == 0x000045, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Not_PreBool_ReturnValue) == 0x000046, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Not_PreBool_ReturnValue_1) == 0x000047, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, Temp_int_Array_Index_Variable) == 0x000054, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, Temp_int_Variable) == 0x000058, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Array_Get_Item) == 0x00005C, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000064, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_IndexToCoords_Row) == 0x000068, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_IndexToCoords_Row' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_IndexToCoords_Col) == 0x00006C, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_IndexToCoords_Col' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Add_IntInt_ReturnValue_3) == 0x000078, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00007C, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, Temp_int_Variable_1) == 0x000084, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_CoordsToIndex_Index) == 0x000088, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_CoordsToIndex_Index' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00008C, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Clamp_ReturnValue) == 0x000094, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000098, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000099, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Clamp_ReturnValue_1) == 0x00009C, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A0, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000A4, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Clamp_ReturnValue_2) == 0x0000A8, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_Clamp_ReturnValue_3) == 0x0000AC, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_Clamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B0, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FindEmptySquaresNear, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B1, "Member 'UI_TicTacToe_C_FindEmptySquaresNear::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.EvaluateBoard
// 0x00B8 (0x00B8 - 0x0000)
struct UI_TicTacToe_C_EvaluateBoard final
{
public:
	TArray<E_TTT_SquareStates>                    Board_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Score;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              NewLocalVar_2;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              NewLocalVar_1;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              NewLocalVar_0;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         RetVal;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ConvertBoardToStrings_All;                // 0x0058(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOfSubstrings_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_EvaluateBoard) == 0x000008, "Wrong alignment on UI_TicTacToe_C_EvaluateBoard");
static_assert(sizeof(UI_TicTacToe_C_EvaluateBoard) == 0x0000B8, "Wrong size on UI_TicTacToe_C_EvaluateBoard");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, Board_0) == 0x000000, "Member 'UI_TicTacToe_C_EvaluateBoard::Board_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, Score) == 0x000010, "Member 'UI_TicTacToe_C_EvaluateBoard::Score' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, NewLocalVar_2) == 0x000018, "Member 'UI_TicTacToe_C_EvaluateBoard::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, NewLocalVar_1) == 0x000020, "Member 'UI_TicTacToe_C_EvaluateBoard::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, NewLocalVar_0) == 0x000028, "Member 'UI_TicTacToe_C_EvaluateBoard::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, RetVal) == 0x000030, "Member 'UI_TicTacToe_C_EvaluateBoard::RetVal' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'UI_TicTacToe_C_EvaluateBoard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, Temp_int_Array_Index_Variable) == 0x000054, "Member 'UI_TicTacToe_C_EvaluateBoard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_ConvertBoardToStrings_All) == 0x000058, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_ConvertBoardToStrings_All' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Array_Get_Item) == 0x000068, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'UI_TicTacToe_C_EvaluateBoard::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000084, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Map_Find_Value) == 0x000098, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Map_Find_ReturnValue) == 0x00009C, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_CountOfSubstrings_ReturnValue) == 0x0000A0, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_CountOfSubstrings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000A4, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'UI_TicTacToe_C_EvaluateBoard::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoard, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'UI_TicTacToe_C_EvaluateBoard::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.CountInDir
// 0x0058 (0x0058 - 0x0000)
struct UI_TicTacToe_C_CountInDir final
{
public:
	TArray<E_TTT_SquareStates>                    Board_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirX;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirY;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IndexToCoords_Row;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexToCoords_Col;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CoordsToIndex_Index;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item_1;                         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInDir_Count;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked;                       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_CountInDir) == 0x000008, "Wrong alignment on UI_TicTacToe_C_CountInDir");
static_assert(sizeof(UI_TicTacToe_C_CountInDir) == 0x000058, "Wrong size on UI_TicTacToe_C_CountInDir");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, Board_0) == 0x000000, "Member 'UI_TicTacToe_C_CountInDir::Board_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, Index_0) == 0x000010, "Member 'UI_TicTacToe_C_CountInDir::Index_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, DirX) == 0x000014, "Member 'UI_TicTacToe_C_CountInDir::DirX' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, DirY) == 0x000018, "Member 'UI_TicTacToe_C_CountInDir::DirY' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, Count) == 0x00001C, "Member 'UI_TicTacToe_C_CountInDir::Count' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, bLocked) == 0x000020, "Member 'UI_TicTacToe_C_CountInDir::bLocked' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_Array_Get_Item) == 0x000021, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_IndexToCoords_Row) == 0x000024, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_IndexToCoords_Row' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_IndexToCoords_Col) == 0x000028, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_IndexToCoords_Col' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_CoordsToIndex_Index) == 0x000038, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_CoordsToIndex_Index' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_Array_Get_Item_1) == 0x00003D, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_CountInDir_Count) == 0x000040, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_CountInDir_Count' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_CountInDir_Blocked) == 0x000044, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_CountInDir_Blocked' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000045, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004D, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00004E, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_BooleanOR_ReturnValue) == 0x00004F, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_BooleanOR_ReturnValue_1) == 0x000050, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInDir, CallFunc_BooleanOR_ReturnValue_2) == 0x000051, "Member 'UI_TicTacToe_C_CountInDir::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.CountInRow
// 0x0098 (0x0098 - 0x0000)
struct UI_TicTacToe_C_CountInRow final
{
public:
	TArray<E_TTT_SquareStates>                    Board_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hori;                                              // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blocked1H;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Blocked2H;                                         // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Vert;                                              // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blocked1V;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Blocked2v;                                         // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DiagA;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blocked1A;                                         // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Blocked2A;                                         // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DiagB;                                             // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blocked1B;                                         // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Blocked2B;                                         // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInDir_Count;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInDir_Count_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInDir_Count_2;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInDir_Count_3;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountInDir_Count_4;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked_4;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountInDir_Count_5;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked_5;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountInDir_Count_6;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked_6;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInDir_Count_7;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInDir_Blocked_7;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_CountInRow) == 0x000008, "Wrong alignment on UI_TicTacToe_C_CountInRow");
static_assert(sizeof(UI_TicTacToe_C_CountInRow) == 0x000098, "Wrong size on UI_TicTacToe_C_CountInRow");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Board_0) == 0x000000, "Member 'UI_TicTacToe_C_CountInRow::Board_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Index_0) == 0x000010, "Member 'UI_TicTacToe_C_CountInRow::Index_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Hori) == 0x000014, "Member 'UI_TicTacToe_C_CountInRow::Hori' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked1H) == 0x000018, "Member 'UI_TicTacToe_C_CountInRow::Blocked1H' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked2H) == 0x000019, "Member 'UI_TicTacToe_C_CountInRow::Blocked2H' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Vert) == 0x00001C, "Member 'UI_TicTacToe_C_CountInRow::Vert' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked1V) == 0x000020, "Member 'UI_TicTacToe_C_CountInRow::Blocked1V' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked2v) == 0x000021, "Member 'UI_TicTacToe_C_CountInRow::Blocked2v' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, DiagA) == 0x000024, "Member 'UI_TicTacToe_C_CountInRow::DiagA' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked1A) == 0x000028, "Member 'UI_TicTacToe_C_CountInRow::Blocked1A' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked2A) == 0x000029, "Member 'UI_TicTacToe_C_CountInRow::Blocked2A' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, DiagB) == 0x00002C, "Member 'UI_TicTacToe_C_CountInRow::DiagB' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked1B) == 0x000030, "Member 'UI_TicTacToe_C_CountInRow::Blocked1B' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, Blocked2B) == 0x000031, "Member 'UI_TicTacToe_C_CountInRow::Blocked2B' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count) == 0x000034, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked) == 0x000038, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count_1) == 0x00003C, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked_1) == 0x000040, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count_2) == 0x000044, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked_2) == 0x000048, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count_3) == 0x00004C, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked_3) == 0x000050, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count_4) == 0x000058, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked_4) == 0x00005C, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count_5) == 0x000068, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked_5) == 0x00006C, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue_3) == 0x000070, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count_6) == 0x000074, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked_6) == 0x000078, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Count_7) == 0x00007C, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Count_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_CountInDir_Blocked_7) == 0x000080, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_CountInDir_Blocked_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue_4) == 0x000084, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue_5) == 0x000088, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue_6) == 0x00008C, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountInRow, CallFunc_Add_IntInt_ReturnValue_7) == 0x000090, "Member 'UI_TicTacToe_C_CountInRow::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.TestAndMarkWinner
// 0x0068 (0x0068 - 0x0000)
struct UI_TicTacToe_C_TestAndMarkWinner final
{
public:
	TArray<E_TTT_SquareStates>                    GameState_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_TTT_SquareStates                            Player;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastMove;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWinner;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDraw;                                            // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInRow_Hori;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1H;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2H;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInRow_Vert;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1V;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2v;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInRow_DiagA;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1A;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2A;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInRow_DiagB;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1B;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2B;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            Temp_byte_Variable;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_1;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_2;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_3;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_4;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_5;                              // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_TestAndMarkWinner) == 0x000008, "Wrong alignment on UI_TicTacToe_C_TestAndMarkWinner");
static_assert(sizeof(UI_TicTacToe_C_TestAndMarkWinner) == 0x000068, "Wrong size on UI_TicTacToe_C_TestAndMarkWinner");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, GameState_0) == 0x000000, "Member 'UI_TicTacToe_C_TestAndMarkWinner::GameState_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Player) == 0x000010, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Player' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, LastMove) == 0x000014, "Member 'UI_TicTacToe_C_TestAndMarkWinner::LastMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, IsWinner) == 0x000018, "Member 'UI_TicTacToe_C_TestAndMarkWinner::IsWinner' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, IsDraw) == 0x000019, "Member 'UI_TicTacToe_C_TestAndMarkWinner::IsDraw' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Hori) == 0x00001C, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Hori' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked1H) == 0x000020, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked1H' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked2H) == 0x000021, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked2H' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Vert) == 0x000024, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Vert' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked1V) == 0x000028, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked1V' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked2v) == 0x000029, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked2v' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_DiagA) == 0x00002C, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_DiagA' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked1A) == 0x000030, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked1A' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked2A) == 0x000031, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked2A' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_DiagB) == 0x000034, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_DiagB' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked1B) == 0x000038, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked1B' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_CountInRow_Blocked2B) == 0x000039, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_CountInRow_Blocked2B' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000042, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000043, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_BooleanOR_ReturnValue) == 0x000044, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_BooleanOR_ReturnValue_1) == 0x000045, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_BooleanOR_ReturnValue_2) == 0x00004C, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_int_Array_Index_Variable) == 0x000054, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_Array_Get_Item) == 0x000058, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'UI_TicTacToe_C_TestAndMarkWinner::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_byte_Variable) == 0x00005A, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_byte_Variable_1) == 0x00005B, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_byte_Variable_2) == 0x00005C, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_byte_Variable_3) == 0x00005D, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_byte_Variable_4) == 0x00005E, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, Temp_byte_Variable_5) == 0x00005F, "Member 'UI_TicTacToe_C_TestAndMarkWinner::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_TestAndMarkWinner, K2Node_Select_Default) == 0x000060, "Member 'UI_TicTacToe_C_TestAndMarkWinner::K2Node_Select_Default' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.MarkWinnerInDir
// 0x0048 (0x0048 - 0x0000)
struct UI_TicTacToe_C_MarkWinnerInDir final
{
public:
	TArray<E_TTT_SquareStates>                    Board_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirX;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirY;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            OldType;                                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            WinningType;                                       // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IndexToCoords_Row;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexToCoords_Col;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CoordsToIndex_Index;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item;                           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_MarkWinnerInDir) == 0x000008, "Wrong alignment on UI_TicTacToe_C_MarkWinnerInDir");
static_assert(sizeof(UI_TicTacToe_C_MarkWinnerInDir) == 0x000048, "Wrong size on UI_TicTacToe_C_MarkWinnerInDir");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, Board_0) == 0x000000, "Member 'UI_TicTacToe_C_MarkWinnerInDir::Board_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, Index_0) == 0x000010, "Member 'UI_TicTacToe_C_MarkWinnerInDir::Index_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, DirX) == 0x000014, "Member 'UI_TicTacToe_C_MarkWinnerInDir::DirX' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, DirY) == 0x000018, "Member 'UI_TicTacToe_C_MarkWinnerInDir::DirY' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, OldType) == 0x00001C, "Member 'UI_TicTacToe_C_MarkWinnerInDir::OldType' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, WinningType) == 0x00001D, "Member 'UI_TicTacToe_C_MarkWinnerInDir::WinningType' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_IndexToCoords_Row) == 0x000020, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_IndexToCoords_Row' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_IndexToCoords_Col) == 0x000024, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_IndexToCoords_Col' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_CoordsToIndex_Index) == 0x000034, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_CoordsToIndex_Index' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_Array_Get_Item) == 0x000039, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003B, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00003D, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_BooleanOR_ReturnValue) == 0x00003E, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_BooleanOR_ReturnValue_1) == 0x00003F, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_MarkWinnerInDir, CallFunc_BooleanOR_ReturnValue_2) == 0x000040, "Member 'UI_TicTacToe_C_MarkWinnerInDir::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.EvaluateBoardBySearching
// 0x0048 (0x0048 - 0x0000)
struct UI_TicTacToe_C_EvaluateBoardBySearching final
{
public:
	TArray<E_TTT_SquareStates>                    Board_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Depth;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastMove;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Type;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Score;                                             // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetVal;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestAndMarkWinner_IsWinner;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestAndMarkWinner_IsDraw;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateBoard_Score;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TTT_SquareStates                            Temp_byte_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_2;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_3;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_5;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RunAI_SelectedMove;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RunAI_Score;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_EvaluateBoardBySearching) == 0x000008, "Wrong alignment on UI_TicTacToe_C_EvaluateBoardBySearching");
static_assert(sizeof(UI_TicTacToe_C_EvaluateBoardBySearching) == 0x000048, "Wrong size on UI_TicTacToe_C_EvaluateBoardBySearching");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Board_0) == 0x000000, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Board_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Depth) == 0x000010, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Depth' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, LastMove) == 0x000014, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::LastMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Type) == 0x000018, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Type' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Score) == 0x00001C, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Score' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, RetVal) == 0x000020, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::RetVal' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Temp_byte_Variable) == 0x000024, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_TestAndMarkWinner_IsWinner) == 0x000025, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_TestAndMarkWinner_IsWinner' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_TestAndMarkWinner_IsDraw) == 0x000026, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_TestAndMarkWinner_IsDraw' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_BooleanOR_ReturnValue) == 0x000027, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_BooleanOR_ReturnValue_1) == 0x00002C, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_EvaluateBoard_Score) == 0x000030, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_EvaluateBoard_Score' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_BooleanOR_ReturnValue_2) == 0x000034, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Temp_byte_Variable_1) == 0x000035, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Temp_byte_Variable_2) == 0x000036, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Temp_byte_Variable_3) == 0x000037, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Temp_byte_Variable_4) == 0x000038, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, Temp_byte_Variable_5) == 0x000039, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, K2Node_Select_Default) == 0x00003A, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_RunAI_SelectedMove) == 0x00003C, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_RunAI_SelectedMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_EvaluateBoardBySearching, CallFunc_RunAI_Score) == 0x000040, "Member 'UI_TicTacToe_C_EvaluateBoardBySearching::CallFunc_RunAI_Score' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.FillBoard
// 0x0070 (0x0070 - 0x0000)
struct UI_TicTacToe_C_FillBoard final
{
public:
	int32                                         SizeX_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TTT_Slot_C*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexToCoords_Row;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexToCoords_Col;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TTT_Slot_C*                         CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable;                                // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_FillBoard) == 0x000008, "Wrong alignment on UI_TicTacToe_C_FillBoard");
static_assert(sizeof(UI_TicTacToe_C_FillBoard) == 0x000070, "Wrong size on UI_TicTacToe_C_FillBoard");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, SizeX_0) == 0x000000, "Member 'UI_TicTacToe_C_FillBoard::SizeX_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, SizeY_0) == 0x000004, "Member 'UI_TicTacToe_C_FillBoard::SizeY_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_TicTacToe_C_FillBoard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Divide_IntInt_ReturnValue) == 0x000018, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Multiply_IntInt_ReturnValue) == 0x00001C, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000020, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_CoordsToIndex_Index) == 0x000028, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_CoordsToIndex_Index' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Array_Get_Item) == 0x000030, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, Temp_int_Variable) == 0x000038, "Member 'UI_TicTacToe_C_FillBoard::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_IndexToCoords_Row) == 0x00003C, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_IndexToCoords_Row' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_IndexToCoords_Col) == 0x000040, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_IndexToCoords_Col' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Create_ReturnValue) == 0x000050, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, Temp_byte_Variable) == 0x000058, "Member 'UI_TicTacToe_C_FillBoard::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FillBoard, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000068, "Member 'UI_TicTacToe_C_FillBoard::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.ResizeBoard
// 0x0070 (0x0070 - 0x0000)
struct UI_TicTacToe_C_ResizeBoard final
{
public:
	int32                                         SizeX_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Exp_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_ResizeBoard) == 0x000008, "Wrong alignment on UI_TicTacToe_C_ResizeBoard");
static_assert(sizeof(UI_TicTacToe_C_ResizeBoard) == 0x000070, "Wrong size on UI_TicTacToe_C_ResizeBoard");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, SizeX_0) == 0x000000, "Member 'UI_TicTacToe_C_ResizeBoard::SizeX_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, SizeY_0) == 0x000004, "Member 'UI_TicTacToe_C_ResizeBoard::SizeY_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00000C, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_Exp_ReturnValue) == 0x000018, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_Exp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, K2Node_MakeStruct_Margin) == 0x000020, "Member 'UI_TicTacToe_C_ResizeBoard::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000030, "Member 'UI_TicTacToe_C_ResizeBoard::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_TicTacToe_C_ResizeBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_GetPosition_ReturnValue) == 0x00003C, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_GetSize_ReturnValue) == 0x000044, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_BreakVector2D_X) == 0x00004C, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_BreakVector2D_X_1) == 0x000054, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_BreakVector2D_Y_1) == 0x000058, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_MakeVector2D_ReturnValue) == 0x00005C, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000064, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ResizeBoard, CallFunc_MakeVector2D_ReturnValue_1) == 0x000068, "Member 'UI_TicTacToe_C_ResizeBoard::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.UpdateIndicators
// 0x0008 (0x0008 - 0x0000)
struct UI_TicTacToe_C_UpdateIndicators final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_UpdateIndicators) == 0x000001, "Wrong alignment on UI_TicTacToe_C_UpdateIndicators");
static_assert(sizeof(UI_TicTacToe_C_UpdateIndicators) == 0x000008, "Wrong size on UI_TicTacToe_C_UpdateIndicators");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, Temp_byte_Variable) == 0x000000, "Member 'UI_TicTacToe_C_UpdateIndicators::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, Temp_byte_Variable_1) == 0x000001, "Member 'UI_TicTacToe_C_UpdateIndicators::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, Temp_bool_Variable) == 0x000002, "Member 'UI_TicTacToe_C_UpdateIndicators::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, Temp_byte_Variable_2) == 0x000003, "Member 'UI_TicTacToe_C_UpdateIndicators::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, Temp_byte_Variable_3) == 0x000004, "Member 'UI_TicTacToe_C_UpdateIndicators::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, Temp_bool_Variable_1) == 0x000005, "Member 'UI_TicTacToe_C_UpdateIndicators::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, K2Node_Select_Default) == 0x000006, "Member 'UI_TicTacToe_C_UpdateIndicators::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateIndicators, K2Node_Select_Default_1) == 0x000007, "Member 'UI_TicTacToe_C_UpdateIndicators::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.ConvertBoardToStrings
// 0x0428 (0x0428 - 0x0000)
struct UI_TicTacToe_C_ConvertBoardToStrings final
{
public:
	TArray<E_TTT_SquareStates>                    Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         SizeX_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY_0;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         All;                                               // 0x0018(0x0010)(Parm, OutParm)
	class FString                                 LocVal;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         RetVal;                                            // 0x0038(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_5;                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_1;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_10;                           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_11;                           // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_12;                           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_13;                           // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_14;                           // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_2;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_15;                           // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_16;                           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_17;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_18;                           // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_19;                           // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_20;                           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_21;                           // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_1;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_22;                           // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_2;                        // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_2;                    // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_23;                           // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_3;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_24;                           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_8;           // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_4;                    // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_9;           // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_3;                              // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_25;                           // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_10;          // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_4;                              // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_26;                           // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_27;                           // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_28;                           // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_29;                           // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            Temp_byte_Variable_5;                              // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_11;                              // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_4;                           // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CoordsToIndex_Index_5;                    // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_11;          // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_5;                           // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_ConvertBoardToStrings) == 0x000008, "Wrong alignment on UI_TicTacToe_C_ConvertBoardToStrings");
static_assert(sizeof(UI_TicTacToe_C_ConvertBoardToStrings) == 0x000428, "Wrong size on UI_TicTacToe_C_ConvertBoardToStrings");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Array) == 0x000000, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Array' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, SizeX_0) == 0x000010, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::SizeX_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, SizeY_0) == 0x000014, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::SizeY_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, All) == 0x000018, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::All' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, LocVal) == 0x000028, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::LocVal' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, RetVal) == 0x000038, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::RetVal' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable) == 0x000048, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00005C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_1) == 0x000060, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000070, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_2) == 0x000078, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_3) == 0x000088, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_4) == 0x000098, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_byte_Variable) == 0x0000A8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_5) == 0x0000B0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_6) == 0x0000C0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_7) == 0x0000D0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_8) == 0x0000E0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_9) == 0x0000F0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_byte_Variable_1) == 0x000100, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_10) == 0x000108, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_11) == 0x000118, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_12) == 0x000128, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_13) == 0x000138, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_14) == 0x000148, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_byte_Variable_2) == 0x000158, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_15) == 0x000160, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_16) == 0x000170, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_17) == 0x000180, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_18) == 0x000190, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_19) == 0x0001A0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_20) == 0x0001B0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_20' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable) == 0x0001C0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Min_ReturnValue) == 0x0001C4, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue) == 0x0001CC, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_1) == 0x0001D0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D4, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_21) == 0x0001D8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_21' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_2) == 0x0001E8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0001EC, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001F0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Min_ReturnValue_1) == 0x0001F4, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_CoordsToIndex_Index) == 0x0001F8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_CoordsToIndex_Index' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001FC, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0001FD, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_3) == 0x000200, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_3) == 0x000204, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_4) == 0x000208, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00020C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_CoordsToIndex_Index_1) == 0x000210, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_CoordsToIndex_Index_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_4) == 0x000214, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000218, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_5) == 0x00021C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_22) == 0x000220, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_22' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_5) == 0x000230, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000234, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_6) == 0x000238, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Min_ReturnValue_2) == 0x00023C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Min_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_CoordsToIndex_Index_2) == 0x000240, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_CoordsToIndex_Index_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000244, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, K2Node_Select_Default) == 0x000248, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000258, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_7) == 0x00025C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_23) == 0x000260, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_23' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_6) == 0x000270, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x000274, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_8) == 0x000278, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_7) == 0x00027C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_CoordsToIndex_Index_3) == 0x000280, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_CoordsToIndex_Index_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x000284, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, K2Node_Select_Default_1) == 0x000288, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_9) == 0x000298, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_24) == 0x0002A0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_24' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_8) == 0x0002B0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_8) == 0x0002B4, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_10) == 0x0002B8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_9) == 0x0002BC, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_CoordsToIndex_Index_4) == 0x0002C0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_CoordsToIndex_Index_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_9) == 0x0002C4, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, K2Node_Select_Default_2) == 0x0002C8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_11) == 0x0002D8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_byte_Variable_3) == 0x0002DC, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, K2Node_Select_Default_3) == 0x0002E0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Array_Add_ReturnValue) == 0x0002F0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_25) == 0x0002F8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_25' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_10) == 0x000308, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x00030C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Max_ReturnValue) == 0x000310, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_10) == 0x000314, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_12) == 0x000318, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Array_Add_ReturnValue_1) == 0x00031C, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_byte_Variable_4) == 0x000320, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Array_Add_ReturnValue_2) == 0x000324, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Concat_StrStr_ReturnValue) == 0x000328, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_26) == 0x000338, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_26' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Array_Add_ReturnValue_3) == 0x000348, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000350, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Array_Add_ReturnValue_4) == 0x000360, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_27) == 0x000368, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_27' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Array_Add_ReturnValue_5) == 0x000378, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000380, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000390, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_28) == 0x0003A0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_28' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_string_Variable_29) == 0x0003B0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_string_Variable_29' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_byte_Variable_5) == 0x0003C0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, Temp_int_Variable_11) == 0x0003C4, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, K2Node_Select_Default_4) == 0x0003C8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x0003D8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0003E0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_13) == 0x0003F0, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_CoordsToIndex_Index_5) == 0x0003F4, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_CoordsToIndex_Index_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_LessEqual_IntInt_ReturnValue_11) == 0x0003F8, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_LessEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, K2Node_Select_Default_5) == 0x000400, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Add_IntInt_ReturnValue_14) == 0x000410, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_ConvertBoardToStrings, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000418, "Member 'UI_TicTacToe_C_ConvertBoardToStrings::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.CountOfSubstrings
// 0x0028 (0x0028 - 0x0000)
struct UI_TicTacToe_C_CountOfSubstrings final
{
public:
	class FString                                 SourceString;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SearchText;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ReplaceInline_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_CountOfSubstrings) == 0x000008, "Wrong alignment on UI_TicTacToe_C_CountOfSubstrings");
static_assert(sizeof(UI_TicTacToe_C_CountOfSubstrings) == 0x000028, "Wrong size on UI_TicTacToe_C_CountOfSubstrings");
static_assert(offsetof(UI_TicTacToe_C_CountOfSubstrings, SourceString) == 0x000000, "Member 'UI_TicTacToe_C_CountOfSubstrings::SourceString' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountOfSubstrings, SearchText) == 0x000010, "Member 'UI_TicTacToe_C_CountOfSubstrings::SearchText' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountOfSubstrings, ReturnValue) == 0x000020, "Member 'UI_TicTacToe_C_CountOfSubstrings::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_CountOfSubstrings, CallFunc_ReplaceInline_ReturnValue) == 0x000024, "Member 'UI_TicTacToe_C_CountOfSubstrings::CallFunc_ReplaceInline_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.PregenerateScoreTable
// 0x0080 (0x0080 - 0x0000)
struct UI_TicTacToe_C_PregenerateScoreTable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Reverse_ReturnValue;                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Reverse_ReturnValue_1;                    // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_PregenerateScoreTable) == 0x000008, "Wrong alignment on UI_TicTacToe_C_PregenerateScoreTable");
static_assert(sizeof(UI_TicTacToe_C_PregenerateScoreTable) == 0x000080, "Wrong size on UI_TicTacToe_C_PregenerateScoreTable");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UI_TicTacToe_C_PregenerateScoreTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_TicTacToe_C_PregenerateScoreTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Array_Get_Item) == 0x000020, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Map_Find_Value) == 0x000030, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Map_Find_ReturnValue) == 0x000034, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Replace_ReturnValue) == 0x000038, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000048, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Reverse_ReturnValue) == 0x000050, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Reverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Reverse_ReturnValue_1) == 0x000068, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Reverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PregenerateScoreTable, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'UI_TicTacToe_C_PregenerateScoreTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.FinishLog
// 0x0150 (0x0150 - 0x0000)
struct UI_TicTacToe_C_FinishLog final
{
public:
	bool                                          PlayerWin;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AIWin;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Join_Integer_Array_ReturnValue;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_TicTacToe_Played_Event_ReturnValue;  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_FinishLog) == 0x000008, "Wrong alignment on UI_TicTacToe_C_FinishLog");
static_assert(sizeof(UI_TicTacToe_C_FinishLog) == 0x000150, "Wrong size on UI_TicTacToe_C_FinishLog");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, PlayerWin) == 0x000000, "Member 'UI_TicTacToe_C_FinishLog::PlayerWin' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, AIWin) == 0x000001, "Member 'UI_TicTacToe_C_FinishLog::AIWin' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_int_Variable) == 0x000004, "Member 'UI_TicTacToe_C_FinishLog::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_int_Variable_1) == 0x000008, "Member 'UI_TicTacToe_C_FinishLog::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_bool_Variable) == 0x00000C, "Member 'UI_TicTacToe_C_FinishLog::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_int_Variable_2) == 0x000010, "Member 'UI_TicTacToe_C_FinishLog::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_bool_Variable_1) == 0x000014, "Member 'UI_TicTacToe_C_FinishLog::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_string_Variable) == 0x000018, "Member 'UI_TicTacToe_C_FinishLog::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_string_Variable_1) == 0x000028, "Member 'UI_TicTacToe_C_FinishLog::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_bool_Variable_2) == 0x000038, "Member 'UI_TicTacToe_C_FinishLog::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, K2Node_Select_Default) == 0x000040, "Member 'UI_TicTacToe_C_FinishLog::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_string_Variable_2) == 0x000050, "Member 'UI_TicTacToe_C_FinishLog::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, K2Node_Select_Default_1) == 0x000060, "Member 'UI_TicTacToe_C_FinishLog::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, Temp_bool_Variable_3) == 0x000090, "Member 'UI_TicTacToe_C_FinishLog::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Join_Integer_Array_ReturnValue) == 0x000098, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Join_Integer_Array_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, K2Node_Select_Default_2) == 0x0000A8, "Member 'UI_TicTacToe_C_FinishLog::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, K2Node_Select_Default_3) == 0x0000C0, "Member 'UI_TicTacToe_C_FinishLog::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Send_TicTacToe_Played_Event_ReturnValue) == 0x0000D8, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Send_TicTacToe_Played_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E0, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000F0, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000100, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000110, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000120, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000130, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishLog, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000140, "Member 'UI_TicTacToe_C_FinishLog::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.FinishGame
// 0x0048 (0x0048 - 0x0000)
struct UI_TicTacToe_C_FinishGame final
{
public:
	bool                                          PlayerWin;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AIWin;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TicTacToe_C_FinishGame) == 0x000008, "Wrong alignment on UI_TicTacToe_C_FinishGame");
static_assert(sizeof(UI_TicTacToe_C_FinishGame) == 0x000048, "Wrong size on UI_TicTacToe_C_FinishGame");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, PlayerWin) == 0x000000, "Member 'UI_TicTacToe_C_FinishGame::PlayerWin' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, AIWin) == 0x000001, "Member 'UI_TicTacToe_C_FinishGame::AIWin' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, Temp_int_Variable) == 0x000004, "Member 'UI_TicTacToe_C_FinishGame::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UI_TicTacToe_C_FinishGame::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'UI_TicTacToe_C_FinishGame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, Temp_int_Variable_1) == 0x000024, "Member 'UI_TicTacToe_C_FinishGame::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'UI_TicTacToe_C_FinishGame::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_FinishGame, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'UI_TicTacToe_C_FinishGame::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.PlayJuice
// 0x0008 (0x0008 - 0x0000)
struct UI_TicTacToe_C_PlayJuice final
{
public:
	int32                                         Variant;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_PlayJuice) == 0x000004, "Wrong alignment on UI_TicTacToe_C_PlayJuice");
static_assert(sizeof(UI_TicTacToe_C_PlayJuice) == 0x000008, "Wrong size on UI_TicTacToe_C_PlayJuice");
static_assert(offsetof(UI_TicTacToe_C_PlayJuice, Variant) == 0x000000, "Member 'UI_TicTacToe_C_PlayJuice::Variant' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_PlayJuice, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'UI_TicTacToe_C_PlayJuice::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.UpdateBoard_Juice
// 0x0020 (0x0020 - 0x0000)
struct UI_TicTacToe_C_UpdateBoard_Juice final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TTT_SquareStates                            CallFunc_Array_Get_Item;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TTT_Slot_C*                         CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_UpdateBoard_Juice) == 0x000008, "Wrong alignment on UI_TicTacToe_C_UpdateBoard_Juice");
static_assert(sizeof(UI_TicTacToe_C_UpdateBoard_Juice) == 0x000020, "Wrong size on UI_TicTacToe_C_UpdateBoard_Juice");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard_Juice, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UI_TicTacToe_C_UpdateBoard_Juice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard_Juice, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UI_TicTacToe_C_UpdateBoard_Juice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard_Juice, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_TicTacToe_C_UpdateBoard_Juice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard_Juice, CallFunc_Array_Get_Item) == 0x00000C, "Member 'UI_TicTacToe_C_UpdateBoard_Juice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard_Juice, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'UI_TicTacToe_C_UpdateBoard_Juice::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard_Juice, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'UI_TicTacToe_C_UpdateBoard_Juice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_UpdateBoard_Juice, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'UI_TicTacToe_C_UpdateBoard_Juice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UI_TicTacToe.UI_TicTacToe_C.Test4InRow
// 0x0048 (0x0048 - 0x0000)
struct UI_TicTacToe_C_Test4InRow final
{
public:
	TArray<E_TTT_SquareStates>                    GameState_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         LastMove;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountInRow_Hori;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1H;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2H;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInRow_Vert;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1V;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2v;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInRow_DiagA;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1A;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2A;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountInRow_DiagB;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CountInRow_Blocked1B;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CountInRow_Blocked2B;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue_1;                // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue_2;                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue_3;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TicTacToe_C_Test4InRow) == 0x000008, "Wrong alignment on UI_TicTacToe_C_Test4InRow");
static_assert(sizeof(UI_TicTacToe_C_Test4InRow) == 0x000048, "Wrong size on UI_TicTacToe_C_Test4InRow");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, GameState_0) == 0x000000, "Member 'UI_TicTacToe_C_Test4InRow::GameState_0' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, LastMove) == 0x000010, "Member 'UI_TicTacToe_C_Test4InRow::LastMove' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Hori) == 0x000014, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Hori' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked1H) == 0x000018, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked1H' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked2H) == 0x000019, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked2H' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Vert) == 0x00001C, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Vert' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked1V) == 0x000020, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked1V' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked2v) == 0x000021, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked2v' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_DiagA) == 0x000024, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_DiagA' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked1A) == 0x000028, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked1A' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked2A) == 0x000029, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked2A' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_DiagB) == 0x00002C, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_DiagB' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked1B) == 0x000030, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked1B' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_CountInRow_Blocked2B) == 0x000031, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_CountInRow_Blocked2B' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000032, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanNAND_ReturnValue) == 0x000033, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000035, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanNAND_ReturnValue_1) == 0x000037, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanNAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000038, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000039, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanNAND_ReturnValue_2) == 0x00003B, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanNAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00003C, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x00003D, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanAND_ReturnValue_2) == 0x00003E, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanOR_ReturnValue) == 0x00003F, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanNAND_ReturnValue_3) == 0x000040, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanNAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanOR_ReturnValue_1) == 0x000041, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000042, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanOR_ReturnValue_2) == 0x000043, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanAND_ReturnValue_3) == 0x000044, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanOR_ReturnValue_3) == 0x000045, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanOR_ReturnValue_4) == 0x000046, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_TicTacToe_C_Test4InRow, CallFunc_BooleanOR_ReturnValue_5) == 0x000047, "Member 'UI_TicTacToe_C_Test4InRow::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

}

