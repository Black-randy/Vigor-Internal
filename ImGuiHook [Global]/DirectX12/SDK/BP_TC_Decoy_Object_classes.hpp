#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_Decoy_Object

#include "Basic.hpp"

#include "BP_PlacableTrap_Object_Base_classes.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TC_Decoy_Object.BP_TC_Decoy_Object_C
// 0x08A0 (0x0D08 - 0x0468)
class ABP_TC_Decoy_Object_C final : public ABP_PlacableTrap_Object_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TC_Decoy_Object_C;               // 0x0468(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          CollisionBox;                                      // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Cooldown_Between_Shots_Single;                     // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFirearmWeaponConfiguration            Weapon_A;                                          // 0x0488(0x0418)(Edit, BlueprintVisible, Net, DisableEditOnInstance, AdvancedDisplay)
	struct FVector2D                              Cooldown_Between_Shots_Burst;                      // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Cooldown_Between_Shots_FullAuto;                   // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FireSoundA;                                        // 0x08B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFirearmWeaponConfiguration            Weapon_B;                                          // 0x08B8(0x0418)(Edit, BlueprintVisible, Net, DisableEditOnInstance, AdvancedDisplay)
	class USoundBase*                             FireSoundB;                                        // 0x0CD0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FireShot_A_Timer;                                  // 0x0CD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           FireShot_B_Timer;                                  // 0x0CE0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UParticleSystemComponent*               Particle_System;                                   // 0x0CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFireMode                              FiremodeA;                                         // 0x0CF0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	struct FFireMode                              FiremodeB;                                         // 0x0CF8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	int32                                         WeaponACounter;                                    // 0x0D00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         WeaponBCounter;                                    // 0x0D04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TC_Decoy_Object(int32 EntryPoint);
	void StartShots();
	void TrapBrokenEffect();
	void RunLoopAnimation();
	void LoopAnimation();
	void OpenAnimation();
	void EndAnimation();
	void Destroy_Effect();
	void Spawn_Effect();
	void Play_Fire_Sound(class USoundBase* Sound);
	void Fire_Shot_B();
	void Fire_Shot_A();
	void Trap_AutoBreak();
	void Trap_Break(class UObject* Player_that_destroyed_the_trap);
	void Trap_Phase_Activated();
	void Set_Trap_Variables_Decoy(const struct FFirearmWeaponConfiguration& WeaponA, const struct FFirearmWeaponConfiguration& WeaponB);
	void Get_Random_Gun_Sounds();
	void GetFireSound(const struct FFirearmWeaponConfiguration& Firearm, class USoundBase** Sound);
	struct FTimerHandle FireShot(class USoundBase*& Sound, TDelegate<void()>& Delegate, struct FFirearmWeaponConfiguration& Weapon, struct FFireMode& FireMode, int32& Counter, bool* ResetCounter);
	void Activate(int32 Timer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TC_Decoy_Object_C">();
	}
	static class ABP_TC_Decoy_Object_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TC_Decoy_Object_C>();
	}
};
static_assert(alignof(ABP_TC_Decoy_Object_C) == 0x000008, "Wrong alignment on ABP_TC_Decoy_Object_C");
static_assert(sizeof(ABP_TC_Decoy_Object_C) == 0x000D08, "Wrong size on ABP_TC_Decoy_Object_C");
static_assert(offsetof(ABP_TC_Decoy_Object_C, UberGraphFrame_BP_TC_Decoy_Object_C) == 0x000468, "Member 'ABP_TC_Decoy_Object_C::UberGraphFrame_BP_TC_Decoy_Object_C' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, CollisionBox) == 0x000470, "Member 'ABP_TC_Decoy_Object_C::CollisionBox' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, SkeletalMesh) == 0x000478, "Member 'ABP_TC_Decoy_Object_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, Cooldown_Between_Shots_Single) == 0x000480, "Member 'ABP_TC_Decoy_Object_C::Cooldown_Between_Shots_Single' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, Weapon_A) == 0x000488, "Member 'ABP_TC_Decoy_Object_C::Weapon_A' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, Cooldown_Between_Shots_Burst) == 0x0008A0, "Member 'ABP_TC_Decoy_Object_C::Cooldown_Between_Shots_Burst' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, Cooldown_Between_Shots_FullAuto) == 0x0008A8, "Member 'ABP_TC_Decoy_Object_C::Cooldown_Between_Shots_FullAuto' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, FireSoundA) == 0x0008B0, "Member 'ABP_TC_Decoy_Object_C::FireSoundA' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, Weapon_B) == 0x0008B8, "Member 'ABP_TC_Decoy_Object_C::Weapon_B' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, FireSoundB) == 0x000CD0, "Member 'ABP_TC_Decoy_Object_C::FireSoundB' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, FireShot_A_Timer) == 0x000CD8, "Member 'ABP_TC_Decoy_Object_C::FireShot_A_Timer' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, FireShot_B_Timer) == 0x000CE0, "Member 'ABP_TC_Decoy_Object_C::FireShot_B_Timer' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, Particle_System) == 0x000CE8, "Member 'ABP_TC_Decoy_Object_C::Particle_System' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, FiremodeA) == 0x000CF0, "Member 'ABP_TC_Decoy_Object_C::FiremodeA' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, FiremodeB) == 0x000CF8, "Member 'ABP_TC_Decoy_Object_C::FiremodeB' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, WeaponACounter) == 0x000D00, "Member 'ABP_TC_Decoy_Object_C::WeaponACounter' has a wrong offset!");
static_assert(offsetof(ABP_TC_Decoy_Object_C, WeaponBCounter) == 0x000D04, "Member 'ABP_TC_Decoy_Object_C::WeaponBCounter' has a wrong offset!");

}

