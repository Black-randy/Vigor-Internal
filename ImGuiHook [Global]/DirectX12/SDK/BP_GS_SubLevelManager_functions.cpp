#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GS_SubLevelManager

#include "Basic.hpp"

#include "BP_GS_SubLevelManager_classes.hpp"
#include "BP_GS_SubLevelManager_parameters.hpp"


namespace SDK
{

// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.SubLevelManager_Initialize__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_GS_SubLevelManager_C::SubLevelManager_Initialize__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "SubLevelManager_Initialize__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.SubLevelManager_InitializeComplete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasSuccess                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GS_SubLevelManager_C::SubLevelManager_InitializeComplete__DelegateSignature(bool WasSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "SubLevelManager_InitializeComplete__DelegateSignature");

	Params::BP_GS_SubLevelManager_C_SubLevelManager_InitializeComplete__DelegateSignature Parms{};

	Parms.WasSuccess = WasSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.ExecuteUbergraph_BP_GS_SubLevelManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::ExecuteUbergraph_BP_GS_SubLevelManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "ExecuteUbergraph_BP_GS_SubLevelManager");

	Params::BP_GS_SubLevelManager_C_ExecuteUbergraph_BP_GS_SubLevelManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.LoadStreamLevelsManual
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           GameMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::LoadStreamLevelsManual(class UClass* GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "LoadStreamLevelsManual");

	Params::BP_GS_SubLevelManager_C_LoadStreamLevelsManual Parms{};

	Parms.GameMode = GameMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.CheckThemeLoad
// (BlueprintCallable, BlueprintEvent)

void UBP_GS_SubLevelManager_C::CheckThemeLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "CheckThemeLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.SyncUnloadThemeLevels
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::SyncUnloadThemeLevels(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "SyncUnloadThemeLevels");

	Params::BP_GS_SubLevelManager_C_SyncUnloadThemeLevels Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.SyncLoadThemeLevels
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::SyncLoadThemeLevels(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "SyncLoadThemeLevels");

	Params::BP_GS_SubLevelManager_C_SyncLoadThemeLevels Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.InitThemeLevels
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESublevelTheme                          Theme_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::InitThemeLevels(ESublevelTheme Theme_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "InitThemeLevels");

	Params::BP_GS_SubLevelManager_C_InitThemeLevels Parms{};

	Parms.Theme_0 = Theme_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.Check If Complete
// (BlueprintCallable, BlueprintEvent)

void UBP_GS_SubLevelManager_C::Check_If_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "Check If Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.LoadNext
// (BlueprintCallable, BlueprintEvent)

void UBP_GS_SubLevelManager_C::LoadNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "LoadNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.Init Level Streaming
// (BlueprintCallable, BlueprintEvent)

void UBP_GS_SubLevelManager_C::Init_Level_Streaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "Init Level Streaming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.Unload SubLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldBlockOnUnload                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GS_SubLevelManager_C::Unload_SubLevel(class FName LevelName, bool bShouldBlockOnUnload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "Unload SubLevel");

	Params::BP_GS_SubLevelManager_C_Unload_SubLevel Parms{};

	Parms.LevelName = LevelName;
	Parms.bShouldBlockOnUnload = bShouldBlockOnUnload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.Load SubLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMakeVisibleAfterLoad                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bShouldBlockOnLoad                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GS_SubLevelManager_C::Load_SubLevel(class FName LevelName, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "Load SubLevel");

	Params::BP_GS_SubLevelManager_C_Load_SubLevel Parms{};

	Parms.LevelName = LevelName;
	Parms.bMakeVisibleAfterLoad = bMakeVisibleAfterLoad;
	Parms.bShouldBlockOnLoad = bShouldBlockOnLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_GS_SubLevelManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.GetLevelsFromTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ParentClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Theme_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class FName>                     Load_Levels                                            (Parm, OutParm)
// TArray<class FName>                     Unload_Levels                                          (Parm, OutParm)

void UBP_GS_SubLevelManager_C::GetLevelsFromTable(class FName RowName, class UClass* ParentClass, class FName Theme_0, bool* Success, TArray<class FName>* Load_Levels, TArray<class FName>* Unload_Levels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "GetLevelsFromTable");

	Params::BP_GS_SubLevelManager_C_GetLevelsFromTable Parms{};

	Parms.RowName = RowName;
	Parms.ParentClass = ParentClass;
	Parms.Theme_0 = Theme_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Load_Levels != nullptr)
		*Load_Levels = std::move(Parms.Load_Levels);

	if (Unload_Levels != nullptr)
		*Unload_Levels = std::move(Parms.Unload_Levels);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.GetActiveSubLevels
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ActiveLevels_0                                         (Parm, OutParm)

void UBP_GS_SubLevelManager_C::GetActiveSubLevels(TArray<class FName>* ActiveLevels_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "GetActiveSubLevels");

	Params::BP_GS_SubLevelManager_C_GetActiveSubLevels Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveLevels_0 != nullptr)
		*ActiveLevels_0 = std::move(Parms.ActiveLevels_0);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.AreAllLevelsLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    All_Loaded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GS_SubLevelManager_C::AreAllLevelsLoaded(bool* All_Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "AreAllLevelsLoaded");

	Params::BP_GS_SubLevelManager_C_AreAllLevelsLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (All_Loaded != nullptr)
		*All_Loaded = Parms.All_Loaded;
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.IsLevelLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PackageName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLoaded                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GS_SubLevelManager_C::IsLevelLoaded(class FName PackageName, bool* IsValid, bool* IsLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "IsLevelLoaded");

	Params::BP_GS_SubLevelManager_C_IsLevelLoaded Parms{};

	Parms.PackageName = PackageName;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (IsLoaded != nullptr)
		*IsLoaded = Parms.IsLoaded;
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.AreAllLevelsVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AreAllLevelVisible                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GS_SubLevelManager_C::AreAllLevelsVisible(bool* AreAllLevelVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "AreAllLevelsVisible");

	Params::BP_GS_SubLevelManager_C_AreAllLevelsVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreAllLevelVisible != nullptr)
		*AreAllLevelVisible = Parms.AreAllLevelVisible;
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.GetDebugString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DebugString                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::GetDebugString(class FString* DebugString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "GetDebugString");

	Params::BP_GS_SubLevelManager_C_GetDebugString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DebugString != nullptr)
		*DebugString = std::move(Parms.DebugString);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.SetValidManualCameraFade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InFadeAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::SetValidManualCameraFade(float InFadeAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "SetValidManualCameraFade");

	Params::BP_GS_SubLevelManager_C_SetValidManualCameraFade Parms{};

	Parms.InFadeAmount = InFadeAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.GetThemeLevelsFromTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESublevelTheme                          Theme_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class FName>                     Load                                                   (Parm, OutParm)
// TArray<class FName>                     Unload                                                 (Parm, OutParm)
// bool                                    OverrideLightScenario                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GS_SubLevelManager_C::GetThemeLevelsFromTable(class FName LevelName, ESublevelTheme Theme_0, bool* Success, TArray<class FName>* Load, TArray<class FName>* Unload, bool* OverrideLightScenario)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "GetThemeLevelsFromTable");

	Params::BP_GS_SubLevelManager_C_GetThemeLevelsFromTable Parms{};

	Parms.LevelName = LevelName;
	Parms.Theme_0 = Theme_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Load != nullptr)
		*Load = std::move(Parms.Load);

	if (Unload != nullptr)
		*Unload = std::move(Parms.Unload);

	if (OverrideLightScenario != nullptr)
		*OverrideLightScenario = Parms.OverrideLightScenario;
}


// Function BP_GS_SubLevelManager.BP_GS_SubLevelManager_C.DebugPrint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Theme_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GS_SubLevelManager_C::DebugPrint(class FName Theme_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GS_SubLevelManager_C", "DebugPrint");

	Params::BP_GS_SubLevelManager_C_DebugPrint Parms{};

	Parms.Theme_0 = Theme_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

