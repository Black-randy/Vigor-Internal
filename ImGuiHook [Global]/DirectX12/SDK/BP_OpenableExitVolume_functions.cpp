#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OpenableExitVolume

#include "Basic.hpp"

#include "BP_OpenableExitVolume_classes.hpp"
#include "BP_OpenableExitVolume_parameters.hpp"


namespace SDK
{

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Exit Openned__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Exit_Openned__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Exit Openned__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Exit Closed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Exit_Closed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Exit Closed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.ExecuteUbergraph_BP_OpenableExitVolume
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpenableExitVolume_C::ExecuteUbergraph_BP_OpenableExitVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "ExecuteUbergraph_BP_OpenableExitVolume");

	Params::BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event CallUnlockExitChallenge OnServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Human_Character                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpenableExitVolume_C::Event_CallUnlockExitChallenge_OnServer(class AHumanCharacter* Human_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Event CallUnlockExitChallenge OnServer");

	Params::BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer Parms{};

	Parms.Human_Character = Human_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event CallUnlockExitChallenge Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Human_Character                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpenableExitVolume_C::Event_CallUnlockExitChallenge_Multicast(class AHumanCharacter* Human_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Event CallUnlockExitChallenge Multicast");

	Params::BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast Parms{};

	Parms.Human_Character = Human_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event CallUnlockExitChallenge
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  HumanCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpenableExitVolume_C::Event_CallUnlockExitChallenge(class AHumanCharacter* HumanCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Event CallUnlockExitChallenge");

	Params::BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge Parms{};

	Parms.HumanCharacter = HumanCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event UpdateOpenExitIcon
// (BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Event_UpdateOpenExitIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Event UpdateOpenExitIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event UpdateOpenExitIcon OnClient
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Event_UpdateOpenExitIcon_OnClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Event UpdateOpenExitIcon OnClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event UpdateOpenExitIcon Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Event_UpdateOpenExitIcon_Multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Event UpdateOpenExitIcon Multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Set Marker Active
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OpenableExitVolume_C::Set_Marker_Active(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Set Marker Active");

	Params::BP_OpenableExitVolume_C_Set_Marker_Active Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_OpenableExitVolume_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Character Stepped Into Exit
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_Script_C*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpenableExitVolume_C::Character_Stepped_Into_Exit(class ABP_Character_Script_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Character Stepped Into Exit");

	Params::BP_OpenableExitVolume_C_Character_Stepped_Into_Exit Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Open Exit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  HumanCharacer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpenableExitVolume_C::Open_Exit(class AHumanCharacter* HumanCharacer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Open Exit");

	Params::BP_OpenableExitVolume_C_Open_Exit Parms{};

	Parms.HumanCharacer = HumanCharacer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Close Exit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Close_Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Close Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Set Required Resource
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Required_Resource                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpenableExitVolume_C::Set_Required_Resource(class UClass* Required_Resource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Set Required Resource");

	Params::BP_OpenableExitVolume_C_Set_Required_Resource Parms{};

	Parms.Required_Resource = Required_Resource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Block Exit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Block_Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Block Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Unlock Exit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OpenableExitVolume_C::Unlock_Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpenableExitVolume_C", "Unlock Exit");

	UObject::ProcessEvent(Func, nullptr);
}

}

