#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_LobbyBase

#include "Basic.hpp"

#include "UI_LobbyBase_classes.hpp"
#include "UI_LobbyBase_parameters.hpp"


namespace SDK
{

// Function UI_LobbyBase.UI_LobbyBase_C.TicketActivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ProductSku                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::TicketActivated__DelegateSignature(const class FString& ProductSku)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "TicketActivated__DelegateSignature");

	Params::UI_LobbyBase_C_TicketActivated__DelegateSignature Parms{};

	Parms.ProductSku = std::move(ProductSku);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.ExecuteUbergraph_UI_LobbyBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::ExecuteUbergraph_UI_LobbyBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "ExecuteUbergraph_UI_LobbyBase");

	Params::UI_LobbyBase_C_ExecuteUbergraph_UI_LobbyBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.SetBoosterState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBoosterTypes                           Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OrderedCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalActiveCount                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TicketsUsed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::SetBoosterState(EBoosterTypes Booster, int32 OrderedCount, int32 TotalActiveCount, int32 MaxCount, int32 TicketsUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "SetBoosterState");

	Params::UI_LobbyBase_C_SetBoosterState Parms{};

	Parms.Booster = Booster;
	Parms.OrderedCount = OrderedCount;
	Parms.TotalActiveCount = TotalActiveCount;
	Parms.MaxCount = MaxCount;
	Parms.TicketsUsed = TicketsUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.LockLobby
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::LockLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "LockLobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.LeaveLobby
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::LeaveLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "LeaveLobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.SetRemainingTime
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::SetRemainingTime(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "SetRemainingTime");

	Params::UI_LobbyBase_C_SetRemainingTime Parms{};

	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.SetRemainingTimeEncounter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::SetRemainingTimeEncounter(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "SetRemainingTimeEncounter");

	Params::UI_LobbyBase_C_SetRemainingTimeEncounter Parms{};

	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.UpdateHCs
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::UpdateHCs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "UpdateHCs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.RefreshReadyUI
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           ReadyIDs                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_LobbyBase_C::RefreshReadyUI(const TArray<int32>& ReadyIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "RefreshReadyUI");

	Params::UI_LobbyBase_C_RefreshReadyUI Parms{};

	Parms.ReadyIDs = std::move(ReadyIDs);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.OnBoosterTicketActivationResponse
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FBoosterDetails                  Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_LobbyBase_C::OnBoosterTicketActivationResponse(const struct FCloudRequestResult& RequestResult, const struct FBoosterDetails& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "OnBoosterTicketActivationResponse");

	Params::UI_LobbyBase_C_OnBoosterTicketActivationResponse Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.ActivateBoosterTicket
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Product_Sku                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Count                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::ActivateBoosterTicket(const class FString& Product_Sku, const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "ActivateBoosterTicket");

	Params::UI_LobbyBase_C_ActivateBoosterTicket Parms{};

	Parms.Product_Sku = std::move(Product_Sku);
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.FetchLocalUserCloudInfo
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::FetchLocalUserCloudInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "FetchLocalUserCloudInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.BuyPersonalTicket
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                BoosterType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::BuyPersonalTicket(EBooster BoosterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BuyPersonalTicket");

	Params::UI_LobbyBase_C_BuyPersonalTicket Parms{};

	Parms.BoosterType = BoosterType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.ClosePersonalBoosterSubmenu
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::ClosePersonalBoosterSubmenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "ClosePersonalBoosterSubmenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.OpenPersonalBoosterSubMenu
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::OpenPersonalBoosterSubMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "OpenPersonalBoosterSubMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.GamemenuHolded
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::GamemenuHolded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GamemenuHolded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.GamemenuReleased
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::GamemenuReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GamemenuReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.GamemenuPressed
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::GamemenuPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GamemenuPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.OnGameMenuClosed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFlameWidget*                     FlameWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::OnGameMenuClosed(class UFlameWidget* FlameWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "OnGameMenuClosed");

	Params::UI_LobbyBase_C_OnGameMenuClosed Parms{};

	Parms.FlameWidget = FlameWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.OpenGameMenuInLobby
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::OpenGameMenuInLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "OpenGameMenuInLobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPSetBoosterState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OrderedCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalActiveCount                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TicketsUsed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::BPSetBoosterState(EBooster Booster, int32 OrderedCount, int32 TotalActiveCount, int32 MaxCount, int32 TicketsUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPSetBoosterState");

	Params::UI_LobbyBase_C_BPSetBoosterState Parms{};

	Parms.Booster = Booster;
	Parms.OrderedCount = OrderedCount;
	Parms.TotalActiveCount = TotalActiveCount;
	Parms.MaxCount = MaxCount;
	Parms.TicketsUsed = TicketsUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.TryAgain
// (BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::TryAgain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "TryAgain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_LobbyBase_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_LobbyBase_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPSet Remaining Time
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::BPSet_Remaining_Time(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPSet Remaining Time");

	Params::UI_LobbyBase_C_BPSet_Remaining_Time Parms{};

	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.GetBoosterCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBooster                                Booster                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Cost                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Cost_before_discount                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DiscountPercent                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::GetBoosterCost(const EBooster Booster, int32* Cost, int32* Cost_before_discount, int32* DiscountPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GetBoosterCost");

	Params::UI_LobbyBase_C_GetBoosterCost Parms{};

	Parms.Booster = Booster;

	UObject::ProcessEvent(Func, &Parms);

	if (Cost != nullptr)
		*Cost = Parms.Cost;

	if (Cost_before_discount != nullptr)
		*Cost_before_discount = Parms.Cost_before_discount;

	if (DiscountPercent != nullptr)
		*DiscountPercent = Parms.DiscountPercent;
}


// Function UI_LobbyBase.UI_LobbyBase_C.Get Current Total HC Cost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UUI_LobbyBase_C::Get_Current_Total_HC_Cost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "Get Current Total HC Cost");

	Params::UI_LobbyBase_C_Get_Current_Total_HC_Cost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPLock Lobby
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::BPLock_Lobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPLock Lobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPLeave Lobby
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::BPLeave_Lobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPLeave Lobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPSet Remaining Time Encounter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::BPSet_Remaining_Time_Encounter(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPSet Remaining Time Encounter");

	Params::UI_LobbyBase_C_BPSet_Remaining_Time_Encounter Parms{};

	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.GetTotalHardCurrency
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TotalHC                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::GetTotalHardCurrency(int32* TotalHC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GetTotalHardCurrency");

	Params::UI_LobbyBase_C_GetTotalHardCurrency Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TotalHC != nullptr)
		*TotalHC = Parms.TotalHC;
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPUpdate HCs
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::BPUpdate_HCs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPUpdate HCs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.OpenCheatMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::OpenCheatMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "OpenCheatMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.IsPlayerInGroup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_LobbyBase_C::IsPlayerInGroup(bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "IsPlayerInGroup");

	Params::UI_LobbyBase_C_IsPlayerInGroup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function UI_LobbyBase.UI_LobbyBase_C.DebugLobbyMsg
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsError                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_LobbyBase_C::DebugLobbyMsg(const class FString& Message, bool IsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "DebugLobbyMsg");

	Params::UI_LobbyBase_C_DebugLobbyMsg Parms{};

	Parms.Message = std::move(Message);
	Parms.IsError = IsError;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.GetMaxBoosterCountPerPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBooster                                Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxCount                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::GetMaxBoosterCountPerPlayer(EBooster Booster, int32* MaxCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GetMaxBoosterCountPerPlayer");

	Params::UI_LobbyBase_C_GetMaxBoosterCountPerPlayer Parms{};

	Parms.Booster = Booster;

	UObject::ProcessEvent(Func, &Parms);

	if (MaxCount != nullptr)
		*MaxCount = Parms.MaxCount;
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPRefresh Ready UI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           ReadyIDs                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_LobbyBase_C::BPRefresh_Ready_UI(TArray<int32>& ReadyIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPRefresh Ready UI");

	Params::UI_LobbyBase_C_BPRefresh_Ready_UI Parms{};

	Parms.ReadyIDs = std::move(ReadyIDs);

	UObject::ProcessEvent(Func, &Parms);

	ReadyIDs = std::move(Parms.ReadyIDs);
}


// Function UI_LobbyBase.UI_LobbyBase_C.BPGet Activated Amount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBooster                                Booster                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountActivated                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::BPGet_Activated_Amount(const EBooster Booster, int32* AmountActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "BPGet Activated Amount");

	Params::UI_LobbyBase_C_BPGet_Activated_Amount Parms{};

	Parms.Booster = Booster;

	UObject::ProcessEvent(Func, &Parms);

	if (AmountActivated != nullptr)
		*AmountActivated = Parms.AmountActivated;
}


// Function UI_LobbyBase.UI_LobbyBase_C.SetActivatedAmount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                Booster                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountActivated                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::SetActivatedAmount(const EBooster Booster, int32 AmountActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "SetActivatedAmount");

	Params::UI_LobbyBase_C_SetActivatedAmount Parms{};

	Parms.Booster = Booster;
	Parms.AmountActivated = AmountActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.SetFeaturedPlayers
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_LobbyBase_C::SetFeaturedPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "SetFeaturedPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LobbyBase.UI_LobbyBase_C.SetFocusToBooster
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LobbyBase_C::SetFocusToBooster(EBooster Booster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "SetFocusToBooster");

	Params::UI_LobbyBase_C_SetFocusToBooster Parms{};

	Parms.Booster = Booster;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.Get Personal Ticket State
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBoosterDetails                  BoosterDetail                                          (Parm, OutParm)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_LobbyBase_C::Get_Personal_Ticket_State(EBooster Booster, struct FBoosterDetails* BoosterDetail, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "Get Personal Ticket State");

	Params::UI_LobbyBase_C_Get_Personal_Ticket_State Parms{};

	Parms.Booster = Booster;

	UObject::ProcessEvent(Func, &Parms);

	if (BoosterDetail != nullptr)
		*BoosterDetail = std::move(Parms.BoosterDetail);

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function UI_LobbyBase.UI_LobbyBase_C.GetLocalPlayerCloudInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FUserCloudInfo                   User_Cloud_Info                                        (Parm, OutParm)

void UUI_LobbyBase_C::GetLocalPlayerCloudInfo(bool* Found, struct FUserCloudInfo* User_Cloud_Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GetLocalPlayerCloudInfo");

	Params::UI_LobbyBase_C_GetLocalPlayerCloudInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (User_Cloud_Info != nullptr)
		*User_Cloud_Info = std::move(Parms.User_Cloud_Info);
}


// Function UI_LobbyBase.UI_LobbyBase_C.UpdatePersonalBoosterIndicators
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUserCloudInfo                   UserCloudInfo                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_LobbyBase_C::UpdatePersonalBoosterIndicators(const struct FUserCloudInfo& UserCloudInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "UpdatePersonalBoosterIndicators");

	Params::UI_LobbyBase_C_UpdatePersonalBoosterIndicators Parms{};

	Parms.UserCloudInfo = std::move(UserCloudInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LobbyBase.UI_LobbyBase_C.CanBuyPersonalTicket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBooster                                InputPin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_LobbyBase_C::CanBuyPersonalTicket(const EBooster InputPin, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "CanBuyPersonalTicket");

	Params::UI_LobbyBase_C_CanBuyPersonalTicket Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function UI_LobbyBase.UI_LobbyBase_C.GetActivatedAmountCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBoosterTypes                           Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UUI_LobbyBase_C::GetActivatedAmountCPP(EBoosterTypes Booster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyBase_C", "GetActivatedAmountCPP");

	Params::UI_LobbyBase_C_GetActivatedAmountCPP Parms{};

	Parms.Booster = Booster;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

