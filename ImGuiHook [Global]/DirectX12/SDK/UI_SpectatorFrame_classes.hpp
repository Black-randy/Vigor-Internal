#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SpectatorFrame

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_SpectatorFrame.UI_SpectatorFrame_C
// 0x0370 (0x0628 - 0x02B8)
class UUI_SpectatorFrame_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_HorizontalCompass_C*                Compass;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Controls_hBox;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_B_L;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_B_R;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_T_L;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_T_R;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                CycleLeft_Button;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                CycleRight_Button;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         DisableTeamkillerRichText;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                LevelMap_Button;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LevelMap_Overlay;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        LootingInteractingIndicator;                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_MapShadow;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                Scoreboard_Button;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ScoreboardBack_Button;                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Scoreboardholder_Overlay;                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone;                                  // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionWidget_DisableTeamkiller;          // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KillersName_C*                      UI_KillersName;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_LeaveMatch_C*                       UI_LeaveMatch;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Spectator_HealthBar_C*              UI_Spectator_HealthBar;                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Spectator_WatchedPlayer_C*          UI_Spectator_WatchedPlayer;                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SpectatorWaterMark_C*               UI_SpectatorWaterMark;                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_HUD_C*                              UI_HUD;                                            // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ZoomableLevelMap_C*                 LevelMapWidget;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UVOffsetsLevelMap;                                 // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KillerNameCanBeShown;                              // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanCyclePlayers;                                   // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GameInfo_MainTab_C*                 UI_Scoreboard;                                     // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScoreboardCanScroll;                               // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScoreboardScrollCooldown;                          // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameMenu_open;                                     // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanLeaveMatch;                                     // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowMouse;                                         // 0x03B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldReturnFocus;                                 // 0x03B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBlockStyle                        Nickname_Style;                                    // 0x03B8(0x0270)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_SpectatorFrame(int32 EntryPoint);
	void ClearOtherWidgets();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void On_game_menu_closed(class UFlameWidget* FlameWidget);
	void OnGameMenu();
	void BndEvt__CycleRight_Button_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature();
	void BndEvt__CycleLeft_Button_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature();
	void OnCloseMapPressed();
	void Refresh_Spectator_UI();
	void Widget_Initialized();
	void UpdateSpectatorMessage();
	void OnCancelPressed();
	void Destruct();
	void Construct();
	void OverrideMaxChallengeListCount();
	void BndEvt__CycleRight_Button_1_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void Check_If_Teams_GameMode();
	void Close_Scoreboard();
	void Open_Scoreboard();
	void Update_Scoreboard();
	void BndEvt__Scoreboard_Button_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature();
	void Check_If_Spectator_Is_Your_Teamkiller();
	void Close_Teamkiller_Toggle_Widget();
	void BndEvt__UI_GamepadActionWidget_DisableTeamkiller_K2Node_ComponentBoundEvent_0_OnActionHoldEvent__DelegateSignature();
	void ShowInteracting();
	void IsWorldSpectatorYourTeamkiller(class ABP_WorldSpectator_C* WorldSpectator, bool* Output);
	void DisableTeamkillerStatusFromMyTeamkiller();
	void ToggleLevelMap();
	void Check_Player_Cycle_Posibility();
	void Check_Player_Has_Map_Tool();
	void Check_Controlls_Visible();
	void Toggle_visibility_of_cycle_buttons(bool Should_be_visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_SpectatorFrame_C">();
	}
	static class UUI_SpectatorFrame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_SpectatorFrame_C>();
	}
};
static_assert(alignof(UUI_SpectatorFrame_C) == 0x000008, "Wrong alignment on UUI_SpectatorFrame_C");
static_assert(sizeof(UUI_SpectatorFrame_C) == 0x000628, "Wrong size on UUI_SpectatorFrame_C");
static_assert(offsetof(UUI_SpectatorFrame_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_SpectatorFrame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Compass) == 0x0002C0, "Member 'UUI_SpectatorFrame_C::Compass' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Controls_hBox) == 0x0002C8, "Member 'UUI_SpectatorFrame_C::Controls_hBox' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Corner_B_L) == 0x0002D0, "Member 'UUI_SpectatorFrame_C::Corner_B_L' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Corner_B_R) == 0x0002D8, "Member 'UUI_SpectatorFrame_C::Corner_B_R' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Corner_T_L) == 0x0002E0, "Member 'UUI_SpectatorFrame_C::Corner_T_L' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Corner_T_R) == 0x0002E8, "Member 'UUI_SpectatorFrame_C::Corner_T_R' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, CycleLeft_Button) == 0x0002F0, "Member 'UUI_SpectatorFrame_C::CycleLeft_Button' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, CycleRight_Button) == 0x0002F8, "Member 'UUI_SpectatorFrame_C::CycleRight_Button' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, DisableTeamkillerRichText) == 0x000300, "Member 'UUI_SpectatorFrame_C::DisableTeamkillerRichText' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, LevelMap_Button) == 0x000308, "Member 'UUI_SpectatorFrame_C::LevelMap_Button' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, LevelMap_Overlay) == 0x000310, "Member 'UUI_SpectatorFrame_C::LevelMap_Overlay' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, LootingInteractingIndicator) == 0x000318, "Member 'UUI_SpectatorFrame_C::LootingInteractingIndicator' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Overlay_MapShadow) == 0x000320, "Member 'UUI_SpectatorFrame_C::Overlay_MapShadow' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Scoreboard_Button) == 0x000328, "Member 'UUI_SpectatorFrame_C::Scoreboard_Button' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, ScoreboardBack_Button) == 0x000330, "Member 'UUI_SpectatorFrame_C::ScoreboardBack_Button' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Scoreboardholder_Overlay) == 0x000338, "Member 'UUI_SpectatorFrame_C::Scoreboardholder_Overlay' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_FlameSafezone) == 0x000340, "Member 'UUI_SpectatorFrame_C::UI_FlameSafezone' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_GamepadActionWidget_DisableTeamkiller) == 0x000348, "Member 'UUI_SpectatorFrame_C::UI_GamepadActionWidget_DisableTeamkiller' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_KillersName) == 0x000350, "Member 'UUI_SpectatorFrame_C::UI_KillersName' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_LeaveMatch) == 0x000358, "Member 'UUI_SpectatorFrame_C::UI_LeaveMatch' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_Spectator_HealthBar) == 0x000360, "Member 'UUI_SpectatorFrame_C::UI_Spectator_HealthBar' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_Spectator_WatchedPlayer) == 0x000368, "Member 'UUI_SpectatorFrame_C::UI_Spectator_WatchedPlayer' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_SpectatorWaterMark) == 0x000370, "Member 'UUI_SpectatorFrame_C::UI_SpectatorWaterMark' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_HUD) == 0x000378, "Member 'UUI_SpectatorFrame_C::UI_HUD' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, LevelMapWidget) == 0x000380, "Member 'UUI_SpectatorFrame_C::LevelMapWidget' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UVOffsetsLevelMap) == 0x000388, "Member 'UUI_SpectatorFrame_C::UVOffsetsLevelMap' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, KillerNameCanBeShown) == 0x000398, "Member 'UUI_SpectatorFrame_C::KillerNameCanBeShown' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, CanCyclePlayers) == 0x000399, "Member 'UUI_SpectatorFrame_C::CanCyclePlayers' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, UI_Scoreboard) == 0x0003A0, "Member 'UUI_SpectatorFrame_C::UI_Scoreboard' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, ScoreboardCanScroll) == 0x0003A8, "Member 'UUI_SpectatorFrame_C::ScoreboardCanScroll' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, ScoreboardScrollCooldown) == 0x0003AC, "Member 'UUI_SpectatorFrame_C::ScoreboardScrollCooldown' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, GameMenu_open) == 0x0003B0, "Member 'UUI_SpectatorFrame_C::GameMenu_open' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, CanLeaveMatch) == 0x0003B1, "Member 'UUI_SpectatorFrame_C::CanLeaveMatch' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, ShowMouse) == 0x0003B2, "Member 'UUI_SpectatorFrame_C::ShowMouse' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, ShouldReturnFocus) == 0x0003B3, "Member 'UUI_SpectatorFrame_C::ShouldReturnFocus' has a wrong offset!");
static_assert(offsetof(UUI_SpectatorFrame_C, Nickname_Style) == 0x0003B8, "Member 'UUI_SpectatorFrame_C::Nickname_Style' has a wrong offset!");

}

