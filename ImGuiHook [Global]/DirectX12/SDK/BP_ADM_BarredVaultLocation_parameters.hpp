#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_BarredVaultLocation

#include "Basic.hpp"

#include "F_ADM_BarredWindow_structs.hpp"
#include "F_ADM_BarredDoor_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.ExecuteUbergraph_BP_ADM_BarredVaultLocation
// 0x0088 (0x0088 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditorRebuildDataStorage*              K2Node_Event_Data_1;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, float>                      K2Node_Event_Data;                                 // 0x0010(0x0050)(ConstParm)
	TArray<class ABP_ADM_BarredVaultLocation_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation) == 0x000008, "Wrong alignment on BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation) == 0x000088, "Wrong size on BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, EntryPoint) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, K2Node_Event_Data_1) == 0x000008, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::K2Node_Event_Data_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, K2Node_Event_Data) == 0x000010, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::K2Node_Event_Data' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_ADM_BarredVaultLocation_C_ExecuteUbergraph_BP_ADM_BarredVaultLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.PostRebuildBuildings
// 0x0050 (0x0050 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_PostRebuildBuildings final
{
public:
	TMap<class FName, float>                      Data;                                              // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_PostRebuildBuildings) == 0x000008, "Wrong alignment on BP_ADM_BarredVaultLocation_C_PostRebuildBuildings");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_PostRebuildBuildings) == 0x000050, "Wrong size on BP_ADM_BarredVaultLocation_C_PostRebuildBuildings");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_PostRebuildBuildings, Data) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_PostRebuildBuildings::Data' has a wrong offset!");

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.PreRebuildBuildings
// 0x0008 (0x0008 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_PreRebuildBuildings final
{
public:
	class UEditorRebuildDataStorage*              Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_PreRebuildBuildings) == 0x000008, "Wrong alignment on BP_ADM_BarredVaultLocation_C_PreRebuildBuildings");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_PreRebuildBuildings) == 0x000008, "Wrong size on BP_ADM_BarredVaultLocation_C_PreRebuildBuildings");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_PreRebuildBuildings, Data) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_PreRebuildBuildings::Data' has a wrong offset!");

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.UserConstructionScript
// 0x0088 (0x0088 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_1;           // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ADM_BarredVaultLocation_C_UserConstructionScript");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_UserConstructionScript) == 0x000088, "Wrong size on BP_ADM_BarredVaultLocation_C_UserConstructionScript");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue_1) == 0x000028, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000050, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue_1) == 0x000058, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000068, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, K2Node_DynamicCast_AsMaterial_Interface) == 0x000078, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000081, "Member 'BP_ADM_BarredVaultLocation_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.Update Door References
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_Update_Door_References final
{
public:
	struct FDoorReference                         Door;                                              // 0x0000(0x0060)(Edit, BlueprintVisible)
	bool                                          HasIssues;                                         // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FF_ADM_BarredDoor>              Starting_Door_References;                          // 0x0068(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateDoorReference_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_Update_Door_References) == 0x000010, "Wrong alignment on BP_ADM_BarredVaultLocation_C_Update_Door_References");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_Update_Door_References) == 0x0000E0, "Wrong size on BP_ADM_BarredVaultLocation_C_Update_Door_References");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, Door) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::Door' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, HasIssues) == 0x000060, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::HasIssues' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, Starting_Door_References) == 0x000068, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::Starting_Door_References' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000A0, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Array_AddUnique_ReturnValue) == 0x0000D0, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_UpdateDoorReference_ReturnValue) == 0x0000D4, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_UpdateDoorReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_Not_PreBool_ReturnValue) == 0x0000D5, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Door_References, CallFunc_BooleanOR_ReturnValue) == 0x0000D6, "Member 'BP_ADM_BarredVaultLocation_C_Update_Door_References::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.Update Window References
// 0x0058 (0x0058 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_Update_Window_References final
{
public:
	TArray<struct FF_ADM_BarredWindow>            Starting_Window_References;                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateWindowReference_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_Update_Window_References) == 0x000008, "Wrong alignment on BP_ADM_BarredVaultLocation_C_Update_Window_References");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_Update_Window_References) == 0x000058, "Wrong size on BP_ADM_BarredVaultLocation_C_Update_Window_References");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, Starting_Window_References) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::Starting_Window_References' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_Array_AddUnique_ReturnValue) == 0x000048, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Update_Window_References, CallFunc_UpdateWindowReference_ReturnValue) == 0x000050, "Member 'BP_ADM_BarredVaultLocation_C_Update_Window_References::CallFunc_UpdateWindowReference_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.Draw Debug Lines
// 0x0270 (0x0270 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines final
{
public:
	float                                         Sphere_Altitude;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Upper_Altitude;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Vault_Color;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vault_Sphere_Location;                             // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vault_Upper_Location;                              // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vault_Location;                                    // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Object_Sphere_Location;                            // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Object_Upper_Location;                             // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Object_Location;                                   // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Window_Color;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sphere_Segments;                                   // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sphere_Radius;                                     // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Line_Thickness;                                    // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Door_Color;                                        // 0x007C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arrow_Size;                                        // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arrow_Thickness;                                   // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_ADM_BarredWindow                    CallFunc_Array_Get_Item;                           // 0x0150(0x0070)(HasGetValueTypeHash)
	struct FF_ADM_BarredDoor                      CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0070)(HasGetValueTypeHash)
	class AWindow*                                CallFunc_ResolveWindowReference_ReturnValue;       // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoor*                                  CallFunc_ResolveDoorReference_ReturnValue;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines) == 0x000010, "Wrong alignment on BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines) == 0x000270, "Wrong size on BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Sphere_Altitude) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Sphere_Altitude' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Upper_Altitude) == 0x000004, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Upper_Altitude' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Vault_Color) == 0x000008, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Vault_Color' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Vault_Sphere_Location) == 0x000018, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Vault_Sphere_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Vault_Upper_Location) == 0x000024, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Vault_Upper_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Vault_Location) == 0x000030, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Vault_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Object_Sphere_Location) == 0x00003C, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Object_Sphere_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Object_Upper_Location) == 0x000048, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Object_Upper_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Object_Location) == 0x000054, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Object_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Window_Color) == 0x000060, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Window_Color' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Sphere_Segments) == 0x000070, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Sphere_Segments' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Sphere_Radius) == 0x000074, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Sphere_Radius' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Line_Thickness) == 0x000078, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Line_Thickness' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Door_Color) == 0x00007C, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Door_Color' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Arrow_Size) == 0x00008C, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Arrow_Size' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Arrow_Thickness) == 0x000090, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Arrow_Thickness' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Duration) == 0x000094, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Duration' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, Temp_int_Array_Index_Variable_1) == 0x0000AC, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_MakeVector_ReturnValue_1) == 0x0000BC, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_MakeVector_ReturnValue_2) == 0x0000E0, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_MakeVector_ReturnValue_3) == 0x0000EC, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000F8, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000104, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_MakeVector_ReturnValue_4) == 0x000110, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_MakeVector_ReturnValue_5) == 0x00011C, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000128, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000134, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_ResolveWindowReference_ReturnValue) == 0x000230, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_ResolveWindowReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_ResolveDoorReference_ReturnValue) == 0x000238, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_ResolveDoorReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_IsValid_ReturnValue) == 0x000240, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_IsValid_ReturnValue_1) == 0x000241, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000244, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000250, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Array_Length_ReturnValue) == 0x00025C, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Array_Length_ReturnValue_1) == 0x000260, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Less_IntInt_ReturnValue) == 0x000264, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines, CallFunc_Less_IntInt_ReturnValue_1) == 0x000265, "Member 'BP_ADM_BarredVaultLocation_C_Draw_Debug_Lines::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C.GetRebuildReferencedTags
// 0x0160 (0x0160 - 0x0000)
struct BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags final
{
public:
	TSet<class FName>                             OutNames;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_ADM_BarredWindow                    CallFunc_Array_Get_Item;                           // 0x0070(0x0070)(HasGetValueTypeHash)
	struct FF_ADM_BarredDoor                      CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags) == 0x000010, "Wrong alignment on BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags");
static_assert(sizeof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags) == 0x000160, "Wrong size on BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, OutNames) == 0x000000, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::OutNames' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Array_Length_ReturnValue_1) == 0x000154, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags, CallFunc_Less_IntInt_ReturnValue_1) == 0x000159, "Member 'BP_ADM_BarredVaultLocation_C_GetRebuildReferencedTags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

