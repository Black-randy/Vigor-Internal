#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Cheat_Button_Weapon

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Cheat_Button_Weapon.UI_Cheat_Button_Weapon_C
// 0x05E0 (0x08B8 - 0x02D8)
class UUI_Cheat_Button_Weapon_C final : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Border;                                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           Button;                                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSlotBG;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WeaponImg;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        WeaponName;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FFirearmWeaponConfiguration            WeaponInfo;                                        // 0x0308(0x0418)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            NormalStyle;                                       // 0x0720(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HoverStyle;                                        // 0x07A8(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            PressedStyle;                                      // 0x0830(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_Cheat_Button_Weapon(int32 EntryPoint);
	void BndEvt__Button_K2Node_ComponentBoundEvent_2_OnButtonFocusEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature(class UButton* Sender);
	void Construct();
	void BndEvt__FlameButton_0_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature(class UButton* Sender);
	void GiveWeapon();
	void GiveAmmo(int32 AmmoCount);
	struct FSlateBrush SetBorderColor();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Cheat_Button_Weapon_C">();
	}
	static class UUI_Cheat_Button_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Cheat_Button_Weapon_C>();
	}
};
static_assert(alignof(UUI_Cheat_Button_Weapon_C) == 0x000008, "Wrong alignment on UUI_Cheat_Button_Weapon_C");
static_assert(sizeof(UUI_Cheat_Button_Weapon_C) == 0x0008B8, "Wrong size on UUI_Cheat_Button_Weapon_C");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, UberGraphFrame) == 0x0002D8, "Member 'UUI_Cheat_Button_Weapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, Border) == 0x0002E0, "Member 'UUI_Cheat_Button_Weapon_C::Border' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, Button) == 0x0002E8, "Member 'UUI_Cheat_Button_Weapon_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, ItemSlotBG) == 0x0002F0, "Member 'UUI_Cheat_Button_Weapon_C::ItemSlotBG' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, WeaponImg) == 0x0002F8, "Member 'UUI_Cheat_Button_Weapon_C::WeaponImg' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, WeaponName) == 0x000300, "Member 'UUI_Cheat_Button_Weapon_C::WeaponName' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, WeaponInfo) == 0x000308, "Member 'UUI_Cheat_Button_Weapon_C::WeaponInfo' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, NormalStyle) == 0x000720, "Member 'UUI_Cheat_Button_Weapon_C::NormalStyle' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, HoverStyle) == 0x0007A8, "Member 'UUI_Cheat_Button_Weapon_C::HoverStyle' has a wrong offset!");
static_assert(offsetof(UUI_Cheat_Button_Weapon_C, PressedStyle) == 0x000830, "Member 'UUI_Cheat_Button_Weapon_C::PressedStyle' has a wrong offset!");

}

