#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Scoreboard_Row

#include "Basic.hpp"

#include "Struct_ScoreboardRow_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Scoreboard_Row.UI_Scoreboard_Row_C
// 0x05F8 (0x08B0 - 0x02B8)
class UUI_Scoreboard_Row_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background_Image;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CustomImage_Image;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Blocked;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Place_Text;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_123;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           Row_FlameButton;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RowSelected_Image;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PlayerNickname_C*                   UI_PlayerNickname;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Value_Text;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ScoreboardRow                  RowData;                                           // 0x0310(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBlockStyle                        NicknameStylePlayer;                               // 0x0388(0x0270)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTextBlockStyle                        NicknameStyleOtherPlayer;                          // 0x05F8(0x0270)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsPlayer;                                          // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CustomColor;                                       // 0x0870(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Player_Tracking_ID;                                // 0x0898(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Is_blocked;                                        // 0x08A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_Scoreboard_Row(int32 EntryPoint);
	void OnBlocklistUpdated(const class FString& Reason_For_Update);
	void BndEvt__UI_Scoreboard_Row_FlameButton_62_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_Scoreboard_Row_FlameButton_62_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void Initialize_Row(int32 Index_0, const struct FStruct_ScoreboardRow& RowData_0);
	void Set_Selected(bool IsSelected_0);
	void HighlightSelected(bool IsSelected_0);
	void FindPlayerStateByPlayerID(int32 Player_ID, class APlayerState** PlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Scoreboard_Row_C">();
	}
	static class UUI_Scoreboard_Row_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Scoreboard_Row_C>();
	}
};
static_assert(alignof(UUI_Scoreboard_Row_C) == 0x000008, "Wrong alignment on UUI_Scoreboard_Row_C");
static_assert(sizeof(UUI_Scoreboard_Row_C) == 0x0008B0, "Wrong size on UUI_Scoreboard_Row_C");
static_assert(offsetof(UUI_Scoreboard_Row_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_Scoreboard_Row_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, Background_Image) == 0x0002C0, "Member 'UUI_Scoreboard_Row_C::Background_Image' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, CustomImage_Image) == 0x0002C8, "Member 'UUI_Scoreboard_Row_C::CustomImage_Image' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, Icon_Blocked) == 0x0002D0, "Member 'UUI_Scoreboard_Row_C::Icon_Blocked' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, Place_Text) == 0x0002D8, "Member 'UUI_Scoreboard_Row_C::Place_Text' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, RichTextBlock_123) == 0x0002E0, "Member 'UUI_Scoreboard_Row_C::RichTextBlock_123' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, Row_FlameButton) == 0x0002E8, "Member 'UUI_Scoreboard_Row_C::Row_FlameButton' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, RowSelected_Image) == 0x0002F0, "Member 'UUI_Scoreboard_Row_C::RowSelected_Image' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, UI_PlayerNickname) == 0x0002F8, "Member 'UUI_Scoreboard_Row_C::UI_PlayerNickname' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, Value_Text) == 0x000300, "Member 'UUI_Scoreboard_Row_C::Value_Text' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, IsSelected) == 0x000308, "Member 'UUI_Scoreboard_Row_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, RowData) == 0x000310, "Member 'UUI_Scoreboard_Row_C::RowData' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, RowIndex) == 0x000380, "Member 'UUI_Scoreboard_Row_C::RowIndex' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, NicknameStylePlayer) == 0x000388, "Member 'UUI_Scoreboard_Row_C::NicknameStylePlayer' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, NicknameStyleOtherPlayer) == 0x0005F8, "Member 'UUI_Scoreboard_Row_C::NicknameStyleOtherPlayer' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, IsPlayer) == 0x000868, "Member 'UUI_Scoreboard_Row_C::IsPlayer' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, CustomColor) == 0x000870, "Member 'UUI_Scoreboard_Row_C::CustomColor' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, Player_Tracking_ID) == 0x000898, "Member 'UUI_Scoreboard_Row_C::Player_Tracking_ID' has a wrong offset!");
static_assert(offsetof(UUI_Scoreboard_Row_C, Is_blocked) == 0x0008A8, "Member 'UUI_Scoreboard_Row_C::Is_blocked' has a wrong offset!");

}

