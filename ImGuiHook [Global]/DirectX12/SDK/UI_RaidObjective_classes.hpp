#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RaidObjective

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "ERaidObjectiveState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_RaidObjective.UI_RaidObjective_C
// 0x0040 (0x02F8 - 0x02B8)
class UUI_RaidObjective_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeInOut;                                         // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           AttackerProgress;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           DefenderProgress;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObjectiveState_Text;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Progress_Text;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_RaidObjective_C*                    Objective;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Update_UI;                                         // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ERaidObjectiveState                           Current_state;                                     // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeInOutPlaybackSpeed;                            // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_RaidObjective(int32 EntryPoint);
	void Destroy_Widget();
	void Player_Left_Objective();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_UI_Values();
	void Set_Progress(float Defender_Progress, float Attacker_Progress);
	void Set_State(ERaidObjectiveState Objective_State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_RaidObjective_C">();
	}
	static class UUI_RaidObjective_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_RaidObjective_C>();
	}
};
static_assert(alignof(UUI_RaidObjective_C) == 0x000008, "Wrong alignment on UUI_RaidObjective_C");
static_assert(sizeof(UUI_RaidObjective_C) == 0x0002F8, "Wrong size on UUI_RaidObjective_C");
static_assert(offsetof(UUI_RaidObjective_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_RaidObjective_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, FadeInOut) == 0x0002C0, "Member 'UUI_RaidObjective_C::FadeInOut' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, AttackerProgress) == 0x0002C8, "Member 'UUI_RaidObjective_C::AttackerProgress' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, DefenderProgress) == 0x0002D0, "Member 'UUI_RaidObjective_C::DefenderProgress' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, ObjectiveState_Text) == 0x0002D8, "Member 'UUI_RaidObjective_C::ObjectiveState_Text' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, Progress_Text) == 0x0002E0, "Member 'UUI_RaidObjective_C::Progress_Text' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, Objective) == 0x0002E8, "Member 'UUI_RaidObjective_C::Objective' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, Update_UI) == 0x0002F0, "Member 'UUI_RaidObjective_C::Update_UI' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, Current_state) == 0x0002F1, "Member 'UUI_RaidObjective_C::Current_state' has a wrong offset!");
static_assert(offsetof(UUI_RaidObjective_C, FadeInOutPlaybackSpeed) == 0x0002F4, "Member 'UUI_RaidObjective_C::FadeInOutPlaybackSpeed' has a wrong offset!");

}

