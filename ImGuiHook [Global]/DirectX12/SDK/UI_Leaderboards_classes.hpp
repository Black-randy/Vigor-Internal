#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Leaderboards

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "FlameUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Leaderboards.UI_Leaderboards_C
// 0x0190 (0x0448 - 0x02B8)
class UUI_Leaderboards_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_InputActionWidget_C*                Down;                                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                First;                                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        FlameTextBlock_Sync;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Spinner;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                Me;                                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                Paging;                                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                Up;                                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FLeaderboardDataRow>            AllTemp;                                           // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             PlayerStatUpdated;                                 // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FLeaderboardDataRow>            Friends;                                           // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FLeaderboardDataRow>            AroundUser;                                        // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FLeaderboardDataRow>            AroundRank;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TotalShown;                                        // 0x0358(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTopRank;                                    // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeaderboardDataRow                    MyCurrentLeaderboardData;                          // 0x0360(0x0098)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentLastRank;                                   // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentLeaderboard;                                // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         DonatedFood;                                       // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestInProgress;                                 // 0x0414(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SyncInProgress;                                    // 0x0415(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WasRequestedFirstLine;                             // 0x0416(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_417[0x1];                                      // 0x0417(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeToNextCall;                                    // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstCall;                                         // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountCall;                                         // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstIndex_;                                       // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex_;                                        // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeaderboardType                              LeaderBoardType;                                   // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MyIndex_;                                          // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateStatsOnCooldown;                             // 0x0434(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             UpdateStatsDelayed;                                // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void PlayerStatUpdated__DelegateSignature(int32 Stats);
	void UpdateStatsDelayed__DelegateSignature();
	void ExecuteUbergraph_UI_Leaderboards(int32 EntryPoint);
	void OnUpdateStatsCooldown();
	void ClearCachedLeaderBoards();
	void DelayInProgress(float Delay, bool Progress);
	void Upppp();
	void Downnnn();
	void Update_Stats();
	void BndEvt__UI_GamepadActionWidget_C_1_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_GamepadActionWidget_C_0_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_GamepadActionWidget_C_144_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_GamepadActionWidget_C_146_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature();
	void Destruct();
	void OnSyncFinished(bool Succeeded, int32 RequestId);
	void OnLeaderboardDataRed(bool Succeeded, int32 RequestId, const struct FLeaderboardReadContext& BoardContext, const struct FLeaderboardData& LeaderboardData);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void CreateRow(const struct FLeaderboardDataRow& LeaderboardDataRow, bool IsMe, bool IsFriend, bool ShowRank, int32 RenumberedRank);
	void FillData(bool ShowFriends);
	void GetFriends();
	void GetAllAroundUser();
	void GetArroundRank(int32 Start_Rank);
	void IsPlayerFriend(const struct FUniqueNetIdRepl& Userid, bool* IsFriend);
	void GetRankLeaderboardPosition(TArray<struct FLeaderboardDataRow>& LeaderboardData, int32 FirstIndex, int32 LastIndex, int32 TestedRank, int32* Result);
	void SetCurrentPlayerLeaderboardData(TArray<struct FLeaderboardDataRow>& LeaderboardRowData);
	void SetLeaderboardName(const class FString& LeaderboardName, int32 DonatedFood_0);
	bool IsPlayerCurrent(const struct FUniqueNetIdRepl& Userid);
	void SetRequestInProgress(bool RequestInProgress_0);
	void SetSyncInProgress(bool SyncInProgress_0);
	void GetStepWaitingStep(float* WaitFor);
	void GetThreePagesWorthOfLeaderBoardsAroundUser();
	void FillData_modif(bool ShowFriends, TArray<struct FLeaderboardDataRow>& LeaderBoardDataRows);
	void DrawUpdateEntries(TArray<struct FLeaderboardDataRow>& LeaderboardData);
	void RemoveLeaderboardContent();
	void UpdateLeaderboardVariables(const TArray<struct FLeaderboardDataRow>& LeaderboardData);
	void FillData_Friends(bool ShowFriends, TArray<struct FLeaderboardDataRow>& LeaderBoardDataRows);
	void UpdateLeaderboardData(ELeaderboardType Selection, TArray<struct FLeaderboardDataRow>& LeaderboardRowData);
	void UpdateScrollOpacity();
	void FakeNumberRank(TArray<struct FLeaderboardDataRow>& Leaderboard, TMap<struct FUniqueNetIdRepl, int32>* Renumbered_IDs);

	struct FTimespan GetCacheDelay() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Leaderboards_C">();
	}
	static class UUI_Leaderboards_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Leaderboards_C>();
	}
};
static_assert(alignof(UUI_Leaderboards_C) == 0x000008, "Wrong alignment on UUI_Leaderboards_C");
static_assert(sizeof(UUI_Leaderboards_C) == 0x000448, "Wrong size on UUI_Leaderboards_C");
static_assert(offsetof(UUI_Leaderboards_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_Leaderboards_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, Down) == 0x0002C0, "Member 'UUI_Leaderboards_C::Down' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, First) == 0x0002C8, "Member 'UUI_Leaderboards_C::First' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, FlameTextBlock_Sync) == 0x0002D0, "Member 'UUI_Leaderboards_C::FlameTextBlock_Sync' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, Image_0) == 0x0002D8, "Member 'UUI_Leaderboards_C::Image_0' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, Image_Spinner) == 0x0002E0, "Member 'UUI_Leaderboards_C::Image_Spinner' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, Me) == 0x0002E8, "Member 'UUI_Leaderboards_C::Me' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, Paging) == 0x0002F0, "Member 'UUI_Leaderboards_C::Paging' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, Up) == 0x0002F8, "Member 'UUI_Leaderboards_C::Up' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, VerticalBox_0) == 0x000300, "Member 'UUI_Leaderboards_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, AllTemp) == 0x000308, "Member 'UUI_Leaderboards_C::AllTemp' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, PlayerStatUpdated) == 0x000318, "Member 'UUI_Leaderboards_C::PlayerStatUpdated' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, Friends) == 0x000328, "Member 'UUI_Leaderboards_C::Friends' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, AroundUser) == 0x000338, "Member 'UUI_Leaderboards_C::AroundUser' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, AroundRank) == 0x000348, "Member 'UUI_Leaderboards_C::AroundRank' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, TotalShown) == 0x000358, "Member 'UUI_Leaderboards_C::TotalShown' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, CurrentTopRank) == 0x00035C, "Member 'UUI_Leaderboards_C::CurrentTopRank' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, MyCurrentLeaderboardData) == 0x000360, "Member 'UUI_Leaderboards_C::MyCurrentLeaderboardData' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, CurrentLastRank) == 0x0003F8, "Member 'UUI_Leaderboards_C::CurrentLastRank' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, CurrentLeaderboard) == 0x000400, "Member 'UUI_Leaderboards_C::CurrentLeaderboard' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, DonatedFood) == 0x000410, "Member 'UUI_Leaderboards_C::DonatedFood' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, RequestInProgress) == 0x000414, "Member 'UUI_Leaderboards_C::RequestInProgress' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, SyncInProgress) == 0x000415, "Member 'UUI_Leaderboards_C::SyncInProgress' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, WasRequestedFirstLine) == 0x000416, "Member 'UUI_Leaderboards_C::WasRequestedFirstLine' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, TimeToNextCall) == 0x000418, "Member 'UUI_Leaderboards_C::TimeToNextCall' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, FirstCall) == 0x00041C, "Member 'UUI_Leaderboards_C::FirstCall' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, CountCall) == 0x000420, "Member 'UUI_Leaderboards_C::CountCall' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, FirstIndex_) == 0x000424, "Member 'UUI_Leaderboards_C::FirstIndex_' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, LastIndex_) == 0x000428, "Member 'UUI_Leaderboards_C::LastIndex_' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, LeaderBoardType) == 0x00042C, "Member 'UUI_Leaderboards_C::LeaderBoardType' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, MyIndex_) == 0x000430, "Member 'UUI_Leaderboards_C::MyIndex_' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, UpdateStatsOnCooldown) == 0x000434, "Member 'UUI_Leaderboards_C::UpdateStatsOnCooldown' has a wrong offset!");
static_assert(offsetof(UUI_Leaderboards_C, UpdateStatsDelayed) == 0x000438, "Member 'UUI_Leaderboards_C::UpdateStatsDelayed' has a wrong offset!");

}

