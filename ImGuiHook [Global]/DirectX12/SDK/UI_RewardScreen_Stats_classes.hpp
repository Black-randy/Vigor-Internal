#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RewardScreen_Stats

#include "Basic.hpp"

#include "S_RewardRow_structs.hpp"
#include "Engine_structs.hpp"
#include "S_RewardRow_Background_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_RewardScreen_Stats.UI_RewardScreen_Stats_C
// 0x00F0 (0x0350 - 0x0260)
class UUI_RewardScreen_Stats_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           Stats_VerticalBox;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         HorizontalPadding;                                 // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VerticalPadding;                                   // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ExternalPadding;                                   // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_RewardRow>                   Rows;                                              // 0x0280(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMap<class FString, class UUI_RewardScreen_Stats_Row_C*> RowsDictionary;                                    // 0x0290(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          LineStyle;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowBackground;                                    // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                BackgroundImage;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BackgroundBorderImage;                             // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundBorderColor;                             // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_RewardRow_Background                BackgroundDefaultData;                             // 0x0318(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_RewardScreen_Stats(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void InitDictionary();
	void SetStatValueByName(const class FText& Stat_Name, int32 Value, bool PlayAnimation_0);
	void SetStatValueByIndex(int32 Stat_Index, int32 Value);
	void InitContent();
	void PlayShowUpAnimationByName(const class FText& RowName);
	void HideStatByName(const class FText& RowName);
	void SetSecondStatValueByName(const class FText& Stat_Name, int32 Value, bool PlayAnimation_0, bool ShowIncreasingEffect);
	void SetStatsNameWidth(float Width);

	float SelectValue(float OverrideValue, float CurrentValue) const;
	void GetDesiredPadding(float Horizontal_Padding, float Vertical_Padding, float* Horizontal_Padding_Result, float* Vertical_Padding_Result) const;
	void GetOverrideParameters(bool Line_Style, bool Show_Background, class UObject* Background_Image, const struct FLinearColor& Background_Color, class UObject* Background_Border_Image, const struct FLinearColor& Background_Border_Color, bool* Final_Line_Style, bool* Final_Show_Background, class UObject** Final_Background_Image, struct FLinearColor* Final_Background_Color, class UObject** Final_Background_Border_Image, struct FLinearColor* Final_Background_Border_Color) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_RewardScreen_Stats_C">();
	}
	static class UUI_RewardScreen_Stats_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_RewardScreen_Stats_C>();
	}
};
static_assert(alignof(UUI_RewardScreen_Stats_C) == 0x000008, "Wrong alignment on UUI_RewardScreen_Stats_C");
static_assert(sizeof(UUI_RewardScreen_Stats_C) == 0x000350, "Wrong size on UUI_RewardScreen_Stats_C");
static_assert(offsetof(UUI_RewardScreen_Stats_C, UberGraphFrame) == 0x000260, "Member 'UUI_RewardScreen_Stats_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, Stats_VerticalBox) == 0x000268, "Member 'UUI_RewardScreen_Stats_C::Stats_VerticalBox' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, HorizontalPadding) == 0x000270, "Member 'UUI_RewardScreen_Stats_C::HorizontalPadding' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, VerticalPadding) == 0x000274, "Member 'UUI_RewardScreen_Stats_C::VerticalPadding' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, ExternalPadding) == 0x000278, "Member 'UUI_RewardScreen_Stats_C::ExternalPadding' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, Rows) == 0x000280, "Member 'UUI_RewardScreen_Stats_C::Rows' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, RowsDictionary) == 0x000290, "Member 'UUI_RewardScreen_Stats_C::RowsDictionary' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, LineStyle) == 0x0002E0, "Member 'UUI_RewardScreen_Stats_C::LineStyle' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, ShowBackground) == 0x0002E1, "Member 'UUI_RewardScreen_Stats_C::ShowBackground' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, BackgroundImage) == 0x0002E8, "Member 'UUI_RewardScreen_Stats_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, BackgroundColor) == 0x0002F0, "Member 'UUI_RewardScreen_Stats_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, BackgroundBorderImage) == 0x000300, "Member 'UUI_RewardScreen_Stats_C::BackgroundBorderImage' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, BackgroundBorderColor) == 0x000308, "Member 'UUI_RewardScreen_Stats_C::BackgroundBorderColor' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_Stats_C, BackgroundDefaultData) == 0x000318, "Member 'UUI_RewardScreen_Stats_C::BackgroundDefaultData' has a wrong offset!");

}

