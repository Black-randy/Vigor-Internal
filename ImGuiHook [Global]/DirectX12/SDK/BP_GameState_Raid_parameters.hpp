#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState_Raid

#include "Basic.hpp"

#include "Struct_RaidStatistics_structs.hpp"
#include "ERaidNotificationType_structs.hpp"
#include "ERaidWinReason_structs.hpp"
#include "E_TeamsMatchPhase_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GameState_Raid.BP_GameState_Raid_C.ExecuteUbergraph_BP_GameState_Raid
// 0x0240 (0x0240 - 0x0000)
struct BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             K2Node_Event_Match_Phase;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_1;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_2;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_2;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_3;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_3;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_4;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_4;  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_5;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_5;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Remaining_Time_3;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_6;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_6;  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Remaining_Time_2;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0100(0x0018)()
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Remaining_Time_1;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Remaining_Time;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_9;          // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_10;         // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F[0x1];                                      // 0x012F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_7;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Raid_C*            K2Node_DynamicCast_AsBP_Player_Controller_Raid_7;  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0158(0x0018)()
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_11;         // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_1;      // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_1;      // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERaidWinReason                                K2Node_CustomEvent_Win_Reason;                     // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19E[0x2];                                      // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_2;                              // 0x01B0(0x0018)()
	class ABP_GameMode_Raid_C*                    K2Node_DynamicCast_AsBP_Game_Mode_Raid;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D3[0x5];                                      // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x01D8(0x0018)()
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_Winner_Found; // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Winning_Team; // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Losing_Team; // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual; // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0210(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x0228(0x0018)()
};
static_assert(alignof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid");
static_assert(sizeof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid) == 0x000240, "Wrong size on BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, EntryPoint) == 0x000000, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_Event_Match_Phase) == 0x000004, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_Event_Match_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_bool_Variable) == 0x000006, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue) == 0x000007, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue) == 0x000008, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000010, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000018, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid) == 0x000020, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_int_Variable) == 0x00002C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000030, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000038, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_bool_Variable_1) == 0x000040, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid_1) == 0x000048, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue_2) == 0x000054, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2) == 0x000058, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid_2) == 0x000060, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue_3) == 0x00006C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000070, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3) == 0x000078, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid_3) == 0x000080, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_int_Variable_1) == 0x00008C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue_4) == 0x000090, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_bool_Variable_2) == 0x000094, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4) == 0x000098, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0000A0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid_4) == 0x0000A8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_4) == 0x0000B0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x0000B1, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue_5) == 0x0000B4, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5) == 0x0000B8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_int_Variable_2) == 0x0000C0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid_5) == 0x0000C8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_5) == 0x0000D0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x0000D1, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_CustomEvent_Remaining_Time_3) == 0x0000D4, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_CustomEvent_Remaining_Time_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue_6) == 0x0000D8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6) == 0x0000E0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid_6) == 0x0000E8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_6) == 0x0000F0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_CustomEvent_Remaining_Time_2) == 0x0000F4, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_CustomEvent_Remaining_Time_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Is_Attacker_Is_Attacker) == 0x0000F8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x0000F9, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_text_Variable) == 0x000100, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000118, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_bool_Variable_3) == 0x000119, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsServer_ReturnValue) == 0x00011A, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_CustomEvent_Remaining_Time_1) == 0x00011C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_CustomEvent_Remaining_Time_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_CustomEvent_Remaining_Time) == 0x000120, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_CustomEvent_Remaining_Time' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x000124, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_int_Variable_3) == 0x000128, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_9) == 0x00012C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_10) == 0x00012D, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_bool_Variable_4) == 0x00012E, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000130, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetUserControllerId_ReturnValue_7) == 0x000138, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetUserControllerId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsValid_ReturnValue) == 0x00013C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7) == 0x000140, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Player_Controller_Raid_7) == 0x000148, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Player_Controller_Raid_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_7) == 0x000150, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_Select_Default) == 0x000154, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_text_Variable_1) == 0x000158, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Defending_Team_Defending_Team) == 0x000170, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsDedicatedServer_ReturnValue_11) == 0x000179, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsDedicatedServer_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_Select_Default_1) == 0x00017C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Attacking_Team_Attacking_Team_1) == 0x000180, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Attacking_Team_Attacking_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsValid_ReturnValue_2) == 0x000188, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Defending_Team_Defending_Team_1) == 0x000190, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Defending_Team_Defending_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_Select_Default_2) == 0x000198, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsValid_ReturnValue_3) == 0x00019C, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_CustomEvent_Win_Reason) == 0x00019D, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_CustomEvent_Win_Reason' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_Select_Default_3) == 0x0001A0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_GetGameMode_ReturnValue) == 0x0001A8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_text_Variable_2) == 0x0001B0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_AsBP_Game_Mode_Raid) == 0x0001C8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_AsBP_Game_Mode_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_DynamicCast_bSuccess_8) == 0x0001D0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_bool_Variable_5) == 0x0001D1, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_IsServer_ReturnValue_1) == 0x0001D2, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_Select_Default_4) == 0x0001D8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Winning_and_Losing_Teams_Winner_Found) == 0x0001F0, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Winning_and_Losing_Teams_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Winning_and_Losing_Teams_Winning_Team) == 0x0001F8, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Winning_and_Losing_Teams_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Winning_and_Losing_Teams_Losing_Team) == 0x000200, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Winning_and_Losing_Teams_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual) == 0x000208, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, Temp_text_Variable_3) == 0x000210, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid, K2Node_Select_Default_5) == 0x000228, "Member 'BP_GameState_Raid_C_ExecuteUbergraph_BP_GameState_Raid::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Handle Match Phase
// 0x0001 (0x0001 - 0x0000)
struct BP_GameState_Raid_C_Handle_Match_Phase final
{
public:
	E_TeamsMatchPhase                             Match_Phase_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Handle_Match_Phase) == 0x000001, "Wrong alignment on BP_GameState_Raid_C_Handle_Match_Phase");
static_assert(sizeof(BP_GameState_Raid_C_Handle_Match_Phase) == 0x000001, "Wrong size on BP_GameState_Raid_C_Handle_Match_Phase");
static_assert(offsetof(BP_GameState_Raid_C_Handle_Match_Phase, Match_Phase_0) == 0x000000, "Member 'BP_GameState_Raid_C_Handle_Match_Phase::Match_Phase_0' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Set Round Win Reason
// 0x0001 (0x0001 - 0x0000)
struct BP_GameState_Raid_C_Set_Round_Win_Reason final
{
public:
	ERaidWinReason                                Win_Reason;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Set_Round_Win_Reason) == 0x000001, "Wrong alignment on BP_GameState_Raid_C_Set_Round_Win_Reason");
static_assert(sizeof(BP_GameState_Raid_C_Set_Round_Win_Reason) == 0x000001, "Wrong size on BP_GameState_Raid_C_Set_Round_Win_Reason");
static_assert(offsetof(BP_GameState_Raid_C_Set_Round_Win_Reason, Win_Reason) == 0x000000, "Member 'BP_GameState_Raid_C_Set_Round_Win_Reason::Win_Reason' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Players Update PreRound Time Remaining
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_Raid_C_Players_Update_PreRound_Time_Remaining final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Players_Update_PreRound_Time_Remaining) == 0x000004, "Wrong alignment on BP_GameState_Raid_C_Players_Update_PreRound_Time_Remaining");
static_assert(sizeof(BP_GameState_Raid_C_Players_Update_PreRound_Time_Remaining) == 0x000004, "Wrong size on BP_GameState_Raid_C_Players_Update_PreRound_Time_Remaining");
static_assert(offsetof(BP_GameState_Raid_C_Players_Update_PreRound_Time_Remaining, Remaining_Time) == 0x000000, "Member 'BP_GameState_Raid_C_Players_Update_PreRound_Time_Remaining::Remaining_Time' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Set PreRound Remaining Time
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_Raid_C_Set_PreRound_Remaining_Time final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Set_PreRound_Remaining_Time) == 0x000004, "Wrong alignment on BP_GameState_Raid_C_Set_PreRound_Remaining_Time");
static_assert(sizeof(BP_GameState_Raid_C_Set_PreRound_Remaining_Time) == 0x000004, "Wrong size on BP_GameState_Raid_C_Set_PreRound_Remaining_Time");
static_assert(offsetof(BP_GameState_Raid_C_Set_PreRound_Remaining_Time, Remaining_Time) == 0x000000, "Member 'BP_GameState_Raid_C_Set_PreRound_Remaining_Time::Remaining_Time' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Players Update Time Remaining
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_Raid_C_Players_Update_Time_Remaining final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Players_Update_Time_Remaining) == 0x000004, "Wrong alignment on BP_GameState_Raid_C_Players_Update_Time_Remaining");
static_assert(sizeof(BP_GameState_Raid_C_Players_Update_Time_Remaining) == 0x000004, "Wrong size on BP_GameState_Raid_C_Players_Update_Time_Remaining");
static_assert(offsetof(BP_GameState_Raid_C_Players_Update_Time_Remaining, Remaining_Time) == 0x000000, "Member 'BP_GameState_Raid_C_Players_Update_Time_Remaining::Remaining_Time' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Set Match Remaining Time
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_Raid_C_Set_Match_Remaining_Time final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Set_Match_Remaining_Time) == 0x000004, "Wrong alignment on BP_GameState_Raid_C_Set_Match_Remaining_Time");
static_assert(sizeof(BP_GameState_Raid_C_Set_Match_Remaining_Time) == 0x000004, "Wrong size on BP_GameState_Raid_C_Set_Match_Remaining_Time");
static_assert(offsetof(BP_GameState_Raid_C_Set_Match_Remaining_Time, Remaining_Time) == 0x000000, "Member 'BP_GameState_Raid_C_Set_Match_Remaining_Time::Remaining_Time' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Get Attacking Team
// 0x0058 (0x0058 - 0x0000)
struct BP_GameState_Raid_C_Get_Attacking_Team final
{
public:
	class UBP_GSC_Team_Raid_C*                    Attacking_Team;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Side_Side;                            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Get_Attacking_Team) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Get_Attacking_Team");
static_assert(sizeof(BP_GameState_Raid_C_Get_Attacking_Team) == 0x000058, "Wrong size on BP_GameState_Raid_C_Get_Attacking_Team");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, Attacking_Team) == 0x000000, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_Get_Teams_Teams) == 0x000010, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000030, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_Get_Side_Side) == 0x00003C, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_Get_Side_Side' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000044, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacking_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_GameState_Raid_C_Get_Attacking_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Get Defending Team
// 0x0058 (0x0058 - 0x0000)
struct BP_GameState_Raid_C_Get_Defending_Team final
{
public:
	class UBP_GSC_Team_Raid_C*                    Defending_Team;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Side_Side;                            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Get_Defending_Team) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Get_Defending_Team");
static_assert(sizeof(BP_GameState_Raid_C_Get_Defending_Team) == 0x000058, "Wrong size on BP_GameState_Raid_C_Get_Defending_Team");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, Defending_Team) == 0x000000, "Member 'BP_GameState_Raid_C_Get_Defending_Team::Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GameState_Raid_C_Get_Defending_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_Get_Teams_Teams) == 0x000010, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000030, "Member 'BP_GameState_Raid_C_Get_Defending_Team::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameState_Raid_C_Get_Defending_Team::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_Get_Side_Side) == 0x00003C, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_Get_Side_Side' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000044, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_GameState_Raid_C_Get_Defending_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defending_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_GameState_Raid_C_Get_Defending_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.GetWorldMinMax
// 0x0090 (0x0090 - 0x0000)
struct BP_GameState_Raid_C_GetWorldMinMax final
{
public:
	struct FVector                                World_Min;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                World_Max;                                         // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_GetWorldMinMax) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_GetWorldMinMax");
static_assert(sizeof(BP_GameState_Raid_C_GetWorldMinMax) == 0x000090, "Wrong size on BP_GameState_Raid_C_GetWorldMinMax");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, World_Min) == 0x000000, "Member 'BP_GameState_Raid_C_GetWorldMinMax::World_Min' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, World_Max) == 0x00000C, "Member 'BP_GameState_Raid_C_GetWorldMinMax::World_Max' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000038, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_BreakVector_X_1) == 0x000050, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_BreakVector_Y_1) == 0x000054, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_FMin_ReturnValue) == 0x00005C, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_FMin_ReturnValue_1) == 0x000064, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_FMax_ReturnValue_1) == 0x000068, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_FMin_ReturnValue_2) == 0x00006C, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_FMax_ReturnValue_2) == 0x000070, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_GetWorldMinMax, CallFunc_MakeVector_ReturnValue_1) == 0x000080, "Member 'BP_GameState_Raid_C_GetWorldMinMax::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Check Remaining Time Sound Cues
// 0x0009 (0x0009 - 0x0000)
struct BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues) == 0x000001, "Wrong alignment on BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues");
static_assert(sizeof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues) == 0x000009, "Wrong size on BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000002, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000005, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000007, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues, CallFunc_BooleanAND_ReturnValue_2) == 0x000008, "Member 'BP_GameState_Raid_C_Check_Remaining_Time_Sound_Cues::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Get Statistics
// 0x0078 (0x0078 - 0x0000)
struct BP_GameState_Raid_C_Get_Statistics final
{
public:
	TArray<struct FStruct_RaidStatistics>         Statistics;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FStruct_RaidStatistics>         Stats;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Raid_C*                 K2Node_DynamicCast_AsBP_Player_State_Raid;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_RaidStatistics                 CallFunc_Get_Statistic_Statistic;                  // 0x0050(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Raid_C_Get_Statistics) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Get_Statistics");
static_assert(sizeof(BP_GameState_Raid_C_Get_Statistics) == 0x000078, "Wrong size on BP_GameState_Raid_C_Get_Statistics");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, Statistics) == 0x000000, "Member 'BP_GameState_Raid_C_Get_Statistics::Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, Stats) == 0x000010, "Member 'BP_GameState_Raid_C_Get_Statistics::Stats' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameState_Raid_C_Get_Statistics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameState_Raid_C_Get_Statistics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameState_Raid_C_Get_Statistics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameState_Raid_C_Get_Statistics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameState_Raid_C_Get_Statistics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, K2Node_DynamicCast_AsBP_Player_State_Raid) == 0x000040, "Member 'BP_GameState_Raid_C_Get_Statistics::K2Node_DynamicCast_AsBP_Player_State_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GameState_Raid_C_Get_Statistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_GameState_Raid_C_Get_Statistics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, CallFunc_Get_Statistic_Statistic) == 0x000050, "Member 'BP_GameState_Raid_C_Get_Statistics::CallFunc_Get_Statistic_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Statistics, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_GameState_Raid_C_Get_Statistics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Get Attacker Statistics
// 0x0088 (0x0088 - 0x0000)
struct BP_GameState_Raid_C_Get_Attacker_Statistics final
{
public:
	TArray<struct FStruct_RaidStatistics>         Statistics;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FStruct_RaidStatistics>         Stats;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Raid_C*                 K2Node_DynamicCast_AsBP_Player_State_Raid;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_RaidStatistics                 CallFunc_Get_Statistic_Statistic;                  // 0x0050(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_Raid_C_Get_Attacker_Statistics) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Get_Attacker_Statistics");
static_assert(sizeof(BP_GameState_Raid_C_Get_Attacker_Statistics) == 0x000088, "Wrong size on BP_GameState_Raid_C_Get_Attacker_Statistics");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, Statistics) == 0x000000, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, Stats) == 0x000010, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::Stats' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, K2Node_DynamicCast_AsBP_Player_State_Raid) == 0x000040, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::K2Node_DynamicCast_AsBP_Player_State_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, CallFunc_Get_Statistic_Statistic) == 0x000050, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::CallFunc_Get_Statistic_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000078, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Attacker_Statistics, CallFunc_Is_Attacker_Is_Attacker) == 0x000081, "Member 'BP_GameState_Raid_C_Get_Attacker_Statistics::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Get Defender Statistics
// 0x0088 (0x0088 - 0x0000)
struct BP_GameState_Raid_C_Get_Defender_Statistics final
{
public:
	TArray<struct FStruct_RaidStatistics>         Statistics;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FStruct_RaidStatistics>         Stats;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Raid_C*                 K2Node_DynamicCast_AsBP_Player_State_Raid;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_RaidStatistics                 CallFunc_Get_Statistic_Statistic;                  // 0x0050(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_Raid_C_Get_Defender_Statistics) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Get_Defender_Statistics");
static_assert(sizeof(BP_GameState_Raid_C_Get_Defender_Statistics) == 0x000088, "Wrong size on BP_GameState_Raid_C_Get_Defender_Statistics");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, Statistics) == 0x000000, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, Stats) == 0x000010, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::Stats' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, K2Node_DynamicCast_AsBP_Player_State_Raid) == 0x000040, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::K2Node_DynamicCast_AsBP_Player_State_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, CallFunc_Get_Statistic_Statistic) == 0x000050, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::CallFunc_Get_Statistic_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000078, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Defender_Statistics, CallFunc_Is_Attacker_Is_Attacker) == 0x000081, "Member 'BP_GameState_Raid_C_Get_Defender_Statistics::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Find Player Start Positions
// 0x0040 (0x0040 - 0x0000)
struct BP_GameState_Raid_C_Find_Player_Start_Positions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerStart_Raid_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_Raid_C_Find_Player_Start_Positions) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Find_Player_Start_Positions");
static_assert(sizeof(BP_GameState_Raid_C_Find_Player_Start_Positions) == 0x000040, "Wrong size on BP_GameState_Raid_C_Find_Player_Start_Positions");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_Array_Add_ReturnValue_1) == 0x00002C, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000030, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Find_Player_Start_Positions, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_GameState_Raid_C_Find_Player_Start_Positions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Get Winning and Losing Teams
// 0x0058 (0x0058 - 0x0000)
struct BP_GameState_Raid_C_Get_Winning_and_Losing_Teams final
{
public:
	bool                                          Winner_Found;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    Winning_Team;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    Losing_Team;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamsAreEqual;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _TeamsAreEqual;                                    // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Attacking_Team_Rounds_Won;                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    _Losing_Team;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    _Winning_Team;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Winner_Found;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Get_Winning_and_Losing_Teams");
static_assert(sizeof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams) == 0x000058, "Wrong size on BP_GameState_Raid_C_Get_Winning_and_Losing_Teams");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, Winner_Found) == 0x000000, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, Winning_Team) == 0x000008, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, Losing_Team) == 0x000010, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, TeamsAreEqual) == 0x000018, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, _TeamsAreEqual) == 0x000019, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::_TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, Attacking_Team_Rounds_Won) == 0x00001C, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::Attacking_Team_Rounds_Won' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, _Losing_Team) == 0x000020, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, _Winning_Team) == 0x000028, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, _Winner_Found) == 0x000030, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Defending_Team_Defending_Team) == 0x000038, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_Less_IntInt_ReturnValue) == 0x000042, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000043, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000048, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Get_Winning_and_Losing_Teams, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000052, "Member 'BP_GameState_Raid_C_Get_Winning_and_Losing_Teams::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_Raid.BP_GameState_Raid_C.Show End Turn Notification To Player
// 0x0210 (0x0210 - 0x0000)
struct BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player final
{
public:
	ERaidWinReason                                Win_Reason;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Raid_C*            Player_Controller;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         DefenderType;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         AttackerType;                                      // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DefenderReason;                                    // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   AttackerReason;                                    // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   Title;                                             // 0x0048(0x0018)(Edit, BlueprintVisible)
	ERaidWinReason                                Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERaidNotificationType                         Temp_byte_Variable_1;                              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_2;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_3;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_4;                              // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidWinReason                                Temp_byte_Variable_5;                              // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_6;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_7;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_8;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_9;                              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidWinReason                                Temp_byte_Variable_10;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00B8(0x0018)()
	ERaidWinReason                                Temp_byte_Variable_11;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0120(0x0018)()
	ERaidWinReason                                Temp_byte_Variable_12;                             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0188(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERaidNotificationType                         K2Node_Select_Default;                             // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         K2Node_Select_Default_1;                           // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x01A8(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x01C0(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x01D8(0x0018)()
	ERaidNotificationType                         K2Node_Select_Default_5;                           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_6;                           // 0x01F8(0x0018)()
};
static_assert(alignof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player) == 0x000008, "Wrong alignment on BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player");
static_assert(sizeof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player) == 0x000210, "Wrong size on BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Win_Reason) == 0x000000, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Win_Reason' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Player_Controller) == 0x000008, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, DefenderType) == 0x000010, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::DefenderType' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, AttackerType) == 0x000011, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::AttackerType' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, DefenderReason) == 0x000018, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::DefenderReason' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, AttackerReason) == 0x000030, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::AttackerReason' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Title) == 0x000048, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Title' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable) == 0x000060, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, CallFunc_Is_Attacker_Is_Attacker) == 0x000062, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_1) == 0x000063, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_2) == 0x000064, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_3) == 0x000065, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_4) == 0x000066, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_5) == 0x000067, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_6) == 0x000068, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_7) == 0x000069, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_8) == 0x00006A, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_9) == 0x00006B, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_10) == 0x00006C, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable) == 0x000070, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_1) == 0x000088, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_2) == 0x0000A0, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_3) == 0x0000B8, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_11) == 0x0000D0, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_4) == 0x0000D8, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_5) == 0x0000F0, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_6) == 0x000108, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_7) == 0x000120, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_12) == 0x000138, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_8) == 0x000140, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_9) == 0x000158, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_10) == 0x000170, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_11) == 0x000188, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_bool_Variable) == 0x0001A0, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, Temp_bool_Variable_1) == 0x0001A1, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default) == 0x0001A2, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_1) == 0x0001A3, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_2) == 0x0001A8, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_3) == 0x0001C0, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_4) == 0x0001D8, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_5) == 0x0001F0, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_6) == 0x0001F8, "Member 'BP_GameState_Raid_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_6' has a wrong offset!");

}

