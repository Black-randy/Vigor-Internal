#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SRChallenge_Menu

#include "Basic.hpp"

#include "UI_SRChallenge_Menu_classes.hpp"
#include "UI_SRChallenge_Menu_parameters.hpp"


namespace SDK
{

// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.ExecuteUbergraph_UI_SRChallenge_Menu
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SRChallenge_Menu_C::ExecuteUbergraph_UI_SRChallenge_Menu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "ExecuteUbergraph_UI_SRChallenge_Menu");

	Params::UI_SRChallenge_Menu_C_ExecuteUbergraph_UI_SRChallenge_Menu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.BndEvt__StartButton_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SRChallenge_Menu_C::BndEvt__StartButton_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "BndEvt__StartButton_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.BndEvt__CloseButton_1_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SRChallenge_Menu_C::BndEvt__CloseButton_1_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "BndEvt__CloseButton_1_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.LoadTargetImage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        TextureSoft                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_SRChallenge_Menu_C::LoadTargetImage(TSoftObjectPtr<class UTexture2D> TextureSoft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "LoadTargetImage");

	Params::UI_SRChallenge_Menu_C_LoadTargetImage Parms{};

	Parms.TextureSoft = TextureSoft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_SRChallenge_Menu_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_112_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SRChallenge_Menu_C::BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_112_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_112_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_SRChallenge_Menu_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SRChallenge_Menu_C::OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7");

	Params::UI_SRChallenge_Menu_C_OnLoaded_303A9E7341428F48F05BE78AB9D4D2B7 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.ChallengeClicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_ShootingChallenge             Challenge                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_ShootingChallengeGroup        Group                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UUI_SRChallenge_Menu_C::ChallengeClicked(const struct FS_ShootingChallenge& Challenge, const struct FS_ShootingChallengeGroup& Group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "ChallengeClicked");

	Params::UI_SRChallenge_Menu_C_ChallengeClicked Parms{};

	Parms.Challenge = std::move(Challenge);
	Parms.Group = std::move(Group);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.ChallengeFocused
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_ShootingChallenge             Challenge                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_ShootingChallengeGroup        Group                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UUI_SRChallenge_Menu_C::ChallengeFocused(const struct FS_ShootingChallenge& Challenge, const struct FS_ShootingChallengeGroup& Group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "ChallengeFocused");

	Params::UI_SRChallenge_Menu_C_ChallengeFocused Parms{};

	Parms.Challenge = std::move(Challenge);
	Parms.Group = std::move(Group);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.CategoryFocused
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_SRChallenge_CategoryRow_C*    CategoryRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SRChallenge_Menu_C::CategoryFocused(class UUI_SRChallenge_CategoryRow_C* CategoryRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "CategoryFocused");

	Params::UI_SRChallenge_Menu_C_CategoryFocused Parms{};

	Parms.CategoryRef = CategoryRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.SetObjectiveDescription
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Objective_Text                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_SRChallenge_Menu_C::SetObjectiveDescription(const class FText& Objective_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "SetObjectiveDescription");

	Params::UI_SRChallenge_Menu_C_SetObjectiveDescription Parms{};

	Parms.Objective_Text = std::move(Objective_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.SetRequiredTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Gold_Time                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Silver_Time                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Bronze_Time                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SRChallenge_Menu_C::SetRequiredTime(float Gold_Time, float Silver_Time, float Bronze_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "SetRequiredTime");

	Params::UI_SRChallenge_Menu_C_SetRequiredTime Parms{};

	Parms.Gold_Time = Gold_Time;
	Parms.Silver_Time = Silver_Time;
	Parms.Bronze_Time = Bronze_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.InitUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SRChallenge_Menu_C::InitUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "InitUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.MakeGroups
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_ShootingChallenge>     Challenges_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UBP_ShootingChallenges_GMComponent_C*SRComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_ShootingChallengeGroup>Groups                                                 (Parm, OutParm, ContainsInstancedReference)

void UUI_SRChallenge_Menu_C::MakeGroups(TArray<struct FS_ShootingChallenge>& Challenges_0, class UBP_ShootingChallenges_GMComponent_C* SRComponent, TArray<struct FS_ShootingChallengeGroup>* Groups)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "MakeGroups");

	Params::UI_SRChallenge_Menu_C_MakeGroups Parms{};

	Parms.Challenges_0 = std::move(Challenges_0);
	Parms.SRComponent = SRComponent;

	UObject::ProcessEvent(Func, &Parms);

	Challenges_0 = std::move(Parms.Challenges_0);

	if (Groups != nullptr)
		*Groups = std::move(Parms.Groups);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.GetWeaponsByCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_ShootingChallengeGroup>ShootingChallengeGroups                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FS_ShootingChallengeGroup>ChallengeGroups                                        (Parm, OutParm, ContainsInstancedReference)
// TMap<EItemCategory, struct FS_ShootingChallengeGroupArray>CategorizedWeapons                                     (Parm, OutParm, ContainsInstancedReference)

void UUI_SRChallenge_Menu_C::GetWeaponsByCategory(TArray<struct FS_ShootingChallengeGroup>& ShootingChallengeGroups, TArray<struct FS_ShootingChallengeGroup>* ChallengeGroups, TMap<EItemCategory, struct FS_ShootingChallengeGroupArray>* CategorizedWeapons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "GetWeaponsByCategory");

	Params::UI_SRChallenge_Menu_C_GetWeaponsByCategory Parms{};

	Parms.ShootingChallengeGroups = std::move(ShootingChallengeGroups);

	UObject::ProcessEvent(Func, &Parms);

	ShootingChallengeGroups = std::move(Parms.ShootingChallengeGroups);

	if (ChallengeGroups != nullptr)
		*ChallengeGroups = std::move(Parms.ChallengeGroups);

	if (CategorizedWeapons != nullptr)
		*CategorizedWeapons = std::move(Parms.CategorizedWeapons);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.CollapseAllCategories
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SRChallenge_Menu_C::CollapseAllCategories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "CollapseAllCategories");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SRChallenge_Menu.UI_SRChallenge_Menu_C.GetWidgetToFocus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UUI_SRChallenge_Menu_C::GetWidgetToFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SRChallenge_Menu_C", "GetWidgetToFocus");

	Params::UI_SRChallenge_Menu_C_GetWidgetToFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

