#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GameState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_GameState.BPI_GameState_C.BPI_GetMapCorners
// 0x0018 (0x0018 - 0x0000)
struct BPI_GameState_C_BPI_GetMapCorners final
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         MapCorners;                                        // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_GameState_C_BPI_GetMapCorners) == 0x000008, "Wrong alignment on BPI_GameState_C_BPI_GetMapCorners");
static_assert(sizeof(BPI_GameState_C_BPI_GetMapCorners) == 0x000018, "Wrong size on BPI_GameState_C_BPI_GetMapCorners");
static_assert(offsetof(BPI_GameState_C_BPI_GetMapCorners, bValid) == 0x000000, "Member 'BPI_GameState_C_BPI_GetMapCorners::bValid' has a wrong offset!");
static_assert(offsetof(BPI_GameState_C_BPI_GetMapCorners, MapCorners) == 0x000008, "Member 'BPI_GameState_C_BPI_GetMapCorners::MapCorners' has a wrong offset!");

// Function BPI_GameState.BPI_GameState_C.BPI_GetCompassRotator
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameState_C_BPI_GetCompassRotator final
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CompasRotator;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_GameState_C_BPI_GetCompassRotator) == 0x000004, "Wrong alignment on BPI_GameState_C_BPI_GetCompassRotator");
static_assert(sizeof(BPI_GameState_C_BPI_GetCompassRotator) == 0x000010, "Wrong size on BPI_GameState_C_BPI_GetCompassRotator");
static_assert(offsetof(BPI_GameState_C_BPI_GetCompassRotator, bValid) == 0x000000, "Member 'BPI_GameState_C_BPI_GetCompassRotator::bValid' has a wrong offset!");
static_assert(offsetof(BPI_GameState_C_BPI_GetCompassRotator, CompasRotator) == 0x000004, "Member 'BPI_GameState_C_BPI_GetCompassRotator::CompasRotator' has a wrong offset!");

}

