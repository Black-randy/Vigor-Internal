#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattlePass

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_LinkToStash_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattlePass.BP_BattlePass_C
// 0x00D0 (0x0310 - 0x0240)
class ABP_BattlePass_C final : public ABP_LinkToStash_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BattlePass_C;                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_UnclaimedRewards;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MailBox;                                        // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBattlePassLevelReward>         FreeRewards;                                       // 0x0260(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UStaticMesh>             NormalMesh;                                        // 0x0270(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             UnclaimedRewardsMesh;                              // 0x0298(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CurrentSeasonLetterMaterial;                       // 0x02C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             BoxMesh;                                           // 0x02E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BattlePass(int32 EntryPoint);
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_On_Client__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void ReceiveBeginPlay();
	void RefreshVisuals();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattlePass_C">();
	}
	static class ABP_BattlePass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BattlePass_C>();
	}
};
static_assert(alignof(ABP_BattlePass_C) == 0x000008, "Wrong alignment on ABP_BattlePass_C");
static_assert(sizeof(ABP_BattlePass_C) == 0x000310, "Wrong size on ABP_BattlePass_C");
static_assert(offsetof(ABP_BattlePass_C, UberGraphFrame_BP_BattlePass_C) == 0x000240, "Member 'ABP_BattlePass_C::UberGraphFrame_BP_BattlePass_C' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, SM_UnclaimedRewards) == 0x000248, "Member 'ABP_BattlePass_C::SM_UnclaimedRewards' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, Box) == 0x000250, "Member 'ABP_BattlePass_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, SM_MailBox) == 0x000258, "Member 'ABP_BattlePass_C::SM_MailBox' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, FreeRewards) == 0x000260, "Member 'ABP_BattlePass_C::FreeRewards' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, NormalMesh) == 0x000270, "Member 'ABP_BattlePass_C::NormalMesh' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, UnclaimedRewardsMesh) == 0x000298, "Member 'ABP_BattlePass_C::UnclaimedRewardsMesh' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, CurrentSeasonLetterMaterial) == 0x0002C0, "Member 'ABP_BattlePass_C::CurrentSeasonLetterMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BattlePass_C, BoxMesh) == 0x0002E8, "Member 'ABP_BattlePass_C::BoxMesh' has a wrong offset!");

}

