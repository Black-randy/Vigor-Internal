#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassSaleLabel

#include "Basic.hpp"

#include "UI_BattlePassSaleLabel_classes.hpp"
#include "UI_BattlePassSaleLabel_parameters.hpp"


namespace SDK
{

// Function UI_BattlePassSaleLabel.UI_BattlePassSaleLabel_C.ExecuteUbergraph_UI_BattlePassSaleLabel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_BattlePassSaleLabel_C::ExecuteUbergraph_UI_BattlePassSaleLabel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassSaleLabel_C", "ExecuteUbergraph_UI_BattlePassSaleLabel");

	Params::UI_BattlePassSaleLabel_C_ExecuteUbergraph_UI_BattlePassSaleLabel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_BattlePassSaleLabel.UI_BattlePassSaleLabel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_BattlePassSaleLabel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassSaleLabel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_BattlePassSaleLabel.UI_BattlePassSaleLabel_C.AssignProductToLabel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameStoreProductInfo            PremiumBattlePassProduct                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_BattlePassSaleLabel_C::AssignProductToLabel(const struct FGameStoreProductInfo& PremiumBattlePassProduct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassSaleLabel_C", "AssignProductToLabel");

	Params::UI_BattlePassSaleLabel_C_AssignProductToLabel Parms{};

	Parms.PremiumBattlePassProduct = std::move(PremiumBattlePassProduct);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_BattlePassSaleLabel.UI_BattlePassSaleLabel_C.GetValidProduct
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsProductValid_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameStoreProductInfo            Product                                                (Parm, OutParm)

void UUI_BattlePassSaleLabel_C::GetValidProduct(bool* IsProductValid_0, struct FGameStoreProductInfo* Product) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassSaleLabel_C", "GetValidProduct");

	Params::UI_BattlePassSaleLabel_C_GetValidProduct Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsProductValid_0 != nullptr)
		*IsProductValid_0 = Parms.IsProductValid_0;

	if (Product != nullptr)
		*Product = std::move(Parms.Product);
}


// Function UI_BattlePassSaleLabel.UI_BattlePassSaleLabel_C.IsProductValid
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameStoreProductInfo            Product                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsProductValid_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_BattlePassSaleLabel_C::IsProductValid(const struct FGameStoreProductInfo& Product, bool* IsProductValid_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassSaleLabel_C", "IsProductValid");

	Params::UI_BattlePassSaleLabel_C_IsProductValid Parms{};

	Parms.Product = std::move(Product);

	UObject::ProcessEvent(Func, &Parms);

	if (IsProductValid_0 != nullptr)
		*IsProductValid_0 = Parms.IsProductValid_0;
}

}

