#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_TVTDeathmatch

#include "Basic.hpp"

#include "BP_GameMode_TVTDeathmatch_classes.hpp"
#include "BP_GameMode_TVTDeathmatch_parameters.hpp"


namespace SDK
{

// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.ExecuteUbergraph_BP_GameMode_TVTDeathmatch
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::ExecuteUbergraph_BP_GameMode_TVTDeathmatch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "ExecuteUbergraph_BP_GameMode_TVTDeathmatch");

	Params::BP_GameMode_TVTDeathmatch_C_ExecuteUbergraph_BP_GameMode_TVTDeathmatch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.InitStartSpot
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           StartSpot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::InitStartSpot(class AActor* StartSpot, class AController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "InitStartSpot");

	Params::BP_GameMode_TVTDeathmatch_C_InitStartSpot Parms{};

	Parms.StartSpot = StartSpot;
	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Countdown for respawn lootbox finished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECloudMatchLootboxType                  Box_Type                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Countdown_for_respawn_lootbox_finished(ECloudMatchLootboxType Box_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Countdown for respawn lootbox finished");

	Params::BP_GameMode_TVTDeathmatch_C_Countdown_for_respawn_lootbox_finished Parms{};

	Parms.Box_Type = Box_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.OnSpectatorHasNobodyToSpectate
// (Event, Public, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::OnSpectatorHasNobodyToSpectate(class AHumanPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "OnSpectatorHasNobodyToSpectate");

	Params::BP_GameMode_TVTDeathmatch_C_OnSpectatorHasNobodyToSpectate Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Lobby Finished
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudMatchCommitInfo            CloudSettings                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GameMode_TVTDeathmatch_C::Lobby_Finished(const struct FCloudRequestResult& RequestResult, const struct FCloudMatchCommitInfo& CloudSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Lobby Finished");

	Params::BP_GameMode_TVTDeathmatch_C_Lobby_Finished Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.CloudSettings = std::move(CloudSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.SubLevelsReturned
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SLM_Load_Complete                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::SubLevelsReturned(bool SLM_Load_Complete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "SubLevelsReturned");

	Params::BP_GameMode_TVTDeathmatch_C_SubLevelsReturned Parms{};

	Parms.SLM_Load_Complete = SLM_Load_Complete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Player Died
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_TVTDeathmatch_C*    Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamageType                             Damage_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Instigating_Item                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Headshot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::Player_Died(class ABP_Character_TVTDeathmatch_C* Victim, EDamageType Damage_Type, class AHumanCharacter* Killer, class UClass* Instigating_Item, bool Is_Headshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Player Died");

	Params::BP_GameMode_TVTDeathmatch_C_Player_Died Parms{};

	Parms.Victim = Victim;
	Parms.Damage_Type = Damage_Type;
	Parms.Killer = Killer;
	Parms.Instigating_Item = Instigating_Item;
	Parms.Is_Headshot = Is_Headshot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Lootbox looted
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Looting_character                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_TVTDeathmatch_Box_C*          Looted_Lootbox                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AWeapon*>                  Looted_weapons                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GameMode_TVTDeathmatch_C::Lootbox_looted(class AActor* Looting_character, const class ABP_TVTDeathmatch_Box_C*& Looted_Lootbox, const TArray<class AWeapon*>& Looted_weapons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Lootbox looted");

	Params::BP_GameMode_TVTDeathmatch_C_Lootbox_looted Parms{};

	Parms.Looting_character = Looting_character;
	Parms.Looted_Lootbox = Looted_Lootbox;
	Parms.Looted_weapons = std::move(Looted_weapons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.K2_OnLogout
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::K2_OnLogout(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "K2_OnLogout");

	Params::BP_GameMode_TVTDeathmatch_C_K2_OnLogout Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.K2_PostLogin
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::K2_PostLogin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "K2_PostLogin");

	Params::BP_GameMode_TVTDeathmatch_C_K2_PostLogin Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Respawn Player
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Teams_C*     Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Respawn_Player(class ABP_PlayerController_Teams_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Respawn Player");

	Params::BP_GameMode_TVTDeathmatch_C_Respawn_Player Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Start Match
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Start_Match()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Start Match");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Player Connected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_TVTDeathmatch_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Player_Connected(class ABP_PlayerController_TVTDeathmatch_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Player Connected");

	Params::BP_GameMode_TVTDeathmatch_C_Player_Connected Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Match Initialization
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Match_Initialization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Match Initialization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Match Finish
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Match_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Match Finish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Switch To Match Cleanup
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Switch_To_Match_Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Switch To Match Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_ResetRoundTime
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Cheat_ResetRoundTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_ResetRoundTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Round Cleanup
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Round_Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Round Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Round intialize loot
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Round_intialize_loot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Round intialize loot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Delayed Force Respawn
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Delayed_Force_Respawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Delayed Force Respawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Round Finish
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Round_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Round Finish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Last Man Standing Respawn All Dead
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Last_Man_Standing_Respawn_All_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Last Man Standing Respawn All Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Last Man Standing Start
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Last_Man_Standing_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Last Man Standing Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Second On Server Passed
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Second_On_Server_Passed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Second On Server Passed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Round Start
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Round_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Round Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Round In Progress
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Round_In_Progress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Round In Progress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Round Ended By Time
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Round_Ended_By_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Round Ended By Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.ReRequestForMatchLoadouts
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::ReRequestForMatchLoadouts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "ReRequestForMatchLoadouts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.RequestCloudLoadoutsAgain
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::RequestCloudLoadoutsAgain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "RequestCloudLoadoutsAgain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.GetMatchLoadoutsFinished_Event_0
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudMatchLoadouts              Loadouts                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GameMode_TVTDeathmatch_C::GetMatchLoadoutsFinished_Event_0(const struct FCloudRequestResult& RequestResult, const struct FCloudMatchLoadouts& Loadouts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "GetMatchLoadoutsFinished_Event_0");

	Params::BP_GameMode_TVTDeathmatch_C_GetMatchLoadoutsFinished_Event_0 Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Loadouts = std::move(Loadouts);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.TryRequestingForCloudLoadouts
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::TryRequestingForCloudLoadouts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "TryRequestingForCloudLoadouts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Players Result Sent To Cloud
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AHumanPlayerController*           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUserMatchReward                 Reward                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GameMode_TVTDeathmatch_C::Players_Result_Sent_To_Cloud(const struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player, const struct FUserMatchReward& Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Players Result Sent To Cloud");

	Params::BP_GameMode_TVTDeathmatch_C_Players_Result_Sent_To_Cloud Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Player = Player;
	Parms.Reward = std::move(Reward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Match ID Available
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Match_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Match_ID_Available(const class FString& Match_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Match ID Available");

	Params::BP_GameMode_TVTDeathmatch_C_Match_ID_Available Parms{};

	Parms.Match_ID = std::move(Match_ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Player Cloud Id available
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Userid                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Player_Cloud_Id_available(const class FString& Userid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Player Cloud Id available");

	Params::BP_GameMode_TVTDeathmatch_C_Player_Cloud_Id_available Parms{};

	Parms.Userid = std::move(Userid);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Register Player Match ID
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_TVTDeathmatch_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Register_Player_Match_ID(class ABP_PlayerController_TVTDeathmatch_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Register Player Match ID");

	Params::BP_GameMode_TVTDeathmatch_C_Register_Player_Match_ID Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.All Player Results Sent
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::All_Player_Results_Sent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "All Player Results Sent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Match Unregistered From Cloud
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GameMode_TVTDeathmatch_C::Match_Unregistered_From_Cloud(const struct FCloudRequestResult& RequestResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Match Unregistered From Cloud");

	Params::BP_GameMode_TVTDeathmatch_C_Match_Unregistered_From_Cloud Parms{};

	Parms.RequestResult = std::move(RequestResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Match Registered To Cloud
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           MatchID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Match_Registered_To_Cloud(const struct FCloudRequestResult& RequestResult, const class FString& MatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Match Registered To Cloud");

	Params::BP_GameMode_TVTDeathmatch_C_Match_Registered_To_Cloud Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.MatchID = std::move(MatchID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.User Registered To Cloud
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AHumanPlayerController*           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::User_Registered_To_Cloud(const struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "User Registered To Cloud");

	Params::BP_GameMode_TVTDeathmatch_C_User_Registered_To_Cloud Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_ReFetchCloudLoadouts
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Cheat_ReFetchCloudLoadouts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_ReFetchCloudLoadouts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_SetKillWinThreshold
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   KillWinThreshold                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Cheat_SetKillWinThreshold(int32 KillWinThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_SetKillWinThreshold");

	Params::BP_GameMode_TVTDeathmatch_C_Cheat_SetKillWinThreshold Parms{};

	Parms.KillWinThreshold = KillWinThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_StopPeriodicRespawnCheck
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Cheat_StopPeriodicRespawnCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_StopPeriodicRespawnCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_RespawnCheck Event
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Cheat_RespawnCheck_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_RespawnCheck Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_StartPeriodicRespawnCheck
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Cheat_StartPeriodicRespawnCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_StartPeriodicRespawnCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_SetSafenessTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Cheat_SetSafenessTarget(float Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_SetSafenessTarget");

	Params::BP_GameMode_TVTDeathmatch_C_Cheat_SetSafenessTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_ForceOneWeaponLoadout_ToEveryone
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Cheat_ForceOneWeaponLoadout_ToEveryone(bool Enabled, class UClass* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_ForceOneWeaponLoadout_ToEveryone");

	Params::BP_GameMode_TVTDeathmatch_C_Cheat_ForceOneWeaponLoadout_ToEveryone Parms{};

	Parms.Enabled = Enabled;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_ForceOneWeaponLoadout
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Cheat_ForceOneWeaponLoadout(bool Enabled, class UClass* Weapon, class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_ForceOneWeaponLoadout");

	Params::BP_GameMode_TVTDeathmatch_C_Cheat_ForceOneWeaponLoadout Parms{};

	Parms.Enabled = Enabled;
	Parms.Weapon = Weapon;
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_SetEnableNewRespawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::Cheat_SetEnableNewRespawn(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_SetEnableNewRespawn");

	Params::BP_GameMode_TVTDeathmatch_C_Cheat_SetEnableNewRespawn Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_RespawnVisualDEBUG
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::Cheat_RespawnVisualDEBUG(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_RespawnVisualDEBUG");

	Params::BP_GameMode_TVTDeathmatch_C_Cheat_RespawnVisualDEBUG Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.CheatSkipPhase
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::CheatSkipPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "CheatSkipPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Get Available Player Start
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStart*                     Player_Start                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Get_Available_Player_Start(class APlayerStart** Player_Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Get Available Player Start");

	Params::BP_GameMode_TVTDeathmatch_C_Get_Available_Player_Start Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Start != nullptr)
		*Player_Start = Parms.Player_Start;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Spawn All Players
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Spawn_All_Players()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Spawn All Players");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Player Died Update Statistic
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_TVTDeathmatch_C*    Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamageType                             Damage_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Headshot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Killer_Is_Winner_or_Last_Man_Standing                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::Player_Died_Update_Statistic(class ABP_Character_TVTDeathmatch_C* Victim, class AHumanCharacter* Killer, EDamageType Damage_Type, bool Is_Headshot, bool* Killer_Is_Winner_or_Last_Man_Standing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Player Died Update Statistic");

	Params::BP_GameMode_TVTDeathmatch_C_Player_Died_Update_Statistic Parms{};

	Parms.Victim = Victim;
	Parms.Killer = Killer;
	Parms.Damage_Type = Damage_Type;
	Parms.Is_Headshot = Is_Headshot;

	UObject::ProcessEvent(Func, &Parms);

	if (Killer_Is_Winner_or_Last_Man_Standing != nullptr)
		*Killer_Is_Winner_or_Last_Man_Standing = Parms.Killer_Is_Winner_or_Last_Man_Standing;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Replicate Players Kill Feed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDamageType                             Damage_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Instigating_Item                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Headshot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::Replicate_Players_Kill_Feed(class AHumanCharacter* Victim, EDamageType Damage_Type, class AHumanCharacter* Killer, class UClass* Instigating_Item, bool Is_Headshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Replicate Players Kill Feed");

	Params::BP_GameMode_TVTDeathmatch_C_Replicate_Players_Kill_Feed Parms{};

	Parms.Victim = Victim;
	Parms.Damage_Type = Damage_Type;
	Parms.Killer = Killer;
	Parms.Instigating_Item = Instigating_Item;
	Parms.Is_Headshot = Is_Headshot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.ReadyToStartMatch
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_TVTDeathmatch_C::ReadyToStartMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "ReadyToStartMatch");

	Params::BP_GameMode_TVTDeathmatch_C_ReadyToStartMatch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.ArePlayersNearbyPlayerStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerStart*                     PlayerStart                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayersNearby                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::ArePlayersNearbyPlayerStart(class APlayerStart* PlayerStart, bool* PlayersNearby)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "ArePlayersNearbyPlayerStart");

	Params::BP_GameMode_TVTDeathmatch_C_ArePlayersNearbyPlayerStart Parms{};

	Parms.PlayerStart = PlayerStart;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayersNearby != nullptr)
		*PlayersNearby = Parms.PlayersNearby;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.GetLonelyPlayerStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class APlayerStart*>             AvailableStarts                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class APlayerStart*                     LonelyPlayerStart                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::GetLonelyPlayerStart(TArray<class APlayerStart*>& AvailableStarts, class APlayerStart** LonelyPlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "GetLonelyPlayerStart");

	Params::BP_GameMode_TVTDeathmatch_C_GetLonelyPlayerStart Parms{};

	Parms.AvailableStarts = std::move(AvailableStarts);

	UObject::ProcessEvent(Func, &Parms);

	AvailableStarts = std::move(Parms.AvailableStarts);

	if (LonelyPlayerStart != nullptr)
		*LonelyPlayerStart = Parms.LonelyPlayerStart;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Notify Player Statistics Changed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Notify_Player_Statistics_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Notify Player Statistics Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Find Box Spawn Points On Map
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_TVTDeathmatch_Box_SpawnPoint_C*>Output_Get                                             (Parm, OutParm)

void ABP_GameMode_TVTDeathmatch_C::Find_Box_Spawn_Points_On_Map(TArray<class ABP_TVTDeathmatch_Box_SpawnPoint_C*>* Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Find Box Spawn Points On Map");

	Params::BP_GameMode_TVTDeathmatch_C_Find_Box_Spawn_Points_On_Map Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = std::move(Parms.Output_Get);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Spawn lootboxes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Spawn_lootboxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Spawn lootboxes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Process Single Player Result
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerState_TVTDeathmatch_C*  Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, int32>                      Player_ID_Places                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    End_Of_Match                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::Process_Single_Player_Result(class ABP_PlayerState_TVTDeathmatch_C* Player_State, const TMap<int32, int32>& Player_ID_Places, bool End_Of_Match)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Process Single Player Result");

	Params::BP_GameMode_TVTDeathmatch_C_Process_Single_Player_Result Parms{};

	Parms.Player_State = Player_State;
	Parms.Player_ID_Places = std::move(Player_ID_Places);
	Parms.End_Of_Match = End_Of_Match;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Evaluate Score
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FStruct_TVTDeathmatchStatistics  Statistic                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FStruct_TVTDeathmatchStatistics  New_Statistic                                          (Parm, OutParm, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Evaluate_Score(struct FStruct_TVTDeathmatchStatistics& Statistic, struct FStruct_TVTDeathmatchStatistics* New_Statistic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Evaluate Score");

	Params::BP_GameMode_TVTDeathmatch_C_Evaluate_Score Parms{};

	Parms.Statistic = std::move(Statistic);

	UObject::ProcessEvent(Func, &Parms);

	Statistic = std::move(Parms.Statistic);

	if (New_Statistic != nullptr)
		*New_Statistic = std::move(Parms.New_Statistic);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Player Healed Update Statistic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerState_TVTDeathmatch_C*  PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Healed_Amount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Player_Healed_Update_Statistic(class ABP_PlayerState_TVTDeathmatch_C* PlayerState, float Healed_Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Player Healed Update Statistic");

	Params::BP_GameMode_TVTDeathmatch_C_Player_Healed_Update_Statistic Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Healed_Amount = Healed_Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Player Looted Box Update Statistic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Looting_character                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECloudMatchLootboxType                  Box_Type                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Player_Looted_Box_Update_Statistic(class AActor* Looting_character, ECloudMatchLootboxType Box_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Player Looted Box Update Statistic");

	Params::BP_GameMode_TVTDeathmatch_C_Player_Looted_Box_Update_Statistic Parms{};

	Parms.Looting_character = Looting_character;
	Parms.Box_Type = Box_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Process All Player Results on Match End
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Process_All_Player_Results_on_Match_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Process All Player Results on Match End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Get Score Value From Table
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Score_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Score                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Get_Score_Value_From_Table(class FName Score_Type, int32* Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Get Score Value From Table");

	Params::BP_GameMode_TVTDeathmatch_C_Get_Score_Value_From_Table Parms{};

	Parms.Score_Type = Score_Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Score != nullptr)
		*Score = Parms.Score;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Add Disconnected Player Statistic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_TVTDeathmatchStatistics  Statistic                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Add_Disconnected_Player_Statistic(const struct FStruct_TVTDeathmatchStatistics& Statistic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Add Disconnected Player Statistic");

	Params::BP_GameMode_TVTDeathmatch_C_Add_Disconnected_Player_Statistic Parms{};

	Parms.Statistic = std::move(Statistic);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.IsWarmup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsWarmup_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::IsWarmup(bool* IsWarmup_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "IsWarmup");

	Params::BP_GameMode_TVTDeathmatch_C_IsWarmup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsWarmup_0 != nullptr)
		*IsWarmup_0 = Parms.IsWarmup_0;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.PlayerCanRestart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_TVTDeathmatch_C::PlayerCanRestart(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "PlayerCanRestart");

	Params::BP_GameMode_TVTDeathmatch_C_PlayerCanRestart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.OnPlayerDied
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_TVTDeathmatch_C::OnPlayerDied(class AHumanCharacter* Player, class AHumanCharacter* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "OnPlayerDied");

	Params::BP_GameMode_TVTDeathmatch_C_OnPlayerDied Parms{};

	Parms.Player = Player;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.FindPlayerStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           IncomingName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ABP_GameMode_TVTDeathmatch_C::FindPlayerStart(class AController* Player, const class FString& IncomingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "FindPlayerStart");

	Params::BP_GameMode_TVTDeathmatch_C_FindPlayerStart Parms{};

	Parms.Player = Player;
	Parms.IncomingName = std::move(IncomingName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Respawn Dead Players
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Respawn_Dead_Players()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Respawn Dead Players");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Spawn lootbox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TVTDeathmatch_Box_SpawnPoint_C*Linked_lootbox_spawn_point                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCloudMatchLootbox               LootboxDefinition                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_GameMode_TVTDeathmatch_C::Spawn_lootbox(class ABP_TVTDeathmatch_Box_SpawnPoint_C* Linked_lootbox_spawn_point, const struct FCloudMatchLootbox& LootboxDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Spawn lootbox");

	Params::BP_GameMode_TVTDeathmatch_C_Spawn_lootbox Parms{};

	Parms.Linked_lootbox_spawn_point = Linked_lootbox_spawn_point;
	Parms.LootboxDefinition = std::move(LootboxDefinition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Get random unused lootbox location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TVTDeathmatch_Box_SpawnPoint_C*Selected_location                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Get_random_unused_lootbox_location(class ABP_TVTDeathmatch_Box_SpawnPoint_C** Selected_location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Get random unused lootbox location");

	Params::BP_GameMode_TVTDeathmatch_C_Get_random_unused_lootbox_location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Selected_location != nullptr)
		*Selected_location = Parms.Selected_location;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Get lootboxes to spawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<ECloudMatchLootboxType, struct FF_Shootout_Lootbox_Loot>Lootboxes_to_spawn                                     (Parm, OutParm)

void ABP_GameMode_TVTDeathmatch_C::Get_lootboxes_to_spawn(TMap<ECloudMatchLootboxType, struct FF_Shootout_Lootbox_Loot>* Lootboxes_to_spawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Get lootboxes to spawn");

	Params::BP_GameMode_TVTDeathmatch_C_Get_lootboxes_to_spawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Lootboxes_to_spawn != nullptr)
		*Lootboxes_to_spawn = std::move(Parms.Lootboxes_to_spawn);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.GetPlayerTierOfReward
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_PlayerController_C*           Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Tier                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::GetPlayerTierOfReward(const class ABP_PlayerController_C*& Player, class FName* Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "GetPlayerTierOfReward");

	Params::BP_GameMode_TVTDeathmatch_C_GetPlayerTierOfReward Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Tier != nullptr)
		*Tier = Parms.Tier;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.ShouldStartMatchBP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_TVTDeathmatch_C::ShouldStartMatchBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "ShouldStartMatchBP");

	Params::BP_GameMode_TVTDeathmatch_C_ShouldStartMatchBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Get Safer Player Start
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_TVTDeathmatch_C*PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStart*                     PlayerStart                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Get_Safer_Player_Start(class ABP_PlayerController_TVTDeathmatch_C* PlayerController, class APlayerStart** PlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Get Safer Player Start");

	Params::BP_GameMode_TVTDeathmatch_C_Get_Safer_Player_Start Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerStart != nullptr)
		*PlayerStart = Parms.PlayerStart;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.GetSpawnSpotBasedOnPseudoSafenes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_TVTDeathmatch_C*PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  SpawnBlockers                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class APlayerStart*                     PlayerStart                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::GetSpawnSpotBasedOnPseudoSafenes(class ABP_PlayerController_TVTDeathmatch_C* PlayerController, TArray<struct FVector>& SpawnBlockers, class APlayerStart** PlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "GetSpawnSpotBasedOnPseudoSafenes");

	Params::BP_GameMode_TVTDeathmatch_C_GetSpawnSpotBasedOnPseudoSafenes Parms{};

	Parms.PlayerController = PlayerController;
	Parms.SpawnBlockers = std::move(SpawnBlockers);

	UObject::ProcessEvent(Func, &Parms);

	SpawnBlockers = std::move(Parms.SpawnBlockers);

	if (PlayerStart != nullptr)
		*PlayerStart = Parms.PlayerStart;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.GetRespawnClosestToTheSafenessTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class APlayerStart*, float>        StartsToSafeness                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// class APlayerStart*                     PlayerStart                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::GetRespawnClosestToTheSafenessTarget(const TMap<class APlayerStart*, float>& StartsToSafeness, class APlayerStart** PlayerStart, float* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "GetRespawnClosestToTheSafenessTarget");

	Params::BP_GameMode_TVTDeathmatch_C_GetRespawnClosestToTheSafenessTarget Parms{};

	Parms.StartsToSafeness = std::move(StartsToSafeness);

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerStart != nullptr)
		*PlayerStart = Parms.PlayerStart;

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Apply Cloud Loadouts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudMatchLoadouts              Loadouts                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    _LoadoutsReceived                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_TVTDeathmatch_C::Apply_Cloud_Loadouts(const struct FCloudMatchLoadouts& Loadouts, bool* _LoadoutsReceived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Apply Cloud Loadouts");

	Params::BP_GameMode_TVTDeathmatch_C_Apply_Cloud_Loadouts Parms{};

	Parms.Loadouts = std::move(Loadouts);

	UObject::ProcessEvent(Func, &Parms);

	if (_LoadoutsReceived != nullptr)
		*_LoadoutsReceived = Parms._LoadoutsReceived;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Get Semi Random Unused Lootbox Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECloudMatchLootboxType                  BoxType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_TVTDeathmatch_Box_SpawnPoint_C*Selected_location                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_TVTDeathmatch_C::Get_Semi_Random_Unused_Lootbox_Location(ECloudMatchLootboxType BoxType, class ABP_TVTDeathmatch_Box_SpawnPoint_C** Selected_location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Get Semi Random Unused Lootbox Location");

	Params::BP_GameMode_TVTDeathmatch_C_Get_Semi_Random_Unused_Lootbox_Location Parms{};

	Parms.BoxType = BoxType;

	UObject::ProcessEvent(Func, &Parms);

	if (Selected_location != nullptr)
		*Selected_location = Parms.Selected_location;
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_HalveRemainingTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Cheat_HalveRemainingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_HalveRemainingTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_TVTDeathmatch.BP_GameMode_TVTDeathmatch_C.Cheat_StartLastManEarly
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_TVTDeathmatch_C::Cheat_StartLastManEarly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_TVTDeathmatch_C", "Cheat_StartLastManEarly");

	UObject::ProcessEvent(Func, nullptr);
}

}

