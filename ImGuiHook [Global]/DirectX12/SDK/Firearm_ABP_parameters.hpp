#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Firearm_ABP

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Firearm_ABP.Firearm_ABP_C.ExecuteUbergraph_Firearm_ABP
// 0x0268 (0x0268 - 0x0000)
struct Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_2;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_3;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStance                                       K2Node_Event_NewStance;                            // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShouldFoldBipod;                     // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsCurrentlyEquipped;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStance                                       CallFunc_GetStance_ReturnValue;                    // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RemainingAmmo;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base_1;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsEmpty;                             // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base_2;         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_1;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base_3;         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_4; // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base_4;         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_2;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base_5;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_5; // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0214(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0230(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character_1;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP) == 0x000008, "Wrong alignment on Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP");
static_assert(sizeof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP) == 0x000268, "Wrong size on Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, EntryPoint) == 0x000000, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000030, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_IsClosed_Variable) == 0x000038, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable) == 0x000039, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_1) == 0x00003A, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_2) == 0x00003B, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsServer_ReturnValue) == 0x00003C, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsStandalone_ReturnValue) == 0x00003D, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Not_PreBool_ReturnValue) == 0x00003E, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanAND_ReturnValue) == 0x00003F, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsServer_ReturnValue_1) == 0x000040, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsStandalone_ReturnValue_1) == 0x000041, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000042, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanAND_ReturnValue_1) == 0x000043, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsServer_ReturnValue_2) == 0x000044, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsStandalone_ReturnValue_2) == 0x000045, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsStandalone_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000046, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanAND_ReturnValue_2) == 0x000047, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsServer_ReturnValue_3) == 0x000048, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsStandalone_ReturnValue_3) == 0x000049, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsStandalone_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Not_PreBool_ReturnValue_3) == 0x00004A, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Event_NewStance) == 0x00004B, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Event_NewStance' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanAND_ReturnValue_3) == 0x00004C, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Event_bShouldFoldBipod) == 0x00004D, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Event_bShouldFoldBipod' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Event_bIsCurrentlyEquipped) == 0x00004E, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Event_bIsCurrentlyEquipped' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_3) == 0x00004F, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_object_Variable) == 0x000050, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CustomEvent_Loaded_2) == 0x000058, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_4) == 0x000060, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_object_Variable_1) == 0x000068, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CustomEvent_Loaded_1) == 0x000070, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_5) == 0x000078, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_object_Variable_2) == 0x000080, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_6) == 0x000088, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CustomEvent_Loaded) == 0x000090, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000098, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000B8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetOwningComponent_ReturnValue) == 0x0000C8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetOwner_ReturnValue) == 0x0000D8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsWeapon) == 0x0000E8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetOwner_ReturnValue_1) == 0x0000F8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_3) == 0x000100, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsHuman_Character) == 0x000108, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_4) == 0x000111, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_5) == 0x000112, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_7) == 0x000113, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_6) == 0x000114, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_7) == 0x000115, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_8) == 0x000116, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Has_Been_Initd_Variable) == 0x000117, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000118, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_8) == 0x000119, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetStance_ReturnValue) == 0x00011A, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetStance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Event_DeltaTimeX) == 0x00011C, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CustomEvent_RemainingAmmo) == 0x000120, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CustomEvent_RemainingAmmo' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000124, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CreateDelegate_OutputDelegate_5) == 0x000128, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000138, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000140, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000148, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsAnim_Sequence_Base) == 0x000150, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsAnim_Sequence_Base' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Select_Default) == 0x000160, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_9) == 0x000168, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsAnim_Sequence_Base_1) == 0x000170, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsAnim_Sequence_Base_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_3) == 0x000178, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000179, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetOwningActor_ReturnValue) == 0x000180, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000188, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanAND_ReturnValue_4) == 0x000189, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Variable_9) == 0x00018A, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanOR_ReturnValue) == 0x00018B, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00018C, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Event_bIsEmpty) == 0x00018D, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Event_bIsEmpty' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanAND_ReturnValue_5) == 0x00018E, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanOR_ReturnValue_1) == 0x00018F, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Not_PreBool_ReturnValue_4) == 0x000190, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_IsClosed_Variable_1) == 0x000191, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_Has_Been_Initd_Variable_2) == 0x000192, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, Temp_bool_IsClosed_Variable_2) == 0x000193, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000198, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0001A0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsAnim_Sequence_Base_2) == 0x0001A8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsAnim_Sequence_Base_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_4) == 0x0001B0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Select_Default_1) == 0x0001B8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_10) == 0x0001C0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsAnim_Sequence_Base_3) == 0x0001C8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsAnim_Sequence_Base_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_5) == 0x0001D0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x0001D1, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0001D8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValidSoftObjectReference_ReturnValue_4) == 0x0001E0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValidSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsAnim_Sequence_Base_4) == 0x0001E8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsAnim_Sequence_Base_4' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_6) == 0x0001F0, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_Select_Default_2) == 0x0001F8, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_11) == 0x000200, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsAnim_Sequence_Base_5) == 0x000208, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsAnim_Sequence_Base_5' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_7) == 0x000210, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValidSoftObjectReference_ReturnValue_5) == 0x000211, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValidSoftObjectReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_CreateDelegate_OutputDelegate_6) == 0x000214, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetOwningComponent_ReturnValue_1) == 0x000228, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000230, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_12) == 0x000238, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetOwner_ReturnValue_2) == 0x000240, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_13) == 0x000248, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_GetOwner_ReturnValue_3) == 0x000250, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_AsHuman_Character_1) == 0x000258, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_AsHuman_Character_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, K2Node_DynamicCast_bSuccess_8) == 0x000260, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000261, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_IsValid_ReturnValue_14) == 0x000262, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_BooleanAND_ReturnValue_6) == 0x000263, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP, CallFunc_Not_PreBool_ReturnValue_5) == 0x000264, "Member 'Firearm_ABP_C_ExecuteUbergraph_Firearm_ABP::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.UpdateIsMagazineEmpty
// 0x0001 (0x0001 - 0x0000)
struct Firearm_ABP_C_UpdateIsMagazineEmpty final
{
public:
	bool                                          bIsEmpty;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firearm_ABP_C_UpdateIsMagazineEmpty) == 0x000001, "Wrong alignment on Firearm_ABP_C_UpdateIsMagazineEmpty");
static_assert(sizeof(Firearm_ABP_C_UpdateIsMagazineEmpty) == 0x000001, "Wrong size on Firearm_ABP_C_UpdateIsMagazineEmpty");
static_assert(offsetof(Firearm_ABP_C_UpdateIsMagazineEmpty, bIsEmpty) == 0x000000, "Member 'Firearm_ABP_C_UpdateIsMagazineEmpty::bIsEmpty' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.ReceiveFireShot
// 0x0004 (0x0004 - 0x0000)
struct Firearm_ABP_C_ReceiveFireShot final
{
public:
	int32                                         RemainingAmmo;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firearm_ABP_C_ReceiveFireShot) == 0x000004, "Wrong alignment on Firearm_ABP_C_ReceiveFireShot");
static_assert(sizeof(Firearm_ABP_C_ReceiveFireShot) == 0x000004, "Wrong size on Firearm_ABP_C_ReceiveFireShot");
static_assert(offsetof(Firearm_ABP_C_ReceiveFireShot, RemainingAmmo) == 0x000000, "Member 'Firearm_ABP_C_ReceiveFireShot::RemainingAmmo' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Firearm_ABP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firearm_ABP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Firearm_ABP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Firearm_ABP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Firearm_ABP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Firearm_ABP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Firearm_ABP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.OnLoaded_303A9E7341428F48F05BE78A97496F05
// 0x0008 (0x0008 - 0x0000)
struct Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05) == 0x000008, "Wrong alignment on Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05");
static_assert(sizeof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05) == 0x000008, "Wrong size on Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05");
static_assert(offsetof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05, Loaded) == 0x000000, "Member 'Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A97496F05::Loaded' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.OnLoaded_303A9E7341428F48F05BE78AD37B979C
// 0x0008 (0x0008 - 0x0000)
struct Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C) == 0x000008, "Wrong alignment on Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C");
static_assert(sizeof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C) == 0x000008, "Wrong size on Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C");
static_assert(offsetof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C, Loaded) == 0x000000, "Member 'Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78AD37B979C::Loaded' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.OnLoaded_303A9E7341428F48F05BE78A1F67D92A
// 0x0008 (0x0008 - 0x0000)
struct Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A) == 0x000008, "Wrong alignment on Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A");
static_assert(sizeof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A) == 0x000008, "Wrong size on Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A");
static_assert(offsetof(Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A, Loaded) == 0x000000, "Member 'Firearm_ABP_C_OnLoaded_303A9E7341428F48F05BE78A1F67D92A::Loaded' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.UpdateWeaponControllVariables
// 0x0002 (0x0002 - 0x0000)
struct Firearm_ABP_C_UpdateWeaponControllVariables final
{
public:
	bool                                          bShouldFoldBipod_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsCurrentlyEquipped_0;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firearm_ABP_C_UpdateWeaponControllVariables) == 0x000001, "Wrong alignment on Firearm_ABP_C_UpdateWeaponControllVariables");
static_assert(sizeof(Firearm_ABP_C_UpdateWeaponControllVariables) == 0x000002, "Wrong size on Firearm_ABP_C_UpdateWeaponControllVariables");
static_assert(offsetof(Firearm_ABP_C_UpdateWeaponControllVariables, bShouldFoldBipod_0) == 0x000000, "Member 'Firearm_ABP_C_UpdateWeaponControllVariables::bShouldFoldBipod_0' has a wrong offset!");
static_assert(offsetof(Firearm_ABP_C_UpdateWeaponControllVariables, bIsCurrentlyEquipped_0) == 0x000001, "Member 'Firearm_ABP_C_UpdateWeaponControllVariables::bIsCurrentlyEquipped_0' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.UpdateCharStance
// 0x0001 (0x0001 - 0x0000)
struct Firearm_ABP_C_UpdateCharStance final
{
public:
	EStance                                       NewStance;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Firearm_ABP_C_UpdateCharStance) == 0x000001, "Wrong alignment on Firearm_ABP_C_UpdateCharStance");
static_assert(sizeof(Firearm_ABP_C_UpdateCharStance) == 0x000001, "Wrong size on Firearm_ABP_C_UpdateCharStance");
static_assert(offsetof(Firearm_ABP_C_UpdateCharStance, NewStance) == 0x000000, "Member 'Firearm_ABP_C_UpdateCharStance::NewStance' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.SetIsEmpty
// 0x0001 (0x0001 - 0x0000)
struct Firearm_ABP_C_SetIsEmpty final
{
public:
	bool                                          IsEmpty__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Firearm_ABP_C_SetIsEmpty) == 0x000001, "Wrong alignment on Firearm_ABP_C_SetIsEmpty");
static_assert(sizeof(Firearm_ABP_C_SetIsEmpty) == 0x000001, "Wrong size on Firearm_ABP_C_SetIsEmpty");
static_assert(offsetof(Firearm_ABP_C_SetIsEmpty, IsEmpty__0) == 0x000000, "Member 'Firearm_ABP_C_SetIsEmpty::IsEmpty__0' has a wrong offset!");

// Function Firearm_ABP.Firearm_ABP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Firearm_ABP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Firearm_ABP_C_AnimGraph) == 0x000008, "Wrong alignment on Firearm_ABP_C_AnimGraph");
static_assert(sizeof(Firearm_ABP_C_AnimGraph) == 0x000010, "Wrong size on Firearm_ABP_C_AnimGraph");
static_assert(offsetof(Firearm_ABP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Firearm_ABP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

