#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_BlizzardData

#include "Basic.hpp"

#include "E_BlizzardClimate_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PDA_BlizzardData.PDA_BlizzardData_C
// 0x0018 (0x0048 - 0x0030)
class UPDA_BlizzardData_C final : public UPrimaryDataAsset
{
public:
	E_BlizzardClimate                             ClimateRequired;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_To_Start__Seconds_;                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_Between_Ticks__Seconds_;                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage__Per_Tick_;                                 // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Healing_Inside_Warm_Areas__Per_Tick_;              // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Default_Values();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PDA_BlizzardData_C">();
	}
	static class UPDA_BlizzardData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPDA_BlizzardData_C>();
	}
};
static_assert(alignof(UPDA_BlizzardData_C) == 0x000008, "Wrong alignment on UPDA_BlizzardData_C");
static_assert(sizeof(UPDA_BlizzardData_C) == 0x000048, "Wrong size on UPDA_BlizzardData_C");
static_assert(offsetof(UPDA_BlizzardData_C, ClimateRequired) == 0x000030, "Member 'UPDA_BlizzardData_C::ClimateRequired' has a wrong offset!");
static_assert(offsetof(UPDA_BlizzardData_C, Time_To_Start__Seconds_) == 0x000034, "Member 'UPDA_BlizzardData_C::Time_To_Start__Seconds_' has a wrong offset!");
static_assert(offsetof(UPDA_BlizzardData_C, Time_Between_Ticks__Seconds_) == 0x000038, "Member 'UPDA_BlizzardData_C::Time_Between_Ticks__Seconds_' has a wrong offset!");
static_assert(offsetof(UPDA_BlizzardData_C, Damage__Per_Tick_) == 0x00003C, "Member 'UPDA_BlizzardData_C::Damage__Per_Tick_' has a wrong offset!");
static_assert(offsetof(UPDA_BlizzardData_C, Healing_Inside_Warm_Areas__Per_Tick_) == 0x000040, "Member 'UPDA_BlizzardData_C::Healing_Inside_Warm_Areas__Per_Tick_' has a wrong offset!");

}

